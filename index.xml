<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
      <title>yuzu on yuzu </title>
    <link>https://yuzu-mirror.github.io/</link>
    <language>en-US</language>
    <author>yuzu Team</author>
    <rights>Copyright (c) 2017-2025, yuzu; all rights reserved.</rights>
    <updated>Sun, 02 Nov 2025 02:23:02 UTC</updated>
    
    <item>
      <title>Progress Report January 2024</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/</link>
      <pubDate>Sat, 10 Feb 2024 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/</guid>
      <description>&lt;p&gt;Welcome to 2024, yuz-ers! What better way to begin the year than to do major code refactors resulting in almost full applet support. We present this, and plenty more, to you today! Remember to right click and unmute the embedded videos.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Welcome to 2024, yuz-ers! What better way to begin the year than to do major code refactors resulting in almost full applet support. We present this, and plenty more, to you today! Remember to right click and unmute the embedded videos.&lt;/p&gt;
&lt;h2 id=&#34;multiprocess-services-lle-applets-and-project-leviathan&#34;&gt;Multiprocess, services, LLE applets, and Project Leviathan&lt;/h2&gt;
&lt;p&gt;Converting a single process emulator into a multiprocess one is no simple task.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./keyboard.png&#34; title=&#34; Typing speed challenge with the Nintendo keyboard?&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/keyboard_hu8dbe05ddaca28d16d15ab3937cf47828_55224_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Typing speed challenge with the Nintendo keyboard?&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Typing speed challenge with the Nintendo keyboard?&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;2024 started out quite busy thanks to the combined efforts of &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt;, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;, and &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; in implementing multiprocess support, taking advantage of it in multiple areas (heh, get it?) including GPU, input, services, and applet emulation, and fixing long standing problems along the way.&lt;/p&gt;
&lt;p&gt;As of writing, multiprocess support &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12756&#34; data-gh-pr=&#34;12756&#34;&gt;is not yet merged,&lt;/a&gt;
 but fixes in the GPU, input, and other modules (implemented by byte[], Blinkhawk, and german77) have already been staged and released, allowing full support to be added in parts.&lt;/p&gt;
&lt;p&gt;Implementing the requirements to support multiprocess in yuzu led us to make five significant changes in the past month:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Allow the GPU to run multiple programs. This is where SMMU support comes in, which we will discuss in the next section.&lt;/li&gt;
&lt;li&gt;Rewrite the old, basic applet manager.&lt;/li&gt;
&lt;li&gt;Rewrite presentation. Part of the prerequisites to run more than one program simultaneously is to be able to display all of them to the user.&lt;/li&gt;
&lt;li&gt;Rewrite every other relevant area (for example, input) to support multiple processes.&lt;/li&gt;
&lt;li&gt;Automate the serialization of service calls.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;device-mapping-and-smmu&#34;&gt;Device mapping and SMMU&lt;/h3&gt;
&lt;p&gt;We start off with a big one: Blinkhawk implemented device memory mapping emulation and rewrote the GPU implementation with support for the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12579&#34; data-gh-pr=&#34;12579&#34;&gt;SMMU,&lt;/a&gt;
 or for desktop enthusiasts/Linux VM users/UEFI lurkers, its other common name, IOMMU.&lt;/p&gt;
&lt;p&gt;The ARM &lt;strong&gt;S&lt;/strong&gt;ystem &lt;strong&gt;M&lt;/strong&gt;emory &lt;strong&gt;M&lt;/strong&gt;anagement &lt;strong&gt;U&lt;/strong&gt;nit handles memory mapping for peripheral devices like the GPU.
It’s a hardware component on the Switch in charge of translating device virtual memory addresses into physical memory addresses.
The GPU adds an MMU of its own, &lt;code&gt;GMMU&lt;/code&gt;, an additional layer that maps over the SMMU.&lt;/p&gt;
&lt;p&gt;The emulator already had a performant memory translation layer for the GMMU, but it could only handle a single program using the GPU at a time, unable to share it with other processes. And support for &lt;em&gt;multiple processes&lt;/em&gt; was needed.&lt;/p&gt;
&lt;p&gt;The main benefits of this rewrite are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Increased accuracy.&lt;/li&gt;
&lt;li&gt;Reduced video memory usage (testing shows around a 300MB reduction).&lt;/li&gt;
&lt;li&gt;Enables multiprocess use of the GPU.&lt;/li&gt;
&lt;li&gt;Allows other emulated devices to use the device mapper.&lt;/li&gt;
&lt;li&gt;Leaves room for potential future optimizations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One downside of this change was how it increased debugging complexity, which led to more development time spent with every bug found on its implementation.
For example, games on Android getting stuck at 0 FPS randomly, breaking compatibility with NCE, or running out of memory on some game engines.
This led to a couple of fixes implemented first by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12749&#34; data-gh-pr=&#34;12749&#34;&gt;byte[]&lt;/a&gt;
 and then &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12869&#34; data-gh-pr=&#34;12869&#34;&gt;Blinkhawk himself,&lt;/a&gt;
 with more on the way.&lt;/p&gt;
&lt;p&gt;This change opened the floodgates to applet emulation and is the starting point to implement &lt;a href=&#34;https://github.com/skyline-emu/skyline/pull/2106&#34;&gt;Direct Memory Import&lt;/a&gt; sometime in the future — but let’s slow down a bit, there’s more to cover.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./miiedit.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Time to launch another program, GPU!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h3 id=&#34;project-leviathan&#34;&gt;Project Leviathan&lt;/h3&gt;
&lt;p&gt;german77 had to adapt his input rewrite, &lt;code&gt;Project Leviathan&lt;/code&gt; to the requirements of multiprocess too. The rewrite is still ongoing, with more parts planned.
But just in January, the following changes, either specifically for multiprocess or more generally as part of the rewrite, were implemented:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12536&#34; data-gh-pr=&#34;12536&#34;&gt;Use individual applet resources,&lt;/a&gt;
 so each applet has its own view of the controller input.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12549&#34; data-gh-pr=&#34;12549&#34;&gt;Implement NpadResource emulation,&lt;/a&gt;
 now using the input process ID to distinguish HID state and controller style configuration between multiple processes.&lt;/li&gt;
&lt;li&gt;Create the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12605&#34; data-gh-pr=&#34;12605&#34;&gt;abstracted pad&lt;/a&gt;
 structure, which is in charge of updating the shared memory and assignment of controllers. The old implementation was too simple, causing the controller applet to unnecessarily be shown, or showing up with no supported controllers available.&lt;/li&gt;
&lt;li&gt;Fully implement &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12660&#34; data-gh-pr=&#34;12660&#34;&gt;abstract vibration,&lt;/a&gt;
 removing old inaccurate code and matching the behaviour of newer Switch firmware.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While this leads to us being able to load the native controller applet (among others) and have fun with it, it doesn’t have much use for emulation.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./controller1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/controller1_hu4fed415505308e65f853a5cd6d052aac_138936_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Just for fun&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./controller2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/controller2_hu46a82d8bccff11b094fc733d4eae8371_87199_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Just for fun&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./controller3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/controller3_hu32eaabeb5c5eff9e30d6deee02430a7d_130967_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Just for fun&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Just for fun&lt;/p&gt;


&lt;h3 id=&#34;now-presenting&#34;&gt;Now Presenting&lt;/h3&gt;
&lt;p&gt;Besides the emulated GPU, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12761&#34; data-gh-pr=&#34;12761&#34;&gt;presentation to screen&lt;/a&gt;
 also needed some work to support running applets — without it, none of the benefits could actually be displayed.
If there is no multi-layer composition in place, there is no applet fun.&lt;/p&gt;
&lt;p&gt;byte[] rewrote almost all of the presentation code to support layer overlays and blending, taking special care to not break the existing filtering and antialiasing options.
FSR in particular was converted from a compute shader to a fragment shader, so proper blending could be enabled.
The end result is the same, with no image quality changes — but now FSR can be used while games display the native inline keyboard, for example.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./keyboard.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; That transparency behind the keyboard wasn’t free.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h3 id=&#34;i-am-the-applet-managerhttpswwwyoutubecomwatchv7zls5kndeli&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=7ZLS5KNDelI&#34;&gt;I AM the applet manager&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Another critical service that required a rewrite to have proper multiprocess support is &lt;code&gt;AM&lt;/code&gt;, the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12760&#34; data-gh-pr=&#34;12760&#34;&gt;Applet Manager.&lt;/a&gt;

AM has now been almost completely refactored to track state for every applet individually, properly allowing it to support running more than one at the same time.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./web1.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Help is only one button press away (Super Smash Bros. Ultimate)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While byte[] got the rewrite up and running, german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12837&#34; data-gh-pr=&#34;12837&#34;&gt;fixed an issue&lt;/a&gt;
 causing &lt;code&gt;The Battle Cats Unite&lt;/code&gt; to softlock past the starting loading screen.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./bc.png&#34; title=&#34; This is one of the games of all time. Nyaa. (The Battle Cats Unite)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/bc_hudb520ee4bbe8b47aff425b2c7f109151_1768372_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; This is one of the games of all time. Nyaa. (The Battle Cats Unite)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; This is one of the games of all time. Nyaa. (The Battle Cats Unite)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h3 id=&#34;sounds-good&#34;&gt;Sounds good&lt;/h3&gt;
&lt;p&gt;Maide was responsible for making &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12831&#34; data-gh-pr=&#34;12831&#34;&gt;audio emulation&lt;/a&gt;
 compatible with multiprocess.
Games should be able to share audio playback with applets, right? Sharing is caring.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./web2.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Special menus included (Super Mario 3D All-Stars).&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h3 id=&#34;universal-serialization-byte&#34;&gt;Universal Serialization Byte[]&lt;/h3&gt;
&lt;p&gt;The &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12783&#34; data-gh-pr=&#34;12783&#34;&gt;serialization and deserialization&lt;/a&gt;
 of service calls from programs is one of the most important tasks yuzu must perform when interacting with guest programs.
Communication between programs and the Switch system modules uses a special binary format with custom parsers.
Interacting with guest processes required tedious and error-prone layout calculations for every single interface method yuzu needed to implement, wasting a lot of development time on error checking and maintenance.&lt;/p&gt;
&lt;p&gt;With the increased involvement in service implementations and the exponential growth of complexity you’ve seen so far, byte[] aims to automate and simplify serialization by using a template-based approach that automatically generates the code needed for the method.&lt;/p&gt;
&lt;p&gt;So far, the work on multiprocess has taken over twenty thousands lines of code and continues growing.
All you have to do now to enjoy your native applets is to &lt;a href=&#34;https://rena21.github.io/yuzu-wiki/setup-guide/dump-firmware/&#34;&gt;dump your firmware&lt;/a&gt;. The minimum required version to get the applets running is firmware 14.0.0.&lt;/p&gt;
&lt;h3 id=&#34;other-service-rewrites-and-fixes&#34;&gt;Other service rewrites and fixes&lt;/h3&gt;
&lt;p&gt;Here’s a toast to Maide for fixing one of the longest standing bugs in yuzu: the passage of time in games like &lt;code&gt;Pokémon Sword/Shield&lt;/code&gt; and &lt;code&gt;Pokémon Quest&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the past, while time tracked during saving, some game events like Dens or Pokéjobs wouldn’t reset, forcing users to manually advance time with the custom RTC option.
It was quite bothersome.&lt;/p&gt;
&lt;p&gt;It took an entire &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12499&#34; data-gh-pr=&#34;12499&#34;&gt;rewrite of the time services&lt;/a&gt;
 to resolve the issue, “only” about nine thousand lines of code.
The new implementation is much more accurate, allowing Pokéjobs and other timed events to finally be enjoyed normally in this low-poly, almost-always-30-FPS masterpiece.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pj1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/pj1_hu64b18fcb6eeabb12ba2e4d3219e7b79a_437692_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Get to work! (Pokémon Sword)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pj2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/pj2_hu927cd44b0d4452d14603e5597c4d9995_362698_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Get to work! (Pokémon Sword)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Get to work! (Pokémon Sword)&lt;/p&gt;


&lt;p&gt;Continuing this work, Maide removed some old workarounds that were no longer needed in the time services, and fixed &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12864&#34; data-gh-pr=&#34;12864&#34;&gt;network clock to local clock&lt;/a&gt;
 synchronisation on every game boot.
This fixed time progression in &lt;code&gt;Pokémon Quest&lt;/code&gt;.
No longer a &lt;a href=&#34;https://en.wikipedia.org/wiki/Hype:_The_Time_Quest&#34;&gt;Time Quest&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pq.png&#34; title=&#34; Set camp (Pokémon Quest)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/pq_hubc00b355c7bae3747646192bfcea9578_351158_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Set camp (Pokémon Quest)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Set camp (Pokémon Quest)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;To close the section, byte[] fixed how the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12867&#34; data-gh-pr=&#34;12867&#34;&gt;AOC service&lt;/a&gt;
 lists available DLC for multi-program applications, allowing &lt;code&gt;Assassin’s Creed Rogue&lt;/code&gt; to boot with its DLC installed.
Just like the Navy intended.&lt;/p&gt;
&lt;h2 id=&#34;graphics-changes&#34;&gt;Graphics changes&lt;/h2&gt;
&lt;h3 id=&#34;a-dose-of-dozen&#34;&gt;A dose of Dozen&lt;/h3&gt;
&lt;p&gt;Unforeseen issues are one of the signature “comes with the job” moments of emulation — you never know from where a new problem will arise, so we’ll have to start this section with a PSA.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PSA:&lt;/strong&gt; If yuzu has recently started showing Microsoft as the GPU vendor for you, and you can no longer play any game, uninstall the package named &lt;code&gt;OpenCL™, OpenGL®, and Vulkan® Compatibility Pack&lt;/code&gt;, or if you prefer to keep it, go to &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Device&lt;/code&gt; and change the GPU to your correct model, without “Microsoft Direct3D 12” at the start of its name.&lt;/p&gt;
&lt;p&gt;AMD and Intel users running Windows 11 suddenly started having their hardware completely incapable of launching any games while using Vulkan.
The reason is something none of us expected at all, Microsoft… And Mesa! Please lower those pitchforks.&lt;/p&gt;
&lt;p&gt;Microsoft decided to roll out an install of this package, which allows incapable hardware to run the mentioned APIs if no proper driver was provided from the hardware vendor, or just if the hardware is incapable of running it.&lt;/p&gt;
&lt;p&gt;The project used to achieve this is Mesa &lt;code&gt;Dozen&lt;/code&gt;, which &lt;a href=&#34;https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/14766&#34;&gt;runs Vulkan atop a Direct3D 12 interface&lt;/a&gt;.
The intended purpose is to offer Vulkan support to devices that only ship a Direct3D 12 driver, for example, Qualcomm ARM laptops.
We don’t know why Microsoft decided to silently test this feature on x86-64 PCs that already ship hardware capable of proper Vulkan support, but here we are.&lt;/p&gt;
&lt;p&gt;Those new devices generated by &lt;code&gt;Dozen&lt;/code&gt; are added to the Vulkan devices available to the OS, named “Microsoft Direct3D 12 (GPU model name)”, and conflict with how yuzu orders its device list.&lt;/p&gt;
&lt;p&gt;To ensure the best GPU is selected by default on yuzu, three sorts are performed in order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prefer NVIDIA hardware over AMD, AMD hardware over Intel. This favours NVIDIA hardware and also double ensures dedicated GPUs get selected over integrated ones. Plus, in the rare case a user has multiple GPUs from different vendors on a system, we ensure the one with the least issues is picked by default. “Outdated NVIDIA tablet-turned-console likes NVIDIA drivers,” after all.&lt;/li&gt;
&lt;li&gt;Prefer dedicated hardware over any other, including integrated and CPU rendering. There are people out there trying to run yuzu with CPU rendering.&lt;/li&gt;
&lt;li&gt;Order in inverse alphabetical order. This helps ensure an RTX 4090 is picked over a GTX 1050, or an RX 7900 XTX over an RX 780m.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Did you notice it? The last point is the problem. &lt;code&gt;Dozen&lt;/code&gt; devices share the same identical features as the real Vulkan device but change the name.
Since the list is ordered in inverse alphabetical order, a device named “Microsoft” will take priority over an identical one named AMD or Intel.&lt;/p&gt;
&lt;p&gt;The issue is simple enough to solve: detect when a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12781&#34; data-gh-pr=&#34;12781&#34;&gt;device is Dozen&lt;/a&gt;
 and demote it to the bottom of the list.
Even if &lt;code&gt;Dozen&lt;/code&gt; was capable of running yuzu, we would prefer not to run a layered implementation by default.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dozen.png&#34; title=&#34; Nice way of having a Dozen GPUs&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/dozen_huf7c453116c2707b85158c86a9f8bbe05_4379_426x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Nice way of having a Dozen GPUs&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Nice way of having a Dozen GPUs&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Sadly, &lt;code&gt;Dozen&lt;/code&gt; isn&amp;rsquo;t compatible with yuzu for the moment — it lacks multiple mandatory extensions and has some issues your writer enjoyed reporting to its devs while testing this.
Fixes for multiple of them arrived in just a couple of days. Mesa devs are built differently.&lt;/p&gt;
&lt;p&gt;This could be an interesting experiment for Fermi users or other end-of-life hardware once &lt;code&gt;Dozen&lt;/code&gt; is suitable for yuzu.&lt;/p&gt;
&lt;h3 id=&#34;your-regularly-scheduled-gpu-changes&#34;&gt;Your regularly scheduled GPU changes&lt;/h3&gt;
&lt;p&gt;The fun testing for multiprocess revealed a graphical issue when opening the web applet help page in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.
One fix for &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12875&#34; data-gh-pr=&#34;12875&#34;&gt;pitch linear reading and writing&lt;/a&gt;
 in the software blitter code later, and Blinkhawk resolved the issue.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/webappletbug_hu779209430c42d559deab939c0825ca1e_1071586_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Da Rules (Super Smash Bros. Ultimate)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/webapplet_hudbd3c25166496320ac0fdd6f6f1e6011_1076144_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Da Rules (Super Smash Bros. Ultimate)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Da Rules (Super Smash Bros. Ultimate)&lt;/p&gt;


&lt;p&gt;Android users have regularly reminded us that &lt;code&gt;Mortal Kombat 11&lt;/code&gt; is unable to boot.
After his enthusiastic walk through the code, byte[] found that &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12652&#34; data-gh-pr=&#34;12652&#34;&gt;8-bit and 16-bit storage writes&lt;/a&gt;
 in shaders were completely broken on hardware which did not support them.&lt;/p&gt;
&lt;p&gt;The problem, at least one of them, was lack of hardware support for &lt;code&gt;shaderInt8&lt;/code&gt; and &lt;code&gt;shaderInt16&lt;/code&gt;, something the big three, NVIDIA (the Switch included, of course), AMD (and by extension, Xclipse), and Intel, have full support for with up-to-date drivers, but &lt;a href=&#34;https://vulkan.gpuinfo.org/listdevicescoverage.php?core=1.2&amp;amp;feature=shaderInt8&amp;amp;platform=all&amp;amp;option=not&#34;&gt;Android devices&lt;/a&gt; with Adreno and Mali GPUs don’t.&lt;/p&gt;
&lt;p&gt;Mali moment #1, along with Adreno.&lt;/p&gt;
&lt;p&gt;The solution byte[] implemented to solve this specific issue is the usual for the lack of hardware support. If you can’t run it, emulate it! Those are very enthusiastic walks.
These platforms support storage atomics, so by performing a compare-and-swap loop to atomically (in the thread safety sense, not radioactive) write a value to a memory location, 8-bit and 16-bit values can be written to larger 32-bit memory words without tearing the value seen by other threads.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mk11.png&#34; title=&#34; Dear gods, you don’t need to make the menu low resolution too (Mortal Kombat 11)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/mk11_hu8aa606982b5e6d0b4cc3a71a3383bdb0_1860904_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Dear gods, you don’t need to make the menu low resolution too (Mortal Kombat 11)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Dear gods, you don’t need to make the menu low resolution too (Mortal Kombat 11)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This emulation incurs a small performance loss, but beggars can’t be choosers.
Mobile GPUs are very stingy with their feature sets, which frequently holds our development back and necessitates adding workarounds.&lt;/p&gt;
&lt;p&gt;We doubt only &lt;code&gt;Mortal Kombat 11&lt;/code&gt; is affected — this change improved many unknown games that were crashing on Android devices or for people running outdated GPU drivers on desktop/laptop PCs.
Sadly, this change alone isn’t enough to make the game playable on Android devices.
This issue exposed other shader problems related to lack of support for &lt;code&gt;StorageImageExtendedFormats&lt;/code&gt;, but that’s homework for later, most likely for future byte[].&lt;/p&gt;
&lt;p&gt;Switching to the other Linux kernel equipped OS (erm, Linux), Tuxusers reported garbled rendering issues when resizing the yuzu window while on Wayland.&lt;/p&gt;
&lt;p&gt;The solution was thankfully simple, reverting an unnecessary change in one of the previous DMA fixes.
By forcing a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12688&#34; data-gh-pr=&#34;12688&#34;&gt;recreation of the swapchain&lt;/a&gt;
 each time the window frame size changes, the issue is gone.&lt;/p&gt;
&lt;p&gt;Proper tear-free gameplay with safe window management shall return to Wayland.
HDR support when, Linux?&lt;/p&gt;
&lt;p&gt;Newcomer &lt;a href=&#34;https://github.com/shinra-electric&#34;&gt;shinra-electric&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12713&#34; data-gh-pr=&#34;12713&#34;&gt;updated the MoltenVK dependency&lt;/a&gt;
 to its latest version. Thank you!&lt;/p&gt;
&lt;p&gt;While the update brings tons of improvements and many Vulkan extensions are now supported, there are no new changes to report in rendering or compatibility on Apple devices.
But hey, no reported regressions is good news!&lt;/p&gt;
&lt;h2 id=&#34;android-augmentations&#34;&gt;Android augmentations&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/t895&#34;&gt;t895&lt;/a&gt; kicked off the new year with a flurry of changes to improve yuzu Android.
While one of these changes enhances the overall app performance, the majority are quality-of-life (QoL) fixes that some of our users have been anticipating.&lt;/p&gt;
&lt;p&gt;As many of you might already be aware, yuzu Android supports exporting user data and saves in ZIP format to transfer between different versions of the app.
ZIP compression, in most cases, can result in a reduction of file size compared to the original size of files on disk.
However, applying compression overtop of encrypted data is almost always a waste of time.&lt;/p&gt;
&lt;p&gt;t895 observed that when compression was turned on, these ZIP exports were excessively slow, while still resulting in negligible size reduction gains, as the largest files in the user data are NCAs, and those are encrypted.
Therefore, he &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12558&#34; data-gh-pr=&#34;12558&#34;&gt;disabled compression for these ZIP exports,&lt;/a&gt;
 exhibiting up to a 3x decrease in export times.&lt;/p&gt;
&lt;p&gt;Moving on to the QoL fixes, t895 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12571&#34; data-gh-pr=&#34;12571&#34;&gt;extended support for custom screen orientations.&lt;/a&gt;

With this change, yuzu now supports a total of seven orientation styles, listed below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Auto. Selects any of the four orientations based on the phone’s sensor.&lt;/li&gt;
&lt;li&gt;Sensor Landscape. Limits the sensor detection to only landscape orientations.&lt;/li&gt;
&lt;li&gt;Landscape. Fixed regular landscape.&lt;/li&gt;
&lt;li&gt;Reverse Landscape. Fixed inverted landscape.&lt;/li&gt;
&lt;li&gt;Sensor Portrait. Limits the sensor detection to only portrait orientations, if the device allows it.&lt;/li&gt;
&lt;li&gt;Portrait. Fixed regular portrait.&lt;/li&gt;
&lt;li&gt;Reverse Portrait. Fixed inverted portrait&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./orientations.png&#34; title=&#34; Reverse portrait, the way it’s meant to be played&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/orientations_hu55370b4aa9d8bd15c6c764654f909902_300748_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Reverse portrait, the way it’s meant to be played&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Reverse portrait, the way it’s meant to be played&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Next up is the improved global save manager.
There are two possible save directories for games, and the original global save manager was only checking one of them.
So, t895 removed this broken feature a while back and has now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12576&#34; data-gh-pr=&#34;12576&#34;&gt;reintroduced an improved version&lt;/a&gt;
 of the same.&lt;/p&gt;
&lt;p&gt;With this improved version, you can now also use exports made with the global save manager in the per-game save manager and vice versa.&lt;/p&gt;
&lt;p&gt;Following that are the new uninstall add-on buttons.
t895 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12715&#34; data-gh-pr=&#34;12715&#34;&gt;added an uninstall button&lt;/a&gt;
 for every kind of add-on in the Android app.
yuzers can now easily uninstall any updates, DLCs, mods, and cheats that they might have installed.
Note: Currently, yuzu on PC doesn&amp;rsquo;t have UI support for uninstalling mods or cheats.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./uninstall.png&#34; title=&#34; Your internal storage starts breathing again&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/uninstall_huc7aa8ddc28cba42e981bbdde598de794_68231_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Your internal storage starts breathing again&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Your internal storage starts breathing again&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Ever spend a long time copying over your dumps or installing content to NAND, only to have them fail to work?
Look no further: t895 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12736&#34; data-gh-pr=&#34;12736&#34;&gt;brings the PC version&amp;rsquo;s integrity check features to Android.&lt;/a&gt;

You can now easily verify the file integrity of your game dumps and your NAND contents.
To verify a game dump, simply go to your game&amp;rsquo;s properties and under &lt;code&gt;Info&lt;/code&gt;, select &lt;code&gt;Verify Integrity&lt;/code&gt;.
There is also a separate, self-explanatory button within &lt;code&gt;Settings&lt;/code&gt; labelled &lt;code&gt;Verify Installed Content&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./verify1.gif&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./verify1.gif&#34; alt=&#34;Great for peace of mind after experiencing a game crash&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./verify2.gif&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./verify2.gif&#34; alt=&#34;Great for peace of mind after experiencing a game crash&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Great for peace of mind after experiencing a game crash&lt;/p&gt;


&lt;p&gt;How many times have you accidentally opened the in-game menu when using the left thumbstick area?
Well, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12738&#34; data-gh-pr=&#34;12738&#34;&gt;you can now lock the in-game menu&lt;/a&gt;
 so as to avoid accidentally triggering it.
When locked, you can still bring up the in-game menu by using the &amp;ldquo;back&amp;rdquo; button or gesture on your device.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./lock.png&#34; title=&#34; Anti-frustration changes&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/lock_hu6e5e37dfcf6a35c21db2958ee1ca11e3_152049_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Anti-frustration changes&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Anti-frustration changes&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Now, let&amp;rsquo;s delve into game shortcuts on your home screen.
With Android&amp;rsquo;s dynamic shortcuts feature, apps can now provide users with quick access to specific actions or content within an app directly from the home screen.
Although this feature was introduced back in 2016, it seems that some Android launchers do not yet support it.&lt;/p&gt;
&lt;p&gt;While this feature is already supported on yuzu and works perfectly, it becomes pretty tedious when you have to launch each and every game to get a shortcut for it, especially after a reinstall.
As a one-size-fits-all solution to this problem, t895 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12747&#34; data-gh-pr=&#34;12747&#34;&gt;implemented a button&lt;/a&gt;
 in the game properties activity that allows you to easily add a shortcut to any game to your home screen without needing to launch the game first.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./icon.gif&#34; title=&#34; Gotta pin ’em all&#34;&gt;&lt;img src=&#34;./icon.gif&#34; alt=&#34; Gotta pin ’em all&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Gotta pin ’em all&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;t895 followed that up with some &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12796&#34; data-gh-pr=&#34;12796&#34;&gt;controller focus optimizations.&lt;/a&gt;

Android controller focus is the highlight you see over buttons indicating that you can select it.
These changes fix a few issues observed when using a controller to navigate the yuzu app UI and solved an issue where the emulation surface would appear gray.&lt;/p&gt;
&lt;p&gt;In his quest to bring feature parity between yuzu on PC and yuzu on Android, t895 implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12777&#34; data-gh-pr=&#34;12777&#34;&gt;the &amp;rsquo;encryption keys missing&amp;rsquo; warning on Android.&lt;/a&gt;

You will now get this warning on app startup if you don&amp;rsquo;t have the keys required to decrypt games/firmware.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./keys.png&#34; title=&#34; Time to grab that jig&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/keys_hud36a2cc4c1e4db747ce7ee1b20205846_41731_374x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Time to grab that jig&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Time to grab that jig&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;t895 also implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12824&#34; data-gh-pr=&#34;12824&#34;&gt;support for multi-program app switching.&lt;/a&gt;

This feature allows for game compilations like &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt; and &lt;code&gt;Klonoa: Phantasy Reverie Series&lt;/code&gt; to switch between games within the bundle.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./multiprogram.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Multi-game drifting! (Klonoa: Phantasy Reverie Series)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;He also made some minor UI improvements like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12786&#34; data-gh-pr=&#34;12786&#34;&gt;Show driver vendor in the FPS overlay.&lt;/a&gt;
 This informs users which driver is loaded.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12826&#34; data-gh-pr=&#34;12826&#34;&gt;Show System GPU driver information&lt;/a&gt;
 in the driver manager for improved visibility.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./driver.png&#34; title=&#34; Now you can know how outdated it is&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/driver_hue2a37caf87a32d9f2df6b7e913cff8b4_19170_519x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Now you can know how outdated it is&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Now you can know how outdated it is&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;And that&amp;rsquo;s not all.
Newcomer &lt;a href=&#34;https://github.com/GayPotatoEmma&#34;&gt;Emma&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12560&#34; data-gh-pr=&#34;12560&#34;&gt;implemented basic support for the game dashboard&lt;/a&gt;
 feature found on Pixel devices.
Thank you!&lt;/p&gt;
&lt;p&gt;Resident AMD tester &lt;a href=&#34;https://github.com/Moonlacer&#34;&gt;Moonlacer&lt;/a&gt; noticed that Samsung mobile devices with the new RDNA-based Xclipse GPUs had the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/6900&#34; data-gh-pr=&#34;6900&#34;&gt;same wireframe issues in various Pokémon games,&lt;/a&gt;
 that plague the PC AMD Vulkan drivers.
With some help from &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt;, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12885&#34; data-gh-pr=&#34;12885&#34;&gt;a fix for these Xclipse GPU drivers was implemented&lt;/a&gt;
 by considering these devices as AMD, gaining access to the same old workarounds Radeon cards benefit from.
Thanks to user &lt;code&gt;no.kola&lt;/code&gt; on discord for testing these!&lt;/p&gt;
&lt;p&gt;Xclipse moment #1. We have some bad news for Xclipse users we’ll discuss in the hardware section.&lt;/p&gt;
&lt;h2 id=&#34;miscellaneous-changes&#34;&gt;Miscellaneous changes&lt;/h2&gt;
&lt;p&gt;One notable standing issue with yuzu is profile corruption, when after a badly-timed crash, the emulator creates a new profile and leaves all user data in the old one, forcing the user to manually move their saves back to the newly created active profile.
Thankfully, german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12665&#34; data-gh-pr=&#34;12665&#34;&gt;fixes user profile corruption&lt;/a&gt;
 issues by only saving profile data when contents change.&lt;/p&gt;
&lt;p&gt;While NCE has been with us for some time now, that doesn’t mean it’s entirely stable yet.
As an Android user pointed out, some hardcore mods like &lt;code&gt;Luminescent Platinum&lt;/code&gt; for &lt;code&gt;Pokémon Brilliant Diamond/Shining Pearl&lt;/code&gt; would get stuck in a black screen while using NCE.&lt;/p&gt;
&lt;p&gt;After the detective work was finished by byte[], the reason was found to be in how some mods make assumptions about the module layout, and yuzu would try to give each module a dedicated patch section.
To alleviate this bottleneck, &lt;a href=&#34;https://github.com/GPUCode&#34;&gt;GPUCode&lt;/a&gt; modified
the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12677&#34; data-gh-pr=&#34;12677&#34;&gt;NCE loader&lt;/a&gt;
 to try to use the same patch section for as many sequential modules as possible.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./platinum.jpg&#34; title=&#34; The community never fails to provide impressive mods (Pokémon Brilliant Diamond)&#34;&gt;&lt;img src=&#34;./platinum.jpg&#34; alt=&#34; The community never fails to provide impressive mods (Pokémon Brilliant Diamond)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The community never fails to provide impressive mods (Pokémon Brilliant Diamond)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This should allow mods for other games that make assumptions about module layout to work under NCE as well.&lt;/p&gt;
&lt;p&gt;Jumping to a bit of input changes, german77 was notified that a user tried to dump their Amiibos, but yuzu failed to generate any dump because the Amiibos were mounted as read-only and no backup was available.
The solution? &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12683&#34; data-gh-pr=&#34;12683&#34;&gt;Dump Amiibos&lt;/a&gt;
 if no backup exists, no questions asked.&lt;/p&gt;
&lt;p&gt;Resident helper &lt;a href=&#34;https://github.com/anpilley&#34;&gt;anpilley&lt;/a&gt; decided it was time to improve the available command-line arguments for the yuzu binaries, adding the use of &lt;code&gt;-u&lt;/code&gt; to specify a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12695&#34; data-gh-pr=&#34;12695&#34;&gt;user to load&lt;/a&gt;
 and suppress the user selector from showing.
Thank you!&lt;/p&gt;
&lt;p&gt;Back for more, &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;FearlessTobi&lt;/a&gt; decides to tackle a few problems with the virtual file system emulation, or &lt;code&gt;VFS&lt;/code&gt;.
Since Project Gaia is in indefinite hiatus, priorities have shifted into patching as much of the current implementation as possible.&lt;/p&gt;
&lt;p&gt;The &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12707&#34; data-gh-pr=&#34;12707&#34;&gt;list of changes&lt;/a&gt;
 is long: it includes moving files, unifying error code naming for ease of debugging, making file system definitions more consistent with current reverse engineering information available, and leaving the overall structure prepared for future code additions.
Never hurts to improve an area that was designed back when there was little information available.&lt;/p&gt;
&lt;p&gt;The boss of Dynarmic herself, &lt;a href=&#34;https://github.com/merryhime&#34;&gt;merryhime&lt;/a&gt;, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12830&#34; data-gh-pr=&#34;12830&#34;&gt;updated the bundled build&lt;/a&gt;
 in yuzu to the latest version, bringing some new changes and fixes with it.
There are some instruction emulation optimizations, more 32-bit ARM instructions were added, and the startup times of games on Android was improved — it’s not as fast as NCE, but it’s considerably faster for those games that must run on JIT.&lt;/p&gt;
&lt;p&gt;To close this section and move to an interesting hardware discussion, t895 has one last gift for us this month, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12868&#34; data-gh-pr=&#34;12868&#34;&gt;per-game audio settings.&lt;/a&gt;

One of the missing settings that could be set on a per-game basis, and it includes the full set, output engine, output device, input device, etc.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./audio.gif&#34; title=&#34; Sounds good to me!&#34;&gt;&lt;img src=&#34;./audio.gif&#34; alt=&#34; Sounds good to me!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Sounds good to me!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The more you’re able to choose, the better, right?&lt;/p&gt;
&lt;h2 id=&#34;hardware-and-software-section&#34;&gt;Hardware and software section&lt;/h2&gt;
&lt;p&gt;As promised last month, we’ll talk about frame generation, and the new tools available to take advantage of it in yuzu.
But first, one last HDR example for NVIDIA users.&lt;/p&gt;
&lt;h3 id=&#34;nvidia-truehdr&#34;&gt;NVIDIA TrueHDR&lt;/h3&gt;
&lt;p&gt;With the 551.XX series of drivers, NVIDIA introduced the option to auto-generate an HDR output for any video displayed on a Chromium-based browser (Google Chrome, Microsoft Edge, Brave, etc).
It didn’t take long for the community to come up with plug-ins to take advantage of this change in &lt;a href=&#34;https://github.com/emoose/VideoRenderer/releases&#34;&gt;local video players&lt;/a&gt;, but that’s not the only application outside NVIDIA’s official intended use.&lt;/p&gt;
&lt;p&gt;Enter &lt;a href=&#34;https://www.nexusmods.com/site/mods/781&#34;&gt;NvTrueHDR&lt;/a&gt;, an alternative to Windows AutoHDR and Special K HDR.
Always fun to have more options to pick from!&lt;/p&gt;
&lt;h3 id=&#34;lossless-scaling-to-the-rescue&#34;&gt;Lossless Scaling to the rescue&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://store.steampowered.com/app/993090/Lossless_Scaling/&#34;&gt;Lossless Scaling&lt;/a&gt;, a program intended for resolution scaling, recently introduced a generic frame generation option, making it the first vendor agnostic implementation.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ls1.png&#34; title=&#34; Clean UI&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/ls1_hu173910933dc6c69b7d8d98a91f2ac394_15624_880x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Clean UI&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Clean UI&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Simply set Frame Generation on the right to &lt;code&gt;LSFG&lt;/code&gt;. If you’re an Intel iGPU user, set Legacy capture API to enabled, open yuzu, enable Scale, and switch back to playing your game, or press the default hotkey &lt;code&gt;Ctrl + Alt + S&lt;/code&gt; while in-game. Exclusive fullscreen is recommended.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ls2.png&#34; title=&#34; Scroll down to find it&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/ls2_hu4213b5e21f98ce808922b2749982e00c_16643_880x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Scroll down to find it&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Scroll down to find it&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The results are good on smaller displays, but on larger monitors (such as 27 inch displays), the artifacts of the generated frames are too noticeable, making this tool more suitable for laptops and handhelds than for desktop or TV gameplay.
Still, it’s a cheap way of improving perceived framerates and bypassing CPU bottlenecks on any GPU vendor without driver or hardware restrictions.&lt;/p&gt;
&lt;p&gt;Below you can see comparison videos between native 30 FPS and Lossless Scaling generating frames to 60 FPS in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;.
Due to YouTube only supporting 60FPS video, you won&amp;rsquo;t see the true 120 FPS framegen examples.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/v-U7GJYrY64&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
 
 &lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
   &lt;iframe src=&#34;https://www.youtube.com/embed/XNBTxr6HBlA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;The above videos demonstrate native 30 FPS vs Lossless Scaling generating frames from a 30 FPS base.
You can see with so little information, artifacts are common. Lossless Scaling doesn’t handle scene transitions.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/CG_e5yOnd9E&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
 
 &lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
   &lt;iframe src=&#34;https://www.youtube.com/embed/UpvdLJUtEis&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;The above videos demonstrate native 60 FPS vs Lossless Scaling generating frames from a 60 FPS base.
With more information to play with, Lossless Scaling does a better job. Scene transitions are still an issue.&lt;/p&gt;
&lt;p&gt;While the quality is not perfect, it’s a simple and harmless way of improving the experience on any hardware — especially on &lt;del&gt;ugly&lt;/del&gt; 30 FPS games like the Pokémon series, or cinematic experiences like the Xenoblade saga. No double standards here.
Still, for those with recent AMD GPUs (RDNA2 and RDNA3 so far), there’s a better option available now:&lt;/p&gt;
&lt;h3 id=&#34;amd-fluid-motion-frames&#34;&gt;AMD Fluid Motion Frames&lt;/h3&gt;
&lt;p&gt;Driver release 24.1.1 introduced the first public release of &lt;a href=&#34;https://community.amd.com/t5/gaming/amd-fluid-motion-frames-is-out-now-on-amd-radeon-rx-7000-series/ba-p/634372&#34;&gt;AFMF&lt;/a&gt;, AMD’s game-independent frame generation algorithm.&lt;/p&gt;
&lt;p&gt;“But writer, AFMF is only for Direct3D 11 and 12 games!” you say.
That’s where you’re wrong. You see, the &lt;a href=&#34;https://forums.guru3d.com/threads/amd-software-adrenalin-edition-23-40-01-10-preview-driver-for-amd-fluid-motion-frames.449598/page-35#post-6197794&#34;&gt;Guru3D forums&lt;/a&gt; has some fantastic information, AFMF can be run on Vulkan, OpenGL, and Direct3D 9/10 too, it only needs a registry edit:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\AMD\DVR]
&amp;#34;GFGEnableAPI&amp;#34;=dword:00000007
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Manually make this change with regedit, reboot Windows if needed, add yuzu to the Radeon Software, set &lt;code&gt;Wait for Vertical Refresh&lt;/code&gt; to &lt;code&gt;Disabled&lt;/code&gt;, enable AMD Fluid Motion Frames:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./radeon.png&#34; title=&#34; Good looking UI, AMD&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/radeon_hu93f516816e4b610cd2fc89df77d019eb_94725_944x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Good looking UI, AMD&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Good looking UI, AMD&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;In the performance tab, you can set the overlay to show the generated frames&amp;rsquo; performance (it won’t show up on regular apps or yuzu, as it isn’t informed by the game engine), along with latency and stuttering.&lt;/p&gt;
&lt;p&gt;Open yuzu, set Fullscreen Mode to Exclusive Fullscreen:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./fullscreen.png&#34; title=&#34; It’s as shrimple as that&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/fullscreen_hu125dd8c8d3121a04dba11e7b07d86bfd_24810_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; It’s as shrimple as that&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; It’s as shrimple as that&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;And that’s it, start a game, go into fullscreen by pressing F11 or the hotkey assigned to your controller, and enjoy 2x to 3x the perceived framerate.&lt;/p&gt;
&lt;p&gt;Note that, while the image quality is much better than the result from Lossless Scaling, AMD disables AFMF if there is too much variance between one frame and the next in order to avoid smoothing out scene transitions like camera changes or opening the menu.
This leads to a noticeable frametime inconsistency when a lot of action is happening on screen. We hope AMD adds an option in the future to toggle the sensitivity of this behaviour.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/v-U7GJYrY64&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
 
 &lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
   &lt;iframe src=&#34;https://www.youtube.com/embed/8Cbov_uR2Dc&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;The above videos demonstrate native 30 FPS vs AFMF generating frames from a 30 FPS base.
While a better result than Lossless Scaling at 30 FPS, artifacts are still noticeable in faster movements, especially on vegetation. Scene transitions are clear and there is less shimmering around the player.&lt;/p&gt;
&lt;p&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/CG_e5yOnd9E&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
 
 &lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
   &lt;iframe src=&#34;https://www.youtube.com/embed/GfRjc9v0jls&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;

The above videos demonstrate native 60 FPS vs AFMF generating frames from a 60 FPS base.
And at 60 FPS, the results are great! Allowing for smoother gameplay on 120-180Hz displays.&lt;/p&gt;
&lt;p&gt;No performance graphs are included because your writer doesn’t consider perceived framerate as real performance, but to provide an example, &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt;, which produces solid 60 FPS in open world with a 5600X and an RTX 3060 Ti, can produce 170-180 “FPS” with AFMF enabled, and with little to no distortion visible.&lt;/p&gt;
&lt;p&gt;The games can be rendered with an NVIDIA or Intel GPU while still generating frames with AFMF, although the experience is slightly worse than just using the AMD card directly due to the added latency of transmitting the finished frames over PCIe.
The only requisite for AFMF to work is to have the display connected to the compatible AMD GPU, any other GPU can do the actual rendering after that.
Time to invest in an RX 6400? Smash must look amazing at 240 FPS.&lt;/p&gt;
&lt;h3 id=&#34;intel-delivering-on-its-promises&#34;&gt;Intel delivering on its promises&lt;/h3&gt;
&lt;p&gt;As promised, Intel fixed &lt;a href=&#34;https://github.com/IGCIT/Intel-GPU-Community-Issue-Tracker-IGCIT/issues/551&#34;&gt;their crashes&lt;/a&gt; while building geometry shaders, starting with driver version &lt;a href=&#34;https://www.intel.com/content/www/us/en/download/785597/intel-arc-iris-xe-graphics-windows.html&#34;&gt;31.0.101.5186/5234&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While this allows for games like &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; to finally get in-game on integrated GPUs and ARC dedicated cards, it seems like there are other areas where the driver needs to mature to produce proper rendering:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./xc3.png&#34; title=&#34; Intel moment (Xenoblade Chronicles 3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2024/xc3_hu36b458dce752bacecf85a626d9168b50_1458940_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Intel moment (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Intel moment (Xenoblade Chronicles 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;On the flip side, &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt; improved stability with this driver fix, so Intel Windows specific rendering issues aside, the game should be quite playable now.&lt;/p&gt;
&lt;h3 id=&#34;qualcomm&#34;&gt;Qualcomm&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases/tag/v24.1.0_R16&#34;&gt;K11MCH1&lt;/a&gt;’s driver releases continue to flow out, improving performance and compatibility for Adreno users.
We strongly recommend staying up-to-date.&lt;/p&gt;
&lt;p&gt;While there have been new releases of the proprietary driver, nothing of value has been added or fixed yet.&lt;/p&gt;
&lt;p&gt;Total Adreno moments count this month: 1.&lt;/p&gt;
&lt;h3 id=&#34;exynos-and-mali&#34;&gt;Exynos and Mali&lt;/h3&gt;
&lt;p&gt;Why together? Because we found some &lt;em&gt;interesting&lt;/em&gt; limitations in the Exynos hardware that reminds us of the existential crisis Mali suffers.
Besides the AMD specific issue we previously mentioned, Exynos’ Xclipse GPU series shares a quality with Mali: total lack of support for BC4 to BC7 texture decoding.&lt;/p&gt;
&lt;p&gt;While this is &lt;em&gt;fine&lt;/em&gt; for native Android games (developers just have to scratch their head at the decision to skip basic texture support, and use an alternative like ASTC), Switch games do use BCn textures, extensively in some cases, and adding the extra CPU work of having to decode those textures into something the GPU can handle (RGBA8) will limit performance and increase memory usage.
This is one of the main reasons these GPUs are not on par with Adreno in terms of feature support.&lt;/p&gt;
&lt;p&gt;So:&lt;/p&gt;
&lt;p&gt;Total Xclipse moments count this month: 2.&lt;/p&gt;
&lt;p&gt;Total Mali moments count this month: 2.&lt;/p&gt;
&lt;h2 id=&#34;linux&#34;&gt;Linux&lt;/h2&gt;
&lt;p&gt;Certain distributions like SteamOS, Fedora since &lt;a href=&#34;https://bugzilla.redhat.com/show_bug.cgi?id=2216765&#34;&gt;version 39&lt;/a&gt;, and any distro with a &lt;a href=&#34;https://github.com/zen-kernel/zen-kernel/commit/d22e337dca65bd7056e27b93c212df25a9b4c376&#34;&gt;linux-zen&lt;/a&gt; package available (Arch Linux for example), have significantly increased their default &lt;code&gt;vm.max_map_count&lt;/code&gt; values, leading to much more stable out-of-box experiences when running Unreal engine games on yuzu.&lt;/p&gt;
&lt;p&gt;Progress feels so good! You could learn a little, Windows.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;Work on multiprocess support is far from over. We’re aiming to support &lt;code&gt;QLaunch&lt;/code&gt;, meaning being able to boot the native game launcher, launch games from there, close them, suspend them, launch a different game, the whole deal.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./ql1.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; QLaunching in 3, 2, 1!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Resuming a game works too.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./ql2.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Back and forth.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The work on applets and multiprocess is exposing a lot of hidden bugs in multiple areas — the accuracy improvements are a very welcome addition; we&amp;rsquo;re having so much fun testing and running the applets.&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you for reaching the end of this progress report. We hope to see you next time!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report December 2023</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/</link>
      <pubDate>Wed, 10 Jan 2024 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/</guid>
      <description>&lt;p&gt;Happy New Year, yuz-ers! We say goodbye to 2023 with several great changes, ranging from driver fixes to big memory savings, and quite a bit in between! Let’s go.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Happy New Year, yuz-ers! We say goodbye to 2023 with several great changes, ranging from driver fixes to big memory savings, and quite a bit in between! Let’s go.&lt;/p&gt;
&lt;h2 id=&#34;graphics-changes-and-driver-fixes&#34;&gt;Graphics changes and driver fixes&lt;/h2&gt;
&lt;h3 id=&#34;vulkan&#34;&gt;Vulkan&lt;/h3&gt;
&lt;p&gt;Drivers are fantastical creatures.
They love to exhibit major behavioural changes while still following the Vulkan specification — or more correctly for this issue, the SPIR-V specification.&lt;/p&gt;
&lt;p&gt;Such was the case with NVIDIA drivers.
Since the release of the 540 branch back in September, users have reported sudden crashes when building specific shaders in games, the most common example being some cutscenes and scenarios in &lt;code&gt;Bayonetta 3&lt;/code&gt;. However, the problem extended to many other games in unexpected places.&lt;/p&gt;
&lt;p&gt;After investigating the issue, your writer and &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; came to the conclusion that the problem was not the drivers, but a miscompilation in yuzu&amp;rsquo;s shader compiler for &lt;a href=&#34;https://registry.khronos.org/OpenGL-Refpages/gl4/html/textureGrad.xhtml&#34;&gt;texture gradient&lt;/a&gt; operations.&lt;/p&gt;
&lt;p&gt;Pesky shaders, why don’t we just make them disappear? Well, if you like your games displaying anything besides a &lt;a href=&#34;https://www.youtube.com/watch?v=6Peinf-xQWg&#34;&gt;black out&lt;/a&gt;, you want them, all of them.&lt;/p&gt;
&lt;p&gt;In some cases, yuzu would incorrectly (and unintentionally) fetch the gradient derivatives as integers (U32), when they were intended to be reinterpreted bitwise as floats (F32).
While older drivers would implicitly reinterpret when using the wrong type, the 540 driver series will throw a proper shader validation error, which is the correct behaviour for a bug like this.&lt;/p&gt;
&lt;p&gt;This meant that if a user with any NVIDIA GPU loaded a pipeline cache with the affected shader after updating to a 540 series driver, or reached a moment where a new affected shader would be built, the game would crash.
At the same time, if the user reverted the driver to the older 536/537 series drivers, the same cache would work fine.&lt;/p&gt;
&lt;p&gt;Culprit found (it was us the whole time), sentence dictated: texture gradient operations will now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12435&#34; data-gh-pr=&#34;12435&#34;&gt;enforce F32 types on derivatives&lt;/a&gt;
 to comply with the SPIR-V specification.
Now games don’t have to crash, users can keep their drivers up to date, and your writer sleeps peacefully at night knowing this is resolved.
Anyone using an NVIDIA GPU, regardless of operating system, feel free to update to the latest release for your platform.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./bayo3.png&#34; title=&#34;Magical Infernal Ladies Fighting (Bayonetta 3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/bayo3_hu7f08a002574d4cc420210c811ab0bb37_2408821_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Magical Infernal Ladies Fighting (Bayonetta 3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Magical Infernal Ladies Fighting (Bayonetta 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Android users have a knack for finding bugs, partially thanks to the different set of default settings we use for the small screen.
Handheld mode, for example, is selected by default to improve performance (Mali users appreciate this substantially) and save a tiny bit of RAM, but hey, we’re not in the Android section yet!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Fight&#39;N Rage&lt;/code&gt;, a fantastic beat’em up, had its screen cut in half in handheld mode, something most desktop users missed since it runs fine in docked mode.
The issue was — and this is a classic for sprite games by now — in how swizzle and window origin adjustments were being handled.
Viewport transform and window origin mode are handled separately in the GPU, so &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12235&#34; data-gh-pr=&#34;12235&#34;&gt;splitting the two jobs&lt;/a&gt;
 is what doctor byte[] ordered. Feel free to smash that attack button now.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/fnrbug_hue166187039afb4a55b0661a230b817b4_587050_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Quite a big difference (Fight&amp;#39;N Rage)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/fnrfix_hu46039ddb1eb04a5daef868ac49a80384_1094177_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Quite a big difference (Fight&amp;#39;N Rage)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Quite a big difference (Fight&amp;#39;N Rage)&lt;/p&gt;


&lt;p&gt;Guess who’s back. A game that is special in many aspects, an emulator itself, one of the few native Vulkan titles on the Switch, a game that is even out of print in an era of digital releases, and the reason byte[] started contributing to yuzu.&lt;/p&gt;
&lt;p&gt;That’s right, &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt; is back in a report, this time addressing one of its remaining interesting quirks: the incredibly slow performance of its intro video on non-NVIDIA and non-Mesa drivers.&lt;/p&gt;
&lt;p&gt;The quirkiness was the result of the game causing yuzu to continuously recreate its swapchain on every single frame.
A swapchain is a set of framebuffer images used by the graphics API and the GPU to draw to the screen.&lt;/p&gt;
&lt;p&gt;The game used one of its framebuffer images as sRGB during startup, which caused yuzu to detect it as sRGB. The other framebuffer image was only used as linear. Since yuzu tries to respect the colorspace of the output image, this problem was causing yuzu to incorrectly think it needed to recreate the swapchain on every single frame.
This constant, per-frame swapchain recreation is not that expensive on NVIDIA and Mesa drivers, but anything else (Intel, AMD, Android drivers) can spend as much as 30ms processing this switching.
That’s around 30 FPS lost in a game supposed to render at 60!&lt;/p&gt;
&lt;p&gt;How do we avoid this? Well, Vulkan always interprets any framebuffer currently being presented to screen as sRGB, so replacing the frame with a non-sRGB one is just adding unnecessary additional work and pissing off several drivers.
Changing the logic to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12274&#34; data-gh-pr=&#34;12274&#34;&gt;ignore sRGB in framebuffer images&lt;/a&gt;
 provides smooth frametimes for users of these drivers.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sm3d.png&#34; title=&#34;What does Mario do with that many stars? Not sing Peaches I hope (Super Mario 3D All-Stars)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/sm3d_hu7b88b844e0878fa91963ef69d35749e9_2734983_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;What does Mario do with that many stars? Not sing Peaches I hope (Super Mario 3D All-Stars)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;What does Mario do with that many stars? Not sing Peaches I hope (Super Mario 3D All-Stars)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;On a related note, let’s talk about presentation limits and how they affect asynchronous presentation, which moves presenting to the screen to a different CPU thread.&lt;/p&gt;
&lt;p&gt;Due to several factors, yuzu’s Vulkan renderer could only process up to 6 frames at a time.
While this isn’t normally an issue on desktop, especially for users that don’t enable Asynchronous Presentation (available in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced&lt;/code&gt;), Android, a platform that demands always using asynchronous presentation, showed us that low enough performance with the setting toggled on, regardless of OS or platform, can cause the queue of swapchain images to grow beyond the limit of 6 frames. Thus, leading to a driver crash and your progress being lost. Ouch.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./async.png&#34; title=&#34;Feel free to test enabling it now&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/async_huc12be54c88d46f6f74c8e98d6d397705_7673_424x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Feel free to test enabling it now&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Feel free to test enabling it now&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Android users found a workaround to this very early on: lowering the game speed limit under 100%, which slowed down the presentation rate, thereby usually keeping yuzu under the 6 frame limit.&lt;/p&gt;
&lt;p&gt;While that technically worked, the idea is to run games at least at 100% speed whenever possible, right?&lt;/p&gt;
&lt;p&gt;The easy solution byte[] found for this problem after identifying it was to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12345&#34; data-gh-pr=&#34;12345&#34;&gt;force the presentation process to wait&lt;/a&gt;
 before reaching the limit, improving stability substantially on low-end hardware, including Android devices, while also improving input lag!
Now asynchronous presentation is safe to use, improves frametimes, reduces input latency, and does your laundry! That’s a solid win for everyone.&lt;/p&gt;
&lt;p&gt;Enough about presentation, let’s talk about clip distance instead now.
I can hear you asking in the back, &amp;ldquo;what the living Koopa Castle is a clip distance?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Most GPUs allow shaders to set up custom clipping planes for vertex data, which allows the GPU to cut geometry invisible to the viewport with no extra triangles generated or rendering cost.
The members of &lt;code&gt;gl_ClipDistance&lt;/code&gt;, a global variable and float array declared in the shader, represent the distance to the clipping plane on each vertex.&lt;/p&gt;
&lt;p&gt;Many games use these values, including &lt;code&gt;Red Dead Redemption&lt;/code&gt;, &lt;code&gt;Fire Emblem Warriors: Three Hopes&lt;/code&gt;, &lt;code&gt;DEAD OR ALIVE Xtreme 3 Scarlet&lt;/code&gt;, &lt;code&gt;Hyrule Warriors: Definitive Edition&lt;/code&gt;, and &lt;code&gt;Portal&lt;/code&gt;.
Weird group, isn’t it? A cowboy, a skimpy Japanese fighter, two medieval warriors, and a Companion Cube walk into a bar…&lt;/p&gt;
&lt;p&gt;On most desktop drivers, the default values for all global variables will be zero implicitly.
However, SPIR-V says that these values are actually undefined.
This assumption broke rendering in &lt;code&gt;Portal&lt;/code&gt; on the radv Mesa driver ― for clip distances specifically.&lt;/p&gt;
&lt;p&gt;byte[]&amp;rsquo;s &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12403&#34; data-gh-pr=&#34;12403&#34;&gt;first fix&lt;/a&gt;
 attempted to only declare an array of clip distances as large as actually needed, which would prevent any undefined values from persisting in the array.
While some shaders (like those used in &lt;code&gt;Portal&lt;/code&gt;) write directly to the clip distance array values, others (like in &lt;code&gt;Red Dead Redemption&lt;/code&gt;) use a loop variable to access the array.
Thus, the first fix attempt resulted in declaring an array of zero clip distances in those games, which is illegal in SPIR-V.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./doabug.png&#34; title=&#34;Emulation, when The Void does indeed stare back (DEAD OR ALIVE Xtreme 3 Scarlet)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/doabug_huf4f491b55d66986d6acfafb0b9e34fdc_805484_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Emulation, when The Void does indeed stare back (DEAD OR ALIVE Xtreme 3 Scarlet)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Emulation, when The Void does indeed stare back (DEAD OR ALIVE Xtreme 3 Scarlet)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;After revisiting the issue, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12487&#34; data-gh-pr=&#34;12487&#34;&gt;implemented a more robust solution:&lt;/a&gt;
 when clip distances are used, always declare an array of as many clip distances as the host driver supports, and use a default value to ensure the array members are all set to zero, avoiding any undefined behaviour.
All drivers except Mali support eight clip distances; Mali supports &lt;em&gt;zero&lt;/em&gt;, so a special case had to be made for this driver.
Mali moment #1.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./doafix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/doafix_hu444eceb506e37b5a14c5cb11ef0e4608_1430057_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This was a triumph&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rdr.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/rdr_hu418dc45079d99d772611693eca758cf0_3366091_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This was a triumph&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hwde.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/hwde_hu4e33f9708fbfea42816519c475111e82_3697309_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This was a triumph&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./few.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/few_hu53eeb5ed42da25f43596b8149948e62b_2741867_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This was a triumph&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./portal.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/portal_hu03ace33a31dbc8a03c1dab0ef8e667aa_2735568_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This was a triumph&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;This was a triumph&lt;/p&gt;


&lt;p&gt;GPUs often work with texture data in a variety of formats.
Among the parameters used by compressed textures like ASTC and BCn is &lt;code&gt;pitch&lt;/code&gt;, which is the size of one row of compressed blocks.
This eventually gets divided by the block size of the texture by the emulator, giving the number of blocks per row.
This worked flawlessly for linear 1x1 block-sized uncompressed textures, but broke compressed ones that have larger block sizes.
Vulkan expects the pitch to be the number of texels (the minimum unit of a texture map, think of pixels but for textures) per row, plus some padding, but yuzu was calculating the value incorrectly.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/kofbug_huf2519062142dfbcae8f049dc02aa0655_1853012_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;A new tournament begins (THE KING OF FIGHTERS XIII GLOBAL MATCH)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/koffix_hu95ff19c35510296420aab29dc9f13c2f_1607439_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;A new tournament begins (THE KING OF FIGHTERS XIII GLOBAL MATCH)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;A new tournament begins (THE KING OF FIGHTERS XIII GLOBAL MATCH)&lt;/p&gt;


&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12479&#34; data-gh-pr=&#34;12479&#34;&gt;Fixing the buffer row length,&lt;/a&gt;
 and, while at it, tuning the software BCn decoder Mali needs (Mali moment #2), is how &lt;a href=&#34;https://github.com/GPUCode&#34;&gt;GPUCode&lt;/a&gt; fixed the rendering of &lt;code&gt;THE KING OF FIGHTERS XIII GLOBAL MATCH&lt;/code&gt; and the Eatsa Pizza minigame from &lt;code&gt;Mario Party Superstars&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pizza.png&#34; title=&#34;Your writer is old enough to remember playing this on the Nintendo 64 (Mario Party Superstars)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/pizza_huc8c1d5f4751b9657b2d55390c95f1e6a_1469891_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Your writer is old enough to remember playing this on the Nintendo 64 (Mario Party Superstars)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Your writer is old enough to remember playing this on the Nintendo 64 (Mario Party Superstars)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;That ends the Vulkan section, so what’s left is to follow up with the:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./opengl.png&#34; title=&#34;And you can’t prove Khronos wrong&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/opengl_hua35ad2ab6f1552afc009fb01632742fc_628296_480x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;And you can’t prove Khronos wrong&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;And you can’t prove Khronos wrong&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h3 id=&#34;opengl&#34;&gt;OpenGL&lt;/h3&gt;
&lt;p&gt;Because &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; won’t let the old API rest.&lt;/p&gt;
&lt;p&gt;One remaining issue (of many) for the OG open API was a bug with the shadows of &lt;code&gt;Metroid Prime Remastered&lt;/code&gt;.
By bringing the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12412&#34; data-gh-pr=&#34;12412&#34;&gt;counter query accuracy,&lt;/a&gt;
 which was first seen in Vulkan, to OpenGL, this issue is now solved.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./metroid.png&#34; title=&#34;SPAAAAACE (Metroid Prime Remastered)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/metroid_hud91a79546c5d40ef3f4a3f770be4a74a_1234209_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;SPAAAAACE (Metroid Prime Remastered)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;SPAAAAACE (Metroid Prime Remastered)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;OpenGL users saw another win with the implementation of two fixes for &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;.
This is particularly important for AMD users, Windows or Linux, since most AMD GPUs can’t avoid vertex explosions while running the game with Vulkan in the Pentelas region of the main story, and the DLC, Future Redeemed.&lt;/p&gt;
&lt;p&gt;First, by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12415&#34; data-gh-pr=&#34;12415&#34;&gt;implementing&lt;/a&gt;
 the &lt;code&gt;DrawTransformFeedback&lt;/code&gt; macro, which is the OpenGL equivalent of Vulkan’s &lt;code&gt;DrawIndirectByteCount&lt;/code&gt;, particles were fixed.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./xc3.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Remember the Game Awards flute guy? (Xenoblade Chronicles 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;And second, a lesson of how a simple typo can cause havoc, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12377&#34; data-gh-pr=&#34;12377&#34;&gt;fixing the transform feedback binding&lt;/a&gt;
 from &lt;code&gt;strides&lt;/code&gt; to &lt;code&gt;sizes&lt;/code&gt; stopped the grass in the game from becoming some space demon abomination.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/xc3bug_hu007809d21f6c55f7623ad21acd617f60_4633014_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That experiment really went wrong, Dr. (Xenoblade Chronicles 3)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/xc3fix_hu0cd2426314e9d7cee549ebfd05975bb7_4648971_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That experiment really went wrong, Dr. (Xenoblade Chronicles 3)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;That experiment really went wrong, Dr. (Xenoblade Chronicles 3)&lt;/p&gt;


&lt;p&gt;With these changes, AMD users suffering from the Pentelas/DLC vertex explosion bug can safely play the game in OpenGL.&lt;/p&gt;
&lt;p&gt;But you know what would help even more? If epicboy also added more optimizations for the AMD proprietary OpenGL driver. &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12437&#34; data-gh-pr=&#34;12437&#34;&gt;Which is exactly what he did.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;With the release of the new OpenGL driver back in &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/#amd-opengl-25-years-in-the-making&#34;&gt;July of 2022&lt;/a&gt;, several unsavoury workarounds that yuzu code had for the red vendor could be removed (and now have been), improving performance.&lt;/p&gt;
&lt;h2 id=&#34;android-adventures-and-kernels-with-benefits&#34;&gt;Android adventures, and kernels with benefits&lt;/h2&gt;
&lt;p&gt;Instead of a bulleted list like in previous articles, let’s start with the big change first.&lt;/p&gt;
&lt;h3 id=&#34;saving-ram-makes-games-boot-fast&#34;&gt;Saving RAM makes games boot fast&lt;/h3&gt;
&lt;p&gt;One of the properties of the Linux kernel, which GNU/Linux distributions and Android benefit from, is its flexibility and constant progress made by the community and contributors.
One such case is the Linux kernel extension &lt;a href=&#34;https://man7.org/linux/man-pages/man2/madvise.2.html&#34;&gt;MADV_REMOVE&lt;/a&gt;, which allows for freeing up a given range of memory pages, &amp;ldquo;punching a hole&amp;rdquo; in the specified range of memory.&lt;/p&gt;
&lt;p&gt;Thanks to byte[]’s work, the emulator can &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12358&#34; data-gh-pr=&#34;12358&#34;&gt;take advantage&lt;/a&gt;
 of this extension to remove the requirement of needing 3GB of free RAM immediately after booting a game, and to also significantly decrease boot times while at it.
Memory isn’t a problem for most users with 16GB of system RAM (unless you have too many background processes), but for users with 8GB or lower running an OS with a Linux kernel (desktop Linux or Android), this greatly reduces immediate memory requirements, even allowing &lt;code&gt;Celeste&lt;/code&gt; to work on 4GB devices…&lt;/p&gt;
&lt;p&gt;…For a time. While the system doesn’t need to provide the full 3GB at game boot now, the game will still slowly demand that amount as it runs.
But this might be enough to let 8GB devices, or even 6GB ones (which we don’t officially support, but users use them anyway) reach the next save point.&lt;/p&gt;
&lt;p&gt;Feel free to play the most complex games now on your 8GB Linux laptop or phone and enjoy the improved boot times!
We believe only &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt; still requires 12GB on ASTC compatible devices (Android devices or Intel iGPUs) to be safely playable now.&lt;/p&gt;
&lt;p&gt;For the Windows gang, sorry: only bad news.
The Windows kernel doesn’t have an equivalent to MADV_REMOVE, so if you have a low-end device with a small amount of RAM, Linux is the way to go.&lt;/p&gt;
&lt;p&gt;No surprise there though.&lt;/p&gt;
&lt;h3 id=&#34;4k&#34;&gt;4K&lt;/h3&gt;
&lt;p&gt;The resolution? No, worse, crazier than pixel density.
Remember &lt;code&gt;Paper Mario: The Origami King&lt;/code&gt;? Good game, pretty graphics, and fun humour.
This game has a unique situation on its hands, its ARM CPU code is illegal.
Not &amp;ldquo;FBI OPEN UP&amp;rdquo; illegal, but &amp;ldquo;not able to run natively on contemporary systems due to a difference in stack pointer alignment handling&amp;rdquo; type of illegal.
The Switch clears a hardware bit that checks the stack pointer alignment and generates an exception, but practically every other operating system sets it, and there is no way to turn it off without a kernel modification.&lt;/p&gt;
&lt;p&gt;This meant modern devices couldn’t run this game with NCE enabled.
Until now.&lt;/p&gt;
&lt;p&gt;By using the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12237&#34; data-gh-pr=&#34;12237&#34;&gt;ARM parser&lt;/a&gt;
 of &lt;a href=&#34;https://github.com/merryhime/dynarmic&#34;&gt;Dynarmic&lt;/a&gt;, byte[] parses the instructions responsible for causing the crash due to the alignment error this game produces, and interprets them in software.
The result? Three thousand eight hundred and fifty eight lines of code added to get a game that doesn’t render correctly on Android booting, and it still needs a save file to get past the intro…&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./tokbug.png&#34; title=&#34;Luigi sure is brave to drive in the Dark Woods (Paper Mario: The Origami King)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/tokbug_hu6b13f71b324dc9859c3698a6a9eee195_394764_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Luigi sure is brave to drive in the Dark Woods (Paper Mario: The Origami King)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Luigi sure is brave to drive in the Dark Woods (Paper Mario: The Origami King)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;So, wasted effort? With byte[]? Never.
The game wouldn’t render correctly because the emulator was binding float images with a mismatched sampler type.
By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12432&#34; data-gh-pr=&#34;12432&#34;&gt;forcing the use of floats&lt;/a&gt;
 for all pixel formats in the shader cache which aren’t explicitly declared as integer, mobile drivers are now able to properly render the Mario brothers in all their flat glory, along with at least &lt;strong&gt;71&lt;/strong&gt; &lt;a href=&#34;https://www.reddit.com/r/EmulationOnAndroid/comments/18od8vw/single_pr_fixes_a_lot_of_games_in_yuzu/&#34;&gt;other games!&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./tokfix.png&#34; title=&#34;Now that’s more like it, it only costs us a shader invalidation (Paper Mario: The Origami King)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/tokfix_hu0e8c55697c7f6c5f7b8f9a87bbb0175c_2295027_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Now that’s more like it, it only costs us a shader invalidation (Paper Mario: The Origami King)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Now that’s more like it, it only costs us a shader invalidation (Paper Mario: The Origami King)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Slight deja-vu with the fix for NVIDIA 540 driver series previously mentioned, right?
This work was an additional one hundred and eighty four lines of code, giving a total of four thousand and thirty eight lines of code, 4K, spent on Origami paper, just for Android.&lt;/p&gt;
&lt;h3 id=&#34;other-android-specific-gpu-changes&#34;&gt;Other Android specific GPU changes&lt;/h3&gt;
&lt;p&gt;Another peculiar problem the Android builds faced were the slow video decoding performance in games like &lt;code&gt;SUPER MARIO ODYSSEY&lt;/code&gt;, famous for its video pop-up tutorials.
The culprit was unnecessarily downloading some texture memory which was about to be overwritten anyway. Some &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12543&#34; data-gh-pr=&#34;12543&#34;&gt;tweaks to the DMA code&lt;/a&gt;
 by &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;, and the performance is now fixed!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smo.png&#34; title=&#34;No more hints here, scra-CAW! ♪ No more hints (SUPER MARIO ODYSSEY)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/smo_hu2d19a78ad8c73289363ee02cd1081e14_998035_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more hints here, scra-CAW! ♪ No more hints (SUPER MARIO ODYSSEY)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;No more hints here, scra-CAW! ♪ No more hints (SUPER MARIO ODYSSEY)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;One early regression yuzu had when the Android builds were first introduced affected the FXAA antialiasing filter.
As it turns out, the fix for the colour banding FXAA experienced on desktop hardware (which byte[] implemented back in June) missed updating the renderpass to the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12256&#34; data-gh-pr=&#34;12256&#34;&gt;proper format.&lt;/a&gt;

By properly using the &lt;code&gt;VK_FORMAT_R16G16B16A16_SFLOAT&lt;/code&gt; format for the renderpass, GPUCode resolved the issue.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/fxaabug_hubcdb67ad45822e2dcd2822deece3642c_5205580_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From Cursed Triforce to proper Triangle of Death&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/fxaafix_hu4d117414ddf26622bab3119dbe539e5e_955666_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From Cursed Triforce to proper Triangle of Death&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;From Cursed Triforce to proper Triangle of Death&lt;/p&gt;


&lt;p&gt;The Switch offers a JIT service (not to be confused with yuzu’s JIT, Dynarmic) that allows games to write to code memory during runtime — which wouldn&amp;rsquo;t normally be possible due to the restrictions of the platform.
This is currently only used for the official Nintendo 64 emulators in &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt; and the &lt;code&gt;Nintendo Switch Online&lt;/code&gt; collection.&lt;/p&gt;
&lt;p&gt;Properly using &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12513&#34; data-gh-pr=&#34;12513&#34;&gt;code memory handles&lt;/a&gt;
 allows the JIT service to work with yuzu’s NCE backend, letting the user run games from the &lt;code&gt;Nintendo 64 - Nintendo Switch Online&lt;/code&gt; library.
Thank you byte[] for yet again making an emulator work inside an emulator.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./n64.png&#34; title=&#34;Look, savestates! (SUPER MARIO 64)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/n64_hu2fa165caf4b03a67441972d1bc380816_747215_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Look, savestates! (SUPER MARIO 64)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Look, savestates! (SUPER MARIO 64)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;As a continuation to November’s progress on improving Mali stability due to their lack of support for &lt;code&gt;nullDescriptor&lt;/code&gt;, byte[] now added the workaround to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12410&#34; data-gh-pr=&#34;12410&#34;&gt;not pass null views.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Mali moment #3.&lt;/p&gt;
&lt;p&gt;nullDescriptor was added with the Vulkan extension &lt;a href=&#34;https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VK_EXT_robustness2.html&#34;&gt;VK_EXT_robustness2&lt;/a&gt;, back in 2020, for version 1.1 of the API. Vulkan is currently at version 1.3.
Given that the feature has native hardware support on all Direct3D-compatible GPUs, and is trivial to emulate in the driver, we are not sure why this has not been implemented yet&amp;hellip;&lt;/p&gt;
&lt;p&gt;Turnip drivers are a work in progress from the Mesa developers — while they typically perform and render very well, they are still in development.
One case that demonstrated this was how a change to improve driver compatibility in Mali caused Turnip to regress in response.
Mali moment # 4? No. This was last month.&lt;/p&gt;
&lt;p&gt;This only specifically affects the Adreno 610 series GPUs when running Turnip drivers.
byte[]’s solution to the issue is to purposely &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12390&#34; data-gh-pr=&#34;12390&#34;&gt;use the Vulkan API incorrectly&lt;/a&gt;
 for Turnip while we wait for Mesa to address the issue.
Now Adreno 610 users can run Turnip drivers again.&lt;/p&gt;
&lt;h3 id=&#34;android-specific-ui-and-miscellaneous-changes&#34;&gt;Android-specific UI and miscellaneous changes&lt;/h3&gt;
&lt;p&gt;Let’s round up the Android changes — we have more to cover, affecting both desktop and Android users too.&lt;/p&gt;
&lt;p&gt;First and most important to mention, &lt;a href=&#34;https://github.com/t895&#34;&gt;t895&lt;/a&gt; outdid himself and finished implementing &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12335&#34; data-gh-pr=&#34;12335&#34;&gt;Game Properties&lt;/a&gt;
.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./config1.gif&#34; title=&#34;Kept you waiting, huh&#34;&gt;&lt;img src=&#34;./config1.gif&#34; alt=&#34;Kept you waiting, huh&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Kept you waiting, huh&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This new feature can be accessed by long-pressing a game in the list, and allows access to the following menus:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A game information page to check program ID, game developer, game version running, and game ROM path.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./config2.png&#34; title=&#34; Great for diagnosing update installation shenanigans&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/config2_hub806f1270a62913ae69ccf684fdce0ea_41745_397x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Great for diagnosing update installation shenanigans&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Great for diagnosing update installation shenanigans&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Per-game settings page, with the option to revert a setting to the global default.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./config3.png&#34; title=&#34;As a game tester, and an 8GB sufferer, your writer considers this a huge blessing&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/config3_huabc8ad9cfa988eb7932e32e8fdaa9ade_68294_397x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;As a game tester, and an 8GB sufferer, your writer considers this a huge blessing&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;As a game tester, and an 8GB sufferer, your writer considers this a huge blessing&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Similarly, a per-game driver selector, for the cases where Qualcomm did something correctly, or an older Turnip release is better.&lt;/li&gt;
&lt;li&gt;An add-ons manager to install, enable, and disable updates, DLCs, and mods. While there are plans to support compressed mods, right now they must be uncompressed and manually selected here.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./config4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/config4_hue8fa6249305fb0fb75b5bebc3b3b7ad8_31905_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Bet you enjoy this one the most&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./config5.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/config5_hu2a7670e8aff378e75befe8837673af8b_55526_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Bet you enjoy this one the most&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Bet you enjoy this one the most&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;A save data manager, allowing users to export or import per-game saves, alongside the global option.&lt;/li&gt;
&lt;li&gt;An option to delete all save data of that particular game.&lt;/li&gt;
&lt;li&gt;An option to clear the pipeline cache of that particular game.&lt;/li&gt;
&lt;li&gt;And a Start button, which allows you to select a global or custom configuration. Launching from the game list will always load the custom configuration.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./config6.png&#34; title=&#34;To round it up&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/config6_hu28a780c26590e8daadc3fc600ab9a1f7_157672_395x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;To round it up&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;To round it up&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This covers one of the biggest missing components the Android build has left.
The only remaining settings are a content manager to delete installed content, and a controller mapping UI.
Rest assured, we’re working on them.&lt;/p&gt;
&lt;p&gt;t895 has continued to work on bringing Android to feature parity with the desktop build, while considering the specific needs of the mobile platform.
Some of the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12520&#34; data-gh-pr=&#34;12520&#34;&gt;recent changes&lt;/a&gt;
 included are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hiding the Fastmem toggle if CPU debugging is disabled, avoiding confusion on how it operates.&lt;/li&gt;
&lt;li&gt;Exposing the anisotropic filtering setting in graphics, an option that greatly helps visuals in several games with minimal performance cost.&lt;/li&gt;
&lt;li&gt;Centering the switch setting title when no description is present.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One of the unique Android features is their &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12387&#34; data-gh-pr=&#34;12387&#34;&gt;Oboe&lt;/a&gt;
 audio backend, which is, as expected of something unique to the platform, quite robust.
byte[] implemented it into yuzu to stop audio from cutting off when changing audio outputs (switching to wireless headphones for example) or starting a screen video capture.&lt;/p&gt;
&lt;p&gt;The option can be found at &lt;code&gt;Settings &amp;gt; Advanced settings &amp;gt; Audio &amp;gt; Output engine&lt;/code&gt;.
While Auto is the recommended value (it will always use Oboe on Android), users can take advantage of per-game settings to test Oboe vs Cubeb in any game they want.&lt;/p&gt;
&lt;p&gt;And finally, a minor change for end users which we think someone out there will enjoy.
With the work on the game properties section, t895 also had to equalise the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12518&#34; data-gh-pr=&#34;12518&#34;&gt;configuration file&lt;/a&gt;
 &lt;code&gt;config.ini&lt;/code&gt; to make it work on both desktop and Android builds.&lt;/p&gt;
&lt;h2 id=&#34;memory-heap-allocation-or-how-the-linux-kernel-can-be-wrong-sometimes&#34;&gt;Memory heap allocation, or how the Linux kernel can be wrong sometimes&lt;/h2&gt;
&lt;p&gt;Yes, Linux did an oopsie, how will they ever recover?&lt;/p&gt;
&lt;p&gt;The Linux kernel has a large set of runtime parameters.
One in particular is a limit on how many times a program can use the &lt;code&gt;mmap&lt;/code&gt; system call.
The default maximum value is 65530, which &amp;ldquo;ought to be enough for anyone&amp;rdquo;, or so the meme goes, but in practice that isn’t always the case.&lt;/p&gt;
&lt;p&gt;Typically, Switch games will query the amount of memory heap they have available, reserve all of it, and then suballocate from their OS-level reservation as they use up memory.
This is already well-supported when using host-mapped addressing (most commonly known as fastmem) on Linux-based operating systems, as it only requires a few calls to map the physical memory blocks which comprise the heap.&lt;/p&gt;
&lt;p&gt;Games based on Unreal Engine 4 do not do this.
Instead of reserving all of the available memory heap immediately, they reserve small blocks from the kernel on demand.
If only the software page table is being used, there’s no problem, as the blocks aren’t resulting in calls to &lt;code&gt;mmap&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When yuzu uses host-mapped addressing, the emulator propagates all of these mappings into the host address space.
That in itself wouldn’t normally be a problem, if it wasn’t for the fact that Unreal Engine 4 can allocate hundreds of thousands of small heap blocks, going over the kernel limit with ease, and crashing the entire program.&lt;/p&gt;
&lt;p&gt;yuzu is not the only &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/vm-max-map-count.html&#34;&gt;project&lt;/a&gt; affected by this completely arbitrary limitation — it has been a complaint for quite a long time.&lt;/p&gt;
&lt;p&gt;To work around this limitation, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12466&#34; data-gh-pr=&#34;12466&#34;&gt;inserts a layer&lt;/a&gt;
 between the software page table and the host mapping system, constantly tracking the heap allocations made by programs and automatically recycling some less recently used mappings, which causes some stuttering ― but that&amp;rsquo;s better than a game crash. Collection will reduce the number of mappings to around half of the 65530 limit most systems ship with.&lt;/p&gt;
&lt;p&gt;Yep, 64k is not enough for everyone.&lt;/p&gt;
&lt;p&gt;This way, Unreal Engine games can be safely played on Linux-based systems, like desktop distributions and Android devices, without needing to disable fastmem and NCE, two big performance settings that no one wants to keep off.&lt;/p&gt;
&lt;h2 id=&#34;project-leviathan-applets-and-input-fun&#34;&gt;Project Leviathan, applets, and input fun&lt;/h2&gt;
&lt;p&gt;As usual, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; has been having his good share of fun working on input and the native applets.&lt;/p&gt;
&lt;p&gt;First in the list is a solution for Amiibos with read-only permissions. If a program mounted them as read-only, yuzu doesn’t access any of their encrypted data, and could mark them as corrupt, which wasn’t really the case.
Since read-only data is set from the factory, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12255&#34; data-gh-pr=&#34;12255&#34;&gt;skipping the corruption check&lt;/a&gt;
 allows the use of read-only mounts in games like &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Next up, an announcement. german77 started working on a rewrite for the HID (human interface devices) code, called &lt;code&gt;Project Leviathan&lt;/code&gt; with the intention of further improving the accuracy of yuzu’s input emulation.
So far only preliminary work has been done, but some results have already been put into service.&lt;/p&gt;
&lt;p&gt;The first part finished is the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12289&#34; data-gh-pr=&#34;12289&#34;&gt;emulation&lt;/a&gt;
 of &lt;code&gt;AppletResource&lt;/code&gt;, which allows the developers to start working on multiprocess support in the near future, as well as other necessary resources like &lt;code&gt;AppletResourceUserId&lt;/code&gt;, or simply &lt;code&gt;aruid&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Following up, german77 implemented the necessary code to allow the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12359&#34; data-gh-pr=&#34;12359&#34;&gt;creation of multiple instances&lt;/a&gt;
 of HID shared memory, removing an old workaround and relieving the kernel from being responsible for handling shared memory, which in turn allows having a single shared memory instance per aruid.&lt;/p&gt;
&lt;p&gt;Another spot that is starting to shape up thanks to this HID rewrite is &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12425&#34; data-gh-pr=&#34;12425&#34;&gt;object creation,&lt;/a&gt;
 more specifically, &lt;code&gt;InitializeVibrationDevice&lt;/code&gt;, which would cause games like &lt;code&gt;Rocket League&lt;/code&gt; to crash.&lt;/p&gt;
&lt;p&gt;But not only german77 worked on input this month, newcomer &lt;a href=&#34;https://github.com/HurricanePootis&#34;&gt;HurricanePootis&lt;/a&gt; brought us an interesting fix for Linux users.
Linux handles hardware permissions on a per-user level.
For example, if for some reason the administrator desires it, a user can be completely blocked from having access to the &lt;code&gt;video&lt;/code&gt; group, or &lt;code&gt;audio&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;Connected devices are often only able to be accessed by the &lt;code&gt;root&lt;/code&gt; user or group. While this usually isn’t a problem for just using the device, it can block access to the custom Joy-Con and Pro Controller drivers german77 implemented, regardless of whether the user runs an appimage or Flatpak yuzu build.
By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12292&#34; data-gh-pr=&#34;12292&#34;&gt;adding a udev rule&lt;/a&gt;
 to grant access to &lt;code&gt;hidraw&lt;/code&gt; devices, HurricanePootis circumvented this limitation.
Thank you!&lt;/p&gt;
&lt;h2 id=&#34;miscellaneous-changes&#34;&gt;Miscellaneous changes&lt;/h2&gt;
&lt;h3 id=&#34;multiprocess-preliminary-work&#34;&gt;Multiprocess preliminary work&lt;/h3&gt;
&lt;p&gt;We spoke about preliminary work for multiprocess support. There’s more to cover on the matter.&lt;/p&gt;
&lt;p&gt;byte[] refactored how yuzu emulates &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12236&#34; data-gh-pr=&#34;12236&#34;&gt;CPU core activation.&lt;/a&gt;

He assures us writing three thousand lines of code simplifies the design of the ARM interface the emulator uses.
This has the added benefit of allowing code from multiple guest processes to run simultaneously, which is another of the prerequisites for starting the multiprocess effort.&lt;/p&gt;
&lt;p&gt;ARM guest emulation also received support for &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12394&#34; data-gh-pr=&#34;12394&#34;&gt;multiple memory instances,&lt;/a&gt;
 which can now coexist and interact with multiple server sessions.
One step closer with every pull request.&lt;/p&gt;
&lt;h3 id=&#34;core-kernel-and-file-system-changes&#34;&gt;Core, kernel, and file system changes&lt;/h3&gt;
&lt;p&gt;german77 found some… unexpected… behaviour in how the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12328&#34; data-gh-pr=&#34;12328&#34;&gt;user profile manager&lt;/a&gt;
 behaved.
It generated around 13 instances of itself, which lead to multiple, hard to explain bugs related to user data, including the sudden loss of profile after emulator crashes.
Slapping the profile manager and telling it to run a single instance should mitigate most random profile loss issues.&lt;/p&gt;
&lt;p&gt;Sometimes, games have unexpected file organisation strategies.
A recent episode of this phenomenon affects the &lt;code&gt;Batman: Arkham&lt;/code&gt; trilogy: the base games ship with a null RomFS.
That shouldn&amp;rsquo;t have been a problem; having a RomFS is never a requirement to run a program.
&lt;code&gt;Batman: Arkham Asylum&lt;/code&gt; did have a RomFS, and was launching fine, but &lt;code&gt;Batman: Arkham City&lt;/code&gt; and &lt;code&gt;Batman: Arkham Knight&lt;/code&gt; require their updates installed to be playable (their base game size is only 8MB).
The update contains the RomFS, but since the base game didn&amp;rsquo;t contain it, yuzu couldn&amp;rsquo;t find the RomFS to load, even with the update installed.&lt;/p&gt;
&lt;p&gt;Handling this &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12263&#34; data-gh-pr=&#34;12263&#34;&gt;peculiar case&lt;/a&gt;
 fell into byte[]’s hands, and the World’s Greatest Detective can now go fetch &lt;code&gt;?&lt;/code&gt; signs all over the place at ease.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./batman.png&#34; title=&#34;I am vengeance! I am the night! (Batman: Arkham Knight)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/batman_hu640e444d80cac5fa05387aa2b9d190e0_3603869_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;I am vengeance! I am the night! (Batman: Arkham Knight)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;I am vengeance! I am the night! (Batman: Arkham Knight)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Another &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12392&#34; data-gh-pr=&#34;12392&#34;&gt;file system implementation&lt;/a&gt;
 byte[] gave us was support for the &lt;code&gt;OpenDirectoryMode&lt;/code&gt; flag, which allows &lt;code&gt;Portal 2&lt;/code&gt; to save and load properly. One has to wonder why this wasn’t fixed earlier.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./portal21.png&#34; title=&#34;Are we going to space? (Portal 2)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/portal21_hu5589a49e0f54136375884b38aed54db4_2018272_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Are we going to space? (Portal 2)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Are we going to space? (Portal 2)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Some additional work was needed to get this masterpiece fully playable.
An entire service needed some patching-up, specifically, &lt;code&gt;ro&lt;/code&gt;, or &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12321&#34; data-gh-pr=&#34;12321&#34;&gt;relocatable object&lt;/a&gt;
 (allowing programs to load libraries on the fly), needed to be rewritten a bit  — just over a thousand lines of code.&lt;/p&gt;
&lt;p&gt;And finally, &lt;code&gt;vi&lt;/code&gt;, one of the services responsible for drawing on the screen, needed to distinguish between &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12331&#34; data-gh-pr=&#34;12331&#34;&gt;closing and destroying layers&lt;/a&gt;
 in order to get &lt;code&gt;Portal 2&lt;/code&gt; in-game.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./portal22.png&#34; title=&#34;Ever get that feeling of Deja Vu? (Portal 2)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2023/portal22_hud4a6f1849de063c04ff909b3cb0b3d1c_3226268_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ever get that feeling of Deja Vu? (Portal 2)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Ever get that feeling of Deja Vu? (Portal 2)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;A silly issue byte[] made in the &lt;a href=&#34;https://www.openssl.org/&#34;&gt;SSL&lt;/a&gt; buffer size configuration broke the Open Course World section of &lt;code&gt;SUPER MARIO MAKER 2&lt;/code&gt;.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12372&#34; data-gh-pr=&#34;12372&#34;&gt;Fixing this configuration mishap&lt;/a&gt;
 allows the game to run its &amp;ldquo;main mode&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Yet another set of findings by byte[], yet another battle won against shutdown crashes.
This time we have timing related crashes in &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12454&#34; data-gh-pr=&#34;12454&#34;&gt;core timing&lt;/a&gt;
 being addressed, and a rather rare &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12455&#34; data-gh-pr=&#34;12455&#34;&gt;shutdown crash&lt;/a&gt;
 in the kernel being squashed.&lt;/p&gt;
&lt;p&gt;Let’s close this longer-than-expected report and move to the hardware section.
Our last section in the list is:&lt;/p&gt;
&lt;h3 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h3&gt;
&lt;p&gt;german77 spotted an oopsie in the UI configuration files, leading to the language selection never getting saved.
If anyone noticed yuzu always selected the default language, you now know what the reason was.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12402&#34; data-gh-pr=&#34;12402&#34;&gt;Making this value persistent&lt;/a&gt;
 solved the problem.&lt;/p&gt;
&lt;p&gt;And lastly one last minor buff to Linux desktop users, from the hands of newcomer &lt;a href=&#34;https://github.com/ReillyBrogan&#34;&gt;ReillyBrogan&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When using a Wayland compositor, program windows are matched to their &lt;code&gt;.desktop&lt;/code&gt; shortcut file.
The &lt;code&gt;appId&lt;/code&gt; window property is intended to match the name of the &lt;code&gt;.desktop&lt;/code&gt; file, for example, &lt;code&gt;org.yuzu_emu.yuzu.desktop&lt;/code&gt;.
Plasma desktop, by default, sets this property to the name of the binary file, which in this case is just &lt;code&gt;yuzu&lt;/code&gt;, and doesn’t match the expected value of &lt;code&gt;org.yuzu_emu.yuzu&lt;/code&gt;.
This led to Plasma desktop users (Steam Deck included) displaying yuzu without our glorious icon.
One &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12521&#34; data-gh-pr=&#34;12521&#34;&gt;manual override&lt;/a&gt;
 later, and the icon is properly there. Thank you!&lt;/p&gt;
&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;h2 id=&#34;nvidia-safe-to-update&#34;&gt;NVIDIA, safe to update&lt;/h2&gt;
&lt;h3 id=&#34;proprietary-nvidia-driver&#34;&gt;Proprietary NVIDIA driver&lt;/h3&gt;
&lt;p&gt;As previously mentioned, it’s safe to update to the latest driver versions thanks to the fixes implemented by byte[].
This will become more critical once the SUPER refresh of Ada cards is out, so perfect timing there.
Hopefully they finally provide good value.&lt;/p&gt;
&lt;h3 id=&#34;nvk&#34;&gt;NVK&lt;/h3&gt;
&lt;p&gt;What’s this? A free and open source Mesa Vulkan driver for Turing and later NVIDIA hardware?&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.phoronix.com/news/Mesa-23.3-Released&#34;&gt;It’s still very early days&lt;/a&gt;, Mesa just started shipping preliminary support for this new driver, but we can’t wait to try it out once it’s mature enough.
There’s nothing better than having the option to choose.&lt;/p&gt;
&lt;h2 id=&#34;amd&#34;&gt;AMD&lt;/h2&gt;
&lt;p&gt;We identified &lt;code&gt;Pokémon Scarlet &amp;amp; Violet&lt;/code&gt; crashes on RDNA1 hardware exclusively (RX 5000 series).
The usual standard procedure was followed, a custom test case was provided in a bug report.&lt;/p&gt;
&lt;h2 id=&#34;intel&#34;&gt;Intel…&lt;/h2&gt;
&lt;p&gt;In contrast, Intel failed us again.
No word on the fix for the geometry shader crash we &lt;a href=&#34;https://github.com/IGCIT/Intel-GPU-Community-Issue-Tracker-IGCIT/issues/551&#34;&gt;reported&lt;/a&gt; back in October yet.&lt;/p&gt;
&lt;p&gt;We hope it’s just a delay from the holidays.
2024 is the year of &lt;del&gt;the Linux desktop&lt;/del&gt; working Intel Windows drivers.&lt;/p&gt;
&lt;h2 id=&#34;qualcomm&#34;&gt;Qualcomm&lt;/h2&gt;
&lt;h3 id=&#34;proprietary-qualcomm-driver&#34;&gt;Proprietary Qualcomm driver&lt;/h3&gt;
&lt;p&gt;We recently got our hands on a Snapdragon 8 Gen 3 device (a Red Magic 9), and while the official Qualcomm driver is still mediocre at best, we’re very impressed with the performance of the new Adreno 750 GPU.
In spite of its driver, it managed to bruteforce amazing framerate numbers. It still produced the same graphical glitches any other Adreno card has with their respective official drivers.&lt;/p&gt;
&lt;p&gt;Some games reached the 120 FPS limit imposed by the device’s screen refresh rate.
In short, Balanced mode in the Red Magic 9 is faster than Diablo mode in the previous Red Magic 8.&lt;/p&gt;
&lt;p&gt;Even Turnip, with its &lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases/tag/v24.0.0_R15&#34;&gt;early support&lt;/a&gt; already shows outstanding results. Here is an Adreno 740 vs an Adreno 750:&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    &lt;img src=&#34;./sd8g2.jpg&#34; alt=&#34;i9-14900K who? (The Legend of Zelda: Breath of the Wild)&#34;&gt;
    
    
    
    
    
    &lt;img src=&#34;./sd8g3.jpg&#34; alt=&#34;i9-14900K who? (The Legend of Zelda: Breath of the Wild)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;i9-14900K who? (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;


&lt;p&gt;Speaking of which.&lt;/p&gt;
&lt;h3 id=&#34;turnip&#34;&gt;Turnip&lt;/h3&gt;
&lt;p&gt;Leaving Adreno 750 aside for a moment, the Turnip network of support continues to improve.
Current &lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases&#34;&gt;releases&lt;/a&gt; have added support for rare GPU variants, like Adreno 642L and Adreno 644.
Performance and stability have improved as well.&lt;/p&gt;
&lt;p&gt;Keep up to date with Turnip releases; they usually only bring improvements.&lt;/p&gt;
&lt;h2 id=&#34;mali-moment&#34;&gt;Mali moment&lt;/h2&gt;
&lt;p&gt;Total Mali moments count this month: 3.&lt;/p&gt;
&lt;p&gt;But it’s not all bad news dear Mali sufferers!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.phoronix.com/news/Panthor-DRM-Newer-Mali&#34;&gt;Newer generations&lt;/a&gt; of Mali hardware, codenamed &amp;ldquo;Panthor&amp;rdquo; will have an officially backed Mesa driver, the already existing but almost abandoned &lt;a href=&#34;https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/26358&#34;&gt;Panfrost/PanVK&lt;/a&gt; driver.
This means that Mali moments may cease existing sometime in the future, in a similar way to how Turnip provides a much better experience to Adreno users.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;Multiprocess &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/12579&#34;&gt;GPU SMMU&lt;/a&gt; support is almost done now, thanks to Blinkhawk.
We’ll cover it in more detail next month, but you can check the pull request draft meanwhile to see the expected benefits it brings.&lt;/p&gt;
&lt;p&gt;And maybe the rest of the team has something more going on, yeah. But let’s save that surprise for later, it’s more fun that way (this in no way means any attempt to leak a picture of the current progress was rejected by all devs, no no).&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you for reading until the end, we hope to see you all again in the first progress report of 2024!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report November 2023</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/</link>
      <pubDate>Mon, 18 Dec 2023 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/</guid>
      <description>&lt;p&gt;Hello there, yuz-ers! November brought us many GPU fixes, followed shortly by driver fixes, significant Android/ARM changes, more applet work, new input projects, and much more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello there, yuz-ers! November brought us many GPU fixes, followed shortly by driver fixes, significant Android/ARM changes, more applet work, new input projects, and much more!&lt;/p&gt;
&lt;h2 id=&#34;mario-role-playing-as-mario&#34;&gt;Mario Role-playing as Mario!&lt;/h2&gt;
&lt;p&gt;As if &lt;code&gt;Super Mario Bros. Wonder&lt;/code&gt; wasn’t enough, a cult classic is back, with improved graphics to boot!
&lt;code&gt;Super Mario RPG&lt;/code&gt; brings some distilled nostalgia to the old SNES-era guard (we still stand strong), so the question was at the tip of their tongues on release day: &amp;ldquo;Does it run in yuzu?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;It did ― with some buts, as usual.
Two things needed to be fixed to get this colourful cast into good shape: an audio fix affecting everyone and a separate fix for NVIDIA users.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rpg1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/rpg1_hud7965dc9ad7cfc6cee9e1b5fea028332_1504686_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Is she in that castle? (Super Mario RPG)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rpg2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/rpg2_hu5a301f1d301968c674468df4f5a95755_2858769_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Is she in that castle? (Super Mario RPG)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rpg3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/rpg3_hu29308ec89053c272b4efcdf54a677882_2369830_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Is she in that castle? (Super Mario RPG)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Is she in that castle? (Super Mario RPG)&lt;/p&gt;


&lt;p&gt;Users immediately noticed how the game’s background audio was completely muted, detracting a lot from the experience.
After performing a cross-examination, &lt;a href=&#34;https://youtu.be/5I443rHIYVk&#34;&gt;with music and all&lt;/a&gt;, &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; found out the cause was &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12058&#34; data-gh-pr=&#34;12058&#34;&gt;a leftover&lt;/a&gt;
 from the Opus rewrite &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; did &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/#audio-changes&#34;&gt;back in September&lt;/a&gt;.
With this specific case fixed, the game started playing audio as it should.&lt;/p&gt;
&lt;p&gt;Meanwhile, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; performed a separate investigation in the shader recompiler for NVIDIA’s broken rendering.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rpg4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/rpg4_hu350909d6279ee84ef8d2d0041e99bacc_12913207_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Imagine if the Switch was capable of HDR (Super Mario RPG)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rpg5.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/rpg5_hud0f5c6828467bf06e0753cb394b1f15e_12504931_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Imagine if the Switch was capable of HDR (Super Mario RPG)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Imagine if the Switch was capable of HDR (Super Mario RPG)&lt;/p&gt;


&lt;p&gt;For those not familiar with the shader pipeline of yuzu and other emulators:&lt;/p&gt;
&lt;p&gt;Games have compiled shaders built for the architecture of the console they are intended to run on – in this case, the Switch.
Those shaders are useless for any other device, so the emulator has to intercept those shaders during run-time, convert them into a shader format the selected graphics API can understand (in yuzu’s case the options are SPIR-V, GLSL, and GLASM), and only then those converted shaders can be sent to the GPU driver for rendering.
After multiple steps of conversion, a Switch shader finally gets turned into a, for example, Ampere shader, or Adreno, or RDNA3.
(And now you know why shader stuttering is a thing.)&lt;/p&gt;
&lt;p&gt;NVIDIA drivers have a lot of optimizations for various code patterns in shaders. When you hit a bug in these optimizations, odd stuff can happen, regardless of settings, API, or shader backend in use. There’s no escape.
In this case, it led to swapped character colours in menus because NVIDIA drivers disliked &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12066&#34; data-gh-pr=&#34;12066&#34;&gt;the specific pattern&lt;/a&gt;
 the game’s shader used in menus ― and unlike most other driver bugs, it was broken in every single backend!&lt;/p&gt;
&lt;p&gt;Here’s a generic example provided by epicboy:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uint low &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; uint(bitfieldExtract(some_number, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;low &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;16U&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uint high &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; uint(bitfieldExtract(some_number, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uint swapped &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; low &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; high;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;epicboy’s solution was to detect this specific pattern in yuzu before passing it to the driver, and replace the last line with a &lt;a href=&#34;https://en.wikipedia.org/wiki/Bitwise_operation&#34;&gt;bitwise OR&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uint swapped &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; low &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; high;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This makes the NVIDIA compiler happy and provides colour accurate character sprites in the game–everyone wins.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/rpgbug_hu4c7afb8664f3c026339efa276a7049d3_555583_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Wario? (Super Mario RPG)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/rpgfix_hu2d0899a48e22d4ce5c899265d88233e4_865774_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Wario? (Super Mario RPG)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Wario? (Super Mario RPG)&lt;/p&gt;


&lt;p&gt;With both issues out of the way, there’s only one thing left to say: Happy stomping!&lt;/p&gt;
&lt;h2 id=&#34;project-nice&#34;&gt;Project NiCE&lt;/h2&gt;
&lt;p&gt;Here it is!
Time to graduate from a PC emulator compatible with Android to a &amp;ldquo;native&amp;rdquo; Android emulator.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12074&#34; data-gh-pr=&#34;12074&#34;&gt;NCE support,&lt;/a&gt;
 or &lt;code&gt;Native Code Execution&lt;/code&gt;, a huge effort made by &lt;a href=&#34;https://github.com/GPUCode&#34;&gt;GPUCode&lt;/a&gt; and byte[], adapted &lt;a href=&#34;https://github.com/skyline-emu/skyline&#34;&gt;Skyline&lt;/a&gt;’s ability to run game code natively on ARM devices, with no recompiler to slow things down.&lt;/p&gt;
&lt;p&gt;This sounds great on paper, but what does it mean for users?
The advantage of using a JIT recompiler is ensuring compatibility regardless of the device in use ― that’s how an AMD64 computer can run 64-bit ARM games.
While this method is good enough for AMD64 desktop and laptops (and one of the few possible ways to do it), it’s very slow on Android phones and tablets, not to mention very taxing, as the recompiled code is less efficient, uses a lot of resources, and requires more power to execute as a byproduct, resulting in increased heat.&lt;/p&gt;
&lt;p&gt;Thanks to dropping the translation overhead of a JIT, NCE increases performance proportional to how much power and thermal headroom is available on the user’s device.
NCE also saves up to 128MB of memory per guest CPU core (of which the Switch has four), meaning up to 512MB of RAM is saved by dropping the JIT.&lt;/p&gt;
&lt;p&gt;Having a device with active cooling will still produce the best results, but with NCE, performance is higher, battery life is higher, heat output is lower, and games load faster.
The FPS boost is usually around 20-100%, depending on the game and device.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nce1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/nce1_hu635e8a871c6f669e628fe6c585a60a01_87093_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Results aren’t comparable between the two devices, Mali was run at 0.5x to reduce its bottleneck&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nce2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/nce2_hu58dda78180f0982e1aa24bfe25f69fcd_86166_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Results aren’t comparable between the two devices, Mali was run at 0.5x to reduce its bottleneck&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Results aren’t comparable between the two devices, Mali was run at 0.5x to reduce its bottleneck&lt;/p&gt;


&lt;p&gt;Sadly, as always, it’s not all perfect ― &amp;ldquo;restrictions may apply.&amp;rdquo;
Not all games can take advantage of NCE.
Due to limitations in the Linux kernel and the requirements to run on a very restricted memory address space, some early Switch games need to have their updates installed to be able to run with NCE.
Games like &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; and &lt;code&gt;ARMS&lt;/code&gt; use a deprecated 36-bit address space in their original v1.0.0 release, and NCE requires 39-bit to work. Here the emulator automatically reverts to JIT to allow booting the game.
These games get full 39-bit support only with their respective updates installed.
You can confirm this when enabling the framerate counter, which will show if NCE or JIT is in use:&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./jit.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/jit_hu1cc470e80dabe8be413039c7ae229e60_311706_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;As simple as that (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nce.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/nce_hu51ea7ac0dfc0f8e2c9f35a0245c93713_231815_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;As simple as that (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;As simple as that (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;


&lt;p&gt;Another limitation is 32-bit games. &lt;code&gt;Mario Kart 8 Deluxe&lt;/code&gt; and &lt;code&gt;Captain Toad: Treasure Tracker&lt;/code&gt;, among others, just won’t work with NCE, and the emulator will, just like with 36-bit games, automatically revert to using the &lt;a href=&#34;https://github.com/merryhime/dynarmic&#34;&gt;Dynarmic&lt;/a&gt; JIT.&lt;/p&gt;
&lt;p&gt;While there are ways to be able to use NCE with 32-bit games, our investigation found that it would require a secondary 32-bit build target, which we have never supported, and it is no longer viable on Android API versions for Android 11 or later, which happens to be our minimum requirement.&lt;/p&gt;
&lt;p&gt;There are also rare cases of games refusing to work with NCE, due to Linux being less permissive than the Switch operating system. One example is &lt;code&gt;Paper Mario: The Origami King&lt;/code&gt;, which needs to have NCE manually disabled to run correctly for the moment.&lt;/p&gt;
&lt;p&gt;These limitations apply to both Android devices and other ARM devices like Linux ARM boards or laptops.&lt;/p&gt;
&lt;p&gt;We enable NCE by default on the latest GitHub and Play Store builds. The option can be found in &lt;code&gt;Settings &amp;gt; Advanced settings &amp;gt; Debug &amp;gt; CPU backend&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./cpu.png&#34; title=&#34; Doesn’t hurt to double check&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/cpu_hua960b469b81c548e7bb09400c3257fa7_72967_540x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Doesn’t hurt to double check&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Doesn’t hurt to double check&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;For the setting &amp;ldquo;optimizers&amp;rdquo; out there, disabling Fastmem disables NCE with it, so we don’t recommend disabling it unless you cannot run the game you want otherwise.
If you see old pictures of games running with Fastmem disabled but still showing NCE under the framerate counter, that’s because the counter didn’t consider this scenario originally; it has since then been patched to correct this.&lt;/p&gt;
&lt;h2 id=&#34;yet-more-changes-for-android&#34;&gt;Yet more changes for Android&lt;/h2&gt;
&lt;p&gt;But why stop there? There’s more work baked into the Android builds ― here’s this month’s list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;byte[] authored and &lt;a href=&#34;https://github.com/t895&#34;&gt;t895&lt;/a&gt; uploaded the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11972&#34; data-gh-pr=&#34;11972&#34;&gt;FPS counter.&lt;/a&gt;
 The text was changed to white, its reading is now continuously updated, and it now mentions what CPU backend is in use, JIT or NCE. The FPS counter can be enabled by dragging from the left while running a game and selecting &lt;code&gt;Overlay options &amp;gt; FPS counter&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12018&#34; data-gh-pr=&#34;12018&#34;&gt;Many improvements were made to the settings tab, thanks to t895.&lt;/a&gt;
 Icons and descriptions have been added, and the order of the elements and the location of some settings was changed.

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./icons.png&#34; title=&#34; Pretty&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/icons_hu8f910d5585f70069cfa2c2c4a157d774_123732_540x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Pretty&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Pretty&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12014&#34; data-gh-pr=&#34;12014&#34;&gt;The Settings tab and About page&lt;/a&gt;
 have been tweaked to add a landscape layout. This work by t895 improves usability for tablets, foldables, and other large form-factor devices.


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./layout1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/layout1_hu1b2d40468b27ae709a2103a3f117bb39_121174_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thank you Alphonsokurukuchu for the tablet pics&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./layout2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/layout2_hu654d177c9949d1f323ce3f126b8e28d7_70802_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thank you Alphonsokurukuchu for the tablet pics&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Thank you Alphonsokurukuchu for the tablet pics&lt;/p&gt;

&lt;/li&gt;
&lt;li&gt;t895 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12034&#34; data-gh-pr=&#34;12034&#34;&gt;added a drop shadow&lt;/a&gt;
 to the FPS counter to improve readability, and allowed the device’s font style to control the text size of the FPS readout.&lt;/li&gt;
&lt;li&gt;When enabled, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12035&#34; data-gh-pr=&#34;12035&#34;&gt;t895 now blocks Picture-in-Picture&lt;/a&gt;
 during startup or shutdown, improving stability.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12036&#34; data-gh-pr=&#34;12036&#34;&gt;disabled write syncing&lt;/a&gt;
 on Android devices running Turnip drivers, fixing crashes in games like &lt;code&gt;Red Dead Redemption&lt;/code&gt; and &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;By democratic decision from the users, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12043&#34; data-gh-pr=&#34;12043&#34;&gt;t895 has disabled Picture-in-Picture&lt;/a&gt;
 by default.&lt;/li&gt;
&lt;li&gt;Blinkhawk re-enabled using &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12081&#34; data-gh-pr=&#34;12081&#34;&gt;multithreaded pipeline compilation&lt;/a&gt;
 for Android, reducing stuttering when loading caches at boot and building new shaders while in-game. This was made possible thanks to the lower resource consumption under NCE.&lt;/li&gt;
&lt;li&gt;byte[] found another cause for &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12083&#34; data-gh-pr=&#34;12083&#34;&gt;crashes on Mali GPUs:&lt;/a&gt;
 they don’t support multi-viewport rendering. Disabling this feature greatly improves stability on Mali equipped devices. (And so the list of features Mali doesn’t support keeps growing.)&lt;/li&gt;
&lt;li&gt;The upper &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12091&#34; data-gh-pr=&#34;12091&#34;&gt;speed limit was increased to 400%,&lt;/a&gt;
 as t895 found out using a high limit is more stable than disabling it at all. Happy benchmarking!&lt;/li&gt;
&lt;li&gt;When accessing the Search tab, t895 set the first results before filtering to be your &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12092&#34; data-gh-pr=&#34;12092&#34;&gt;most recently played games.&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Thanks to t895, you can now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12093&#34; data-gh-pr=&#34;12093&#34;&gt;store save exports locally&lt;/a&gt;
 by using a file picker.&lt;/li&gt;
&lt;li&gt;Another Mali limitation, another workaround by byte[]. This time &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12110&#34; data-gh-pr=&#34;12110&#34;&gt;nullDescriptor got a special slower codepath&lt;/a&gt;
 so Mali devices can run &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;. Everyone is here!&lt;/li&gt;
&lt;li&gt;byte[] also fixed an &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12140&#34; data-gh-pr=&#34;12140&#34;&gt;edge case in the query cache&lt;/a&gt;
 that caused crashes on Turnip drivers.&lt;/li&gt;
&lt;li&gt;Users reported the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12166&#34; data-gh-pr=&#34;12166&#34;&gt;face ABXY buttons on Redmagic controllers&lt;/a&gt;
 were flipped, so &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; addressed the issue.&lt;/li&gt;
&lt;li&gt;t895 added support in the UI for &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12204&#34; data-gh-pr=&#34;12204&#34;&gt;multiple game folders&lt;/a&gt;
 and the ability to scan subdirectories. Feel free to be as disorganised as you want now; we won’t judge.

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./folders.png&#34; title=&#34; We chads use a single folder&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/folders_huc443d040da8bbbd7a86a595d224849d4_37629_540x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; We chads use a single folder&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; We chads use a single folder&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;And to close up, after fixing issues affecting Mali and Turnip, byte[] decided it was Qualcomm’s turn to get the axe. The vertex input dynamic state &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12229&#34; data-gh-pr=&#34;12229&#34;&gt;Vulkan extension&lt;/a&gt;
 is marked as supported by most official Qualcomm drivers and devices, yet on older 600 series GPUs it’s completely broken, leading to games only displaying a black screen. Excluding this extension solves the issue, and exposes how Qualcomm only tests its drivers on very basic conformance tests and nothing else. Do the bare minimum work, let the community do the rest for you…&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;graphics-changes&#34;&gt;Graphics changes&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;Force maximum clocks&lt;/code&gt; setting seems to cause a lot of confusion among users, which sadly leads to it being enabled in cases where it isn’t intended to be used, particularly power/thermally restricted devices.&lt;/p&gt;
&lt;p&gt;The setting was originally intended to solve an AMD problem: their RDNA based cards suffer from severe downclocking, or what your writer calls &amp;ldquo;chronic downclocking syndrome&amp;rdquo;, when emulating many games.
The GPU load the emulator produces is often so low, its workload fails to be detected as a game, causing the card to keep its clock speeds set to extremely low values.
As you might expect, this leads to very low performance.&lt;/p&gt;
&lt;p&gt;Enter &lt;code&gt;Force maximum clocks&lt;/code&gt;, which on desktop yuzu simply generates a dummy compute load to run on the GPU, triggering the card to clock up by force.
While this solves the issue and puts the performance of AMD cards on par with NVIDIA (and even helps NVIDIA cards under some scenarios), running a compute load like this is &lt;em&gt;not&lt;/em&gt; a viable option for integrated GPUs.
Mobile devices have limited cooling and a power budget: there’s a limited amount of power the CPU and the GPU can share, and enabling the setting will shift that budget’s priority to the GPU, while the user wants to run an emulated game, which is almost always severely CPU bottlenecked.
The extra power demanded by the compute load leads to increased heat, which will cause lower performance when cooling is not up to par.&lt;/p&gt;
&lt;p&gt;So, what we mean by all this is, don’t use &lt;code&gt;Force maximum clocks&lt;/code&gt; on handhelds &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12153&#34; data-gh-pr=&#34;12153&#34;&gt;like the Steam Deck,&lt;/a&gt;
 integrated-GPU-only portable computers with limited cooling capabilities, or integrated GPU desktop PCs.
The setting will result in degraded performance and extra bothersome fan noise, and it is only intended for dedicated GPUs with proper cooling.
Not every guide online knows what they are talking about.&lt;/p&gt;
&lt;p&gt;To help combat this, byte[] expanded the blocklist of this setting to include the recently released Steam Deck OLED.
Since there&amp;rsquo;s no hardware variance in the Steam Deck, it’s a safe case to block.&lt;/p&gt;
&lt;p&gt;After Linux NVIDIA users running the Wayland display server reported crashes when using the latest drivers, newcomer &lt;a href=&#34;https://github.com/lucasreis1&#34;&gt;lucasreis1&lt;/a&gt; found the cause: The new driver seems to need &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11981&#34; data-gh-pr=&#34;11981&#34;&gt;allocating window resources&lt;/a&gt;
 before asking or system info.
Adding the correct line in the correct place &lt;a href=&#34;https://youtu.be/tXGyEq3OJSo?t=41&#34;&gt;makes all the difference in the world&lt;/a&gt;.
Wayland NVIDIA users can now load games crash-free. Thanks!&lt;/p&gt;
&lt;p&gt;byte[] and Maide have been working on performance improvements for video decoding, aiming to not rely exclusively on FFmpeg for this task.
The &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12045&#34; data-gh-pr=&#34;12045&#34;&gt;initial changes&lt;/a&gt;
 are up, but more work is needed until the results reach the end user.&lt;/p&gt;
&lt;p&gt;Blinkhawk managed to catch and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12072&#34; data-gh-pr=&#34;12072&#34;&gt;fix several regressions&lt;/a&gt;
 affecting &lt;code&gt;Pokémon Scarlet/Violet&lt;/code&gt; introduced by the new Query Cache.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./scarlet.png&#34; title=&#34; Playable again (Pokémon Scarlet)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/scarlet_hu882c7789eed555353e985877bbea9498_3040827_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Playable again (Pokémon Scarlet)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Playable again (Pokémon Scarlet)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;In a bit of sad news, byte[] had to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12173&#34; data-gh-pr=&#34;12173&#34;&gt;disable&lt;/a&gt;
 the support for the depth bias Vulkan extension which was intended to solve the D24 issues affecting AMD cards on Linux (the Windows driver doesn’t support it yet, and uses a different workaround).
RADV users (the Linux Mesa Vulkan driver for AMD GPUs) noticed issues with certain stages in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.
Investigating the cause reveals that, even with the use of the extension, you can only fix some games and break others in the process.
While we investigate alternatives for this situation, the old workaround is back in place, allowing players to fight in the Nintendo 64 Zelda stage without going blind from the glare.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/smashbug_hufabf6567733fcc97f18a22eb8589262d_2055974_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Back to the drawing board (Super Smash Bros. Ultimate)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/smashfix_hu156ee7e3c60f68e91081c5b826445d65_3267927_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Back to the drawing board (Super Smash Bros. Ultimate)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Back to the drawing board (Super Smash Bros. Ultimate)&lt;/p&gt;


&lt;p&gt;Never forgetting about good old OpenGL, epicboy has a list of changes for it this month too.&lt;/p&gt;
&lt;p&gt;First of all, he &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12056&#34; data-gh-pr=&#34;12056&#34;&gt;implemented asynchronous downloads,&lt;/a&gt;
 a feature that was previously only available on Vulkan, leading to an 11% performance boost when using the old API.&lt;/p&gt;
&lt;p&gt;Next, epicboy fixed the rendering issues affecting &lt;code&gt;Xenoblade Chronicles: Definitive Edition&lt;/code&gt; and &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; when using the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12068&#34; data-gh-pr=&#34;12068&#34;&gt;GLASM shader backend&lt;/a&gt;
― these two games heavily rely on transform feedback to render.
That Monado can look good even if you’re still rocking a Kepler GPU.&lt;/p&gt;
&lt;p&gt;Continuing the work on improving the performance of OpenGL, epicboy implemented the use of the &lt;code&gt;glBindVertexBuffers&lt;/code&gt; and &lt;code&gt;glBindBuffersRange&lt;/code&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12094&#34; data-gh-pr=&#34;12094&#34;&gt;commands,&lt;/a&gt;
 making the use of the previous &lt;code&gt;GL_NV_vertex_buffer_unified_memory&lt;/code&gt; extension obsolete.
This reduces the API call overhead that is so notorious in OpenGL, reducing CPU use as a result.&lt;/p&gt;
&lt;p&gt;And finally, to close the section, epicboy helped to mitigate a bothersome disadvantage OpenGL has, shader build times ― but only when the user is running NVIDIA hardware.
By lowering the size of &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12196&#34; data-gh-pr=&#34;12196&#34;&gt;the constant buffer&lt;/a&gt;
 in the declaration to the size actually used by the shader, shader compilation performance is improved!
It’s not as good as Vulkan, but it’s certainly a VERY welcome addition for those cases where OpenGL is the only option.&lt;/p&gt;
&lt;h2 id=&#34;applets-input-and-other-services&#34;&gt;Applets, input, and other services&lt;/h2&gt;
&lt;p&gt;Back this month for more is &lt;a href=&#34;https://github.com/Macj0rdan&#34;&gt;Macj0rdan&lt;/a&gt; along with german77, partners in crime working in implementing the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12011&#34; data-gh-pr=&#34;12011&#34;&gt;controller menu applet.&lt;/a&gt;

Functionality is limited at the moment, but you can now see your connected controllers just as intended.
As usual, a firmware dump is required to launch any applets.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./applet1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/applet1_hue41739991dcbf60e1992f1c824dbf939_113863_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;While this is native fun, don’t expect it to be very usable for the time being&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./applet2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/applet2_hu4fed415505308e65f853a5cd6d052aac_138936_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;While this is native fun, don’t expect it to be very usable for the time being&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./applet3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/applet3_hu32eaabeb5c5eff9e30d6deee02430a7d_130967_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;While this is native fun, don’t expect it to be very usable for the time being&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;While this is native fun, don’t expect it to be very usable for the time being&lt;/p&gt;


&lt;p&gt;Working on his own, german77 managed to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11969&#34; data-gh-pr=&#34;11969&#34;&gt;fix the profile pictures&lt;/a&gt;
 for all currently available system applets, like for example, during profile selection.
The Switch wants exactly 256x256 images, so included as part of the package is a resizer to just give the applet what it wants.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./profiles.png&#34; title=&#34; They’re multiplying!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/profiles_hu45702b83289ebd506a4767ecd7282163_217657_995x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; They’re multiplying!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; They’re multiplying!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Continuing his &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/#input-improvements&#34;&gt;previous work&lt;/a&gt; on infrared shenanigans (which thankfully don’t involve explosives or self-guidance), german77 finished &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11980&#34; data-gh-pr=&#34;11980&#34;&gt;implementing the&lt;/a&gt;
 &lt;code&gt;moment image processor&lt;/code&gt;.
This means games like &lt;code&gt;Trombone Champ&lt;/code&gt;and &lt;code&gt;WarioWare: Put a lid on it&lt;/code&gt; are now playable with Joy-Cons.
Feel free to crack that volume dial and torture your neighbours to your heart’s content.
Here’s an example by german77 himself, enjoy:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./trombone.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Guitar Hero got nothing on this (Trombone Champ)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Switching a bit to input, german77 fixed an omission in the input code regarding the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12007&#34; data-gh-pr=&#34;12007&#34;&gt;single Joy-Con SL and SR&lt;/a&gt;
 buttons, allowing one of the minigames of &lt;code&gt;WarioWare: Plug your leaks&lt;/code&gt; to be playable. Oops.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./leak.png&#34; title=&#34;Got teflon tape? (WarioWare: Plug your leaks)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/leak_hu5ba23002742174bb7740c7cc9b01f1a3_396220_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Got teflon tape? (WarioWare: Plug your leaks)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Got teflon tape? (WarioWare: Plug your leaks)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This breaks backwards compatibility with saved input profiles of single right Joy-Cons ― an unlikely configuration for most games. If you are using this configuration, you might have to rebind your controller, but other profiles are unaffected.&lt;/p&gt;
&lt;p&gt;Thanks to the work of newcomer &lt;a href=&#34;https://github.com/dima-xd&#34;&gt;dima-xd&lt;/a&gt;, the native &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11929&#34; data-gh-pr=&#34;11929&#34;&gt;software keyboard applet&lt;/a&gt;
 can be run.
Sadly, it’s not possible to use it in games at this moment, as it can&amp;rsquo;t be launched on demand yet ― multiprocess support is needed for this.
As an apology, here’s how it looks:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./osk.png&#34; title=&#34; Tactile switches? Touch Switch!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/osk_hu0ab42e1f634c47082d143ec27e92df9e_80470_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Tactile switches? Touch Switch!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Tactile switches? Touch Switch!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Since yuzu can now work with Mii data inside Amiibos, the code will also automatically &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12183&#34; data-gh-pr=&#34;12183&#34;&gt;validate their integrity.&lt;/a&gt;

Thanks to german77’s work, the emulator can now detect corrupted Amiibos and automatically load a backup.
This avoids crashes in games sensitive to Amiibo integrity, like &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Macj0rdan, working solo this time, has a separate fix for us.
The controller applet started crashing after the release of firmware 17.0.0.
New firmware, new functions to implement ― in this case, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12201&#34; data-gh-pr=&#34;12201&#34;&gt;implementing&lt;/a&gt;
 &lt;code&gt;SetTouchscreenDimensions&lt;/code&gt; solved the problem.&lt;/p&gt;
&lt;p&gt;One of the calls &lt;code&gt;SUPER BOMBERMAN R 2&lt;/code&gt; makes checks for blocked users.
Since the emulator doesn’t yet store that information, nor has any use for it anyway, it’s &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12107&#34; data-gh-pr=&#34;12107&#34;&gt;safe to stub,&lt;/a&gt;
 which is exactly what newcomer &lt;a href=&#34;https://github.com/daisymlleung&#34;&gt;daisymlleung&lt;/a&gt; did. Thank you!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./bomber.png&#34; title=&#34;The game only boots for now, it doesn’t reach in-game yet (SUPER BOMBERMAN R 2)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/bomber_huba37e82de10698538d03fdb416d00767_3379_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The game only boots for now, it doesn’t reach in-game yet (SUPER BOMBERMAN R 2)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The game only boots for now, it doesn’t reach in-game yet (SUPER BOMBERMAN R 2)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;To close out this section, &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; had to deal with Qt shenanigans.
Qt’s text parsing didn’t like how yuzu&amp;rsquo;s frontend strings were stored, causing it to miss many UI translations.
A bit of &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11984&#34; data-gh-pr=&#34;11984&#34;&gt;restructuring&lt;/a&gt;
 by the Unlimited Toast, and we’re back in business.&lt;/p&gt;
&lt;h2 id=&#34;miscellaneous-changes&#34;&gt;Miscellaneous changes&lt;/h2&gt;
&lt;p&gt;To help users check the status of their firmware installation, and since the firmware version makes a difference for the system applets, german77 added a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12156&#34; data-gh-pr=&#34;12156&#34;&gt;firmware version indicator&lt;/a&gt;
 to the status bar of the user interface.
Gone is the confusion about &amp;ldquo;when was the last time I updated this?&amp;rdquo;&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./fw.png&#34; title=&#34;One day there will be an easier way to install firmware&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2023/fw_hub80a2de9a6a3c8794164c3ac8effa7a3_4540_852x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;One day there will be an easier way to install firmware&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;One day there will be an easier way to install firmware&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Mouse emulation, along with keyboard emulation, are options for users within yuzu for the few games that support it.
These are available in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Settings &amp;gt; Controls &amp;gt; Advanced&lt;/code&gt;, and report to games that a USB keyboard and/or mouse is plugged to the console.&lt;/p&gt;
&lt;p&gt;To help mouse players ― and we don’t mean &amp;ldquo;use mouse as a stick for aiming&amp;rdquo;, we mean emulating an attached USB mouse ― german77 made sure the actual native cursor of your OS &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12160&#34; data-gh-pr=&#34;12160&#34;&gt;doesn’t leave the yuzu window.&lt;/a&gt;

If you hate clicking your own game out of focus, you will like this change.&lt;/p&gt;
&lt;p&gt;While continuing his work on improving yuzu’s file system emulation, byte[] solved a bug that caused &lt;code&gt;MONSTER HUNTER GENERATIONS ULTIMATE&lt;/code&gt; to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11936&#34; data-gh-pr=&#34;11936&#34;&gt;fail to boot&lt;/a&gt;
 when RomFS mods for the game were installed.&lt;/p&gt;
&lt;p&gt;But that was only an appetiser; here’s the main dish.
byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12208&#34; data-gh-pr=&#34;12208&#34;&gt;improved the performance&lt;/a&gt;
 of parsing and building RomFS mods, lowering the patch time of &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt; with mods applied from 2.8 seconds to 0.3 seconds on a high performance CPU (a Ryzen 9 5950X in this case). This was very noticeable in testing.&lt;/p&gt;
&lt;p&gt;Modders out there, fill up that list ― you won’t waste time now waiting for games to load.&lt;/p&gt;
&lt;p&gt;Exactly the same fix needed for &lt;code&gt;Super Mario RPG&lt;/code&gt;, but in a different spot, allows &lt;code&gt;Star Ocean: The Second Story R&lt;/code&gt; to boot and play.
What did the trick? Allowing a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11952&#34; data-gh-pr=&#34;11952&#34;&gt;stereo count&lt;/a&gt;
 of zero or higher and fixing a typo.
Coding shenanigans.&lt;/p&gt;
&lt;p&gt;And to close out this section, what better way to end than enumerating some of the battles byte[] won for improving shutdown stability!&lt;/p&gt;
&lt;p&gt;Audio gets the first one.
When enough &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12019&#34; data-gh-pr=&#34;12019&#34;&gt;stream data&lt;/a&gt;
 is still waiting in the output queue, the audio renderer will wait until it has space to add more data.
But during shutdown, more space might never be made available, which would block the audio renderer forever and hang.
Fixing this blockade fixes shutdown operations on Android.&lt;/p&gt;
&lt;p&gt;Next one is quite a bit more involved, as it involves the procedure needed to &lt;del&gt;kill&lt;/del&gt; terminate a process, James Bond style.
This procedure consists of two steps for each thread in the terminated process:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The thread is marked for termination and an interrupt is sent to all cores with that thread&amp;rsquo;s affinity if it is runnable.&lt;/li&gt;
&lt;li&gt;The kernel then waits for the thread to actually terminate.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Runnable threads marked for termination are not removed from the scheduling priority queue. This means they can get scheduled during termination, even if the core already cleared the interrupt when a previous thread was terminated.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12025&#34; data-gh-pr=&#34;12025&#34;&gt;Checking for termination&lt;/a&gt;
 just before running the thread again, as the Switch does, fixed a very common shutdown deadlock on Android.&lt;/p&gt;
&lt;p&gt;And lastly, the timing event queue was causing issues.
On shutdown, the system calls to clear pending events, even while the timing thread may still be removing items from the event queue.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/12028&#34; data-gh-pr=&#34;12028&#34;&gt;Locking access&lt;/a&gt;
 to the event queue solves the final shutdown crash of this month.&lt;/p&gt;
&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;h3 id=&#34;amd-mixing-drivers&#34;&gt;AMD, mixing drivers&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/#amd-giving-a-last-hurrah-to-polaris-and-vega&#34;&gt;Last month&lt;/a&gt;, we reported that AMD is discontinuing driver support for Polaris and Vega products, and speculated how it would affect yuzu.&lt;/p&gt;
&lt;p&gt;What we didn’t consider is what happens to mixed configurations, for example running a Vega iGPU and an RDNA2 dGPU.
This kind of configuration is quite common, as AMD is still selling new devices with integrated Vega GPUs, and laptop vendors can sell configurations with dedicated RDNA2 or RDNA3 products.&lt;/p&gt;
&lt;p&gt;Unlike Intel, who just decided to say &amp;ldquo;good luck and goodbye&amp;rdquo; to their Gen 9/9.5/11 graphics userbase with no warning, AMD implemented a system where you can still run drivers for mixed configurations.
Since on an all-AMD laptop you can’t use different vendor drivers for the two GPUs, this was basically mandatory.&lt;/p&gt;
&lt;p&gt;What AMD did is provide two different drivers, one for RDNA based hardware, and another for Vega and Polaris.
If you have a mixed device, you can install the driver for RDNA based hardware first, and then on top install the driver for Vega and Polaris.
This allows you to access all software features of the driver, and allows you to have both GPUs operating with no issue.&lt;/p&gt;
&lt;p&gt;But there’s a price to pay: the Vulkan driver in the Vega and Polaris driver is &lt;em&gt;older&lt;/em&gt; than the one in the RDNA-based hardware driver, and all AMD GPUs running this mixed configuration will run a single Vulkan driver.
This results in a setback in features and fixes for the RDNA-based GPU just to keep compatibility.&lt;/p&gt;
&lt;p&gt;If you experience issues in yuzu when running this configuration, you now know the reason. Sadly, the only solution is to run Linux, which has a single unified and up-to-date Vulkan driver: RADV.&lt;/p&gt;
&lt;h3 id=&#34;intel-fixing-drivers-wip&#34;&gt;Intel, fixing drivers (WIP)&lt;/h3&gt;
&lt;p&gt;Intel confirmed that the geometry shader crash affecting multiple games has been fixed internally, and it’s just a matter of time until a driver comes out with the fix implemented.
The currently latest release at the time of writing, 101.5122 (first release driver for gen 2 Iris Xe products), doesn’t include the fix yet.&lt;/p&gt;
&lt;p&gt;We hope when we mention this in the next progress report, the issue will be fixed.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;We’re past the middle of December and we already know the next report will be juicy, just from changes already merged alone. Some things to look forward to include memory savings, improved load times, and higher performance. Blinkhawk is up to something and your writer should really stop spoiling it.
Maybe some Christmas gift? Only Emperor Nero knows.&lt;/p&gt;
&lt;p&gt;That’s all folks! This &lt;a href=&#34;https://www.youtube.com/watch?v=CjUVTEExfBg&#34;&gt;Folk Blues&lt;/a&gt; is over, see you next month, space cowboy.&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report October 2023</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/</link>
      <pubDate>Thu, 16 Nov 2023 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/</guid>
      <description>&lt;p&gt;Hello yuz-ers! This past month, we got a plethora of GPU fixes, support for new applets, a lot of work poured into the Android builds, some interesting news of the future, and more. Let’s get to it!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello yuz-ers! This past month, we got a plethora of GPU fixes, support for new applets, a lot of work poured into the Android builds, some interesting news of the future, and more. Let’s get to it!&lt;/p&gt;
&lt;h2 id=&#34;wowie-zowie&#34;&gt;Wowie Zowie!&lt;/h2&gt;
&lt;p&gt;A new Mario game! And it’s an excellent one at that.
&lt;code&gt;Super Mario Bros. Wonder&lt;/code&gt; joins the fray of side-scrolling Mario games and refines the genre&amp;rsquo;s gameplay with its new and &lt;em&gt;wonderful&lt;/em&gt; levels.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./wonder1.png&#34; title=&#34; Such a pretty game (Super Mario Bros. Wonder)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/wonder1_hu980adc554ff5c9e1c33b52c71d63f429_1591694_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Such a pretty game (Super Mario Bros. Wonder)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Such a pretty game (Super Mario Bros. Wonder)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The game didn’t boot at release due to incorrect used memory reporting in the kernel.
Thankfully, &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; quickly found the culprit. It was a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11825&#34; data-gh-pr=&#34;11825&#34;&gt;single-line change!&lt;/a&gt;
&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./wonder2.png&#34; title=&#34; Hope your platforming skills are up to par (Super Mario Bros. Wonder)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/wonder2_hub50d25e9577d2e2a29b17031e3cf1beb_950859_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Hope your platforming skills are up to par (Super Mario Bros. Wonder)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Hope your platforming skills are up to par (Super Mario Bros. Wonder)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;However, this wasn’t enough to get the game in a playable state.
Depending on where you are in the game, &lt;code&gt;Super Mario Bros. Wonder&lt;/code&gt; internally switches between double and triple buffered VSync presentation modes.
This causes the number of images it has available for presentation to frequently change.&lt;/p&gt;
&lt;p&gt;yuzu wasn’t ready for this due to a misunderstanding of how nvnflinger works.
On Android, SurfaceFlinger (the OG Flinger) can free buffers that are beyond the maximum count a program has allocated, but nvnflinger (the Switch&amp;rsquo;s fork) is never supposed to free any buffers unless the program requests it.
Maide made a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11827&#34; data-gh-pr=&#34;11827&#34;&gt;few presentation code changes&lt;/a&gt;
 to support this behaviour, and players are now set to grab those fun Wonder Flowers!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./wonder3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/wonder3_hu2eba16d64da29fc5f0d14810c5a59a24_1557306_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Classic Mario (Super Mario Bros. Wonder)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./wonder4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/wonder4_hu0ac37ce5d244ba1e9fd592f23aa8247b_787222_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Classic Mario (Super Mario Bros. Wonder)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Classic Mario (Super Mario Bros. Wonder)&lt;/p&gt;


&lt;p&gt;I bet you didn’t expect to see the sole input change of the month here ― yet here we are.
&lt;code&gt;Super Mario Bros. Wonder&lt;/code&gt; &lt;em&gt;loves&lt;/em&gt; vibration, to a point of saturating the old implementation when using HD Rumble on Nintendo controllers (Joy-Cons, Pro Controllers).
This is because waiting for the controller to reply takes time, more than the game would have the patience for, leading to noticeable and bothersome vibration stuttering. That’s right, ASTC, you’re not the only one in town causing stutters.
By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11852&#34; data-gh-pr=&#34;11852&#34;&gt;making vibration calls asynchronous,&lt;/a&gt;
 vibration is, while not entirely solved, now &lt;em&gt;much&lt;/em&gt; more pleasant.&lt;/p&gt;
&lt;h2 id=&#34;the-gpu-changes&#34;&gt;The GPU changes&lt;/h2&gt;
&lt;p&gt;Undefined behaviour: the formal way to say “here be dragons”.
It’s a good practice to avoid dragons ― I mean, undefined behaviour ― in your code, especially when dealing with a complex graphics API like Vulkan.&lt;/p&gt;
&lt;p&gt;Remember our explanation of &lt;code&gt;depth stencils&lt;/code&gt; &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/#more-gpu-changes&#34;&gt;back in August&lt;/a&gt;? You may wish to reread that, as it provides useful context to what we will talk about next.&lt;/p&gt;
&lt;p&gt;When a game is using a depth buffer, it is usually drawing into a busy 3D scene while taking advantage of a hardware-accelerated process called depth testing.&lt;/p&gt;
&lt;p&gt;During depth testing, the GPU hardware determines if a pixel is visible or hidden (occluded) by another pixel. This is decided by their depth values.
The depth buffer tracks how far away each stored pixel is from the camera.
If a rendered pixel is further away than what has already been drawn on the scene, then the pixel is discarded; if it is closer, then it is kept and the colour buffers are updated.
Typically, the depth buffer is also updated and written to, in this case, to store the depth of the new, closer object.&lt;/p&gt;
&lt;p&gt;It is possible for a game to use depth testing alone, and turn the actual writes to the depth buffer off for specific elements, and many games do this when rendering partially transparent objects.
However, the opposite is not allowed by graphics APIs like Vulkan ― hardware designs require depth testing to be enabled in order update the depth buffer.
yuzu’s masked clear path for depth/stencil buffers has a shader which updates the depth buffer, and so enables depth writes, but forgot to also enable depth tests.
Most of the time, this worked by coincidence, as the game was enabling depth tests and yuzu was not clearing this state.
However, not all games enabled them, and without depth tests, games like &lt;code&gt;Super Mario 64&lt;/code&gt;, part of &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt;, can’t properly render the face of a certain character (I &lt;em&gt;think&lt;/em&gt; his name is in the title of the game.)&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/depthbug_hu0c0a859a0230a314797b2ceb67fcf7b7_967018_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Wonder who he is (Super Mario 64)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/depthfix_hu76ef8519ffe23cc9baed7ea24ee5ba18_723120_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Wonder who he is (Super Mario 64)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Wonder who he is (Super Mario 64)&lt;/p&gt;


&lt;p&gt;Thanks to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11630&#34; data-gh-pr=&#34;11630&#34;&gt;the work done&lt;/a&gt;
 by &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt;, Mr. Mario Mario renders correctly now.&lt;/p&gt;
&lt;p&gt;Not stopping there, Maide’s dragon-hunting continued for another pull request.
One advantage of using the standard Vulkan Memory Allocator (VMA for short) is how it can help sanitise code.&lt;/p&gt;
&lt;p&gt;VMA will raise asserts if things are wrong somewhere.
In this case, we were accidentally marking a device-local buffer we intend to use exclusively in VRAM as CPU mapped.
VMA is very clear here: device local buffers should not be allocated as mapped because they are outright &lt;em&gt;not&lt;/em&gt; intended for CPU access.
Making it happy &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11734&#34; data-gh-pr=&#34;11734&#34;&gt;has soothed another dragon.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Thanks to users&amp;rsquo; reports, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; managed to figure out why the new query cache was leaking memory in many games, including &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt;.
After &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11646&#34; data-gh-pr=&#34;11646&#34;&gt;some slight tweaking,&lt;/a&gt;
 RAM consumption is put in its place.&lt;/p&gt;
&lt;p&gt;Starting a campaign to combat holes in yuzu&amp;rsquo;s format support, &lt;a href=&#34;https://github.com/Squall-Leonhart&#34;&gt;Squall-Leonhart&lt;/a&gt; has been working on implementing some of the more obscure format conversions, like  &lt;code&gt;D32_SFLOAT&lt;/code&gt;.
For this particular depth format on Vulkan, it can &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11677&#34; data-gh-pr=&#34;11677&#34;&gt;now be converted&lt;/a&gt;
 to &lt;code&gt;ABGR8_UNORM&lt;/code&gt; when the game needs this behaviour.
Combined with &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11716&#34; data-gh-pr=&#34;11716&#34;&gt;adding support for&lt;/a&gt;
 the &lt;code&gt;Z32&lt;/code&gt;, &lt;code&gt;FLOAT&lt;/code&gt;, &lt;code&gt;UINT&lt;/code&gt;, &lt;code&gt;UINT&lt;/code&gt;, &lt;code&gt;UINT&lt;/code&gt;, &lt;code&gt;LINEAR&lt;/code&gt; variants in the internal format table, this work solves rendering issues in games like &lt;code&gt;Disney Speedstorm&lt;/code&gt; and &lt;code&gt;Titan Glory&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/disneybug_hu3bb363884c1ac53d0c859b122b054f8e_1080239_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Look, the most powerful mouse in the world (Disney Speedstorm)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/disneyfix_hu12311cfd5a6b94d636b041fe33ab2659_1803754_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Look, the most powerful mouse in the world (Disney Speedstorm)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Look, the most powerful mouse in the world (Disney Speedstorm)&lt;/p&gt;


&lt;p&gt;Some games also make aliases of images in the D32 depth format.
Since a similar limitation with format conversion was present here too, &lt;code&gt;ARGB8_SRGB&lt;/code&gt; and &lt;code&gt;BGRA8_UNORM&lt;/code&gt;/&lt;code&gt;BGRA8_SRGB&lt;/code&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11795&#34; data-gh-pr=&#34;11795&#34;&gt;can now be converted to&lt;/a&gt;
 &lt;code&gt;D32_SFLOAT&lt;/code&gt; to provide proper compatibility.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gothic.png&#34; title=&#34; Aged graphics have this feel of nostalgia (Gothic)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/gothic_hu951a8e7f673e10ce1064cd42733ab1c5_1321520_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Aged graphics have this feel of nostalgia (Gothic)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Aged graphics have this feel of nostalgia (Gothic)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Continuing with this streak, Maide &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11688&#34; data-gh-pr=&#34;11688&#34;&gt;implemented&lt;/a&gt;
 the &lt;code&gt;X8_D24&lt;/code&gt; depth format, allowing &lt;code&gt;A Sound Plan&lt;/code&gt; to start rendering.
However, more work is needed to make this game properly playable.&lt;/p&gt;
&lt;p&gt;Robustness is a feature Vulkan provides that lets developers handle invalid memory accesses in a cleanly defined way.
This can help prevent the application from crashing or &lt;del&gt;summoning dragons&lt;/del&gt; invoking undefined behaviour when some part of the code tries to access memory out of bounds.&lt;/p&gt;
&lt;p&gt;For some reason, either Maxwell and Pascal NVIDIA GPUs have broken robustness support on uniform buffers, or yuzu’s codebase makes a wrong assumption somewhere (most likely the latter). As a result, those two NVIDIA GPU generations (GTX 750/GTX 900/GTX 1000 series) suffer from oversized graphics on &lt;code&gt;Crash Team Racing Nitro-Fueled&lt;/code&gt;, due to the game accessing memory out of bounds in the shader.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11789&#34; data-gh-pr=&#34;11789&#34;&gt;Manually clamping out-of-bounds buffer reads to 0&lt;/a&gt;
 on the affected GPU architectures solves the issues. We are also now investigating what causes this problem in the first place.
Maide gets to play detective yet again, dear Watson.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/ctrbug_hu50eb2b509adb494070afc449c1d9e315_1177891_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This GTX 1050 needed a diet (Crash Team Racing Nitro-Fueled)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/ctrfix_hu909be9e5c1cd1e6b34bc4798d6d9e9b4_945308_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This GTX 1050 needed a diet (Crash Team Racing Nitro-Fueled)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;This GTX 1050 needed a diet (Crash Team Racing Nitro-Fueled)&lt;/p&gt;


&lt;p&gt;Maide also fixed a hidden issue with the resolution scaler.
Images were being &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11744&#34; data-gh-pr=&#34;11744&#34;&gt;marked as rescaled,&lt;/a&gt;
 even if the resolution scaler was not in use (running at 1x).
This led to a slight additional overhead, and rarely, some assertion failures.
While no game bug was known to be caused by this, it’s good to have preemptive fixes for once instead of just reactionary ones.&lt;/p&gt;
&lt;p&gt;In the meantime, Maide has also been removing image alias bits for all image attachments in an effort to allow the drivers to use more memory optimizations.
This pull request also includes &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11747&#34; data-gh-pr=&#34;11747&#34;&gt;some other minor fixes&lt;/a&gt;
 with it.&lt;/p&gt;
&lt;p&gt;By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11775&#34; data-gh-pr=&#34;11775&#34;&gt;implementing&lt;/a&gt;
 the first and subsequent draw commands for vertex arrays, &lt;code&gt;Super Meat Boy&lt;/code&gt; finally renders correctly! No more black screens!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smb.png&#34; title=&#34; Well done (Super Meat Boy)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/smb_hu91e9935c0e86ad43b13518d548ad461d_1142993_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Well done (Super Meat Boy)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Well done (Super Meat Boy)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;And now, one for the Linux gang.
&lt;a href=&#34;https://github.com/v1993&#34;&gt;v1993&lt;/a&gt; tested and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11786&#34; data-gh-pr=&#34;11786&#34;&gt;re-enabled CUDA video decoding&lt;/a&gt;
 on Linux, allowing better video decoding performance for NVIDIA users (running the proprietary driver, of course).
We previously disabled CUDA by default because it can fail on systems running both a dedicated NVIDIA GPU and a dedicated AMD GPU (iGPUs are fine), a decently rare configuration that only a few people, like your writer, actually ever use.&lt;/p&gt;
&lt;p&gt;For those few users running mixed hardware vendors on your systems, please manually  select “CPU Video Decoding” if you’re affected by video decoding issues now.
This was the previous default behaviour.&lt;/p&gt;
&lt;p&gt;We received user reports of crashes occurring when grabbing a Grand Star in &lt;code&gt;Super Mario Galaxy&lt;/code&gt;, as part of &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt;.
byte[] found that the problem is in how the Vulkan scheduler incorrectly flushes data.
The solution? &lt;a href=&#34;https://www.youtube.com/watch?v=SNgNBsCI4EA&#34;&gt;Use a lock&lt;/a&gt;.
And if that doesn’t work, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11806&#34; data-gh-pr=&#34;11806&#34;&gt;use more locks.&lt;/a&gt;

Happy star hunting!&lt;/p&gt;
&lt;p&gt;To improve OpenGL support even further, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;Epicboy&lt;/a&gt; returns.
First, he found that the &lt;code&gt;shfl_in_bounds&lt;/code&gt; variable, which is used to track data used in compute shaders, could result in undefined behaviour when threads were inactive and return invalid results.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11847&#34; data-gh-pr=&#34;11847&#34;&gt;The solution&lt;/a&gt;
 was to move the &lt;code&gt;shfl_in_bounds&lt;/code&gt; check after the &lt;code&gt;readInvocationARB&lt;/code&gt; function, which requires all threads to be active, to avoid &lt;del&gt;dragons&lt;/del&gt; undefined behaviour.
This fixed some graphical corruption issues in unit tests, which should lead to fixes in real games too.&lt;/p&gt;
&lt;p&gt;Next, a simple gift from epicboy: &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11904&#34; data-gh-pr=&#34;11904&#34;&gt;force enabling&lt;/a&gt;
 &lt;code&gt;Threaded optimization&lt;/code&gt;, an NVIDIA-specific OpenGL optimization that enables the use of a new separate CPU thread for graphics rendering.
This is a solid performance boost for those running OpenGL with NVIDIA hardware.
And for those asking, yes, Vulkan allows the use of a separate thread for rendering too ― but we do it on an API level, instead of a driver setting, so all GPUs can benefit.&lt;/p&gt;
&lt;p&gt;Maide found a problem occurring with compute shaders when they were triggering invalidations in the buffer cache.
yuzu has a lot of code to track the sizes of buffers used by the games.
Consider a game using two buffers: the first, with an address range from 1 to 2, and another with a range of 3 to 5. They don&amp;rsquo;t overlap, so there is no issue.
Then, after the game runs for a while, a buffer requiring a range of 1 to 5 is used.
The previous two buffers would be considered to overlap it and will be deleted.
Then, the old buffer data from the two overlaps gets moved to the new third buffer.
While this was already working for graphics-related buffers, it didn’t correctly consider compute buffers.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11859&#34; data-gh-pr=&#34;11859&#34;&gt;Adding the missing loop&lt;/a&gt;
 to fix this behaviour, problems ranging from minimal graphical issues to completely broken game logic are potentially solved.
You know what they say: with compute, the sky&amp;rsquo;s the limit. Just ask AI developers.&lt;/p&gt;
&lt;p&gt;Another optimization Maide implemented affects how buffers are handled after they are successfully deleted.
The previous method would unnecessarily create several copies, wasting resources.
By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11683&#34; data-gh-pr=&#34;11683&#34;&gt;removing one synchronisation step,&lt;/a&gt;
 only the exact amount of needed copies are used.&lt;/p&gt;
&lt;p&gt;Now let&amp;rsquo;s discuss a long-standing issue: some 2D games were flipped on AMD, Intel, and Android GPUs.
Games can use different APIs to run on the Switch.
Nintendo allows the use of Vulkan, OpenGL, and their proprietary API, NVN.
This poses a problem for emulation on Vulkan, since &lt;a href=&#34;https://vulkan.gpuinfo.org/listdevicescoverage.php?extension=VK_NV_viewport_swizzle&amp;amp;platform=all&#34;&gt;only NVIDIA GPUs&lt;/a&gt; support the viewport swizzle extension (which allows for transforming viewports).&lt;/p&gt;
&lt;p&gt;To allow other GPU vendors to render properly in most cases, a fallback implementation was made to handle the case of vertical flips, for use by OpenGL games.
A tiny error in its implementation made it unable to correctly track invalidations of the viewport flip state, resulting in garbled graphics in several games.
byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11893&#34; data-gh-pr=&#34;11893&#34;&gt;solved&lt;/a&gt;
 that issue with a one-line change, making games like &lt;code&gt;Stardew Valley&lt;/code&gt;, and &lt;code&gt;Streets of Rage 4&lt;/code&gt;, finally render properly on non-NVIDIA hardware.
No more mirrors needed!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sv.png&#34; title=&#34; THE cozy farming game (Stardew Valley)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/sv_hu7523f5a5e46db621596c28ada1a8ba6f_783219_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; THE cozy farming game (Stardew Valley)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; THE cozy farming game (Stardew Valley)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While investigating this, a similar but different issue came to light.
Many OpenGL games (that is, games using OpenGL to render, not yuzu rendering on OpenGL) ask for a 1920x1080 framebuffer, regardless of whether the game is running in handheld or docked mode.
The game then simply moves and resizes the region it’s rendering to inside that 1920x1080 buffer, like moving a small box inside a bigger box, if you will.
In the final step, the image is flipped and sent to the bottom of that 1080p render target.
yuzu was incorrectly rendering only the top of the render target due to how it used to calculate that flip in the final pass.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11894&#34; data-gh-pr=&#34;11894&#34;&gt;Adjusting&lt;/a&gt;
 this behaviour made &lt;code&gt;Tiny Thor&lt;/code&gt; render correctly in handheld mode.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./tt.png&#34; title=&#34; To Valhalla (Tiny Thor)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/tt_hu2b53a1cd6dd4ef8b15e95d5923319967_750150_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; To Valhalla (Tiny Thor)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; To Valhalla (Tiny Thor)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;And to close the graphics section, by following this chain of events, the previous pull request helped spot a bug in our Vulkan presentation that led to &lt;code&gt;Arcaea&lt;/code&gt; being incorrectly cropped in handheld mode.
95 lines of &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11896&#34; data-gh-pr=&#34;11896&#34;&gt;cropping-behaviour code changes&lt;/a&gt;
 later, and byte[] solved the issue.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./arcaea.png&#34; title=&#34; Good art style (Arcaea)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/arcaea_hu7b691fcef71ea8b7d5c5641425008037_1145047_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Good art style (Arcaea)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Good art style (Arcaea)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;android-changes&#34;&gt;Android changes&lt;/h2&gt;
&lt;p&gt;This month the Android build got not only significant UI changes to improve quality of life, but device compatibility was greatly improved for Adreno users.
Here’s the full list!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A new &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11649&#34; data-gh-pr=&#34;11649&#34;&gt;GPU driver manager&lt;/a&gt;
 was developed by &lt;a href=&#34;https://github.com/t895&#34;&gt;t895&lt;/a&gt;, allowing the listing of multiple drivers, useful for quickly switching between proprietary Qualcomm or Mesa Turnip releases, or several versions of each. Due to the beta status of Turnip drivers and the immature code of Qualcomm drivers, the latest release is not always the best.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gpu.png&#34; title=&#34; For all your driver-switching needs!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/gpu_hua4dd432e794ccf666de8c0d679c30ff6_40908_356x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; For all your driver-switching needs!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; For all your driver-switching needs!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;byte[] solved a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11656&#34; data-gh-pr=&#34;11656&#34;&gt;crash related to surface recreation,&lt;/a&gt;
 which could be triggered by simply rotating the device.&lt;/li&gt;
&lt;li&gt;byte[] solved an issue affecting some Android devices that ship an &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11876&#34; data-gh-pr=&#34;11876&#34;&gt;outdated Vulkan 1.1 loader&lt;/a&gt;
 instead of the current latest 1.3, causing the device to report older features than the driver in use actually supports. This resulted in specific Adreno 600 and 700 devices crashing at boot when using any Mesa Turnip driver version. Forcing the correct Vulkan 1.3 features the driver supports solves the issue. We’ll expand on this at the end of the article.&lt;/li&gt;
&lt;li&gt;t895 implemented a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11909&#34; data-gh-pr=&#34;11909&#34;&gt;home settings menu grid&lt;/a&gt;
 for devices with bigger screens and/or higher DPIs. This should please our tablet and foldable users. Enjoy!&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./wide.png&#34; title=&#34; Landscape lovers rejoice&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/wide_hu26880f346c915470ab53881d53d5c956_71512_772x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Landscape lovers rejoice&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Landscape lovers rejoice&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11910&#34; data-gh-pr=&#34;11910&#34;&gt;fixed another case&lt;/a&gt;
 where yuzu would fail to recreate the surface on screen rotations.&lt;/li&gt;
&lt;li&gt;t895 moved the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11915&#34; data-gh-pr=&#34;11915&#34;&gt;game list loading process to a separate thread&lt;/a&gt;
 to reduce stuttering when opening yuzu. The process still takes a similar amount of time, but the perceived smoothness is very welcome.&lt;/li&gt;
&lt;li&gt;t895 solved an issue that caused the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11916&#34; data-gh-pr=&#34;11916&#34;&gt;touch buttons overlay to get stuck&lt;/a&gt;
 while drawing the in-game menu from the left side.&lt;/li&gt;
&lt;li&gt;While waiting for a controller settings menu, t895 fixed a bug that caused &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11925&#34; data-gh-pr=&#34;11925&#34;&gt;all controller input to move to player 2&lt;/a&gt;
 on some devices, blocking users from playing most games. Devices with integrated controllers should have a much better experience now.&lt;/li&gt;
&lt;li&gt;And finally, following the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/#of-miis-and-applets&#34;&gt;recent changes&lt;/a&gt; in the desktop version, t895 added a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11931&#34; data-gh-pr=&#34;11931&#34;&gt;menu to access the currently supported applets,&lt;/a&gt;
 Album and Mii editor, along with the Cabinet applet to manage amiibo data. Wii think you will have fun!&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./cabinet1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/cabinet1_hu6c205d51bb64aafdf9db14b82f9c8d77_34508_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;We hope to expand this selection in the future&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./cabinet2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/cabinet2_huf7351c4bd5851a32809f1a30df097184_37863_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;We hope to expand this selection in the future&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;We hope to expand this selection in the future&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mii.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/mii_hu7941743f3578c06234d07f441155d2a4_301240_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Wii want to play&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./album.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/album_hu274f6a753c1bfcc81149a9d3f2d0ef7a_332512_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Wii want to play&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Wii want to play&lt;/p&gt;


&lt;p&gt;The settings menu was also reorganised:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./settings.png&#34; title=&#34; Hope it’s more convenient now&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/settings_hu330d36628c0bf45df70c0c778fc8a487_73745_356x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Hope it’s more convenient now&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Hope it’s more convenient now&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;ui-and-applet-changes&#34;&gt;UI and Applet changes&lt;/h2&gt;
&lt;p&gt;After a rocky start, thanks to the early work of &lt;a href=&#34;https://github.com/roenyroeny&#34;&gt;roenyroeny&lt;/a&gt;, &lt;a href=&#34;https://github.com/boludoz&#34;&gt;boludoz&lt;/a&gt;, and &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;FearlessTobi&lt;/a&gt;, we now have proper &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11705&#34; data-gh-pr=&#34;11705&#34;&gt;shortcut creation&lt;/a&gt;
 support for Windows too!&lt;/p&gt;
&lt;p&gt;To access this feature, simply right click a game in yuzu’s game list, select Create Shortcut, and pick if you want it on your desktop or the applications section of the start menu. This allows you to start games with a quick start menu search or even from a pin in the menu/taskbar if you so choose.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./shortcut.png&#34; title=&#34; Populate that taskbar&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/shortcut_hu600f5dbf370befc70c2c96ed9a17a6e5_45448_611x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Populate that taskbar&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Populate that taskbar&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Helping improve this, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; made the required changes to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11740&#34; data-gh-pr=&#34;11740&#34;&gt;save multiple resolutions per icon,&lt;/a&gt;
 making smaller sized desktop icons much more readable than before.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./icons.png&#34; title=&#34; Scaling images down doesn’t always look the best&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/icons_hudf885ea0623cf4f8a6fb80ec9378e900_151664_287x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Scaling images down doesn’t always look the best&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Scaling images down doesn’t always look the best&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/DanielSvoboda&#34;&gt;DanielSvoboda&lt;/a&gt; made several changes in file system handling to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11749&#34; data-gh-pr=&#34;11749&#34;&gt;improve directory path detection&lt;/a&gt;
 for the shortcuts, making them far more usable and stable.
Thank you!&lt;/p&gt;
&lt;p&gt;Work on improving user experience (UX) is always welcome, it is your writer’s belief that UX is as important as proper functionality, and should never be ignored.
To improve the quality of life of people playing with multiple controllers, &lt;a href=&#34;https://github.com/flodavid&#34;&gt;flodavid&lt;/a&gt; changed the behaviour of how users interact with the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11779&#34; data-gh-pr=&#34;11779&#34;&gt;number of connected controllers&lt;/a&gt;
 in the Controls settings.
Users can now more intuitively click the green lights at the bottom to select how many players/controllers they would like to be active.
Thank you!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./controls.png&#34; title=&#34; Epic Smash sleepover!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/controls_hue9f91c81c3bebfddc97ed829142816bb_1063_236x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Epic Smash sleepover!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Epic Smash sleepover!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Another welcome UX addition is by &lt;a href=&#34;https://github.com/Macj0rdan&#34;&gt;Macj0rdan&lt;/a&gt;, who implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11903&#34; data-gh-pr=&#34;11903&#34;&gt;a quick control for game volume&lt;/a&gt;
 with the mouse wheel when the pointer is placed over the volume button in the UI, removing the need to click it and drag a small slider.
Thank you!&lt;/p&gt;
&lt;p&gt;Continuing his work on applet support, german77 implemented the &lt;code&gt;SaveScreenShotEx0&lt;/code&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11812&#34; data-gh-pr=&#34;11812&#34;&gt;service method and its variants,&lt;/a&gt;
 allowing users to take captures from within games themselves instead of globally with the screenshot hotkey.
This works for games like &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; ― however, note that screenshot editing is not available yet.
Homework for later!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smash.png&#34; title=&#34; Save your best moments (Super Smash Bros. Ultimate)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/smash_hu8f12f9c99347fa5c2150b7216b1c4eb3_1334357_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Save your best moments (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Save your best moments (Super Smash Bros. Ultimate)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;german77 also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11892&#34; data-gh-pr=&#34;11892&#34;&gt;implemented the&lt;/a&gt;
 &lt;code&gt;SaveCurrentScreenshot&lt;/code&gt; method, allowing users to take in-game screenshots in &lt;code&gt;Pokémon Scarlet/Violet&lt;/code&gt; with its latest update installed.
Happy selfie shooting!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./poke.png&#34; title=&#34; Feeling cute, might capture a shiny later (Pokémon Scarlet)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/poke_hu114389c1174a7f1d7ac91db21ec9d2b9_337813_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Feeling cute, might capture a shiny later (Pokémon Scarlet)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Feeling cute, might capture a shiny later (Pokémon Scarlet)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;One of the changes german77 introduced broke the &lt;code&gt;Find Mii&lt;/code&gt; stage in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.
Since it’s not a popular stage, even among the Smash community, we didn’t notice this issue, and no one reported in our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord server&lt;/a&gt;, &lt;a href=&#34;https://community.citra-emu.org/c/yuzu-support/14&#34;&gt;forums&lt;/a&gt;, or &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/issues/new/choose&#34;&gt;GitHub bug report page&lt;/a&gt; ― we only found out thanks to complaints on Reddit. This is a reminder to you, the users, please try to report issues in the proper channels! Doing so ensures we see the problems you are having and can work to fix them.&lt;/p&gt;
&lt;p&gt;yuzu is a large project with many “black box” areas. There will be bugs, many thousands of bugs, that our team may never encounter. Your voice is so important, we hate to see any bug reports slip through the cracks outside of our channels.&lt;/p&gt;
&lt;p&gt;With that out of the way, by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11822&#34; data-gh-pr=&#34;11822&#34;&gt;creating random Miis&lt;/a&gt;
 with names, german77 solved the issue.&lt;/p&gt;
&lt;p&gt;german77 also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11846&#34; data-gh-pr=&#34;11846&#34;&gt;expanded the character limit of cheats&lt;/a&gt;
 to more than 64 characters.
Now you can cheat to your heart&amp;rsquo;s content.&lt;/p&gt;
&lt;p&gt;You know our developers spend a lot of time opening and closing yuzu when byte[] can accurately measure that 10% of shutdown crashes are caused by the game list.
He found that the issue was in how Qt deals with messages from objects that were destroyed or disconnected (like stopping the emulator while the game list is loading).
By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11846&#34; data-gh-pr=&#34;11846&#34;&gt;changing the behaviour&lt;/a&gt;
 of how the game list is reported to those events, another source of shutdown crashes has been defeated.&lt;/p&gt;
&lt;h2 id=&#34;kernel-cpu-and-file-system-changes&#34;&gt;Kernel, CPU, and file system changes&lt;/h2&gt;
&lt;p&gt;byte[] has been having a lot of “fun” lately fixing and implementing kernel changes.
First off, he &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11686&#34; data-gh-pr=&#34;11686&#34;&gt;fully implemented transfer memory,&lt;/a&gt;
 fixed &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11766&#34; data-gh-pr=&#34;11766&#34;&gt;incorrect page group tracking,&lt;/a&gt;
 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11914&#34; data-gh-pr=&#34;11914&#34;&gt;updated the implementation&lt;/a&gt;
 of KPageTableBase, and has now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11843&#34; data-gh-pr=&#34;11843&#34;&gt;nearly completed&lt;/a&gt;
 the entire KProcess implementation!&lt;/p&gt;
&lt;p&gt;As preliminary work for NCE support coming in the near future, byte[] implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11718&#34; data-gh-pr=&#34;11718&#34;&gt;native clock support&lt;/a&gt;
 for arm64 devices running on Linux or Android.
There is no support for ARM Windows devices for now, as none have bothered to include a Vulkan driver yet.&lt;/p&gt;
&lt;p&gt;The kernel was updated to reflect changes made in &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11748&#34; data-gh-pr=&#34;11748&#34;&gt;firmware version 17.0.0,&lt;/a&gt;
 ensuring support for future games.&lt;/p&gt;
&lt;p&gt;v1993 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11772&#34; data-gh-pr=&#34;11772&#34;&gt;solved some warnings&lt;/a&gt;
 that were spamming our build logs ― namely, using &lt;code&gt;std::forward&lt;/code&gt; where appropriate, and qualifying &lt;code&gt;std::move&lt;/code&gt; calls.
This should solve build issues for those experimenting with Darwin build targets.&lt;/p&gt;
&lt;p&gt;By user request, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11774&#34; data-gh-pr=&#34;11774&#34;&gt;further improved the build performance of RomFS mods&lt;/a&gt;
 by getting rid of some unnecessary object copies.
This also fixed a file handle leak, which now allows modders to edit mod files after stopping emulation, helping them work faster on those &lt;em&gt;juicy and delicious&lt;/em&gt; game mods.&lt;/p&gt;
&lt;h2 id=&#34;audio-changes&#34;&gt;Audio changes&lt;/h2&gt;
&lt;p&gt;Thanks to user reports, our audio connoisseur, Maide, found that &lt;code&gt;Ancient Rush 2&lt;/code&gt; would crash at the end of the first developers screen.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11735&#34; data-gh-pr=&#34;11735&#34;&gt;Clearing the DSP buffer&lt;/a&gt;
 after each execution fixes the issue.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ar2.png&#34; title=&#34; Diggy Diggy Hole! (Ancient Rush 2)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2023/ar2_hu326136e5c95b9e8f32f19b6b750a98aa_2734943_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Diggy Diggy Hole! (Ancient Rush 2)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Diggy Diggy Hole! (Ancient Rush 2)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Speaking of audio, byte[] delivered another resounding victory in the shutdown department by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11778&#34; data-gh-pr=&#34;11778&#34;&gt;fixing a deadlock&lt;/a&gt;
 in the audio renderer.&lt;/p&gt;
&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;p&gt;We have some sad news for the old Red Team guard, a warning for the Green Team, and very good news for Adreno droids.&lt;/p&gt;
&lt;h3 id=&#34;nvidia-our-fault-this-time&#34;&gt;NVIDIA, our fault this time&lt;/h3&gt;
&lt;p&gt;The 545 and 546 series of drivers have solved the high VRAM usage crashes we reported this last month, but users are reporting new crashes in games with these drivers.
Reverting to the 53X series of drivers solves the problem, but this time, it&amp;rsquo;s not NVIDIA’s fault!
Mesa also has many new crashes with the 24.0.0 release, and having the top two drivers crashing under the same conditions is not a coincidence.&lt;/p&gt;
&lt;p&gt;We found that the problem is in how we are recompiling shaders ― the types of some variables are mismatched.
The fix will take some time to implement, so for NVIDIA and Mesa users experiencing crashes in games like &lt;code&gt;Bayonetta 3&lt;/code&gt;, we suggest not updating your drivers for the time being.&lt;/p&gt;
&lt;h3 id=&#34;amd-giving-a-last-hurrah-to-polaris-and-vega&#34;&gt;AMD, giving a last hurrah to Polaris and Vega&lt;/h3&gt;
&lt;p&gt;The time has come. The last 2 remnants of the GCN architecture are on their way to be discontinued.
AMD started releasing &lt;a href=&#34;https://www.anandtech.com/show/21126/amd-reduces-ongoing-driver-support-for-polaris-and-vega-gpus&#34;&gt;split drivers&lt;/a&gt; for those products, which run outdated Vulkan driver branches compared to RDNA and newer hardware.
&lt;a href=&#34;https://www.phoronix.com/news/Mesa-24.0-Faster-RADV-Vega&#34;&gt;The news&lt;/a&gt; of AMDVLK, the official Linux AMD driver, killing support for these products means no new Vulkan drivers will be available.&lt;/p&gt;
&lt;p&gt;This doesn’t mean the show is over for their owners.
For the time being, no new change breaks compatibility with the cards, and Linux Mesa drivers like RADV will continue to provide support, most likely extending it past what the Windows drivers report as supported (as is usually the case with Mesa).&lt;/p&gt;
&lt;p&gt;But for those stuck on Windows, this is the last ride.&lt;/p&gt;
&lt;p&gt;GCN4.0, GCN5.0, you weren’t the most efficient cards, but you gave us good value in the worst moments, &lt;em&gt;years&lt;/em&gt; of amazing gameplay, and great FineWine moments.
We salute you and thank you for your impeccable service, few GPU architectures leave the stage with such a round of applause.&lt;/p&gt;
&lt;p&gt;o7&lt;/p&gt;
&lt;h3 id=&#34;turnip-a-very-quickly-improving-work-in-progress&#34;&gt;Turnip, a very quickly improving work-in-progress&lt;/h3&gt;
&lt;p&gt;yuzu uses a single codebase for all its releases, upstream/master/main, however you prefer to call it, Mainline, Early Access, and Android all start from there.
When improvements to the codebase are added, they eventually reach all releases, Android included.&lt;/p&gt;
&lt;p&gt;We recently added improved support for &lt;code&gt;occlusion queries&lt;/code&gt; (part of project Y.F.C.) to Android to increase performance and accuracy on all devices. But occlusion query support on Turnip drivers with Adreno 725 and 730 GPUs was not working correctly, and this took us a very long time to find.
Users experienced crashes that forced them to remain on outdated &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-android/releases/&#34;&gt;GitHub&lt;/a&gt; versions, and we needed to stall a new Play Store release until the problem was investigated and properly solved.&lt;/p&gt;
&lt;p&gt;The issue was found, reported, and resolved by Mesa in record time in their current Adreno 700 branches, which then driver packagers like &lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases&#34;&gt;K11MCH1&lt;/a&gt; use to build packages Qualcomm users can load on emulators.&lt;/p&gt;
&lt;p&gt;For this reason we &lt;em&gt;strongly&lt;/em&gt; recommend Adreno 730 and Adreno 725 users to update to the latest &lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases/tag/24.0.0-R-X&#34;&gt;Release X&lt;/a&gt; driver, which not only fixes the crashes caused by occlusion queries, but also the lack of support for the Adreno 725 and some variants (yes, there are several) of the Adreno 730.
It isn&amp;rsquo;t only desktop GPU vendors who love to rename things.&lt;/p&gt;
&lt;p&gt;By using this driver, we were able to launch newer Android builds with the latest upstream changes, and all Qualcomm users can safely use the latest GitHub builds if they prefer.&lt;/p&gt;
&lt;p&gt;By the way, the GitHub builds are now properly signed. Rejoice, as you can now update from one to the next without needing to uninstall first.
If you want to test experimental and potentially unsafe (but maybe faster) changes before Play Store updates, it’s now much easier.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;Let’s begin with what most people want to hear about: Project Nice for Android devices.
NCE (Native Code Execution) is progressing very well, but there are still some bugs to iron out.
Games are becoming not only playable, but also &lt;em&gt;faster&lt;/em&gt; on devices with thermal restrictions. Additionally, the time spent loading and closing games has been significantly reduced now!
NCE has helped us understand issues in our CPU emulation in x86_64 too, so expect gains on both fronts.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./smo.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Recorded with a Red Magic 7S Pro (SUPER MARIO ODYSSEY)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;No promises on a release date per usual, but as politicians love to say: “We’re working on it.”&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./bayo2.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Destroying those touch screen controls! (Bayonetta 2)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Blinkhawk is &lt;em&gt;suggesting&lt;/em&gt; that your writer informs you he is working on a new project seeking to make the GPU process-agnostic, allowing multiprocess emulation within the GPU.
No fancy names this time, we’ve simply been calling this “Multiprocess” internally.
Multiprocess is a mandatory step towards UMA support, which will provide huge gains for iGPUs and SoC users, as well as reducing RAM consumption.&lt;/p&gt;
&lt;p&gt;That’s all folks! Apologies for the delay, university homework and finals are killing your writer.
Thank you for reading until the end. See you next time!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report September 2023</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/</link>
      <pubDate>Fri, 20 Oct 2023 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/</guid>
      <description>&lt;p&gt;Hi yuz-ers! Last month has been interesting, and we&amp;rsquo;re excited to report what we&amp;rsquo;ve been up to. Miis come out to play, GPU changes, Android improvements, and more! Let’s get into it.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hi yuz-ers! Last month has been interesting, and we&amp;rsquo;re excited to report what we&amp;rsquo;ve been up to. Miis come out to play, GPU changes, Android improvements, and more! Let’s get into it.&lt;/p&gt;
&lt;h2 id=&#34;of-miis-and-applets&#34;&gt;Of Miis and applets&lt;/h2&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./miiedit4.png&#34; title=&#34; Wii want to play&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/miiedit4_hu41d6dc016301cdcc0300f604e2c87625_1189872_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Wii want to play&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Wii want to play&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;For quite some time, it has been possible to load the default Miis in supported games on yuzu.
However, yuzu&amp;rsquo;s implementation of the Mii service was lacking the necessary support for the Mii database.&lt;/p&gt;
&lt;p&gt;The Mii database is a file saved on the Switch which holds up to 100 Miis.
Without the proper support for this database within the Mii service, it was impossible to load your custom Miis.&lt;/p&gt;
&lt;p&gt;Our in-house input emulation expert, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;, embarked on an adventurous journey to test the MiiEdit applet as part of his ongoing quest to make system applets function smoothly on yuzu.
Initially, things were progressing well, but his efforts hit a roadblock when softlocks while booting the applet became a recurring issue.&lt;/p&gt;
&lt;p&gt;Suspecting that erroneous data from the Mii service might be the root cause of these softlocks, german77 decided to undertake the task of completely reverse engineering the Mii service.
His dedicated efforts led to an &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11526&#34; data-gh-pr=&#34;11526&#34;&gt;almost fully-implemented Mii service,&lt;/a&gt;
 with the only missing piece being the ability to send and receive Miis from nearby users.
This &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11480&#34; data-gh-pr=&#34;11480&#34;&gt;comprehensive implementation&lt;/a&gt;
 involved rectifying some of the older code, reorganising data structures, and, at long last, providing support for the eagerly anticipated Mii database.
Adventurous users have the ability to load their own Mii characters in any game by placing their console’s database file at &lt;code&gt;%appdata%/yuzu/nand/system/save/8000000000000030/MiiDatabase.dat&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With the Mii service completed and behind him, Narr swiftly returned to the task of making the MiiEdit applet function seamlessly on yuzu.
Thanks to some troubleshooting assistance from &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt;, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11569&#34; data-gh-pr=&#34;11569&#34;&gt;he ultimately managed to make it work.&lt;/a&gt;

The last piece of the puzzle was &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11561&#34; data-gh-pr=&#34;11561&#34;&gt;completing Mii database support for the applet,&lt;/a&gt;
 and with this crucial addition, yuzu&amp;rsquo;s Mii functionality is now more robust than ever.
Users can now seamlessly create, edit, and store their Miis using the new MiiEdit applet via &lt;code&gt;Tools&lt;/code&gt; &amp;gt; &lt;code&gt;Open Mii Editor&lt;/code&gt;, and games can automatically generate a random Mii for players without crashing.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./miiedit1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/miiedit1_huf6955a72d528907ca29f2659463cb3aa_162871_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Edit to your heart’s content&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./miiedit2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/miiedit2_hu92662f8fcd4017050ca1e8f76403e138_39605_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Edit to your heart’s content&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./miiedit3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/miiedit3_hu5afb51020863b2c4cf67db449aed1b1a_104300_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Edit to your heart’s content&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Edit to your heart’s content&lt;/p&gt;


&lt;p&gt;Building on the success of the MiiEdit applet, Narr continued his productive streak by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11632&#34; data-gh-pr=&#34;11632&#34;&gt;fully implementing support for the Cabinet applet.&lt;/a&gt;

The Cabinet applet, if you weren&amp;rsquo;t already familiar, is the amiibo manager applet.
With these recent changes, users can register, rename, delete, and restore their amiibo data via &lt;code&gt;Tools&lt;/code&gt; &amp;gt; &lt;code&gt;Amiibo&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./cabinet1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/cabinet1_huaa2eeeb143d2fffb6ff6b37df56e405e_48286_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;And register as many as you want&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./cabinet2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/cabinet2_huf8d72ddbd3f4f47f1a26a71876551aa7_60227_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;And register as many as you want&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./cabinet3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/cabinet3_hud88f0a0e7868c12803329639e277ef18_152089_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;And register as many as you want&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;And register as many as you want&lt;/p&gt;


&lt;h2 id=&#34;graphics-changes&#34;&gt;Graphics changes&lt;/h2&gt;
&lt;p&gt;Switching to the graphics department, let’s begin with some interesting decisions from the Khronos group that affected the Linux Mesa drivers.&lt;/p&gt;
&lt;p&gt;After getting reports of crashes when running &lt;code&gt;Pikmin 4&lt;/code&gt; on Linux, byte[] discovered that Khronos removed the ability to declare an &lt;code&gt;OpTypeSampledImage&lt;/code&gt; for buffer textures from the latest release of the SPIR-V specification, the shader backend used by yuzu for Vulkan support.&lt;/p&gt;
&lt;p&gt;This is extremely unusual — usually a deprecation is preferred (to not affect old code).
Mesa, being the textbook example of following the specification, followed through with this change, forcing us to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11435&#34; data-gh-pr=&#34;11435&#34;&gt;skip samplers for buffer textures.&lt;/a&gt;

With these weird Vulkan decisions properly handled, &lt;code&gt;Pikmin 4&lt;/code&gt; is once again playable for those running Mesa drivers.&lt;/p&gt;
&lt;p&gt;Speaking of &lt;code&gt;Pikmin 4&lt;/code&gt;, and of &lt;code&gt;Master Detective Archives: RAIN CODE&lt;/code&gt;, byte[] also found the cause of the lighting issues and wrong faces rendering affecting the former and the latter game, respectively.&lt;/p&gt;
&lt;p&gt;byte[] noticed an additional validation error Mesa was providing when debugging the issue with sampled buffers. yuzu&amp;rsquo;s SPIR-V emitter was generating atomic operations on a typeless image, which the SPIR-V specification has never allowed.
After a false start by trying to avoid typeless images, he found the real culprit: the code for generating SPIR-V atomics incorrectly used the array index of the image, instead of its designated descriptor.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11567&#34; data-gh-pr=&#34;11567&#34;&gt;Correcting this shader behaviour&lt;/a&gt;
 fixed the headlamp lighting required in specific dark sections of &lt;code&gt;Pikmin 4&lt;/code&gt; and the facial expressions of characters in &lt;code&gt;Master Detective Archives: RAIN CODE&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./p4.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; A little bit of exploration never hurt anyone (Pikmin 4)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/GPUCode&#34;&gt;GPUCode&lt;/a&gt; also joined the fray this month with several code additions.&lt;/p&gt;
&lt;p&gt;First of all, something &lt;em&gt;light&lt;/em&gt;, let’s introduce &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11535&#34; data-gh-pr=&#34;11535&#34;&gt;separate command buffer uploads!&lt;/a&gt;

This gives the benefit of a slight performance uplift, caused by reduced renderpass breaks, which greatly helps mobile GPUs.
The larger the renderpass, the longer mobile GPUs can keep data in tile memory, so breaking it is a costly operation. Dedicated GPUs benefit from this change, but much less.&lt;/p&gt;
&lt;p&gt;We measured an 8% performance increase in some games with a 5800X3D.
Lower end systems could see bigger gains.&lt;/p&gt;
&lt;p&gt;GPUCode also fought against the rendering issues affecting &lt;code&gt;Mortal Kombat 1&lt;/code&gt; and &lt;code&gt;Sonic Forces&lt;/code&gt; when using Vulkan.
For those deep into the yuzu lore, this is a compute shader implementation of &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11556&#34; data-gh-pr=&#34;11556&#34;&gt;MSAA image copies,&lt;/a&gt;
 similar to what epicboy &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/#other-gpu-and-video-changes&#34;&gt;did back in February&lt;/a&gt;.
As said back then, compared to OpenGL, Vulkan requires a lot more work.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/mk1bug_hu0484047029cd7620ae413019522a7d63_2205823_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Round 1, Fight! Emutality! (Mortal Kombat 1)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/mk1fix_hu07f4d662774f6dd090d9d98796543ff4_2247559_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Round 1, Fight! Emutality! (Mortal Kombat 1)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Round 1, Fight! Emutality! (Mortal Kombat 1)&lt;/p&gt;


&lt;p&gt;This change also improves the original shader, allowing games like &lt;code&gt;Pinball FX3&lt;/code&gt; to render and work correctly now, regardless of the graphics API in use, while also improving the rendering of games like &lt;code&gt;Fate/EXTELLA: The Umbral Star&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./msaa1.png&#34; title=&#34; I ask of you. Are you my Master? (Fate/EXTELLA: The Umbral Star)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/msaa1_hud22aa0a610107e5b63ae500bbb6b6de0_2093286_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; I ask of you. Are you my Master? (Fate/EXTELLA: The Umbral Star)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; I ask of you. Are you my Master? (Fate/EXTELLA: The Umbral Star)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./msaa2.png&#34; title=&#34; Don’t break it, please (Pinball FX3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/msaa2_hu0aafa841ced3b072d538cb446c0fce3f_2594612_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Don’t break it, please (Pinball FX3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Don’t break it, please (Pinball FX3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Players of &lt;code&gt;The Legend of Nayuta: Boundless Trails&lt;/code&gt;, and other Falcom games like &lt;code&gt;The Legend of Heroes&lt;/code&gt; series, reported that text was rendered incorrectly, displaying weird colour highlights.
GPUCode investigated this and found that we were using the wrong colour component order (BGR vs RGB for example) for the &lt;code&gt;A4B4G4R4_UNORM&lt;/code&gt; texture format.
Instead, &lt;code&gt;A4B4G4R4_UNORM_PACK16_EXT&lt;/code&gt; has &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11557&#34; data-gh-pr=&#34;11557&#34;&gt;the order&lt;/a&gt;
 the game expects, providing correct rendering.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/nayubug_hu64ead8b017ae1b1ddc7ec832d85304f0_1957838_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ask Jobs what he thinks about good font rendering (The Legend of Nayuta: Boundless Trails)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/nayufix_hud2d56a5a64b8358f000e1681d859ef3d_1981706_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ask Jobs what he thinks about good font rendering (The Legend of Nayuta: Boundless Trails)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Ask Jobs what he thinks about good font rendering (The Legend of Nayuta: Boundless Trails)&lt;/p&gt;


&lt;p&gt;Continuing this trend of texture fixes, GPUCode also identified a bug in how sRGB textures were being handled.&lt;/p&gt;
&lt;p&gt;The problem was that sRGB textures could not be used as storage images in shaders.
The solution was to create the texture as linear, which is another colour space that does not have gamma correction, and then use an sRGB view to access it.
This way, the texture can be used as a storage image and still have the correct colours.&lt;/p&gt;
&lt;p&gt;However, this solution had an unintended side effect.
When the texture was used directly without the view — for example, when it was resolved by copying it to another image — the colours were wrong because the colour space had changed.&lt;/p&gt;
&lt;p&gt;To fix this, the pull request &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11562&#34; data-gh-pr=&#34;11562&#34;&gt;ensures sRGB creation is only disallowed when transcoding,&lt;/a&gt;
 which means that it always applies except when converting compressed formats to uncompressed formats on the GPU.
This way, the texture is created as sRGB and has the correct colours in both cases.&lt;/p&gt;
&lt;p&gt;Thanks to this, &lt;code&gt;Momotaro Dentetsu&lt;/code&gt; and &lt;code&gt;Star Ocean First Departure R&lt;/code&gt; can now render with the colours and gamma intended by their developers.
The way it’s meant to be played, as a certain luxury-focused graphics card vendor says.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/momobug_hub38371d9641e949afb557390d414e109_1891423_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Don’t mess with my gamma! (Momotaro Dentetsu)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/momofix_hu35743bbee982b4aa136b88f4e74112be_1950468_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Don’t mess with my gamma! (Momotaro Dentetsu)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Don’t mess with my gamma! (Momotaro Dentetsu)&lt;/p&gt;


&lt;p&gt;Now’s the turn for our classic &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_Key_video_games&#34;&gt;Key&lt;/a&gt; visual novel fans, your writer included.
Users reported the games had some terrible flickering.
The cause, as &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; found out, is due to how particular the rendering for these classic games is.
Most games create a single render target on a single address, either 1080p or 720p.
Key’s visual novels instead use the same address to create both 720p and 1080p render targets, with the 1080p one being created first, but never being used.
yuzu, by default, always picked the first render target.&lt;/p&gt;
&lt;p&gt;This wasn’t an issue for other games, but for this engine, the texture cache constantly detected the wrong image, causing it to alternate between both render targets on each frame.
This resulted in a black frame being rendered between two valid frames, causing dangerous flickering for those with photosensitive epilepsy.&lt;/p&gt;
&lt;p&gt;By changing yuzu’s behaviour to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11479&#34; data-gh-pr=&#34;11479&#34;&gt;look for the most recently modified image&lt;/a&gt;
 to present, the issue is completely fixed, and users can now cry entire nights reading these games.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./planetarian.png&#34; title=&#34; All the stars in the sky are waiting for you (planetarian)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/planetarian_hu827ccd17d177875ca5cba2816bce46c4_1885076_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; All the stars in the sky are waiting for you (planetarian)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; All the stars in the sky are waiting for you (planetarian)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;And to close this section, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; fixed some &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11646&#34; data-gh-pr=&#34;11646&#34;&gt;memory leaks&lt;/a&gt;
 caused by the recent query cache rewrite.&lt;/p&gt;
&lt;h2 id=&#34;android-additions&#34;&gt;Android additions&lt;/h2&gt;
&lt;p&gt;Our resident Terminator and Nier: Automata enjoyer &lt;a href=&#34;https://github.com/t895&#34;&gt;t895&lt;/a&gt;, and other members of the team, continue to work hard on improving the experience of the Android build:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A hardware limitation exposed by the Buffer Cache Rewrite from Project Y.F.C. was &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11471&#34; data-gh-pr=&#34;11471&#34;&gt;worked around.&lt;/a&gt;
 This change was done by GPUcode.&lt;/li&gt;
&lt;li&gt;A bug where certain temporary &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11505&#34; data-gh-pr=&#34;11505&#34;&gt;settings would be reset&lt;/a&gt;
 on emulation start (for example, “Limit emulation speed”) has been fixed.&lt;/li&gt;
&lt;li&gt;An issue where &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11506&#34; data-gh-pr=&#34;11506&#34;&gt;game shortcuts would appear cropped&lt;/a&gt;
 on certain devices was fixed.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11523&#34; data-gh-pr=&#34;11523&#34;&gt;The amount of thread workers for shader compilation&lt;/a&gt;
 was reduced to one. This is intended to reduce memory consumption.&lt;/li&gt;
&lt;li&gt;More &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11542&#34; data-gh-pr=&#34;11542&#34;&gt;screen orientation and aspect ratio&lt;/a&gt;
 misbehaviours were fixed.&lt;/li&gt;
&lt;li&gt;An issue where the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11564&#34; data-gh-pr=&#34;11564&#34;&gt;input overlay&lt;/a&gt;
 would &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11583&#34; data-gh-pr=&#34;11583&#34;&gt;draw offscreen&lt;/a&gt;
 on some devices was fixed.&lt;/li&gt;
&lt;li&gt;An issue where the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11594&#34; data-gh-pr=&#34;11594&#34;&gt;settings activity&lt;/a&gt;
 would appear dim when in landscape mode while using 3 button navigation was fixed.&lt;/li&gt;
&lt;li&gt;The in-game menu could be unintentionally opened during the loading animation. &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11597&#34; data-gh-pr=&#34;11597&#34;&gt;This is now fixed.&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11613&#34; data-gh-pr=&#34;11613&#34;&gt;Several crashes&lt;/a&gt;
 related to the initial setup, emulation activity, and emulation fragment are now fixed.&lt;/li&gt;
&lt;li&gt;The emulator will now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11616&#34; data-gh-pr=&#34;11616&#34;&gt;correctly reload the settings file&lt;/a&gt;
 after resetting all settings.&lt;/li&gt;
&lt;li&gt;Lastly, a new settings menu &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11603&#34; data-gh-pr=&#34;11603&#34;&gt;unifies all content installation&lt;/a&gt;
 into a single place. Users can now access the &lt;code&gt;Manage yuzu data&lt;/code&gt; menu to import/export firmware, saves, user data, and install game content, console, and Amiibo keys. The &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11543&#34; data-gh-pr=&#34;11543&#34;&gt;new User data option&lt;/a&gt;
 allows users to backup and restore all app data. Useful for example when migrating to other builds, like from a GitHub release to a Play Store release.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./data1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/data1_huec5aebe646ab7d58b1e36e55080229a7_98514_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;For the convenience of the lady and the gentleman&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./data2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/data2_hu395fd84380074c82edf7f0ee4c229e94_104176_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;For the convenience of the lady and the gentleman&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;For the convenience of the lady and the gentleman&lt;/p&gt;


&lt;h2 id=&#34;audio-changes&#34;&gt;Audio changes&lt;/h2&gt;
&lt;p&gt;Maide shines here by giving us a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11460&#34; data-gh-pr=&#34;11460&#34;&gt;rewrite&lt;/a&gt;
 of the hardware Opus service, responsible for handling decompression of Opus-formatted audio in games.
The old implementation lacked several functions documented by the reverse engineering community, which is what this rewrite focused on the most.&lt;/p&gt;
&lt;p&gt;Now the hardware Opus implementation matches the current information available.
Maide also took the opportunity to move the processing of Opus to the emulated ADSP (the emulated implementation of the audio coprocessor of the Switch).&lt;/p&gt;
&lt;p&gt;The end result of this effort is allowing games that previously faced crashes when trying to decode Opus audio, like &lt;code&gt;MLB The Show 22 &amp;amp; 23&lt;/code&gt;, the &lt;code&gt;Touhou&lt;/code&gt; series games, &lt;code&gt;Pokemon Quest&lt;/code&gt;, &lt;code&gt;Pokemon Let&#39;s Go Eevee!/Pikachu!&lt;/code&gt;, and &lt;code&gt;Sea of Stars&lt;/code&gt; to play the audio correctly without crashing.&lt;/p&gt;
&lt;p&gt;Maide also fixed audio command processing, avoiding some command lists from returning early before being properly finished.
After an interruption, the previous implementation would restart processing the list from the beginning instead of continuing from where it left off. This stalled audio rendering until it finished properly.
Correcting &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11465&#34; data-gh-pr=&#34;11465&#34;&gt;this behaviour&lt;/a&gt;
 solved cases where the audio engine would run too slowly, improving performance.&lt;/p&gt;
&lt;p&gt;Another issue that required quite the investigation caused background sound in &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; to cut off randomly.
The cause was found to be in the data source commands during loops.
Changing the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11467&#34; data-gh-pr=&#34;11467&#34;&gt;behaviour between its different versions&lt;/a&gt;
 restored proper ambient noises to this great game and a few others.&lt;/p&gt;
&lt;p&gt;To close this section, Maide also discovered what caused the dropping of music and voices in &lt;code&gt;New Super Mario Bros. U Deluxe&lt;/code&gt;’s final level.
The audio command buffer sometimes took longer to process than estimated, which caused voices in the renderer to be dropped.
The game depends on this behaviour to some extent, but yuzu&amp;rsquo;s calculation of the estimation was subtly incorrect, causing almost everything to be dropped.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11520&#34; data-gh-pr=&#34;11520&#34;&gt;Improving the time estimation algorithm&lt;/a&gt;
 solved the issue.
Let’s hear those voices!&lt;/p&gt;
&lt;h2 id=&#34;miscellaneous-changes&#34;&gt;Miscellaneous changes&lt;/h2&gt;
&lt;p&gt;Sometimes, we overlook testing on devices that don&amp;rsquo;t meet our standard hardware recommendations.
With the addition of the new Vulkan VSync options, we made an incorrect assumption. As it turns out, users do not always have Vulkan drivers installed! Shocking, right?&lt;/p&gt;
&lt;p&gt;While most of the time users do have support for Vulkan, that certainly is not the case for NVIDIA Fermi users (people that were promised a Vulkan driver but never got it), or users of Linux distros which don&amp;rsquo;t package GPU firmware files, like &lt;a href=&#34;https://trisquel.info/&#34;&gt;Trisquel&lt;/a&gt;.
This caused the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11450&#34; data-gh-pr=&#34;11450&#34;&gt;VSync combobox&lt;/a&gt;
 to refuse to offer any options when no Vulkan driver and device was detected, which blocked OpenGL-only users from toggling VSync.&lt;/p&gt;
&lt;p&gt;While it’s easy to just ask the users to upgrade to newer hardware, and/or use a more functional distro, that doesn’t change the fact that the behaviour is incorrect.&lt;/p&gt;
&lt;p&gt;Enter &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt;, who fixed the UI and took the opportunity to improve the broken Vulkan detection, ensuring OpenGL is selected as the default API if needed.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ogl.png&#34; title=&#34; Fermi still rocking it&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/ogl_hu8c53b7d0f31ae7480a5119cf7d671fe5_25253_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Fermi still rocking it&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Fermi still rocking it&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;byte[] fixed &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11473&#34; data-gh-pr=&#34;11473&#34;&gt;language selection&lt;/a&gt;
 being ignored in multi-program applications, which was affecting games like &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt;, &lt;code&gt;Grandia HD Collection&lt;/code&gt;, and others.
Proper localisation is very important to us!
Not everyone can corrupt their minds by learning English, after all.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sm3das.png&#34; title=&#34; ¡Mamá Mía! (Super Mario 3D All-Stars)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/sm3das_hu0acb139774504fd6ab66b7b82848c357_1228134_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; ¡Mamá Mía! (Super Mario 3D All-Stars)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; ¡Mamá Mía! (Super Mario 3D All-Stars)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Newcomer &lt;a href=&#34;https://github.com/rkfg&#34;&gt;rkfg&lt;/a&gt; found one of those bugs that makes you question how this even worked before.
yuzu&amp;rsquo;s parsing for the PFS file format would try to read filenames from the header as a C string.
C strings definitionally end at a null byte, but this failed to account for the fact that the next null byte could sometimes be well past the end of the header, and parsing a file with this specific construction would cause yuzu to fail to find files inside the archive and/or crash.
By unconditionally &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11553&#34; data-gh-pr=&#34;11553&#34;&gt;inserting a null byte&lt;/a&gt;
 after the header data, rkfg solved this one.
Now games like &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt; don’t encounter strange crashes seemingly out of nowhere.&lt;/p&gt;
&lt;p&gt;While working on more file system improvements, byte[] implemented a simple NCA (Nintendo Content Archive) verification system, which checks that the names of NCA files match their contents to guard against filesystem corruption.
Now users can &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11456&#34; data-gh-pr=&#34;11456&#34;&gt;check the integrity&lt;/a&gt;
 of their game dumps by right clicking a game in the game list and selecting &lt;code&gt;Verify Integrity&lt;/code&gt;.
Implementing proper signature and hash-based verification is planned, but expected to be very slow in comparison.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./verify.png&#34; title=&#34; Always helpful&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/verify_hu9e3b037ee10e605fce2bad8f4c6b122c_49743_531x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Always helpful&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Always helpful&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11483&#34; data-gh-pr=&#34;11483&#34;&gt;stubbing&lt;/a&gt;
 the &lt;code&gt;GetSaveDataSizeMax&lt;/code&gt; filesystem service method, &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;FearlessTobi&lt;/a&gt; made &lt;code&gt;Minecraft Legends Deluxe Edition&lt;/code&gt; able to display its boot screen.
Sadly the game crashes after that, guess there’s more work to do!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./minecraft.png&#34; title=&#34;This is as far as it goes for now (Minecraft Legends)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/minecraft_hu57fe6eb90a981e783f2c47aa0abdb600_163137_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This is as far as it goes for now (Minecraft Legends)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;This is as far as it goes for now (Minecraft Legends)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Continuing with the stubbing procedures, fixing up &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11540&#34; data-gh-pr=&#34;11540&#34;&gt;purchase info calls&lt;/a&gt;
 allows &lt;code&gt;The Settlers: New Allies&lt;/code&gt; to start properly.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nvidia.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/nvidia_hu4d4c1e80aba904a8f2f93dcfc4e034fe_1423164_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;NVIDIA on the left, AMD on the right (The Settlers: New Allies)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./amd.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/amd_hu4b0ca270ad15b41e87bebe078b60ebe9_3873769_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;NVIDIA on the left, AMD on the right (The Settlers: New Allies)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;NVIDIA on the left, AMD on the right (The Settlers: New Allies)&lt;/p&gt;


&lt;p&gt;As you can see, more work is needed to get this game to render properly.
Extra points for being a game that renders better on AMD over NVIDIA.&lt;/p&gt;
&lt;p&gt;But what about &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11496&#34; data-gh-pr=&#34;11496&#34;&gt;a new service?&lt;/a&gt;
 byte[] added a stub for the &lt;code&gt;ngc&lt;/code&gt; service, allowing the &lt;code&gt;Baten Kaitos HD&lt;/code&gt; collection to work.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bk1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/bk1_hufc710ef3a4bbfdd05ee787d5a98024f4_1768147_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Old-school (Baten Kaitos HD collection)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bk2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/bk2_hu447f8aea59c14bf9cdbea99cdf7ad20f_2054850_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Old-school (Baten Kaitos HD collection)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Old-school (Baten Kaitos HD collection)&lt;/p&gt;


&lt;p&gt;Likewise, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11590&#34; data-gh-pr=&#34;11590&#34;&gt;adding&lt;/a&gt;
 the &lt;code&gt;GetFileSystemAttribute&lt;/code&gt; service method makes &lt;code&gt;Tiny Thor&lt;/code&gt; playable; it no longer gets stuck during the initial loading screens.
C’mon, without googling, spell the name of Thor’s hammer correctly.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./tt1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/tt1_huc14e54889e39cc08eb46a6df83639e11_917527_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;So adorable! (Tiny Thor)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./tt2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/tt2_hu2a2113eb932503eeae3b0cbacaed9995_1039092_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;So adorable! (Tiny Thor)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./tt3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/tt3_hu7ed080b1b4f273d44ce90dfcb4c9c00d_458637_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;So adorable! (Tiny Thor)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;So adorable! (Tiny Thor)&lt;/p&gt;


&lt;p&gt;Back again with good fixes is &lt;a href=&#34;https://github.com/Squall-Leonhart&#34;&gt;Squall-Leonhart&lt;/a&gt;, who now focused on Windows file system error handling.
For example, yuzu would simply crash if you disconnected a removable storage containing games loaded into yuzu’s list, a network SMB share, or a Bitlocker protected location was unavailable.&lt;/p&gt;
&lt;p&gt;But not anymore! By adding the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11499&#34; data-gh-pr=&#34;11499&#34;&gt;proper error handling&lt;/a&gt;
 to these file system exception cases, the emulator now avoids a crash here; complaining, but working.&lt;/p&gt;
&lt;p&gt;Managing another critical blow to the fight for proper shutdown behaviour, byte[] managed to spot an &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11652&#34; data-gh-pr=&#34;11652&#34;&gt;optimization&lt;/a&gt;
 that should save around a second of time on high-end CPUs.
Does this mean the fighting is over? No, some edge cases remain, but now under normal circumstances, closing a game should be almost instantaneous.
We have a medal ready for byte[].&lt;/p&gt;
&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;h3 id=&#34;nvidia-vram-fixes-and-focusing-on-the-latest-hardware&#34;&gt;NVIDIA: VRAM fixes, and focusing on the latest hardware&lt;/h3&gt;
&lt;p&gt;The latest driver releases have proven to be stable for Turing and newer products, but we got reports of small regressions affecting Pascal and Maxwell users.
If you’re still running older 750, 900, and 1000 series products and you face new issues in games, try reverting to older driver versions like the 52X series.&lt;/p&gt;
&lt;p&gt;Still, it&amp;rsquo;s worth to mention that driver release &lt;code&gt;545.84&lt;/code&gt; seems to have solved the instabilities caused by excessive VRAM use, like for example while running &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt; in the Depths with 2GB/4GB GPUs of any architecture.
This is great news for low-end users struggling to run this particularly ASTC-heavy game.&lt;/p&gt;
&lt;h3 id=&#34;amd-general-fixes-autohdr-vsync-problems-and-frame-interpolation&#34;&gt;AMD: general fixes, AutoHDR, VSync problems, and frame interpolation&lt;/h3&gt;
&lt;p&gt;First, good news, the latest Windows driver version at the time of writing, &lt;code&gt;23.10.2&lt;/code&gt; has solved the D24 issue affecting AMD cards on Vulkan.
Those bothered by clipping lines and textures should upgrade to get the proper graphics experience.
Keep in mind that this doesn&amp;rsquo;t solve the vertex explosions affecting the Pentelas region and the DLC of &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;, we manage to confirm this is a different issue affecting AMD cards on a much lower level, as it is architecture, OS, and driver agnostic.&lt;/p&gt;
&lt;p&gt;Another good bit is that recent drivers also seem to have introduced DXGI swapchain support, allowing AMD cards to work with AutoHDR out of the box.
There doesn&amp;rsquo;t seem to be a driver toggle for this though.
Users interested in enabling AutoHDR for yuzu can use &lt;a href=&#34;https://github.com/ledoge/autohdr_force&#34;&gt;this piece of software&lt;/a&gt; to do the registry work for them.&lt;/p&gt;
&lt;p&gt;Now for a bit of bad news.
Windows driver version &lt;code&gt;23.9.3&lt;/code&gt; and newer cause the VSync options to be ignored, resulting in tearing during gameplay.
If you’re affected by this, revert back to driver &lt;code&gt;23.9.2&lt;/code&gt; for now.
The standard procedure was followed: we&amp;rsquo;ve opened a ticket with AMD regarding this issue and provided a generic test case.&lt;/p&gt;
&lt;p&gt;ED: Driver &lt;code&gt;23.10.2&lt;/code&gt; seems to have solved this issue entirely, we recommend updating to it.&lt;/p&gt;
&lt;p&gt;Switching to something more interesting, we heard you! Despite our previous rants about frame generation, we think
vendor-agnostic frame generation like FSR3 would be cool to make Pokémon games playable, but the same requisites which prevent us from using
FSR2, or even DLSS/XeSS for that matter, apply here.
Games don’t report their motion vector data to the console, since they were never developed to support DLSS.&lt;/p&gt;
&lt;p&gt;There are ways to implement this, such as adding one frame of delay and extrapolating data.
The downside here is that 33ms of delay for 30 FPS games would be an awful experience.
We could guess motion from previous frames, but this could have a very high performance cost and can potentially produce erratic results, old frames can&amp;rsquo;t read the future.
Or we could dip our toes into AI, which has given us unsatisfactory results in the past.
While coding a generic way to extract motion vector data might be possible, it’s a huge endeavour, so expect it to be a very low priority at the moment.
We have bigger fires to put out first, after all.&lt;/p&gt;
&lt;p&gt;What could work is &lt;a href=&#34;https://community.amd.com/t5/gaming/amd-fluid-motion-frames-is-out-now-on-amd-radeon-rx-7000-series/ba-p/634372&#34;&gt;AFMF&lt;/a&gt;, if AMD adds Vulkan support for it in the future.&lt;/p&gt;
&lt;p&gt;“But writer, AFMF is not vendor-agnostic! It’s an AMD Windows driver exclusive feature!” you say.
Ah, but that&amp;rsquo;s where you’re wrong. It is vendor-agnostic on desktop PCs! Kinda.&lt;/p&gt;
&lt;p&gt;The only thing you have to do is get an RX 6400 (or higher) as a secondary GPU in your desktop PC, connect your displays to it, and enjoy enforcing frame interpolation even when using a primary Intel or NVIDIA GPU for rendering!
Sadly, this doesn’t apply to yuzu yet, because the current beta driver for AFMF at the time of writing only supports the Direct3D 11 and 12 APIs.&lt;/p&gt;
&lt;p&gt;Let’s hope we get Vulkan support and we may be able to finally see &lt;code&gt;Tears of the Kingdom&lt;/code&gt; hitting over 100 FPS, or &lt;code&gt;Pokémon Scarlet&lt;/code&gt; model animations reaching &lt;del&gt;smooth&lt;/del&gt; cinematic 30 FPS.
Meanwhile, try to enjoy converting 20 FPS to 40 when using Path Tracing.
At least you don’t have to pay 500+ bucks for this.&lt;/p&gt;
&lt;h3 id=&#34;intel&#34;&gt;Intel&amp;hellip;&lt;/h3&gt;
&lt;p&gt;Sadly, we have another driver-level issue to report from Team Blue.
This time, the problem is in geometry shaders.
The SPIR-V shader compiler crashes the Vulkan Arc driver due to a &lt;a href=&#34;https://www.youtube.com/watch?v=bLHL75H_VEM&#34;&gt;null pointer dereference&lt;/a&gt;.
This affects many games, even popular ones like &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; and &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The bug report has been filed. Fingers crossed for a resolution faster than seven months this time, and a more satisfatory result than 14th gen products.&lt;/p&gt;
&lt;h3 id=&#34;turnip-steadily-progressing&#34;&gt;Turnip, steadily progressing&lt;/h3&gt;
&lt;p&gt;The latest release of the Turnip driver for Adreno 700 series at the time of writing, &lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases/tag/v23.3.0_R7&#34;&gt;R7&lt;/a&gt;, seems to reduce overhead considerably, resulting in less overheating for Qualcomm Android users.
Since the driver is also compatible with Adreno 600 series GPUs, we recommend users to give it a try.&lt;/p&gt;
&lt;p&gt;A word of warning though! Turnip drivers don’t have support for Adreno 725 and Adreno 730 GPUs at the moment.
Older releases like &lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases/tag/v23.3.0_R5&#34;&gt;R5&lt;/a&gt; can be used on these devices instead.&lt;/p&gt;
&lt;p&gt;The official Qualcomm driver got some updates, but it continues to be absolutely terrible, so we don’t recommend using it, if at all possible.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;Project Nice, the implementation of native code execution (NCE) for ARM devices is booting its first games!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nce1.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./nce1.jpg&#34; alt=&#34;And so it begins…&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nce2.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./nce2.jpg&#34; alt=&#34;And so it begins…&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;And so it begins…&lt;/p&gt;


&lt;p&gt;A lot more work is needed before we can even move to the internal testing phase. There are many crashes and softlocks to sort out first, so please have some patience, Android gang.&lt;/p&gt;
&lt;p&gt;With the progress on the Album applet going so well, german77 is progressing further into other interesting applets too. Stay tuned.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./album.png&#34; title=&#34;There’s an easter egg somewhere here!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2023/album_hu47cc800b9760a5b4485a01698cbc99ee_1379543_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;There’s an easter egg somewhere here!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;There’s an easter egg somewhere here!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;That’s all folks! Hope you enjoyed this month&amp;rsquo;s report.
See you next time!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report August 2023</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/</link>
      <pubDate>Wed, 13 Sep 2023 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HkGNeN0LGOE&#34;&gt;Tuturu~&lt;/a&gt; yuz-ers. Did you feel that the last report was too short? Well, August was at full throttle! This month offers important graphical fixes, developers working around GPU limitations, several long overdue file system fixes, Skyline framework support, some Android and Apple love, and more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=HkGNeN0LGOE&#34;&gt;Tuturu~&lt;/a&gt; yuz-ers. Did you feel that the last report was too short? Well, August was at full throttle! This month offers important graphical fixes, developers working around GPU limitations, several long overdue file system fixes, Skyline framework support, some Android and Apple love, and more!&lt;/p&gt;
&lt;h2 id=&#34;yuzu-fried-chicken-forever&#34;&gt;yuzu Fried Chicken Forever&lt;/h2&gt;
&lt;p&gt;And Robin.&lt;/p&gt;
&lt;p&gt;This is &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11225&#34; data-gh-pr=&#34;11225&#34;&gt;the final piece&lt;/a&gt;
 of &lt;code&gt;Project Y.F.C.&lt;/code&gt;, the &lt;code&gt;Query Cache Rewrite&lt;/code&gt;, and the implementation of &lt;code&gt;Host Conditional Rendering&lt;/code&gt;. But before we start, we must explain a few things.&lt;/p&gt;
&lt;h3 id=&#34;why-do-we-need-a-query-cache&#34;&gt;Why do we need a query cache?&lt;/h3&gt;
&lt;p&gt;Many GPUs expose &lt;em&gt;counters&lt;/em&gt;, which are used to gather data from the various commands that GPU executes — things like how many pixels were drawn or how many triangles were generated.
Games use &lt;em&gt;queries&lt;/em&gt; to fetch and load these counters into memory whenever they need to use them.&lt;/p&gt;
&lt;p&gt;yuzu&amp;rsquo;s query cache is responsible for tracking the values of GPU counters for Switch games and services query requests from the game.&lt;/p&gt;
&lt;h3 id=&#34;what-is-it-used-for&#34;&gt;What is it used for?&lt;/h3&gt;
&lt;p&gt;Some games can make use of this fetched data to further optimise their rendering. For example, &lt;code&gt;SUPER MARIO ODYSSEY&lt;/code&gt; optimises the amount of triangles it renders using a commonly used technique called &lt;em&gt;occlusion culling&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Occlusion culling is a feature that disables rendering of objects when they are not currently seen by the camera because they are offscreen or obscured (occluded) by other objects.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;SUPER MARIO ODYSSEY&lt;/code&gt;, the game first renders simple boundary boxes that cover all objects that will be rendered on the screen.
It then queries the number of pixels rendered to each box, and only renders the real objects whose corresponding boxes had any pixels rendered.&lt;/p&gt;
&lt;p&gt;Similarly, &lt;code&gt;Splatoon&lt;/code&gt; games use pixel counts to check whose ink a given character is touching.
The game tests for both ally ink and enemy ink and if both tests fail, then the character is not standing in any ink.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ink.png&#34; title=&#34; Medium-well (Splatoon 2)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/ink_hu8ae1c1692ffa18f59946c0faf8e81642_2442981_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Medium-well (Splatoon 2)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Medium-well (Splatoon 2)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h3 id=&#34;development--challenges&#34;&gt;Development &amp;amp; Challenges&lt;/h3&gt;
&lt;p&gt;yuzu already had a query cache which was developed many years ago.
However, this implementation was not perfect and had many issues. To name just a few:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It could not hold any queries except pixel counts&lt;/li&gt;
&lt;li&gt;It failed to write to memory in the correct order&lt;/li&gt;
&lt;li&gt;It didn&amp;rsquo;t invalidate queries that were later overwritten by other query types&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our resident GPU dev, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;, set out to rework the query cache to fix these issues and modernise the code.
But, as he would later come to figure out, it wasn&amp;rsquo;t going to be easy.&lt;/p&gt;
&lt;p&gt;Recall that the query cache works by running queries on the host GPU.
As it turns out, figuring out how to make it work on the host GPU was actually the hardest part of the entire rewrite, due to significant differences between what the Switch GPU does and what host graphics APIs like Vulkan expose.&lt;/p&gt;
&lt;p&gt;During development, Blinkhawk ran into two big challenges with Host GPU queries.
First, for performance reasons, we can&amp;rsquo;t submit commands to the host GPU immediately upon processing them. We need to batch them in order to get any reasonable level of speed. This leads to the question: when do we need to perform the queries and sync the memory?&lt;/p&gt;
&lt;p&gt;As soon as you start a game, the game begins making queries to get GPU counters.
Normally, the results are obtained by the Switch&amp;rsquo;s GPU immediately after counting is done — when the rendering is done.
But games like &lt;code&gt;SUPER MARIO ODYSSEY&lt;/code&gt;, which use occlusion culling, make a &lt;em&gt;lot&lt;/em&gt; of queries.&lt;/p&gt;
&lt;p&gt;So, if we tried to run all those queries and write the results on the host (user&amp;rsquo;s) GPU in the same way, it would stall the GPU heavily after drawing each scene element to write back the counters.&lt;/p&gt;
&lt;p&gt;To prevent this from happening, Blinkhawk synchronises memory whenever the game requests the GPU to wait for commands to finish rendering. This allows for efficient batching, and for GPU commands which occur after the wait to utilize the counter values.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./occ.png&#34; title=&#34; Turn the camera around and the whole city magically disappears (SUPER MARIO ODYSSEY)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/occ_hu9d09660c2439ac4def1590ef21ab8dc7_3362691_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Turn the camera around and the whole city magically disappears (SUPER MARIO ODYSSEY)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Turn the camera around and the whole city magically disappears (SUPER MARIO ODYSSEY)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Second, in the guest (Switch&amp;rsquo;s) GPU, counters can be reset at any time or not at all.
But this behaviour is not exposed in graphics APIs such as OpenGL and Vulkan.
Instead, these APIs have queries that only count a smaller section such as a single draw or multiple draws.
This meant that we would need to take all the query results and sum them up, especially if the game never resets the counter.&lt;/p&gt;
&lt;p&gt;In the old query cache, we used to sum all of the query results on a single GPU thread, which couldn&amp;rsquo;t keep up with heavy workloads.
As the number of query results increased, so did the time it took to sum them.
This was fine for around 50 or 80 queries, but some games can easily make thousands of queries within a single frame.&lt;/p&gt;
&lt;p&gt;Blinkhawk experimented with a few different algorithms before finally settling on an implementation based on the &lt;a href=&#34;https://en.wikipedia.org/wiki/Prefix_sum&#34;&gt;Hillis Steele Scan Algorithm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The result? Well, let the following list speak for itself:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The lantern in &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt; is fixed.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./qcr1.png&#34; title=&#34; No flashbangs (Luigi’s Mansion 3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/qcr1_hu97fca5501d2306597d89ec0d9b1cc34b_1925416_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; No flashbangs (Luigi’s Mansion 3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; No flashbangs (Luigi’s Mansion 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;The level of detail in &lt;code&gt;Pokémon Scarlet &amp;amp; Violet&lt;/code&gt; is fixed when using High GPU accuracy. No more tree flickering.&lt;/li&gt;
&lt;li&gt;Rendering in some Koei Tecmo games like &lt;code&gt;Marvel Ultimate Alliance 3: The Black Order&lt;/code&gt; is fixed when using High GPU accuracy.&lt;/li&gt;
&lt;li&gt;Glow particles in &lt;code&gt;Xenoblade Chronicles 2 &amp;amp; 3&lt;/code&gt; are fixed when using High GPU accuracy and disabling Asynchronous shader building.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./xc3.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Properly filling the Flame Clock (Xenoblade Chronicles 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Shadows in &lt;code&gt;Metroid Prime Remastered&lt;/code&gt; are fixed.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./qcr2.png&#34; title=&#34; Not that Dark Samus (Metroid Prime Remastered)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/qcr2_hu87582b7a4ad220e4d6bb431ae4dfbce5_1416238_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Not that Dark Samus (Metroid Prime Remastered)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Not that Dark Samus (Metroid Prime Remastered)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Performance increased for low-end and/or power-limited hardware in games that make use of Host Conditional Rendering, like &lt;code&gt;Pokémon Scarlet &amp;amp; Violet&lt;/code&gt;, &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt;, &lt;code&gt;SUPER MARIO ODYSSEY&lt;/code&gt;, most Koei Tecmo titles, and many others.&lt;/li&gt;
&lt;li&gt;And more!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;more-gpu-changes&#34;&gt;More GPU changes&lt;/h2&gt;
&lt;p&gt;GPU changes don’t end there; there’s still quite a bit to cover.&lt;/p&gt;
&lt;p&gt;Let’s begin with a surprise port: &lt;code&gt;Red Dead Redemption&lt;/code&gt; arrived on Switch and other consoles this month, and with it came a new take on the proprietary RAGE engine, giving our devs some quirks to iron out.
You know, the usual with new releases.&lt;/p&gt;
&lt;p&gt;The Dynamic GPU Duo (Blinkhawk and &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt;) analysed the game and concluded that the reason for the initial broken rendering was caused by the lack of support on Vulkan for masked &lt;a href=&#34;https://en.wikipedia.org/wiki/Stencil_buffer&#34;&gt;depth stencil&lt;/a&gt; clears.&lt;/p&gt;
&lt;p&gt;A depth stencil, or combined depth and stencil buffer, is a type of image that combines a depth buffer and stencil buffer into a single image in memory, speeding up the GPU&amp;rsquo;s tests to determine if any given pixel will be drawn.&lt;/p&gt;
&lt;p&gt;To elaborate a bit further:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The depth buffer stores the distance between the camera and pixel currently closest to it, allowing the GPU to determine which pixels will be covered up by other objects and therefore shouldn&amp;rsquo;t be drawn.&lt;/li&gt;
&lt;li&gt;The stencil buffer is more specialised: it stores a single byte for each pixel, which developers generally use to tag certain types of objects. As an example, the ground may be assigned a value of 1, trees and foliage 2, the player 17, and so on. It’s useful to know which pixels belong to which objects for applying various effects. &lt;a href=&#34;https://youtu.be/By7qcgaqGI4?t=1390&#34;&gt;Here&lt;/a&gt; is a great video showing an example of how stencil buffers are used in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;. The material mask buffer mentioned in this video is a stencil buffer, and is used to prevent effects from applying to undesired materials.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main use for these buffers is to correctly render scenes with shadows, reflections, and transparency. As the video example shows, many types of graphical effects are made much easier by tagging each pixel, since this allows the GPU to conditionally apply an effect based on the pixel&amp;rsquo;s material type.&lt;/p&gt;
&lt;p&gt;So why were clear operations a problem on Vulkan?
In graphics programming, clears are used to reset all of a buffer&amp;rsquo;s data to a specified value.
Graphics APIs such as the Switch’s NVN and OpenGL support applying a &lt;a href=&#34;https://registry.khronos.org/OpenGL-Refpages/es2.0/xhtml/glStencilMask.xml&#34;&gt;mask&lt;/a&gt; to clear operations.
The mask changes which bits of the image will be affected when the clear is applied: bit positions set to 1 are affected by the clear, and bit positions set to 0 are left alone.
For example, if the game needs the upper 4 bits of the 8-bit stencil for a subsequent draw, then it may set the mask to binary &lt;code&gt;00001111&lt;/code&gt;, and clear the stencil with a value of 0.
This will cause only the lower 4 bits to be cleared, and the upper 4 bits are left alone, as desired.&lt;/p&gt;
&lt;p&gt;OpenGL supports masks on all clear operations, including colour, depth, and stencil buffers.
However, Vulkan was designed to support mobile GPUs, and on mobile GPUs, the most efficient implementation may be to entirely discard the old buffer when clearing it.
This avoids reading the buffer back from memory, which can be expensive.
So Vulkan does not have a direct equivalent of masked clears, and requires clearing the entire &amp;ldquo;aspect&amp;rdquo; of an image (colour, depth, or stencil) at once.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Red Dead Redemption&lt;/code&gt; was using a masked clear on its stencil buffer. This is why the bug was only affecting grass and bushes: the game was trying to keep those values intact with the mask.
But since we translated clears directly from the game to Vulkan clears, we were just wiping out the entire stencil buffer, breaking the bush and grass rendering in the process.&lt;/p&gt;
&lt;p&gt;The solution we came up with for Vulkan is similar to a trick &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/9631&#34;&gt;we previously used for Persona 5 Royal&lt;/a&gt;: use a regular draw, rather than a clear.
With a regular draw, we are able to use the built-in hardware support for applying a stencil mask, and produce the same result as OpenGL.&lt;/p&gt;
&lt;p&gt;The new system in place works by drawing a fullscreen triangle, which allows the regular stencil hardware to handle masking and buffer writing. Thanks to this, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11320&#34; data-gh-pr=&#34;11320&#34;&gt;rendering issues in grass and bushes in Red Dead Redemption are now solved.&lt;/a&gt;

Howdy! You get correct rendering directly to your face, like it or not.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rdr.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/rdr_hufe67af7a0daad68ba899011c682eacca_2669692_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;You have some tequilas, then Juan decides he is an adventurer (Red Dead Redemption)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./juan.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/juan_hudfb9df49ec994b89e45e054055e4decb_2074359_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;You have some tequilas, then Juan decides he is an adventurer (Red Dead Redemption)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;You have some tequilas, then Juan decides he is an adventurer (Red Dead Redemption)&lt;/p&gt;


&lt;p&gt;Blinkhawk and Maide also spotted an old regression in how indirect compute dispatch is emulated.
For the uninitiated, indirect dispatch is a technique used to allow the GPU to get the amount of work it needs to perform from a result generated by another compute shader or GPU operation, instead of being passed by the CPU at the moment of recording. Avoiding the slower CPU path by letting the GPU work indepedently like this improves performance.
Such an independent and strong Tegra X1 GPU. Look at it grow.&lt;/p&gt;
&lt;p&gt;Thanks to this &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11383&#34; data-gh-pr=&#34;11383&#34;&gt;late intervention,&lt;/a&gt;
 &lt;code&gt;Mario + Rabbids Kingdom Battle&lt;/code&gt;, &lt;code&gt;Mario + Rabbids Sparks of Hope&lt;/code&gt;, and &lt;code&gt;Sea of Solitude&lt;/code&gt; now render much better: shadows in the Rabbids series have the proper level of shade, and environments in Sea of Solitude are now visible.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mr.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/mr_hu1299100a3f87e4754e32b88175e2260b_3168834_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This one took a while, eh (Mario &amp;#43; Rabbids Kingdom Battle &amp;amp; Sea of Solitude)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sos.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/sos_huaae1de8f13bb39511d1963201693f7ea_1916300_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This one took a while, eh (Mario &amp;#43; Rabbids Kingdom Battle &amp;amp; Sea of Solitude)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;This one took a while, eh (Mario &amp;#43; Rabbids Kingdom Battle &amp;amp; Sea of Solitude)&lt;/p&gt;


&lt;p&gt;The water in Sea of Solitude requires emulating other very tricky aspects of the Tegra X1, so that’s homework for later.&lt;/p&gt;
&lt;p&gt;As Maide also has learnt by now, &lt;code&gt;Accelerated DMA&lt;/code&gt; fast path is an eccentric lady.
She’s responsible for uploading and downloading image data directly from the GPU, converting image data on the CPU and system memory.
But, it can only work when just the right conditions are met.
If you don’t tread carefully enough near her, you will get the wrong data, in the wrong place, at the wrong moment.
Such was the fortune of &lt;code&gt;Sid Meier&#39;s Civilization VI&lt;/code&gt;, a game that crashed on Vulkan, and rendered completely broken on OpenGL.&lt;/p&gt;
&lt;p&gt;The culprit? Not marking a destination buffer and/or image as modified, causing any future read to not trigger the corresponding download. This resulted in the game reading the wrong data.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11278&#34; data-gh-pr=&#34;11278&#34;&gt;This quirk of the fast path has now been solved,&lt;/a&gt;
 and a CPU fallback path for cases when an address isn’t valid for a given image format has been added. Strategy fans can now nuke each other to their heart&amp;rsquo;s content.
Gandhi says peace was never an option.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./civ.png&#34; title=&#34; Just one more turn (Sid Meier&amp;#39;s Civilization VI)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/civ_hu91f5b936413d896f70191b3fe53c8f6a_2917222_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Just one more turn (Sid Meier&amp;#39;s Civilization VI)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Just one more turn (Sid Meier&amp;#39;s Civilization VI)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;For our &lt;em&gt;cultured&lt;/em&gt; players out there, Blinkhawk and &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; bring us much-awaited fixes for &lt;code&gt;Bayonetta 3&lt;/code&gt;.
They involve emulating how the Switch’s GPU drivers emulate a feature the hardware doesn’t support. Yep.&lt;/p&gt;
&lt;p&gt;This story revolves around &lt;code&gt;textureGrad&lt;/code&gt;, an OpenGL function that does texture lookups over multiple mipmap levels based on the supplied angle, and returns a single texel.&lt;/p&gt;
&lt;p&gt;Well, the Maxwell-based GPU on the Tegra X1 of the Switch can’t do this natively for 3D textures, so it uses the SAM and RAM instructions to enter into and leave a special mode, which we don&amp;rsquo;t know much about — but we do know it is used for calculating the derivatives for the texture fetch.&lt;/p&gt;
&lt;p&gt;By looking for this &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11316&#34; data-gh-pr=&#34;11316&#34;&gt;instruction pattern,&lt;/a&gt;
 Blinkhawk implemented preliminary support for the fog and clouds in &lt;code&gt;Bayonetta 3&lt;/code&gt;.
byte[] later &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11430&#34; data-gh-pr=&#34;11430&#34;&gt;fixed the implementation&lt;/a&gt;
 to make it behave the way Blink initially intended, and to avoid crashes on Mesa and RDNA3-based GPUs (AMD Radeon RX 7000 series).&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/bayobug_hu9b64b2669cd2b09aac8db07473b744d6_3586653_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mystic Mist (Bayonetta 3)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/bayofix_huec0e9606966f439cac60f1a4b515bcd7_3552949_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mystic Mist (Bayonetta 3)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Mystic Mist (Bayonetta 3)&lt;/p&gt;


&lt;p&gt;Not intending to stop there, Blinkhawk also improved the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11389&#34; data-gh-pr=&#34;11389&#34;&gt;logic for discarding unnecessary writes&lt;/a&gt;
 in the buffer cache, and improved how the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11393&#34; data-gh-pr=&#34;11393&#34;&gt;size of the index buffer&lt;/a&gt;
 (where indices of vertices to form meshes is stored) is estimated.
The result? A 69% or higher performance boost in &lt;code&gt;Bayonetta 3&lt;/code&gt;, depending on the system specs. Nice.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bayo1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/bayo1_hue6d9694de686db3eb78659e54002d7ad_2896407_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ara, ara (Bayonetta 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bayo2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/bayo2_hu3d9bf3652d58a29dc848c2dac08e5cd4_2335367_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ara, ara (Bayonetta 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bayo3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/bayo3_hu47203933dbbf0b985643a24234573e31_3445270_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ara, ara (Bayonetta 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Ara, ara (Bayonetta 3)&lt;/p&gt;


&lt;p&gt;byte[] discovered that yuzu’s implementation of nvnflinger, the service responsible for presenting to screen, was missing a scale mode option, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11281&#34; data-gh-pr=&#34;11281&#34;&gt;preserve aspect ratio.&lt;/a&gt;

Implementing it solves the rendering of &lt;code&gt;Gunvolt Chronicles Luminous Avenger iX&lt;/code&gt; in its base version.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gunvolt.png&#34; title=&#34; Hell yeah, sprites! (Gunvolt Chronicles Luminous Avenger iX)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/gunvolt_hu261ee6cda1575c020bcbdd7727ba4f48_272658_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Hell yeah, sprites! (Gunvolt Chronicles Luminous Avenger iX)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Hell yeah, sprites! (Gunvolt Chronicles Luminous Avenger iX)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;A user reported an unknown change from a long time ago was causing &lt;code&gt;AI: THE SOMNIUM FILES&lt;/code&gt; to constantly crash.
byte[] found the culprit was hiding in how mappings were being aligned during allocation but not deallocation, a bug originally discovered by ex-Skyline emulator developer &lt;a href=&#34;https://github.com/skyline-emu/skyline/commits?author=bylaws&#34;&gt;bylaws&lt;/a&gt;.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11375&#34; data-gh-pr=&#34;11375&#34;&gt;Regression solved, game stable, case closed.&lt;/a&gt;
&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ai.png&#34; title=&#34; Elementary, my dear user (AI: THE SOMNIUM FILES)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/ai_hudc09661f2b5ea0b96db2652c3e02a44d_1249250_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Elementary, my dear user (AI: THE SOMNIUM FILES)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Elementary, my dear user (AI: THE SOMNIUM FILES)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;And finally, to close this section with what is more of a build process change than a graphics code change, &lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; added &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11302&#34; data-gh-pr=&#34;11302&#34;&gt;MoltenVK as an external dependency&lt;/a&gt;
 to yuzu’s CMake settings, allowing Apple users to automatically get the latest version of this translation library when building yuzu on their Vulkan-starved machines. (AGXV, anyone?)&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./m1.png&#34; title=&#34; Let’s begin with simple stuff (DRAGON QUEST III The Seeds of Salvation)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/m1_hu4ec7173b46c449cb6fc22a50ace7f7be_929323_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Let’s begin with simple stuff (DRAGON QUEST III The Seeds of Salvation)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Let’s begin with simple stuff (DRAGON QUEST III The Seeds of Salvation)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Properly keeping up with MoltenVK updates allows macOS builds to run some basic games, but there’s still much to do to get the forbidden fruit company&amp;rsquo;s devices up to speed.&lt;/p&gt;
&lt;h2 id=&#34;opengl-specific-improvements-which-also-improve-vulkan&#34;&gt;OpenGL-specific improvements, which also improve Vulkan&lt;/h2&gt;
&lt;p&gt;That’s right, Mesa and NVIDIA Fermi/Kepler users, it’s your turn to get some love.
&lt;a href=&#34;https://github.com/ameerj&#34;&gt;Epicboy&lt;/a&gt; is back with some great changes for the &lt;del&gt;old&lt;/del&gt; classic API that started it all, OpenGL.&lt;/p&gt;
&lt;p&gt;First on the list is a major overhaul for GPU ASTC decoding, for both OpenGL and Vulkan APIs.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11149&#34; data-gh-pr=&#34;11149&#34;&gt;Code optimizations&lt;/a&gt;
 in several areas of the compute shader-based decoder improved Vulkan ASTC decoding performance by up to 60%, but it made OpenGL on NVIDIA &lt;em&gt;15 times&lt;/em&gt; faster, making it now slightly faster than Vulkan at decoding ASTC textures.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./astc.png&#34; title=&#34; Subtle jump&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/astc_hu4a44927b91dafd2e58d9b0cb91ea9a01_17208_721x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Subtle jump&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Subtle jump&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;GPUs which were left behind on Vulkan support can now enjoy much smoother performance in titles like &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt;, &lt;code&gt;Bayonetta 3&lt;/code&gt;, &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;To get the most out of this change, the &lt;code&gt;ASTC recompression&lt;/code&gt; method must be set to &lt;code&gt;Uncompressed&lt;/code&gt;, and &lt;code&gt;Enable asynchronous presentation&lt;/code&gt; should be enabled if you’re using Vulkan.
Both options can be found in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; later &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11216&#34; data-gh-pr=&#34;11216&#34;&gt;blocked Mesa’s native ASTC decoder,&lt;/a&gt;
 as it is now considerably slower than our implementation.&lt;/p&gt;
&lt;p&gt;And lastly, Epicboy solved what was a very common issue for &lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt; players before we made Vulkan the default API.
Sit down, kids, it’s story time.&lt;/p&gt;
&lt;p&gt;In the not-so-far-away good old days, yuzu was only experimenting with an incomplete and immature Vulkan backend, there was no LDN/LAN support, and an Android release was considered to be a fever dream.
Back then we used the OpenGL API by default, and out of its three options for shader backends, GLASM was the shader backend of choice, since it didn’t affect incompatible drivers — it’s an NVIDIA-only &amp;ldquo;feature&amp;rdquo; and any other driver would automatically revert to the vendor-agnostic GLSL.
This provided NVIDIA users the best experience at the time, with the lowest shader build times available, until Vulkan improved enough to be the full replacement it is today.&lt;/p&gt;
&lt;p&gt;A very common report during these migration days was that character shading in &lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt; was wrong — it either introduced weird motes to characters, or they looked completely devoid of any form of lighting.
This problem was quickly found to be rooted in GLASM.&lt;/p&gt;
&lt;p&gt;Since GLASM was, and continues to be, almost impossible to work on due to its complete lack of tools to debug and assist development, no developer wanted to touch it after Rodrigo introduced it. As he later left for greener pastures, this has resulted in our GLASM shader backend becoming entirely unmaintained.&lt;/p&gt;
&lt;p&gt;Well, enter 2023, and Epicboy rolled up his sleeves and got to work. He discovered that the issue was in &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11282&#34; data-gh-pr=&#34;11282&#34;&gt;how GLASM handled transform feedback.&lt;/a&gt;

By implementing support for multiple transform feedback buffers, he has not only solved the issue in the only good main Pokémon release in the Switch (writer’s opinion, you can’t prove me wrong), but most likely many other modern Switch games that rely on transform feedback to render.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/plabug_hucb112d1bbc3bb40637f8e225dd3831ac_2785176_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Still good graphics for the Gamecube (Pokémon Legends: Arceus)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/plafix_hu1b1d752f43f1876e4d721e27c1bd1556_2778345_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Still good graphics for the Gamecube (Pokémon Legends: Arceus)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Still good graphics for the Gamecube (Pokémon Legends: Arceus)&lt;/p&gt;


&lt;p&gt;We hope our warriors still rocking the never-dying GTX 400 to 700 series GPUs benefit from these changes.&lt;/p&gt;
&lt;h2 id=&#34;skyline-framework-part-3&#34;&gt;Skyline framework: Part 3&lt;/h2&gt;
&lt;p&gt;After a long, &lt;em&gt;looong&lt;/em&gt; wait, support for the &lt;a href=&#34;https://github.com/skyline-dev/skyline&#34;&gt;Skyline&lt;/a&gt; framework, and with it, support for the &lt;a href=&#34;https://github.com/Raytwo/ARCropolis&#34;&gt;ARCropolis&lt;/a&gt; modding framework for &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; has finally landed!
But we’re getting ahead of ourselves. Let’s see how byte[] made this possible.&lt;/p&gt;
&lt;p&gt;As part of implementing a security technique called ASLR (Address Space Layout Randomization), there is a large range of addresses that a program&amp;rsquo;s code can be loaded at on the Switch.
In fact, even though the Switch only has 4 GB of physical memory, the size of the region where program code can be virtually mapped can be as large as 512GB.
Programs shouldn&amp;rsquo;t make assumptions about where they are loaded inside the address space, because they can be shifted around anywhere inside this range on the console.
As it turns out, the Skyline framework requires that the program not be loaded at the very start of the region, but yuzu always loaded it there, causing it to reliably crash.
byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11326&#34; data-gh-pr=&#34;11326&#34;&gt;worked around this limitation of Skyline&lt;/a&gt;
 by shifting the code load address further into the ASLR region, allowing room for it to operate.&lt;/p&gt;
&lt;p&gt;yuzu’s code responsible for handling service calls from guest code is not exactly in &lt;em&gt;ideal shape&lt;/em&gt;.
One particularly annoying issue from the early days of the emulator is a lock which prevents a service object from receiving concurrent requests from different sessions.
Since the implementation is incorrect (the lock should not be present at all), but a lot of existing yuzu code depends on it, byte[] instead &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11327&#34; data-gh-pr=&#34;11327&#34;&gt;avoids locking only around calls to socket interfaces,&lt;/a&gt;
 avoiding a deadlock when Skyline&amp;rsquo;s TCP logger is active.
More work remains to be done to remove this service lock once and for all.&lt;/p&gt;
&lt;p&gt;With these changes, the Skyline framework is operational, but a bit more work was needed to get ARCropolis up and running, and the Smash modding community happy.
Thankfully, byte[] didn’t stop there, and continued implementing the required changes.&lt;/p&gt;
&lt;p&gt;ARCropolis used to incorrectly initiate the handshake when connecting to an SSL/TLS socket without first setting a hostname.
This has been &lt;a href=&#34;https://github.com/skyline-rs/rust-native-tls/commit/94134cd3bcf5b495d1be336b4b0e8c47399ae1a4&#34;&gt;fixed&lt;/a&gt; in ARCropolis’s dependencies, but most users have not updated yet to the corrected releases, so &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11328&#34; data-gh-pr=&#34;11328&#34;&gt;yuzu has to support this behaviour.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;And lastly, yuzu was missing support for HTML manual mods, so byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11342&#34; data-gh-pr=&#34;11342&#34;&gt;implemented support for that&lt;/a&gt;
 too.&lt;/p&gt;
&lt;p&gt;The end result after these few fixes is that most mods for Super Smash Bros. Ultimate are now working!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./arc1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/arc1_hubf25de628d2d8498e8a5a56fd584806b_141507_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Let the modding begin! (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./arc2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/arc2_hu8a5d2954866c47f1708d48938c04606c_349195_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Let the modding begin! (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Let the modding begin! (Super Smash Bros. Ultimate)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./arc3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/arc3_hu56ebc3a9d514c5b88dc7d21b84a4ee4a_2576193_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Bocchi-chan vs Melia, the fight of the century (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./arc4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/arc4_hua82f5cc7f8780c9dc40bb4e025625352_2277753_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Bocchi-chan vs Melia, the fight of the century (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./arc5.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/arc5_hude8a81e85cc5664b89ba1c4499bbc78d_2743524_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Bocchi-chan vs Melia, the fight of the century (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Bocchi-chan vs Melia, the fight of the century (Super Smash Bros. Ultimate)&lt;/p&gt;


&lt;p&gt;Happy modding! &lt;a href=&#34;https://gamebanana.com/tuts/14688&#34;&gt;Here’s a tutorial&lt;/a&gt; for those interested.&lt;/p&gt;
&lt;h2 id=&#34;project-terra&#34;&gt;Project Terra?&lt;/h2&gt;
&lt;p&gt;Yep, byte[] asked for a rename. From now on, Project Terra will be the name of the effort to fix the current virtual file system emulation implementation while Project Gaia is in the works.&lt;/p&gt;
&lt;p&gt;Why the rename? Because we have a lot of fixes to tell you about.
To begin with, yuzu now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11284&#34; data-gh-pr=&#34;11284&#34;&gt;supports sparse and compressed NCA games!&lt;/a&gt;

This means a long list of titles whose eShop releases couldn’t previously boot are now either running or perfectly playable, and their RomFS can be fully dumped.&lt;/p&gt;
&lt;p&gt;Here’s a nowhere-close-to-complete list of now-working eShop titles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Splatoon 3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Bayonetta 3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Atelier Ryza 3: Alchemist of the End &amp;amp; the Secret Key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Double Dragon Gaiden: Rise of the Dragons&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OneShot: World Machine Edition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Skullgirls: 2nd Encore&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Everdream Valley&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Magical Drop VI&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Hatsune Miku - The Planet Of Wonder And Fragments Of Wishes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MLB The Show 23&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Sports Story&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Front Mission 1st: Remake&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cursed to Golf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ruined King: A League of Legends Story&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Mega Man Battle Network Legacy Collection&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;And many more!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11309&#34; data-gh-pr=&#34;11309&#34;&gt;Support for gamecard dumps with a prepended key area&lt;/a&gt;
 has been added too, thanks to byte[]. This allows using dumps with the option to dump the key area enabled.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bike1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/bike1_hue813fdb7947f0eb981f6ddc3b9453e73_2164043_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Nice bike (Fuuraiki 4)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bike2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/bike2_hu58d530e8c840cb7efa106d244aa59f59_2052930_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Nice bike (Fuuraiki 4)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bike3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/bike3_hu239e2b30935e579b06d1b3ff0c3cc3b3_3273350_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Nice bike (Fuuraiki 4)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Nice bike (Fuuraiki 4)&lt;/p&gt;


&lt;p&gt;Installing updates and DLC for multi-program applications (such as a game launcher with several games inside) didn&amp;rsquo;t work properly on yuzu.
This meant games like &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt; would only launch the base game version no matter what the user did.
The current virtual file system implementation can’t properly support this, which is one of the many areas Project Gaia is geared to fix.
To bypass this limitation, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11319&#34; data-gh-pr=&#34;11319&#34;&gt;creates synthetic update metadata&lt;/a&gt;
 inside yuzu, allowing the update/DLC to pass through and load correctly.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;FearlessTobi&lt;/a&gt; fixed &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11367&#34; data-gh-pr=&#34;11367&#34;&gt;an &lt;em&gt;old&lt;/em&gt; regression&lt;/a&gt;
 affecting how the game’s size is displayed on the game list when using games dumped with an outdated method.
How old is the regression? Well, it’s 5 years old by now.&lt;/p&gt;
&lt;p&gt;FearlessTobi also fixed a bug in &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11370&#34; data-gh-pr=&#34;11370&#34;&gt;how an error is handled&lt;/a&gt;
 when a game tries to rename a file to a name that already exists.
This was causing &lt;code&gt;GRID Autosport&lt;/code&gt; to crash on boot.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./grid.png&#34; title=&#34;Running in the 90s (GRID Autosport)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/grid_hubc7d2610c4cf4a5c735965c9cc751a05_1764514_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Running in the 90s (GRID Autosport)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Running in the 90s (GRID Autosport)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Not stopping there, FearlessTobi also fixed yuzu&amp;rsquo;s command line arguments to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11371&#34; data-gh-pr=&#34;11371&#34;&gt;properly load updates and DLC&lt;/a&gt;
 when booting a game — for example, when using a script.&lt;/p&gt;
&lt;p&gt;Users reported that some RomFS dumps from games don’t always include all game assets, with one example being &lt;code&gt;KLONOA Phantasy Reverie Series&lt;/code&gt;.
byte[]’s investigation showed that several areas of the RomFS dump code were… of low quality.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11381&#34; data-gh-pr=&#34;11381&#34;&gt;After a moderate rewrite,&lt;/a&gt;
 RomFS dumps of multi-title games should now include all assets.&lt;/p&gt;
&lt;h2 id=&#34;audio-input-and-core-changes&#34;&gt;Audio, input, and core changes&lt;/h2&gt;
&lt;p&gt;Let’s start with the sole input change of this progress report. &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; almost broke his streak!&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11406&#34; data-gh-pr=&#34;11406&#34;&gt;Updating SDL to version 2.28.2&lt;/a&gt;
 fixed issues affecting Xbox controller trigger motion events and their rumble while the program runs in the background.
8BitDo gamepad mapping while in XInput mode was fixed for Linux.
And a controller lockup that happened when initialising some unofficial PS4 controllers is now fixed.&lt;/p&gt;
&lt;p&gt;Some users&amp;rsquo; machines have improperly configured audio devices, which can lead to games locking up on boot.
This lovely behaviour forced Maide to work on a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11359&#34; data-gh-pr=&#34;11359&#34;&gt;test to run early in the boot process&lt;/a&gt;
 to see which audio backend can properly start the audio device. If the device fails to initialise with both cubeb and SDL, the null backend is selected and the game continues to work, just without any audio output.&lt;/p&gt;
&lt;p&gt;If you find that a game has no audio but is otherwise working, you should check your drivers, check any intermediate programs like equalisers, and check your OS settings for issues.&lt;/p&gt;
&lt;p&gt;Opus is a lossy open-source and royalty-free (as it always should be) audio format used by several games.
Like with the VP9 video format, its implementation in yuzu is not as simple as just playing the file.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11390&#34; data-gh-pr=&#34;11390&#34;&gt;By implementing&lt;/a&gt;
 the &lt;code&gt;OpenHardwareOpusDecoderForMultiStreamEx&lt;/code&gt; and &lt;code&gt;DecodeInterleavedForMultiStream&lt;/code&gt; service methods (Opus multistream support), FearlessTobi ensured games like &lt;code&gt;MLB The Show 22&lt;/code&gt; are now playable.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11419&#34; data-gh-pr=&#34;11419&#34;&gt;Implementing&lt;/a&gt;
 the &lt;code&gt;GetWorkBufferSizeExEx&lt;/code&gt; service method, on the other hand, allowed &lt;code&gt;Sea of Stars&lt;/code&gt; to boot.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sos1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/sos1_hu9c48c8afb78fa6d83a858c88386b4408_451499_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Nothing beats the look of a classic RPG (Sea of Stars)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sos2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/sos2_huea34c75a5328341b54610ad12323804a_2286131_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Nothing beats the look of a classic RPG (Sea of Stars)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sos3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/sos3_huf3c87ec5a6cfa44184da37aa7291627f_1801445_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Nothing beats the look of a classic RPG (Sea of Stars)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sos4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/sos4_hub66b7a38bc8fabc48b8fecb4d0974842_2058456_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Nothing beats the look of a classic RPG (Sea of Stars)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Nothing beats the look of a classic RPG (Sea of Stars)&lt;/p&gt;


&lt;p&gt;If anyone experienced audio related crashes (specifically related to audio effects) in games like &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt;, &lt;code&gt;SUPER MARIO ODYSSEY&lt;/code&gt;, and some others, well, with the help from &lt;a href=&#34;https://github.com/ChiefGokhlayeh&#34;&gt;ChiefGokhlayeh&lt;/a&gt;, Maide &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11408&#34; data-gh-pr=&#34;11408&#34;&gt;found the broken node Id index&lt;/a&gt;
 that caused the problem.&lt;/p&gt;
&lt;p&gt;Still fighting the war of shutting down yuzu in a sensible manner, byte[] changed the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11384&#34; data-gh-pr=&#34;11384&#34;&gt;shutdown timeout&lt;/a&gt;
 to more closely match the behaviour of the Switch. Most games now exit within one second.&lt;/p&gt;
&lt;p&gt;Another area where shutting down has improved, this time related to the Skyline framework, is cancelling pending socket operations caused by the TCP logger.
One of the operations can remain waiting for a host to be accepted.
This will never complete once a shutdown event is triggered, so &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11385&#34; data-gh-pr=&#34;11385&#34;&gt;a swift termination is issued&lt;/a&gt;
 now.&lt;/p&gt;
&lt;h2 id=&#34;android-augmentation&#34;&gt;Android augmentation&lt;/h2&gt;
&lt;p&gt;Besides all previously reported changes, Android got its share of specific bugfixes and UI changes too, courtesy of &lt;a href=&#34;https://github.com/t895&#34;&gt;t895&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11271&#34; data-gh-pr=&#34;11271&#34;&gt;Miscellaneous settings tweaks,&lt;/a&gt;
 including displaying settings values in list view, reducing the opacity of non-editable settings, removing some unnecessary default buttons in slider dialogs, and a few other minor changes.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./grey.png&#34; title=&#34;These settings can&amp;#39;t be changed while running a game&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/grey_hu5e489adbb11a44387c25ab72d8a562c9_41274_389x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;These settings can&amp;#39;t be changed while running a game&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;These settings can&amp;#39;t be changed while running a game&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11272&#34; data-gh-pr=&#34;11272&#34;&gt;Show associated values for home settings.&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11273&#34; data-gh-pr=&#34;11273&#34;&gt;Changes to the initial setup,&lt;/a&gt;
 showing if a step was completed, and automatically moving to the next page on completion.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./setup.gif&#34; title=&#34;Easier setup!&#34;&gt;&lt;img src=&#34;./setup.gif&#34; alt=&#34;Easier setup!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Easier setup!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11337&#34; data-gh-pr=&#34;11337&#34;&gt;Automatically rotate the screen&lt;/a&gt;
 between landscape and reverse-landscape.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11352&#34; data-gh-pr=&#34;11352&#34;&gt;Search for programs up to 3 subfolders deep.&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11378&#34; data-gh-pr=&#34;11378&#34;&gt;Use appCategory to report yuzu as a game.&lt;/a&gt;
 This should improve game launcher detection, but surprisingly, it’s not enough to make Samsung’s Game Launcher detect yuzu.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11380&#34; data-gh-pr=&#34;11380&#34;&gt;A settings rework,&lt;/a&gt;
 including better material animations, hiding paired options, adding a settings search function, and improving restore states for dialogs properly.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./setting1.gif&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./setting1.gif&#34; alt=&#34;Cleaner and more functional&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./setting2.gif&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./setting2.gif&#34; alt=&#34;Cleaner and more functional&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./setting3.gif&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./setting3.gif&#34; alt=&#34;Cleaner and more functional&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./setting4.gif&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./setting4.gif&#34; alt=&#34;Cleaner and more functional&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Cleaner and more functional&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11392&#34; data-gh-pr=&#34;11392&#34;&gt;Fixing some activity issues,&lt;/a&gt;
 like the surface appearing stretched when changing orientation, or starting a game in landscape mode and then switching to portrait.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11405&#34; data-gh-pr=&#34;11405&#34;&gt;Adding new loading and closing animations.&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./load.gif&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./load.gif&#34; alt=&#34;Showing the progress&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./close.gif&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./close.gif&#34; alt=&#34;Showing the progress&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Showing the progress&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11413&#34; data-gh-pr=&#34;11413&#34;&gt;Support intents to emulation activity,&lt;/a&gt;
 so users can launch games from other apps like Daijishō.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dai.gif&#34; title=&#34;For those who prefer it&#34;&gt;&lt;img src=&#34;./dai.gif&#34; alt=&#34;For those who prefer it&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;For those who prefer it&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11416&#34; data-gh-pr=&#34;11416&#34;&gt;Adding the ability to create dynamic app shortcuts,&lt;/a&gt;
 so users can make per game icons.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./icon.gif&#34; title=&#34;A faster way to get in-game!&#34;&gt;&lt;img src=&#34;./icon.gif&#34; alt=&#34;A faster way to get in-game!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;A faster way to get in-game!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11420&#34; data-gh-pr=&#34;11420&#34;&gt;Fixing a bug in the game content installer&lt;/a&gt;
 that would lead to a crash when trying to install an update or DLC.&lt;/li&gt;
&lt;li&gt;And more!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also joining forces in the Android effort, byte[] fixed a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11357&#34; data-gh-pr=&#34;11357&#34;&gt;virtual file system bug&lt;/a&gt;
 that made any game with updates installed fail to boot after merging his earlier changes to support compressed and sparse NCAs.&lt;/p&gt;
&lt;h2 id=&#34;desktop-ui-improvements&#34;&gt;Desktop UI improvements&lt;/h2&gt;
&lt;p&gt;The desktop side of things also got its share of developer love.&lt;/p&gt;
&lt;p&gt;Newcomer &lt;a href=&#34;https://github.com/mdmrk&#34;&gt;mdmrk&lt;/a&gt; brings us a very requested feature: &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10519&#34; data-gh-pr=&#34;10519&#34;&gt;per-game play time tracking!&lt;/a&gt;

It’s shown in the game list as a new column.
Thank you!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./time.png&#34; title=&#34;Power level reading&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/time_hudb5491ebc34c900011bbb66abb4ede94_4525_272x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Power level reading&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Power level reading&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Since the introduction of the screenshot feature, yuzu has only saved captures in a 16:9 aspect ratio, regardless of the selected aspect ratio in graphics settings.
Also, the resolution of the captures was always based on the chosen resolution multiplier value; if 2x was in use, any capture while playing in docked mode would be 3840x2160 in size.&lt;/p&gt;
&lt;p&gt;With motivation from some recent mods that bypass our scaler and render games in 1x resolution directly at 4K, toastUnlimited added &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11303&#34; data-gh-pr=&#34;11303&#34;&gt;configuration options for screenshot resolution,&lt;/a&gt;
 along with considering the aspect ratio selected by the user.
Now users can set the screenshot resolution in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; General &amp;gt; UI &amp;gt; Resolution&lt;/code&gt;. Auto will use the previous logic of using the resolution multiplier value, but many other resolution options can be picked.
Additionally, what the user selects in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Aspect Ratio&lt;/code&gt; will determine the aspect ratio and resulting resolution of the screenshots.
Feel free to experiment, and save your best gameplay moments!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./res.png&#34; title=&#34;A picture is worth a thousand words&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/res_hu4ad0ac5a022a571e979d4a2090e77096_26456_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;A picture is worth a thousand words&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;A picture is worth a thousand words&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Per-game settings are a great way to customise the settings and mods of each game.
One option in a weird spot was &lt;code&gt;Console mode&lt;/code&gt; — whether a game was played in docked or handheld mode.
The old implementation relied on controller profiles: the user would set some controller mapping, the type of controller, the console mode, save all of this as a profile, and then set each game to use the preferred controller profile.
The problem with this approach is that it forces users to save different controller profiles, when in most cases a single one is used, for example, a Pro Controller profile using a Sony Dual Sense.
To simplify this particular situation, toastUnlimited &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11356&#34; data-gh-pr=&#34;11356&#34;&gt;added a Console Mode to the per-game system properties.&lt;/a&gt;
 Much easier, right?&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./console.png&#34; title=&#34;For even more customisation&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/console_hu5c1ab4c4d573ece6e9cd2b3a8d8dd3d4_151350_902x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;For even more customisation&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;For even more customisation&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;p&gt;This section has been pretty calm lately. For the most part, drivers have been behaving and not introducing critical regressions recently, and the Mesa Turnip driver for the Adreno Android players has been progressing healthily. It’s not fully stable yet, but rendering and performance are in a good spot.
There’s only one vendor to discuss this time, and it is…&lt;/p&gt;
&lt;h3 id=&#34;amd-and-the-d24-situation&#34;&gt;AMD, and the D24 situation&lt;/h3&gt;
&lt;p&gt;We continue our investigations into how to deal with the lack of hardware support for the D24 depth format on Red Team hardware.&lt;/p&gt;
&lt;p&gt;Some fun and totally-not-evil experiments (faking lack of support with an RTX 3060 Ti) proved that while the D24 glitches are easy to reproduce on compatible hardware by just commenting out some lines, we also confirmed that the vertex explosions affecting &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; in its DLC, &lt;code&gt;Future Redeemed&lt;/code&gt;, and in the &lt;code&gt;Pentelas region&lt;/code&gt; of the main game are &lt;em&gt;not&lt;/em&gt; caused by the lack of D24 on AMD cards.
Any other GPU vendor with D24 support disabled renders those sections perfectly fine, leaving us again with no clue on what Radeon GPUs hate about this particular game.&lt;/p&gt;
&lt;p&gt;On Windows, OpenGL continues to be the only alternative for Red Team users for the time being.
Mesa, on the other hand, seems to have solved the issue (at least on Polaris hardware) with their latest version, so &amp;ldquo;just use Linux&amp;rdquo; seems to be a way to fix an AMD-specific problem once again.&lt;/p&gt;
&lt;p&gt;But it’s not all bad news! A new Vulkan extension, &lt;code&gt;VK_EXT_depth_bias_control&lt;/code&gt;, which is for now only available on the Linux Mesa RADV driver, allows yuzu to properly fake D24 support, fixing the rendering issues on games like &lt;code&gt;Pokémon Sword &amp;amp; Shield&lt;/code&gt;, &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;, and &lt;code&gt;Mario Tennis Aces&lt;/code&gt;, among others.&lt;/p&gt;
&lt;p&gt;Blinkhawk &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11402&#34; data-gh-pr=&#34;11402&#34;&gt;added a preliminary implementation&lt;/a&gt;
 supporting &lt;code&gt;VK_EXT_depth_bias_control&lt;/code&gt; to yuzu for testing.
We hope AMD adds support for it in their Windows drivers, as it is known they use the feature internally for OpenGL.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/d24bug_hue53718eabe28dba94c039d4b60802912_62957_306x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hardware support for the right formats matters (Pokémon Sword)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2023/d24fix_hu570de75242439608c32cd571bf6d3255_61239_285x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hardware support for the right formats matters (Pokémon Sword)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Hardware support for the right formats matters (Pokémon Sword)&lt;/p&gt;


&lt;p&gt;As a small anecdote about &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;, we had to hardcode a value to allow AMD cards to render this game not long after the introduction of our Vulkan API.
The story with D24 has been with us since the very beginning.&lt;/p&gt;
&lt;h3 id=&#34;samsung-xclipse-920&#34;&gt;Samsung Xclipse 920&lt;/h3&gt;
&lt;p&gt;Technically it is the same vendor, right?&lt;/p&gt;
&lt;p&gt;Recent changes in which Vulkan extensions are mandatory and which are optional made this AMD RDNA2-based GPU work with the Android releases, adding another compatible vendor to the group of decent-enough SoC GPUs, along with Adreno and Mali.
Exynos 2200 users can now enjoy their Switch games on their Android devices!&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;Blinkhawk is back to proposing ideas which are so crazy, we could never properly explain them here.
And both byte[] and Morph are cooking interesting projects for after they finish their current challenges.&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you for taking the time to read until the end. We hope to see you next time!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report July 2023</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/</link>
      <pubDate>Sun, 13 Aug 2023 06:45:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/</guid>
      <description>&lt;p&gt;Hey there, yuz-ers!
Welcome back to our monthly report on all the improved features, performance gains, and bug fixes we&amp;rsquo;ve made.
Let&amp;rsquo;s jump right in!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey there, yuz-ers!
Welcome back to our monthly report on all the improved features, performance gains, and bug fixes we&amp;rsquo;ve made.
Let&amp;rsquo;s jump right in!&lt;/p&gt;
&lt;h2 id=&#34;aliens-and-ghosts-are-real-and-they-run-on-unreal-engine&#34;&gt;Aliens and ghosts are real&amp;hellip; and they run on Unreal Engine!&lt;/h2&gt;
&lt;p&gt;The wait was long, but worth it. Another game in the charming Pikmin franchise has finally arrived on Earth, just in time to join the wave of UFO reports!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pk1.png&#34; title=&#34; Imagine a crossover with Toy Story, it would explain The Claw! (Pikmin 4)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/pk1_hufc562064b79b78961620c4bb28ec9db0_6240508_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Imagine a crossover with Toy Story, it would explain The Claw! (Pikmin 4)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Imagine a crossover with Toy Story, it would explain The Claw! (Pikmin 4)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This time, &lt;code&gt;Pikmin 4&lt;/code&gt; decided to use Unreal Engine 4, which guarantees good performance and quality on the Switch.
However, this engine also guarantees headaches for emulating its use of sparse textures, as well as guaranteeing instability for NVIDIA GPU users running Vulkan, as previous games have demonstrated.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; identified and fixed a regression caused by a recent change to the texture cache which severely &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11093&#34; data-gh-pr=&#34;11093&#34;&gt;impacted stability&lt;/a&gt;
 on NVIDIA GPUs, causing constant device losses (the driver cutting off the GPU from rendering, resulting in an emulator crash).&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pk2.png&#34; title=&#34; Moss seems tired (Pikmin 4)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/pk2_hu280adb40647340e464734650ebe2cc67_7167249_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Moss seems tired (Pikmin 4)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Moss seems tired (Pikmin 4)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/GPUCode&#34;&gt;emufan&lt;/a&gt; found that hardcoding the total number of texture buffers to &lt;code&gt;16&lt;/code&gt; was causing crashes in some Unreal Engine 4 games and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11098&#34; data-gh-pr=&#34;11098&#34;&gt;bumped up the count&lt;/a&gt;
 to &lt;code&gt;32&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rain1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/rain1_hu7c7bddc6faf00a12340de6bdc19272d8_2372816_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Good thing this game didn&amp;#39;t cross paths with Pikmin (Master Detective Archives: RAIN CODE)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rain2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/rain2_hua9e34870ada7726c14ab686b4709328c_1820347_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Good thing this game didn&amp;#39;t cross paths with Pikmin (Master Detective Archives: RAIN CODE)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Good thing this game didn&amp;#39;t cross paths with Pikmin (Master Detective Archives: RAIN CODE)&lt;/p&gt;


&lt;p&gt;This change has not only helped &lt;code&gt;Pikmin 4&lt;/code&gt; but also &lt;code&gt;Master Detective Archives: RAIN CODE&lt;/code&gt;, another recent release using this same engine.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./rain3.png&#34; title=&#34; Yeah, good name for a train, I&amp;#39;ll board it in Dracula Station (Master Detective Archives: RAIN CODE)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/rain3_hu01aca6352955257bb8bbc9e60c72e0f8_1184169_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Yeah, good name for a train, I&amp;#39;ll board it in Dracula Station (Master Detective Archives: RAIN CODE)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Yeah, good name for a train, I&amp;#39;ll board it in Dracula Station (Master Detective Archives: RAIN CODE)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Many things have improved, but there&amp;rsquo;s still a lot of work remaining to improve the compatibility of games using this popular game engine!&lt;/p&gt;
&lt;h1 id=&#34;per-game-configurations---reimagined&#34;&gt;Per-game configurations - Reimagined!&lt;/h1&gt;
&lt;p&gt;If you&amp;rsquo;re experienced with yuzu, it is very likely that you&amp;rsquo;ve seen and used per-game configurations.
But if you didn&amp;rsquo;t know, yuzu supports per-game configurations as an easy way to set game-specific settings, without having to change your global settings for every game you start.
For the games which require GPU accuracy to be high instead of normal, or for games which work best with OpenGL over Vulkan, per-game configurations allow you to easily override settings like these.&lt;/p&gt;
&lt;p&gt;So, what&amp;rsquo;s new, you ask?
The brains behind this feature&amp;rsquo;s implementation and our trusty slice of toast, &lt;a href=&#34;https://github.com/lat9nq/&#34;&gt;toastUnlimited&lt;/a&gt;, has started working towards a future where yuzu could select a game-specific configuration file curated by the community, and then apply those settings by default!
The ultimate goal is for users to be able to apply the optimal settings for any game by default, without having to tinker with the many, many configuration options we have today.&lt;/p&gt;
&lt;p&gt;Sounds exciting, right? Heck yeah!
While toast was finalizing his designs, he quickly ran into a road-block of his own design: our current per-game configuration system.
The existing system&amp;rsquo;s design made it difficult to programmatically define and override each setting in multiple places across yuzu&amp;rsquo;s backend and frontend systems.&lt;/p&gt;
&lt;p&gt;toast decided to take the challenge head-on and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10839&#34; data-gh-pr=&#34;10839&#34;&gt;rewrote the entire settings backend&lt;/a&gt;
 to improve it, all while making it programmatically easier to define and implement any setting.
Thanks to these changes, developers now only need to write out the UI text for a setting and the system will do the rest (reading, writing, representing in the UI, resetting global state).&lt;/p&gt;
&lt;p&gt;This also had the benefit of providing the perfect opportunity to rework several parts of the global settings UI!
For example, System settings now includes &lt;code&gt;Multicore CPU Emulation&lt;/code&gt; support, all three possible values for &lt;code&gt;Memory Layout&lt;/code&gt;, and &lt;code&gt;Limit Speed Percent&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;

&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/systembug_hu71b90e17443a51d03e00fbbd90381f8e_17384_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Important changes to System settings&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/systemfix_hu9b8a2568b26f439d5261d0b0f1ec52e9_19518_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Important changes to System settings&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Important changes to System settings&lt;/p&gt;


 &lt;/p&gt;
&lt;p&gt;The Graphics section also got its fair share of changes.
Besides reorganizing the different options, the new &lt;code&gt;ASTC Decoding Method&lt;/code&gt; option now lists our 3 different alternatives for handling that pesky ASTC format: CPU, GPU, and asynchronous CPU decoding.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/gpubug_hu51361a3697cb9689613b7cb94853883e_23864_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Graphics settings also got some love&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/gpufix_hu9002f93ffee13ea56d2fcf7bdb221741_24489_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Graphics settings also got some love&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Graphics settings also got some love&lt;/p&gt;


&lt;p&gt;There are plenty of changes here, but enough about the global settings! toast also changed how per-game configurations are updated. They will now show an X button on the right of each setting if they were modified from the global value, allowing you to quickly revert them if needed.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/custombug_hua89e2502b02d47ea4a59be952645bd64_171712_902x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Graphics settings also got some love&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/customfix_huda7dd7295aae9ba7167ffb1aa2086f85_169059_902x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Graphics settings also got some love&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Graphics settings also got some love&lt;/p&gt;


&lt;p&gt;Stay tuned for follow-up changes to our settings, building on top of this new foundation!&lt;/p&gt;
&lt;h1 id=&#34;graphics-changes&#34;&gt;Graphics changes&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; continued his efforts to improve performance through optimization and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10996&#34; data-gh-pr=&#34;10996&#34;&gt;his latest changes further optimize&lt;/a&gt;
 one of his &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10457&#34; data-gh-pr=&#34;10457&#34;&gt;earlier optimizations.&lt;/a&gt;
 We heard you like optimizations, so we put optimizations in your optimizations so you can optimize while you optimize.
While the original changes aimed to reduce memory allocations while copying data from the guest to the host (user&amp;rsquo;s PC), the latest changes remove data copying entirely, resulting in nearly 10% performance boost in parts of &lt;code&gt;Super Mario Odyssey&lt;/code&gt;, such as the Metro Kingdom area. &lt;code&gt;Xenoblade Chronicles: Definitive Edition&lt;/code&gt; also sees similar gains.&lt;/p&gt;
&lt;p&gt;byte[]&amp;rsquo;s &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11136&#34; data-gh-pr=&#34;11136&#34;&gt;latest fix&lt;/a&gt;
 significantly improves the slowest shader compilation times in &lt;code&gt;Splatoon 3&lt;/code&gt;, reducing it from &lt;code&gt;30 seconds&lt;/code&gt; to about &lt;code&gt;4 seconds&lt;/code&gt;.
A &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10583&#34; data-gh-pr=&#34;10583&#34;&gt;recent change to our texture cache&amp;rsquo;s &lt;code&gt;AccelerateDMA&lt;/code&gt; logic&lt;/a&gt;
 was identified to have been causing device losses and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10993&#34; data-gh-pr=&#34;10993&#34;&gt;has been since been reverted.&lt;/a&gt;
&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sp3.png&#34; title=&#34; She calls it Sasha (Splatoon 3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/sp3_hu7ff3925acc9ddbbf9d8d2db2bdcb3faf_1367902_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; She calls it Sasha (Splatoon 3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; She calls it Sasha (Splatoon 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h1 id=&#34;input-changes&#34;&gt;Input Changes&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; continued his reverse engineering of the Switch NFC service and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11096&#34; data-gh-pr=&#34;11096&#34;&gt;improved yuzu&amp;rsquo;s code accuracy.&lt;/a&gt;

He also fixed a bug, which would cause mice to stop working after some time, by avoiding an accidental division by zero.&lt;/p&gt;
&lt;p&gt;Newcomer &lt;a href=&#34;https://github.com/SuperSamus&#34;&gt;SuperSamus&amp;rsquo;s&lt;/a&gt; first contribution to yuzu was to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11050&#34; data-gh-pr=&#34;11050&#34;&gt;remove a workaround on button mapping within yuzu&lt;/a&gt;
 which used to invert the face buttons mapping.
With these changes, SDL properly uses the native A/B and X/Y mapping of Nintendo devices. Thank you!&lt;/p&gt;
&lt;p&gt;Note: This change &lt;strong&gt;BREAKS&lt;/strong&gt; controller configurations for those using Nintendo controllers without the direct driver.&lt;/p&gt;
&lt;h1 id=&#34;android-changes&#34;&gt;Android changes&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei/&#34;&gt;bunnei&lt;/a&gt; implemented changes to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11017&#34; data-gh-pr=&#34;11017&#34;&gt;fix an issue where Turnip drivers would fail&lt;/a&gt;
 on certain Snapdragon devices and added checks for broken Qualcomm 7xx drivers.
This means that any Snapdragon user should be able to run Turnip drivers now. Links are provided in the Hardware section later in this article.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/t895&#34;&gt;t895&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11067&#34; data-gh-pr=&#34;11067&#34;&gt;disabled the prompt to save user data when uninstalling yuzu.&lt;/a&gt;
 This feature often caused issues when users attempted to use different APK versions.&lt;/p&gt;
&lt;p&gt;t895 also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11070&#34; data-gh-pr=&#34;11070&#34;&gt;added some helpful error prompts&lt;/a&gt;
 to inform users why certain buttons were disabled on some devices.
The most common case is Mali or Xclipse users trying to install custom drivers, a feature that is only available for Adreno users, at least for now.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mali.png&#34; title=&#34; Your Mesa driver is in another castle&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2023/mali_hu7b35479ec860e50e23062372701462c2_105413_540x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Your Mesa driver is in another castle&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Your Mesa driver is in another castle&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h1 id=&#34;miscellaneous-changes&#34;&gt;Miscellaneous changes&lt;/h1&gt;
&lt;p&gt;Apart from the ones highlighted above, there have also been several smaller changes that don&amp;rsquo;t necessarily fit nicely into a single category. So let&amp;rsquo;s quickly discuss them below:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;FearlessTobi&lt;/a&gt; added &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11047&#34; data-gh-pr=&#34;11047&#34;&gt;detection for compressed and sparse NCAs within yuzu&amp;rsquo;s filesystem.&lt;/a&gt;
 Instead of failing silently, yuzu will now log this info and abort the parsing.&lt;/p&gt;
&lt;p&gt;toast added a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11042&#34; data-gh-pr=&#34;11042&#34;&gt;new Linux build script which added the libraries required to enable &lt;code&gt;Wayland&lt;/code&gt; support&lt;/a&gt;
 in our official AppImage releases.&lt;/p&gt;
&lt;p&gt;Not stopping there, toast &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11186&#34; data-gh-pr=&#34;11186&#34;&gt;fixed a memory leak with the new timezone data generator.&lt;/a&gt;
 This would happen when games tried to ask for timezone information too many times.
This was resolved by keeping track of the generated timezone binary instead of recreating it repeatedly.&lt;/p&gt;
&lt;p&gt;toast also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11030&#34; data-gh-pr=&#34;11030&#34;&gt;bypassed an MSVC build crash&lt;/a&gt;
  on &lt;code&gt;Windows version 10 1809 LTSC&lt;/code&gt; from the new timezone binary changes by temporarily disabling it for MSVC until there is a solution from Microsoft.
The reason, for those interested, is &lt;a href=&#34;https://github.com/microsoft/STL/issues/3853#issuecomment-1627630752&#34;&gt;documented here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;byte[] implemented missing service functions, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11113&#34; data-gh-pr=&#34;11113&#34;&gt;fixing a bug that caused &lt;code&gt;Quake&lt;/code&gt; to fail to launch,&lt;/a&gt;
 and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11135&#34; data-gh-pr=&#34;11135&#34;&gt;fixed a bug that resulted in &lt;code&gt;Splatoon 3&lt;/code&gt; having an endless loading screen when LAN was enabled.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;byte[] also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11016&#34; data-gh-pr=&#34;11016&#34;&gt;fixed an issue within yuzu&amp;rsquo;s filesystem&lt;/a&gt;
 which resulted in either corrupt save data or failing to save data.&lt;/p&gt;
&lt;p&gt;A previous merge caused games with non-ASCII titles to crash on Linux due to &lt;code&gt;DBus&lt;/code&gt; expecting a &lt;code&gt;UTF8&lt;/code&gt; string. This has now been &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11007&#34; data-gh-pr=&#34;11007&#34;&gt;fixed.&lt;/a&gt;

Thanks &lt;a href=&#34;https://github.com/zeltermann&#34;&gt;zeltermann&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10999&#34; data-gh-pr=&#34;10999&#34;&gt;fixed a bug that broke the game installation progress bar&lt;/a&gt;
 after the recent buffer size increase by refactoring the progress bar calculation code.&lt;/p&gt;
&lt;p&gt;Morph also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11173&#34; data-gh-pr=&#34;11173&#34;&gt;fixed a bug where yuzu would crash on systems with weak CPUs running at very low clock speeds&lt;/a&gt;
 due to yuzu&amp;rsquo;s strict requirements on CPU clock precision.&lt;/p&gt;
&lt;p&gt;german77 eliminated almost 2GB of memory usage in some circumstances by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11128&#34; data-gh-pr=&#34;11128&#34;&gt;fixing a memory leak within Discord presence code,&lt;/a&gt;
 presumed to be caused by &lt;code&gt;cpp-httplib&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;german77 also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11142&#34; data-gh-pr=&#34;11142&#34;&gt;fixed a crash in yuzu&amp;rsquo;s gamelist&lt;/a&gt;
 that happened when you launched yuzu without keys.&lt;/p&gt;
&lt;p&gt;yuzu newcomer and Citra expert, &lt;a href=&#34;https://github.com/Steveice10&#34;&gt;Steveice10&lt;/a&gt;, implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10974&#34; data-gh-pr=&#34;10974&#34;&gt;a few improvements to Vulkan surface creation on macOS.&lt;/a&gt;
 &lt;a href=&#34;https://github.com/comex&#34;&gt;comex&lt;/a&gt; submitted &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10990&#34; data-gh-pr=&#34;10990&#34;&gt;a few fixes and workarounds for macOS to resolve a few undefined behaviour errors.&lt;/a&gt;
 Thank you both!
This doesn&amp;rsquo;t mean full MoltenVK support yet, but the gap is now smaller.&lt;/p&gt;
&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;h3 id=&#34;nvidia&#34;&gt;NVIDIA&lt;/h3&gt;
&lt;p&gt;The latest driver released at the time of writing, 536.99, is stable and also seems to have improved Vulkan performance a small but measurable amount, between 3% and 7%.
Free performance is free performance.&lt;/p&gt;
&lt;h3 id=&#34;amd&#34;&gt;AMD&lt;/h3&gt;
&lt;p&gt;It&amp;rsquo;s July and we have another new AMD GPU driver with yet another extension causing issues.
If you recall from our &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/#amd&#34;&gt;June progress report&lt;/a&gt;, we reported that the latest AMD drivers had broken a Vulkan feature - &lt;code&gt;extendedDynamicState3ColorBlendEquation&lt;/code&gt;, and we had to temporarily disable usage of it on AMD driver version &lt;code&gt;23.5.2&lt;/code&gt; and above.&lt;/p&gt;
&lt;p&gt;Fast-forward to July, and it&amp;rsquo;s still broken for some.
Giving credit where due, AMD &lt;em&gt;&lt;strong&gt;did&lt;/strong&gt;&lt;/em&gt; fix this issue with driver version &lt;code&gt;23.7.2&lt;/code&gt;, but only for &lt;code&gt;RDNA2&lt;/code&gt; GPUs (RX 6000 series). &lt;code&gt;GCN4&lt;/code&gt;, also known as &lt;code&gt;Polaris&lt;/code&gt; (RX 400 and 500 series), are confirmed to still be broken.
In light of this, and the fact that the fixed driver still reports the same Vulkan version, we &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11182&#34; data-gh-pr=&#34;11182&#34;&gt;reverted&lt;/a&gt;
 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11163&#34; data-gh-pr=&#34;11163&#34;&gt;our revert&lt;/a&gt;
 of &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10946&#34; data-gh-pr=&#34;10946&#34;&gt;our original change from June&lt;/a&gt;
 and have &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11204&#34; data-gh-pr=&#34;11204&#34;&gt;currently disabled usage of this extension on all AMD official drivers&lt;/a&gt;
 until this is fixed and has a new version number.&lt;/p&gt;
&lt;h3 id=&#34;turnip&#34;&gt;Turnip&lt;/h3&gt;
&lt;p&gt;Mesa never slows down its progress, and &lt;a href=&#34;https://github.com/K11MCH1&#34;&gt;K11MCH1&amp;rsquo;s&lt;/a&gt; AdrenoTools releases are a true blessing from the fairies.&lt;/p&gt;
&lt;p&gt;For Adreno 600 users (Snapdragon ### series), &lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases/tag/vk.1.3.261-A6XX&#34;&gt;progress is steady&lt;/a&gt;.
But the &lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases/tag/v23.3.0-dev&#34;&gt;best news&lt;/a&gt; is for A700 users (Snapdragon # Gen # series), which now see much improved rendering and performance on the Mesa Turnip drivers.&lt;/p&gt;
&lt;p&gt;Some games still require the proprietary Adreno driver to be more stable or faster, but at this rate of progress, we’ll most likely see this change soon!&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;Behind the counter, there has been great progress in some key projects.
The last missing piece of &lt;code&gt;Project Y.F.C.&lt;/code&gt;, the &lt;code&gt;Query Cache Rewrite&lt;/code&gt;, was released but we&amp;rsquo;ll talk about it next time. We&amp;rsquo;re sure Xenoblade and Luigi&amp;rsquo;s Mansion fans will love it!
byte[] continues to improve the current file system emulation — maybe some particular games will start working soon?
And Maide has some interesting ideas to implement in the shader cache code.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s all folks! Thank you for reading until the end. See ya next time!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report June 2023</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/</link>
      <pubDate>Mon, 10 Jul 2023 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/</guid>
      <description>&lt;p&gt;Hello again, yuz-ers! Our devs, old and new, show no signs of slowing down. This month we have general performance and stability improvements, many graphics bug fixes, Android gets its first wave of improvements, and much more! Helmets on, let’s ride.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello again, yuz-ers! Our devs, old and new, show no signs of slowing down. This month we have general performance and stability improvements, many graphics bug fixes, Android gets its first wave of improvements, and much more! Helmets on, let’s ride.&lt;/p&gt;
&lt;p&gt;Before we dive into the report, we have some important news to share.
We&amp;rsquo;ve received reports that some users have been experiencing crashes when trying to use Vulkan or change settings.
The culprit is &lt;code&gt;Overwolf&lt;/code&gt;, a mod manager/overlay that comes with a faulty and outdated Vulkan layer, messing up the GPU’s Vulkan driver.
We strongly advise users to uninstall Overwolf until they have fixed their Vulkan layer.&lt;/p&gt;
&lt;p&gt;Now that we’ve cleared that up, let’s get started.&lt;/p&gt;
&lt;h2 id=&#34;illusion-of-time&#34;&gt;Illusion of Time&lt;/h2&gt;
&lt;p&gt;While we implement many features of the Switch operating system, and can boot most games without a firmware dump, some games still require one. This is necessary for things like Mii models or to properly render foreign scripts and button fonts.
The firmware files also include the resources needed for proper time zone support.&lt;/p&gt;
&lt;p&gt;Thanks to the amazing work of &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt;, yuzu &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10603&#34; data-gh-pr=&#34;10603&#34;&gt;now ships with&lt;/a&gt;
 virtually all &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10797&#34; data-gh-pr=&#34;10797&#34;&gt;time zone data&lt;/a&gt;
 that the Switch has by default!&lt;/p&gt;
&lt;p&gt;In the past, yuzu would pretend that the system was in GMT, and then adjust the universal time by the local offset on the guest.
While this usually worked, it’s not accurate to how the Switch reports times.&lt;/p&gt;
&lt;p&gt;The default “Auto” time zone setting will now send a location-accurate time zone to the guest (instead of following the old GMT rule) using the synthesised time zone archive.
The new system also sends a correct representation of the universal time, regardless of whether there is a firmware dump or not.&lt;/p&gt;
&lt;p&gt;Now, while Linux had few issues with the new system (aside from a frustrating issue with Flatpak), Windows has some specific requirements. There are two important things to keep in mind:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the changes were released, users needed to run at minimum a 2019 version of Windows 10, with 1809 no longer compatible. For LTSC users, this meant only the newest 2021 release would work. We later &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11030&#34; data-gh-pr=&#34;11030&#34;&gt;implemented a solution&lt;/a&gt;
 for this. If you&amp;rsquo;re running Windows LTSC 1809, or for some reason blocked Windows Update on a regular Windows version, remember to update to the latest yuzu version.&lt;/li&gt;
&lt;li&gt;You need the latest Visual C++ 2022 redistributable. Download it from this link: &lt;a href=&#34;https://aka.ms/vs/17/release/vc_redist.x64.exe&#34;&gt;https://aka.ms/vs/17/release/vc_redist.x64.exe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Don’t forget to set your clock correctly!&lt;/p&gt;
&lt;h2 id=&#34;graphics-changes&#34;&gt;Graphics changes&lt;/h2&gt;
&lt;p&gt;This month has been full of GPU changes, so let’s start with a &lt;em&gt;simple&lt;/em&gt; one.&lt;/p&gt;
&lt;p&gt;There’s never rest for the wicked, so &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; makes good use of that extra time doing what he does best: pulling big changes out of thin air.
In this case, he investigated what happens if a memory page is being used by the GPU and written by the CPU at the same time.
Lovely little bugs that have been haunting us for half a decade, that’s what happens!&lt;/p&gt;
&lt;p&gt;What Blinkhawk adds here is &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10942&#34; data-gh-pr=&#34;10942&#34;&gt;a mechanism to register small CPU writes&lt;/a&gt;
 that sneak through while the page is being accessed by the GPU, properly invalidating the page if needed.
The following bugs have now been fixed as a result:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fixes the vertex explosions affecting &lt;code&gt;Pokemon Scarlet &amp;amp; Violet&lt;/code&gt;. Use High GPU accuracy.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./scarletbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./scarletfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;No explosions near the Academy, Megumin! (Pokémon Scarlet)&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;Fixes the slow rain and snow particles in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; &amp;amp; &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./rainbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./rainfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;It’s raining Chuchus out there (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;Fixes some particle corruption exclusive to &lt;code&gt;Tears of the Kingdom&lt;/code&gt; seen, for example, while teleporting.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./telebug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./telefix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;It’s not perfect yet, but it’s almost there (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;Fixes the erratic movement of some particles in &lt;code&gt;SUPER MARIO ODYSSEY&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./smobug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./smofix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Even the particles dance in this game (SUPER MARIO ODYSSEY)&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;Fixes the hilariously wrong eyebrows affecting some characters in &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;, like Noah and Sena. Writer’s note: I will miss this one, it was fabulous.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./xc3bug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./xc3fix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Hey, Noah’s eyes are up here (Xenoblade Chronicles 3)&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;Fixes the corrupted save thumbnails in &lt;code&gt;Xenoblade Chronicles: Definitive Edition&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/picbug_hu19d8bf186ca84dab29b63c56628a4cb9_2153077_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That’s Dunban over there! (Xenoblade Chronicles: Definitive Edition)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/picfix_hua1e36c572adbfce31cc9245747260022_2347332_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That’s Dunban over there! (Xenoblade Chronicles: Definitive Edition)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;That’s Dunban over there! (Xenoblade Chronicles: Definitive Edition)&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;And more!&lt;/li&gt;
&lt;/ul&gt;
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10783&#34; data-gh-pr=&#34;10783&#34;&gt;Here’s some good news for the low-RAM folks!&lt;/a&gt;

&lt;p&gt;Since native Switch game shaders can’t be run directly on the user’s GPU, yuzu has to recompile them into an intermediate representation (IR) which is a middle format that can be optimized and then converted to a shader that users&amp;rsquo; GPU drivers can actually handle (SPIR-V/GLSL/GLASM). For performance reasons, a significant amount of memory is preallocated to store these blocks of IR, and the old implementation would use 34MB per thread, twice.&lt;/p&gt;
&lt;p&gt;68MB per thread may not seem like a lot, right? But this allocation is made as many times as the total thread count of the CPU, SMT included.
With some quick maffs,  you can see that a Ryzen 3600 would gobble up 816 MB of system RAM, a Ryzen 7950X or an i9 13900 would need 2.2GB, and many phones with 8-threads SoCs would lose 544MB to these allocations.
This is, of course, not much of a problem for users with 32GB of system memory, but for 16GB or lower, particularly 8GB RAM users, this is a very steep price to pay. It is not uncommon to see a laptop with only 8GB of RAM and a 12 thread-equipped Ryzen 5500U for example, or 8GB phones and tablets.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; wasn’t happy with this behaviour, so he replaced it with a much more memory-friendly one.
The current use per-thread is about 134KB now. That’s a whopping 99.6% reduction!&lt;/p&gt;
&lt;p&gt;One of the ways to make games look better is by forcing higher values of anisotropic filtering, which makes textures at steep angles look much sharper.
The old implementation had to skip nearest-neighbour samplers on mipmapped images to avoid rendering issues in games like &lt;code&gt;Fire Emblem: Three Houses&lt;/code&gt; and &lt;code&gt;ASTRAL CHAIN&lt;/code&gt;.
This decision meant that many games like &lt;code&gt;Metroid Prime Remastered&lt;/code&gt; would see no benefit from using higher values of anisotropic filtering, to the point that &lt;a href=&#34;https://github.com/Wollnashorn&#34;&gt;Wollnashorn&lt;/a&gt; would create mods to force the textures of &lt;code&gt;Breath of the Wild&lt;/code&gt; and &lt;code&gt;Tears of the Kingdom&lt;/code&gt; to trilinear filtering, allowing yuzu&amp;rsquo;s anisotropic filtering setting to do its job.&lt;/p&gt;
&lt;p&gt;While that was a nice workaround, Wollnashorn wasn’t satisfied with this solution, so they improved the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10744&#34; data-gh-pr=&#34;10744&#34;&gt;heuristics&lt;/a&gt;
 used to allow anisotropic filtering on any texture format without rendering issues, improving image quality, and as a bonus, even fixing an old rendering bug affecting &lt;code&gt;Mario Kart 8 Deluxe&lt;/code&gt; too!&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/afbug_huca256697ecd432c02bfaff97cdc0b3f2_5933615_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;More accurate and better looking! (Mario Kart 8 Deluxe)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/affix_hue8b47451de7a67660f1e4fbd81f30642_6275693_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;More accurate and better looking! (Mario Kart 8 Deluxe)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;More accurate and better looking! (Mario Kart 8 Deluxe)&lt;/p&gt;


&lt;p&gt;Now you can safely select 16x filtering and enjoy the results, which you can find in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced &amp;gt; Anisotropic Filtering&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./af.png&#34; title=&#34; Anisotropic Filtering at 16x may affect performance on integrated GPUs, something to keep in mind&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/af_hu5ec9bdc6473c39622e29885d92d458a9_21428_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Anisotropic Filtering at 16x may affect performance on integrated GPUs, something to keep in mind&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Anisotropic Filtering at 16x may affect performance on integrated GPUs, something to keep in mind&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;In another batch of old issues fixed by Blinkhawk, he managed to pinpoint the cause for Unreal Engine 4 games having broken textures and crashing when running with Vulkan, a problem that mostly affected NVIDIA cards.&lt;/p&gt;
&lt;p&gt;Unreal Engine 4 is a big fan of &lt;a href=&#34;https://docs.unity3d.com/Manual/SparseTextures.html&#34;&gt;sparse textures&lt;/a&gt; to the point of really pushing the limits of the texture cache code.
A bug affecting how NVN virtual images were being remapped after sparse memory gets converted to regular mapped memory caused games like &lt;code&gt;SHIN MEGAMI TENSEI V&lt;/code&gt;, &lt;code&gt;Bravely Default&lt;/code&gt;, the &lt;code&gt;Pikmin 4 Demo&lt;/code&gt;, and many others to display corrupted textures at random.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/yvcbug1_hu5962334573b5891cdcf4ea0c3c443f7d_1450812_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Optical camouflage gone wrong, clearly Protag-kun here is not as good as major Motoko (SHIN MEGAMI TENSEI V)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/yfcfix1_hua7973954396b765d8f791efc76e1278b_1362626_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Optical camouflage gone wrong, clearly Protag-kun here is not as good as major Motoko (SHIN MEGAMI TENSEI V)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Optical camouflage gone wrong, clearly Protag-kun here is not as good as major Motoko (SHIN MEGAMI TENSEI V)&lt;/p&gt;




&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/yfcbug1_hu0ee85abfa5dd43dc30df594e586680b6_1832302_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s not a phase, mom! (BRAVELY DEFAULT II)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/yfcfix2_huf54f6530e936dccfefddb248eb5bae7e_1912409_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s not a phase, mom! (BRAVELY DEFAULT II)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;It&amp;#39;s not a phase, mom! (BRAVELY DEFAULT II)&lt;/p&gt;


&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10953&#34; data-gh-pr=&#34;10953&#34;&gt;Fixing this regression&lt;/a&gt;
 allows games to render properly once again.&lt;/p&gt;
&lt;p&gt;Speaking of the &lt;code&gt;Pikmin 4 Demo&lt;/code&gt;, the game taught us that while you can do it, 3D textures really &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10956&#34; data-gh-pr=&#34;10956&#34;&gt;don’t need to be accelerated&lt;/a&gt;
 by DMA operations.
In order to avoid crashes in Unreal Engine 4 games like this, the LLE slow code path will be used instead.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pm4.png&#34; title=&#34; More proof that games don’t need high requirements to be fun (Pikmin 4 Demo)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/pm4_hu0a1a70fe69aadbe12c3f6fd959ee0496_7305869_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; More proof that games don’t need high requirements to be fun (Pikmin 4 Demo)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; More proof that games don’t need high requirements to be fun (Pikmin 4 Demo)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This pull request introduced a regression that affected rendering in &lt;code&gt;Metroid Prime Remastered&lt;/code&gt;.
Thankfully, &lt;a href=&#34;https://github.com/gidoly&#34;&gt;gidoly&lt;/a&gt; quickly solved it by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/11012&#34; data-gh-pr=&#34;11012&#34;&gt;merging both approaches,&lt;/a&gt;
 old and new.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/mprbug_hu9bad97dafa29f206b37a66bdb7e47fd2_7309374_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Chozo Suite error 404: Texture not found (Metroid Prime Remastered)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/mprfix_hu6b86bbca0b9fb300be24ad2632e29d2c_6480646_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Chozo Suite error 404: Texture not found (Metroid Prime Remastered)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Chozo Suite error 404: Texture not found (Metroid Prime Remastered)&lt;/p&gt;


&lt;p&gt;While working on these crashes, byte[] changed the behaviour of the Vulkan memory manager to prefer (instead of require) &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10994&#34; data-gh-pr=&#34;10994&#34;&gt;using device local memory&lt;/a&gt;
 (VRAM) for image memory, which ends up allowing up to 50% of shared memory (system RAM) to be used by the GPU.
This simple trick makes most Unreal Engine 4 games stable, but it is very likely it has the cost of making VRAM intensive games stutter more often once VRAM gets close to full, for example, when running &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt; on a GPU with 4GB of VRAM or less.&lt;/p&gt;
&lt;p&gt;It’s a high price to pay considering &lt;code&gt;Tears of the Kingdom&lt;/code&gt; is by far the most played game on yuzu, but we think the huge number of games that benefit from stable gameplay outweighs the latest Zelda stuttering a bit more on low-end GPUs with dedicated VRAM.&lt;/p&gt;
&lt;p&gt;What better way to prove that statement than by continuing to write about &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt;!
Ever since its release, the modding community has been working tirelessly to improve the rendering quality of the game.
During their testing they discovered that any rendering resolution mod higher than 1008p would break ambient occlusion effects when scaled above 1x resolution.&lt;/p&gt;
&lt;p&gt;byte[], with some help from Wollnashorn&amp;rsquo;s initial investigation, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10675&#34; data-gh-pr=&#34;10675&#34;&gt;adjusted the rescale size thresholds,&lt;/a&gt;
 and now the game can be safely upscaled with mods to reach that glorious real 1080p rendering—and can then be scaled with yuzu’s internal resolution scaler to any desired resolution.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/aobug_huc40d67876053e7cc62d4c169f6837f69_7152950_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The ambient occlusion of this game may not be perfectly implemented, but it really helps with the ambiance of the scene (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/aofix_hu03fd81b21d201532edb6d309f4390cbf_7520155_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The ambient occlusion of this game may not be perfectly implemented, but it really helps with the ambiance of the scene (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The ambient occlusion of this game may not be perfectly implemented, but it really helps with the ambiance of the scene (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;


&lt;p&gt;Now you can enjoy the game in all its splendour, without sacrificing any details.&lt;/p&gt;
&lt;p&gt;While profiling the GPU code, Maide found a way to squeeze more performance out of the game.
By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10668&#34; data-gh-pr=&#34;10668&#34;&gt;combining vertex and transform feedback buffer bindings&lt;/a&gt;
 instead of binding them individually, thousands of API calls per frame can be avoided.
This leads to a small 1-3% improvement in framerates in general, but it manages to boost &lt;code&gt;Tears of the Kingdom&lt;/code&gt; by a whopping 17%.
The tests were performed with a Ryzen 5 5600X, so it’s very likely that newer CPUs will see even bigger gains.&lt;/p&gt;
&lt;p&gt;By adding some &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10818&#34; data-gh-pr=&#34;10818&#34;&gt;additional samples checks&lt;/a&gt;
 when finding the correct render target, &lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; fixed the device loss crashes that affected &lt;code&gt;Fire Emblem Engage&lt;/code&gt; while playing in handheld mode, as well as the squished character portraits that affected some systems.
This change also fixes incorrect colour and shadows in &lt;code&gt;SpongeBob SquarePants: The Cosmic Shake&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/feebug_hube1119c08af3a37bd3c55678b2834537_1267218_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That portrait wasn’t very engaging, your excellency (Fire Emblem Engage)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/feefix_hu35029dfdbe3fc0e1c70695bbadbd07ad_1814016_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That portrait wasn’t very engaging, your excellency (Fire Emblem Engage)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;That portrait wasn’t very engaging, your excellency (Fire Emblem Engage)&lt;/p&gt;


&lt;p&gt;vonchenplus also fixed &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10798&#34; data-gh-pr=&#34;10798&#34;&gt;resolution scaling issues&lt;/a&gt;
 affecting &lt;code&gt;Titan Quest&lt;/code&gt; and &lt;code&gt;Crysis Remastered&lt;/code&gt;; glitchy picture-in-picture bug begone!&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/crybug_hu05a9b9739a3feb413e905745de8d85f1_9960692_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Yes, we can run Crysis, now at 4k (Crysis Remastered)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/cryfix_huf957cce001763fdd981862aabb362c10_13113172_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Yes, we can run Crysis, now at 4k (Crysis Remastered)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Yes, we can run Crysis, now at 4k (Crysis Remastered)&lt;/p&gt;


&lt;p&gt;OpenGL also got some love once again thanks to efforts made by &lt;a href=&#34;https://github.com/ameerj&#34;&gt;Epicboy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In a surprising discovery (or as stated in the pull request description, “here’s a fun one”), Epicboy found out that NVIDIA’s OpenGL drivers get a significant performance boost in shaders using local memory if the previous shader that was executed uses a lot of local memory.
This seems to be an OpenGL-specific quirk in the NVIDIA driver, as Vulkan is not affected.&lt;/p&gt;
&lt;p&gt;This &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10916&#34; data-gh-pr=&#34;10916&#34;&gt;beautiful driver trick&lt;/a&gt;
 gives a 2-10% performance increase depending on the size of the GPU.&lt;/p&gt;
&lt;p&gt;But the OpenGL gains didn’t stop there.
&lt;code&gt;Persistent Buffer Maps&lt;/code&gt; were already in use by the texture cache, but &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10476&#34; data-gh-pr=&#34;10476&#34;&gt;extending their use&lt;/a&gt;
 to the buffer cache more than doubles the performance of OpenGL on NVIDIA hardware!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ogl.png&#34; title=&#34; Fermi and Kepler users rejoice (tested with an RTX 3070)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/ogl_hu6fa0f798d536b7b08d8dc5487d58c495_83963_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Fermi and Kepler users rejoice (tested with an RTX 3070)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Fermi and Kepler users rejoice (tested with an RTX 3070)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;We expect a similar improvement when using Mesa drivers on Linux.&lt;/p&gt;
&lt;p&gt;While most NVIDIA users are advised to stick to Vulkan now, as it is still faster and with WAY less shader stuttering, these changes should greatly help Fermi and Kepler (GTX 400 to GTX 700 series) users that, due to driver support reasons, must still use OpenGL.
Or those who just like to live dangerously.&lt;/p&gt;
&lt;p&gt;With the introduction of the resolution scaler, we added FXAA as a possible anti-aliasing filter, a preferred option over SMAA for games that already look too crisp, or simply for users that can’t afford the performance loss of SMAA.
Its Vulkan implementation has had issues with colour banding since release.
Not satisfied with that, byte[] solved the problem by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10670&#34; data-gh-pr=&#34;10670&#34;&gt;using a higher colour bit depth.&lt;/a&gt;

Sometimes, solutions don’t need to be complicated.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/fxaabug_hu3a4034d760d3123c3651d7b24df2422a_2444273_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;For those old enough to remember what it felt getting a GPU that could do 24-bit colour (SUPER MARIO ODYSSEY)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/fxaafix_hu9feaa4978f0e4669aa73e8fe1b8c1d10_2634439_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;For those old enough to remember what it felt getting a GPU that could do 24-bit colour (SUPER MARIO ODYSSEY)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;For those old enough to remember what it felt getting a GPU that could do 24-bit colour (SUPER MARIO ODYSSEY)&lt;/p&gt;


&lt;p&gt;Many Switch games support dynamic framerates, or get mods that support dynamic framerates, meaning unlocking the framerate (by default by pressing Ctrl + U) is a great way to get a much better and smoother experience while emulating those games.
By the way, here’s a &lt;a href=&#34;https://github.com/Law022/Dynamic-Frame-Rate/wiki/Game--List&#34;&gt;list&lt;/a&gt; of such games for those curious.&lt;/p&gt;
&lt;p&gt;One unwanted side effect with this is that video playback won’t be able to keep up with the increased framerate, often desynchronizing audio while still having to wait for the video to end.
To mitigate this, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10666&#34; data-gh-pr=&#34;10666&#34;&gt;added a toggle&lt;/a&gt;
 in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced&lt;/code&gt; called “Sync to framerate of video playback” that, when enabled, will dynamically re-enable the framerate limit while a video cutscene is playing.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./af.png&#34; title=&#34; Totally not the same pic from earlier&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/af_hu5ec9bdc6473c39622e29885d92d458a9_21428_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Totally not the same pic from earlier&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Totally not the same pic from earlier&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While digging into the AccelerateDMA code, Epicboy found an &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10583&#34; data-gh-pr=&#34;10583&#34;&gt;incorrect check&lt;/a&gt;
 that affected buffer-to-texture copies.
Fixing it increased performance by a whopping 1%, but as any avid gamer knows, average framerates are only half of the story.
This change also improved frametime consistency, especially in sudden spikes, which are arguably the most noticeable during gameplay.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./frame1.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/frame1_hue4fee63952289a32178d3bf9a383dfa2_57387_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./frame2.png&#34; title=&#34; I have become frametime, the destroyer of gameplay&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/frame2_hua3a2ffcdbd0e3dd23ecddd154c356fb1_116685_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; I have become frametime, the destroyer of gameplay&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; I have become frametime, the destroyer of gameplay&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Users enjoy testing yuzu on a wide variety of devices; one particularly interesting example is the Tegra X1 product line from NVIDIA, the same architecture that powers the actual Nintendo Switch.
Since there are drivers available for those devices, yuzu can be run in a Linux environment, but for some reason, those drivers don’t include the &lt;code&gt;VK_EXT_robustness2&lt;/code&gt; extension, which was mandatory up until now.
Newcomer &lt;a href=&#34;https://github.com/mrcmunir&#34;&gt;mrcmunir&lt;/a&gt; decided to change this and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10635&#34; data-gh-pr=&#34;10635&#34;&gt;mark the extension as optional,&lt;/a&gt;
 making the most optimal ARM boards for Switch emulation able to enjoy gameplay with yuzu.&lt;/p&gt;
&lt;p&gt;To close the graphics section, we saved the best for last:
toastUnlimited removed the use of a Windows only external memory Vulkan extension.
Why? To make yuzu &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10829&#34; data-gh-pr=&#34;10829&#34;&gt;compatible with Wine&lt;/a&gt;
 while using Vulkan!
Why would someone run yuzu on Wine when a native and faster Linux version is available? We don’t know! But you can definitely do it now, given you build Wine from source yourself with support for Vulkan child windows.
We only intend to use this for debugging MinGW releases—for end users, we won&amp;rsquo;t provide any support for running releases in Wine.&lt;/p&gt;
&lt;p&gt;This is a fun case where all developers asked your writer to skip mentioning this change because it was considered redundant for this report.
To them I say: YOLO.&lt;/p&gt;
&lt;h2 id=&#34;android-additions&#34;&gt;Android additions&lt;/h2&gt;
&lt;p&gt;The new supported platform in town has a lot of improvements to boast of, but the most important one gets the honour of starting the section.&lt;/p&gt;
&lt;p&gt;Thanks to the joint work of byte[] and &lt;a href=&#34;https://github.com/GPUCode&#34;&gt;GPUCode&lt;/a&gt;, and the help from &lt;a href=&#34;https://github.com/bylaws&#34;&gt;bylaws&lt;/a&gt; who allowed us to use Skyline’s BCn texture decoder, yuzu can now properly advertise &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10837&#34; data-gh-pr=&#34;10837&#34;&gt;support for Mali GPUs!&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=6EBuKP-uc94&#34;&gt;Kept you waiting, huh.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This means users of Mediatek, old Samsung Exynos, and Google Tensor CPUs &lt;a href=&#34;https://en.wikipedia.org/wiki/Mali_(processor)#Implementations&#34;&gt;(among others)&lt;/a&gt; can run their games in yuzu as long as they have a &lt;a href=&#34;https://en.wikipedia.org/wiki/Mali_(processor)#Variants&#34;&gt;G-series Mali GPU&lt;/a&gt;, for example the Mali-G710 on the Pixel 7 series.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mali1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/mali1_hu1d23c2cf256796dbbf677fedcc1b4e61_2266565_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;SUPER MARIO ODYSSEY and Pokémon Mystery Dungeon Rescue Team DX (Running on a Pixel 7 Pro)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mali2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/mali2_hu61742f4208e5a58c2308e3b9e79d9515_3742552_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;SUPER MARIO ODYSSEY and Pokémon Mystery Dungeon Rescue Team DX (Running on a Pixel 7 Pro)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;SUPER MARIO ODYSSEY and Pokémon Mystery Dungeon Rescue Team DX (Running on a Pixel 7 Pro)&lt;/p&gt;


&lt;p&gt;This theoretically doubles the compatibility of yuzu’s Android builds, as Mali is the most common GPU family in the Android ecosystem.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mali3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/mali3_hu6dcad96f3faecadb9a6b80c4455a6207_1598923_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Skyward Sword HD, Advance Wars 1&amp;#43;2: Re-Boot Camp, and OCTOPATH TRAVELER (Running on a Pixel 7 Pro)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mali4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/mali4_hu3aa4e41249464e2a08b8846fe8e4da70_3810690_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Skyward Sword HD, Advance Wars 1&amp;#43;2: Re-Boot Camp, and OCTOPATH TRAVELER (Running on a Pixel 7 Pro)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mali5.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/mali5_hu129eb784aba1170e358d116334038434_3023488_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Skyward Sword HD, Advance Wars 1&amp;#43;2: Re-Boot Camp, and OCTOPATH TRAVELER (Running on a Pixel 7 Pro)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda: Skyward Sword HD, Advance Wars 1&amp;#43;2: Re-Boot Camp, and OCTOPATH TRAVELER (Running on a Pixel 7 Pro)&lt;/p&gt;


&lt;p&gt;Further testing with Mali revealed that while the driver implemented support for the &lt;code&gt;VK_EXT_extended_dynamic_state2&lt;/code&gt; extension in older Mali drivers, the implementation for &lt;code&gt;VK_EXT_extended_dynamic_state&lt;/code&gt; was not fully functional, and yuzu was not behaving correctly in this case.
This is most likely the reason both extensions were removed by Google from Pixel drivers.
To avoid users of affected drivers experiencing no rendering output at all, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10790&#34; data-gh-pr=&#34;10790&#34;&gt;disabled the use of the extension&lt;/a&gt;
 on Mali hardware.&lt;/p&gt;
&lt;p&gt;It should be noted that while the Mali drivers are much better at following the Vulkan specification than others, the physical hardware specifications are lacking.
Only high-end devices will reach playable framerates at the moment.
Lower-end Mali products will be too weak for Switch emulation, even if they meet the driver requirements to run the emulator.
But hey, you’re welcome to try it out and see how it goes!&lt;/p&gt;
&lt;p&gt;There’s also been a LOT of work put into the Android user interface.&lt;/p&gt;
&lt;p&gt;To begin with, &lt;a href=&#34;https://github.com/PabloG02&#34;&gt;PabloG02&lt;/a&gt; has given us a hand again, this time by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10551&#34; data-gh-pr=&#34;10551&#34;&gt;storing the position of overlay controls&lt;/a&gt;
 as a percentage, so if there is a change in the dimensions of the window, for example by using a foldable device, or rotating the screen on a tablet, the overlay controls stay in approximately the same location.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./move.png&#34; title=&#34; Place your input anywhere you want!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/move_hud6f67d754d9a481c8b73a97d9a59dd1c_218120_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Place your input anywhere you want!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Place your input anywhere you want!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;To help users with transferring the required files to yuzu and with debugging, PabloG02 also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10578&#34; data-gh-pr=&#34;10578&#34;&gt;added UI options&lt;/a&gt;
 to import firmware files, a requirement to run and properly display some games, and an option to quickly share the last log file, which can help our support members when trying to diagnose the reason for a crash. Thanks!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./firmware.png&#34; title=&#34; Select your firmware dump location&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/firmware_hu26d3c8b7a4cd3e0e17a6c184d36bec01_118823_540x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Select your firmware dump location&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Select your firmware dump location&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Users can be very particular about the configuration of overlay controls. Some may be fine with just using the Switch’s touch screen instead (depending on the game), and some have different preferences of opacity levels for buttons.
For cases like these, &lt;a href=&#34;https://github.com/t895&#34;&gt;t895&lt;/a&gt; added a dialog to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10557&#34; data-gh-pr=&#34;10557&#34;&gt;adjust the scale and opacity&lt;/a&gt;
 of the overlay controls.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./overlay.png&#34; title=&#34; Size and transparency&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/overlay_hu1d82ac199b388a8bb05068c472f68df0_1639746_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Size and transparency&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Size and transparency&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ov1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/ov1_hu9e87f4a073d33d225abe094cb0a98e43_495201_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It’s also a great way to enjoy touch-only games (Witch on the Holy Night)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ov2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/ov2_hu9e87f4a073d33d225abe094cb0a98e43_487212_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It’s also a great way to enjoy touch-only games (Witch on the Holy Night)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;It’s also a great way to enjoy touch-only games (Witch on the Holy Night)&lt;/p&gt;


&lt;p&gt;yuzu includes a notification to ensure the app isn’t closed by Android when switching apps.
We need to do this to ensure users don’t lose their progress, but it can also be used to include some cool features.&lt;/p&gt;
&lt;p&gt;One possibility is support for Picture-in-Picture when minimising the app.
t895 did the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10633&#34; data-gh-pr=&#34;10633&#34;&gt;preliminary work&lt;/a&gt;
 to allow changing the aspect ratio, and newcomer &lt;a href=&#34;https://github.com/AbandonedCart&#34;&gt;AbandonedCart&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10639&#34; data-gh-pr=&#34;10639&#34;&gt;did the actual magic.&lt;/a&gt;
&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pip1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/pip1_hu15c81f35fdc6bddfb41b5dc2b760f677_759708_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That’s a spicy music player (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pip2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/pip2_hu14800d98a82dfcb0a5774d15fe6a5f12_172206_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That’s a spicy music player (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;That’s a spicy music player (Super Smash Bros. Ultimate)&lt;/p&gt;


&lt;p&gt;Later, a  &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10811&#34; data-gh-pr=&#34;10811&#34;&gt;button to mute/unmute&lt;/a&gt;
 was added to the Picture-in-Picture overlay.&lt;/p&gt;
&lt;p&gt;Android doesn’t only run on phones and tablets. You can find people crazy enough to play yuzu on TVs too!
For those madlads, newcomer &lt;a href=&#34;https://github.com/qurious-pixel&#34;&gt;qurious-pixel&lt;/a&gt; added support for an &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10650&#34; data-gh-pr=&#34;10650&#34;&gt;Android TV&lt;/a&gt;
 banner.
Thank you!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./tv.png&#34; title=&#34; NVIDIA SHIELD anyone?&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/tv_hu750a44f29930417d51b84de905dbf2b7_7764_320x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; NVIDIA SHIELD anyone?&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; NVIDIA SHIELD anyone?&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Since release, users have reported games looking strangely blurry, and issues with the aspect ratio of the rendering window and the orientation of the overlay controls when flipping the device.&lt;/p&gt;
&lt;p&gt;This is a bit of an embarrassing one: all those issues were caused by decoupling the rotation of the Vulkan surface with the frontend layer.
This explains why aspect ratios were distorted and the overlay was inverted when the device was rotated, but the explanation for the blurriness issue deserves special mention.
Games present to the screen in docked mode using a landscape form factor and resolution of 1920x1080, but phones typically have a portrait mode form factor.
What happens if the window starts rendering at 1920x1080, then gets modified to 1080x1920 by the device and is stretched to fit the screen? Well, this:&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/tv_hu750a44f29930417d51b84de905dbf2b7_7764_320x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Did we mention we’re new at this?&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/bunnei_hueb4e081b50f5bdda9b221ba3b5add097_17625_320x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Did we mention we’re new at this?&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Did we mention we’re new at this?&lt;/p&gt;


&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10703&#34; data-gh-pr=&#34;10703&#34;&gt;By keeping rotation in sync,&lt;/a&gt;
 both intentionally by the user and unintentionally by the device, all mentioned issues are solved. Oops!&lt;/p&gt;
&lt;p&gt;Continuing the effort of reaching feature parity with the desktop builds, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; added support for &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10705&#34; data-gh-pr=&#34;10705&#34;&gt;installing updates and DLCs&lt;/a&gt;
 to NAND, just like on PC.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dlc.png&#34; title=&#34; Remember to hold to select multiple files!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/dlc_hu2b6ad261939940c4b9b59ceff9cdd39a_102257_540x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Remember to hold to select multiple files!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Remember to hold to select multiple files!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;AbandonedCart once again comes to the rescue by adding support to allow this option to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10794&#34; data-gh-pr=&#34;10794&#34;&gt;install multiple files&lt;/a&gt;
 at once.
It’s not fun having to constantly repeat the process to install every single thicc &lt;code&gt;Atelier Ryza: Ever Darkness &amp;amp; the Secret Hideout&lt;/code&gt; DLC, but it’s so worth it.&lt;/p&gt;
&lt;p&gt;Big Boss &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; made some changes to the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10746&#34; data-gh-pr=&#34;10746&#34;&gt;default graphics settings&lt;/a&gt;
 to improve the out-of-the-box experience, as well as add options required to solve rendering issues and/or improve performance.&lt;/p&gt;
&lt;p&gt;Joining yuzu on Android from the desktop release is &lt;code&gt;Reactive Flushing&lt;/code&gt;, an option that can significantly reduce performance in the name of rendering accuracy.
To provide the best performance, the option is disabled by default, but if you want accurate shadows in Bayonetta games, or proper save thumbnails, remember to enable it.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Force maximum clocks&lt;/code&gt; is now disabled by default, since it’s not very relevant while the main bottleneck is on the CPU side of the emulation process.
We’ll revisit this toggle once native code execution is implemented.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gpu.png&#34; title=&#34; Feature parity with the PC releases, little by little&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/gpu_hu5be91e778c64891734bdec50d2004c3f_131402_540x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Feature parity with the PC releases, little by little&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Feature parity with the PC releases, little by little&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;An often forgotten feature of the Nintendo Switch is touch support.
While in handheld mode, some games allow you to play without controls, just with the screen.
Support was present since release for the Android build, but it wasn’t accurate — the touch event would happen offset to the side of where the user would touch their finger. german77 fixed this &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10751&#34; data-gh-pr=&#34;10751&#34;&gt;touchy behaviour,&lt;/a&gt;
 making playing visual novels with no overlay buttons a joy.&lt;/p&gt;
&lt;p&gt;One of the nice additions of Android 13 is the option to set &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10760&#34; data-gh-pr=&#34;10760&#34;&gt;per-app languages,&lt;/a&gt;
 so properly declaring the available language translations allows users to take advantage of this feature.
Thanks &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;flTobi&lt;/a&gt;!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./lang.png&#34; title=&#34; Your phone knows more languages than you&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/lang_hu2f31d4c199e4586574e78433fa2de919_51281_540x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Your phone knows more languages than you&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Your phone knows more languages than you&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10808&#34; data-gh-pr=&#34;10808&#34;&gt;Expanding the Debug section&lt;/a&gt;
 a bit, t895 added the option to disable &lt;code&gt;CPU Fastmem&lt;/code&gt;.
This will reduce performance, but is useful for debugging purposes.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./debug.png&#34; title=&#34; Extremely recommended to leave at default values&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/debug_hu6a96a6d1da4310947b47aa94ea538d99_53175_540x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Extremely recommended to leave at default values&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Extremely recommended to leave at default values&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Additionally, an option to select the audio backend was added too.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./audio.png&#34; title=&#34; Volume controls&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/audio_hu1ce52eed879249605b3af8b6f454dafc_19796_540x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Volume controls&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Volume controls&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Because it is only supported on Qualcomm devices, t895 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10864&#34; data-gh-pr=&#34;10864&#34;&gt;now hides&lt;/a&gt;
 the &lt;code&gt;Install GPU driver&lt;/code&gt; option if the user is running a non-Qualcomm device.
Since we don’t offer the option to run different drivers on these devices, there’s no reason to show it.
Of course, if Mesa can deliver a good driver for Mali hardware in the future, we will support custom drivers for it then.&lt;/p&gt;
&lt;p&gt;As a way to warn users with devices that may not be capable of stable emulation, AbandonedCart &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10869&#34; data-gh-pr=&#34;10869&#34;&gt;added a warning&lt;/a&gt;
 if it doesn’t have at least 8GB of RAM.
Android versions prior to the upcoming 14 don’t let apps know the exact RAM amount of the device, so available free RAM is used instead.&lt;/p&gt;
&lt;p&gt;Speaking of which, t895 added &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10945&#34; data-gh-pr=&#34;10945&#34;&gt;support for Android 14.&lt;/a&gt;

Better to be ready beforehand!
You never know when Google might surprise us.&lt;/p&gt;
&lt;p&gt;Before we end this section, let us clarify something.
The Android builds are not limited to the changes mentioned here, but also include any other core improvements mentioned in this article.
For instance, the previously discussed GPU changes, and to be discussed memory and ARM optimizations are also included in the Android builds.
These changes have boosted performance by 30-70% in the latest versions, for example, and none were Android specific.&lt;/p&gt;
&lt;p&gt;We have also completed our release backups on GitHub!
You can find them &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-android/releases/&#34;&gt;here.&lt;/a&gt;
If you want to download a previous version, test experimental features, or avoid using the Google Play Store, feel free to grab the APK from there.&lt;/p&gt;
&lt;h2 id=&#34;making-cpus-go-the-opposite-of-brrr-amd-edition&#34;&gt;Making CPUs go the opposite of BRRR, AMD edition&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/#making-cpus-go-the-opposite-of-brrrr&#34;&gt;Back in March&lt;/a&gt;, we explained why Windows is not accurate enough when very high precision timers are required, so in order to improve performance, power consumption, and temperatures on x86_64 CPUs, specific CPU instructions are needed to reduce the time the CPU spends improperly idling.
We have a big mistake to correct here. We said only Intel offered such instructions starting with Alder Lake, and that AMD didn’t offer any.&lt;/p&gt;
&lt;p&gt;Fortunately, we were wrong! AMD does indeed have its own implementation, the &lt;code&gt;monitorx&lt;/code&gt; and &lt;code&gt;mwaitx&lt;/code&gt; instructions pair, which have been out since &lt;em&gt;2015&lt;/em&gt;, predating Ryzen!&lt;/p&gt;
&lt;p&gt;By performing his usual black magic, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; implemented support for these instructions, providing the same benefit only Intel users previously enjoyed, namely performance and battery life improvements for power-limited products (laptops, handhelds) or CPUs with fewer core counts.&lt;/p&gt;
&lt;p&gt;Since AMD CPUs running Windows can now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10935&#34; data-gh-pr=&#34;10935&#34;&gt;properly idle for longer&lt;/a&gt;
 while waiting, power consumption and/or performance numbers are improved, depending on which limit is hit first: the power budget of the CPU or a framerate cap.
Sadly, your writer (who got tasked with testing this change) doesn’t have access to an Asus Rog Ally handheld, or even a Ryzen laptop, to do proper benchmarks, so instead please accept the numbers collected with a desktop Ryzen 5 5600X.
The results should be better with a proper mobile platform, but alas, we can only show what we tested.&lt;/p&gt;
&lt;p&gt;Power consumption saw a 10-16% reduction, which translates with this particular CPU model to around a 10W reduction.
While simulating a power limited scenario (capping the PPT to 40W), performance improved up to 60%, but on average a 20% gain is more often expected.&lt;/p&gt;
&lt;p&gt;Now, we can guess what some of you may be thinking, “how much does this help the Steam Deck? That’s a power-limited system with only four cores!”
It makes no difference on the Deck. Let us explain.&lt;/p&gt;
&lt;p&gt;The Steam Deck by default runs a Linux distribution.
Linux doesn’t benefit from these changes as its kernel, unlike Windows’, is actually decent and can run high-precision timer events without any problem or undocumented SDK usage. If there’s no need to spin the CPU at all, it gets to idle properly.
So unless you installed Windows onto your Steam Deck, you already had the best performance it can offer.&lt;/p&gt;
&lt;h2 id=&#34;arm-changes&#34;&gt;ARM changes&lt;/h2&gt;
&lt;p&gt;The Android release taught us something very important: Using &lt;a href=&#34;https://github.com/merryhime/dynarmic&#34;&gt;Dynarmic&lt;/a&gt; adds a lot of overhead on ARM CPUs. While this doesn&amp;rsquo;t pose any major obstacles on Apple Silicon M1 and M2 Macs, it&amp;rsquo;s a big problem for Android devices, which are constantly power-limited with virtually no room for waste.&lt;/p&gt;
&lt;p&gt;To reduce the overhead here, we are planning to implement a feature from Skyline, &lt;code&gt;native code execution&lt;/code&gt;, or NCE, letting the game’s code run directly on the processor untranslated.
This will work for most 64-bit games, but 32-bit Switch games have some special requirements that complicate this.&lt;/p&gt;
&lt;p&gt;NCE is a project that will take some time, but for now, byte[] already implemented a way to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10747&#34; data-gh-pr=&#34;10747&#34;&gt;decouple Dynarmic&lt;/a&gt;
 from the ARM interface, allowing for a separate CPU backend in the future.
Let’s see what the future brings.&lt;/p&gt;
&lt;p&gt;We’re still calling it Project Nice, right? Right.&lt;/p&gt;
&lt;p&gt;Regarding 32-bit games, it’s worth mentioning that behind the scenes, &lt;a href=&#34;https://github.com/merryhime&#34;&gt;Merry&lt;/a&gt; constantly works on optimising and fixing bugs in Dynarmic.
Recently, Merry was able to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10933&#34; data-gh-pr=&#34;10933&#34;&gt;enable an optimization&lt;/a&gt;
 for ARM64 host hardware.
Block linking allows blocks of guest code that directly jump to each other to directly jump to each other when recompiled as well.
After enabling it, this resulted in a 60-70% performance boost for 32-bit games like &lt;code&gt;Mario Kart 8 Deluxe&lt;/code&gt; on Android SoCs.
This serves as yet another reminder that emulation is very CPU-focused.&lt;/p&gt;
&lt;h2 id=&#34;linux-specific-fix&#34;&gt;Linux specific fix&lt;/h2&gt;
&lt;p&gt;Long gameplay sessions can sometimes feel like a gamble regarding stability.
That’s a very common problem for emulators due to how they have to handle memory in unique ways to match two completely different systems.
This was especially true for Linux users, who had to rely on increasing the size of the &lt;code&gt;vm.max_map_count&lt;/code&gt; kernel parameter for certain games to avoid out-of-memory crashes.
Since the emulator needs to create placeholder memory mappings to keep up with the virtual memory requirements of the game, it wasn’t hard to saturate the default value, resulting in a crash once the placeholder mappings outnumbered the max mapping count.&lt;/p&gt;
&lt;p&gt;Enter newcomer &lt;a href=&#34;https://github.com/kkoniuszy&#34;&gt;kkoniuszy&lt;/a&gt;, who had a simple yet very effective idea.
By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10550&#34; data-gh-pr=&#34;10550&#34;&gt;keeping track of the creation&lt;/a&gt;
 of such placeholder mappings and using that information to create fewer larger ones instead of several smaller ones, the stress on &lt;code&gt;vm.max_map_count&lt;/code&gt; is reduced and generally no longer needs to be modified.
This results in stable game sessions when playing for hours.
Thank you!&lt;/p&gt;
&lt;h2 id=&#34;input-improvements&#34;&gt;Input improvements&lt;/h2&gt;
&lt;p&gt;The work to make Amiibos and their Near-Field Communication (NFC) behave the same as on real Switch hardware continues.
With the proper implementation finished &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/#input-and-amiibo-improvements&#34;&gt;last month&lt;/a&gt;, german77 has focused on the last items on the checklist.&lt;/p&gt;
&lt;p&gt;First of all, backup support.
On the Switch, Amiibo data is stored in the console every time data is loaded or saved.
This is intended to help games restore corrupted Amiibo tags in case of errors.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10623&#34; data-gh-pr=&#34;10623&#34;&gt;With this implementation,&lt;/a&gt;
 yuzu now can do the same with Joy-Cons and Pro Controllers.
The backups will be stored in &lt;code&gt;%appdata%\yuzu\amiibo\backup&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Our input dev added support for Foomiibos, blank but configurable Amiibo dumps with a signature included at the end, by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10795&#34; data-gh-pr=&#34;10795&#34;&gt;adding their size as a valid input.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Activision releases NFC equipped toys (aka not-Amiibos) for the &lt;code&gt;Skylanders&lt;/code&gt; games saga, and they are compatible with the Nintendo Switch, so of course, they must work on yuzu too!
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10842&#34; data-gh-pr=&#34;10842&#34;&gt;The implementation&lt;/a&gt;
 should be transparent; just connect and map a controller, and it’s ready to scan the toys.&lt;/p&gt;
&lt;p&gt;And to finish up the NFC section, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10903&#34; data-gh-pr=&#34;10903&#34;&gt;bugfixes and support for third-party controllers&lt;/a&gt;
 in a single pull request to rule them all.&lt;/p&gt;
&lt;p&gt;Controllers sometimes fail to properly restore to a previous state when pairing.
This could make yuzu lose input when the controller fails to use the NFC sensor.
If the game stopped polling for Amiibos while one was in range, the Amiibo would be lost but not signaled.
This pull request addressed this particular scenario.&lt;/p&gt;
&lt;p&gt;Many third-party controllers don’t accept all commands.
Reducing the number of attempts to obtain valid data and disabling most commands if errors occur will minimise the stuttering caused by the configuration process when setting up the NFC interface.&lt;/p&gt;
&lt;p&gt;Lastly, if the controller properly reports support for NFC, but the user loads an amiibo from a binary dump, we would mistakenly show an error.
This is now fixed.&lt;/p&gt;
&lt;p&gt;Now, what about regular input changes? Well, we have a bit to talk about there too.&lt;/p&gt;
&lt;p&gt;SDL, the external library used here to handle input (it can do much more than that), does get updates, and it doesn’t hurt to keep up with those from time to time, after validating they are stable, of course.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10873&#34; data-gh-pr=&#34;10873&#34;&gt;Updating to version 2.28.0&lt;/a&gt;
improved the calibration profile used on official Switch controllers, added support for the new DualSense Edge controller from Sony, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10891&#34; data-gh-pr=&#34;10891&#34;&gt;fixed some issues with Pro Controllers,&lt;/a&gt;
 and added other minor changes and fixes that benefit the emulator.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10950&#34; data-gh-pr=&#34;10950&#34;&gt;Mouse controls&lt;/a&gt;
 got more tuning love.
This time there are some minor tweaks to its calibration.
Returning to center will consider the assigned deadzones, and motion input has better sensitivity.&lt;/p&gt;
&lt;p&gt;For those not in the know, if you set input to Keyboard/Mouse, or manually map a stick to the mouse, you can use the mouse for controlling movement.
&lt;code&gt;Ctrl + F9&lt;/code&gt; is the default hotkey to take and release control of the mouse while playing.&lt;/p&gt;
&lt;p&gt;Lastly, for the fitness enthusiasts, there are some improvements for the Ring-Con.&lt;/p&gt;
&lt;p&gt;german77 improved Ring detection by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10937&#34; data-gh-pr=&#34;10937&#34;&gt;adding timeouts&lt;/a&gt;
 to let the scanning process try again after a fixed time.&lt;/p&gt;
&lt;p&gt;And newcomer &lt;a href=&#34;https://github.com/kiri11&#34;&gt;kiri11&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10908&#34; data-gh-pr=&#34;10908&#34;&gt;improved the wording&lt;/a&gt;
 of the help text to properly enable the Ring-Con, making it much less confusing.
Thanks!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ringcon.png&#34; title=&#34; Fitness at 4K&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/ringcon_hu2d302a1b32dac3fca4dcc1940d6fb798_12860_342x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Fitness at 4K&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Fitness at 4K&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;yet-more-gaia-lite&#34;&gt;Yet more Gaia-lite&lt;/h2&gt;
&lt;p&gt;Yes, there’s more progress by byte[] in fixing the current file system implementation while we wait for &lt;code&gt;Project Gaia&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/#project-gaia-lite&#34;&gt;previously reported&lt;/a&gt; “algorithmic complexity issue” when loading mods was working like a charm on Linux, but Windows always has to be difficult.
A &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10588&#34; data-gh-pr=&#34;10588&#34;&gt;memory cache&lt;/a&gt;
 was added to fully realise the load time benefits on Microsoft’s OS too.&lt;/p&gt;
&lt;p&gt;In another single-line-of-code revelation, byte[] discovered that &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10718&#34; data-gh-pr=&#34;10718&#34;&gt;increasing the size of the buffer&lt;/a&gt;
 when copying files can more than triple the installation speed of updates and DLCs.
Hurray for simple fixes like this!&lt;/p&gt;
&lt;p&gt;A common problem modders and users had to deal with is a hard limit on the number of files that can be loaded per session.
Games like &lt;code&gt;Fire Emblem Engage&lt;/code&gt; have so many files that it previously was not even possible to replace all of them with a mod.
Of course, byte[] wasn’t happy with this, so by adding a file &lt;a href=&#34;https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)&#34;&gt;LRU&lt;/a&gt; cache to control the number of open files, he &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10729&#34; data-gh-pr=&#34;10729&#34;&gt;removed the file limit.&lt;/a&gt;

Users can now run as many mods as they want on their games, and they can have as many files as they need too!&lt;/p&gt;
&lt;p&gt;But the fun doesn’t stop there for byte[]. Yet again, Windows demands special attention…
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10806&#34; data-gh-pr=&#34;10806&#34;&gt;A couple of optimizations&lt;/a&gt;
 and Windows users can now properly benefit too.&lt;/p&gt;
&lt;p&gt;An oversight in the code responsible for caching RomFS mods prevented any caching from taking effect at all, making yuzu take typically twice as long as it needed to when loading a game with them enabled.
By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10594&#34; data-gh-pr=&#34;10594&#34;&gt;fixing&lt;/a&gt;
 this oversight, byte[] further reduced game load times with mods.&lt;/p&gt;
&lt;h2 id=&#34;audio-fixes&#34;&gt;Audio fixes&lt;/h2&gt;
&lt;p&gt;Linux users running the SDL audio backend reported having no audio out when using the JACK output.
The problem, as newcomer &lt;a href=&#34;https://github.com/zeltermann&#34;&gt;zeltermann&lt;/a&gt; found out after some investigation, is in how SDL identifies the CPU characteristics of the user’s hardware.&lt;/p&gt;
&lt;p&gt;SDL’s &lt;code&gt;CPUInfo&lt;/code&gt; subsystem is called to report the specifications of the user’s CPU. SDL then uses that information to properly configure itself for the environment it will run on, setting optimizations and deciding which internal code paths to use.
We thought CPUInfo shouldn’t be necessary just for audio output, so it was disabled in yuzu.&lt;/p&gt;
&lt;p&gt;Well, under normal circumstances, it would have been fine, but SDL can’t decide if not having CPU information means there is or there isn’t a CPU present.
&lt;a href=&#34;https://en.wikipedia.org/wiki/Single_instruction,_multiple_data&#34;&gt;SIMD&lt;/a&gt; support is reported as disabled, but &lt;a href=&#34;https://en.wikipedia.org/wiki/SSE2&#34;&gt;SSE2&lt;/a&gt; is assumed as enabled.
This contradiction leads to the fallbacks intended to run in case SIMD support was disabled to fail, making some functions return null, completely destroying audio output.&lt;/p&gt;
&lt;p&gt;This chain reaction of events is solved by giving SDL what it wants: a proper &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10739&#34; data-gh-pr=&#34;10739&#34;&gt;report by CPUInfo.&lt;/a&gt;

Now Linux users can enjoy their games with audio when using the SDL output.
Thank you!&lt;/p&gt;
&lt;p&gt;Out-of-bounds, the silent killer of so many programs… yuzu is of course not immune to them, as Morph found out.
An &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10966&#34; data-gh-pr=&#34;10966&#34;&gt;out-of-bounds write&lt;/a&gt;
 leads to corruption in an audio heap buffer, which leads to beeping noises, speaker rattling, and crashes in multiple games, including but not limited to &lt;code&gt;Xenoblade Chronicles: Definitive Edition&lt;/code&gt;, &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt;, &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;, and more.&lt;/p&gt;
&lt;p&gt;A few tweaks here and there in the audio core code, and the issues are gone.&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;Switch games provide pretty game icons for the launcher.
Needless to say, yuzu makes good use of them while rendering the game list.
What wasn’t considered when using these icons for the user interface is that some games offer multiple alternatives for different languages.
yuzu would just pick the first one available.&lt;/p&gt;
&lt;p&gt;Enter newcomer &lt;a href=&#34;https://github.com/keve1227&#34;&gt;keve1227&lt;/a&gt; who coded in the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10591&#34; data-gh-pr=&#34;10591&#34;&gt;logic required&lt;/a&gt;
 to properly pick the right image depending on the console language the user picks in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; System &amp;gt; Language&lt;/code&gt;.
Thanks!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./langbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/langbug_hu082ebe67db66a300b783c7d37f4bc78a_476656_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Gotta find ’em all&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./langfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/langfix_hu082ebe67db66a300b783c7d37f4bc78a_476239_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Gotta find ’em all&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Gotta find ’em all&lt;/p&gt;


&lt;p&gt;The OpenGL API has three available shader backends in yuzu, and since the only way to know which one is selected is from checking the option in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics&lt;/code&gt;, newcomer &lt;a href=&#34;https://github.com/xcfrg&#34;&gt;fastcall&lt;/a&gt; decided it was due time to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10614&#34; data-gh-pr=&#34;10614&#34;&gt;add this info&lt;/a&gt;
 to the status bar.
Thanks!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./oglui.png&#34; title=&#34; You won’t forget you left GLASM enabled any more!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/oglui_hubf45bd4e37746150ed364399ad45a049_15439_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; You won’t forget you left GLASM enabled any more!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; You won’t forget you left GLASM enabled any more!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;p&gt;Before starting with the driver rants, we want to share a possible way to save up to 2 GB of VRAM by taking advantage of Windows 11’s per-app graphics selector, assuming you have multiple GPUs available in your system.
This has the potential of helping VRAM-intensive games like &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt;, and may also improve 1% lows on native PC games too.&lt;/p&gt;
&lt;p&gt;For some reason, Windows uses around 1-2 GB of VRAM only for rendering the desktop.
That’s a heavy blow for GPUs equipped with 8 GB or less, without even considering other programs running in the background.&lt;/p&gt;
&lt;p&gt;The requisites are a desktop PC running an up-to-date Windows 11, either a motherboard with two full length PCI-Express slots or a CPU with an integrated GPU, and all GPUs being new enough to still get driver updates (a GT 710 won’t work with an RTX 4070 as they run different driver versions, and an Intel HD 620 won’t receive new driver updates). In this example we will use an RTX 3060 Ti and an RX 6600, a combination you might be familiar with from previous articles and charts.
A lower-end GPU like a GTX 750 or the integrated GPU of an Intel 11th Gen. (and newer) or Ryzen CPU would also work perfectly fine for this purpose.&lt;/p&gt;
&lt;p&gt;It should be noted that most laptop users already do this with no user intervention, as most laptops don’t include hardware mux switches and just pass the finished frames over the PCIe bus.&lt;/p&gt;
&lt;p&gt;The main trick here is to connect the display or displays to the secondary card, in order to get Windows, your browser, Discord, etc., to spend VRAM exclusively on the secondary card, letting yuzu and other programs/games get full access to the entire VRAM of the main GPU.
To do this, we will take advantage of some relatively recent additions to Windows 11.&lt;/p&gt;
&lt;p&gt;The first step after setting up the GPUs (desktop PCs may need to enable integrated GPUs on the UEFI configuration/BIOS) is to select the high performance card in display settings:&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./gpu1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/gpu1_huf78e191afeffd4892d530923a6b004fe_28288_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;On desktop PCs, Windows 10 fails here by not letting you select which card is which&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./gpu2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/gpu2_huc202a074e58bb9c0a2de706eae2f657e_68536_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;On desktop PCs, Windows 10 fails here by not letting you select which card is which&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./gpu3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/gpu3_hu5125ceb9143dfefff173ff626f91889e_38327_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;On desktop PCs, Windows 10 fails here by not letting you select which card is which&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;On desktop PCs, Windows 10 fails here by not letting you select which card is which&lt;/p&gt;


&lt;p&gt;While this is enough for yuzu after a reboot, you will also need to manually set up each game or program that requires using the high performance GPU:&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./gpu4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/gpu4_hu62ae307e92ba0c9665f1943daa3b68e9_53935_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Tech tip: Forza is faster if you run it with your main GPU&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./gpu5.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/gpu5_hu8390e6219123c60f938b19fef8c7f8c1_54922_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Tech tip: Forza is faster if you run it with your main GPU&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./gpu6.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/gpu6_huef3af2c0499a6166852fb401551a98ad_52851_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Tech tip: Forza is faster if you run it with your main GPU&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Tech tip: Forza is faster if you run it with your main GPU&lt;/p&gt;


&lt;p&gt;Like this, you get the benefits of more free VRAM on the high performance GPU, and if the secondary GPU is more efficient, a power consumption reduction overall when using the PC. More available VRAM results in improved minimum framerates (the 1% low for example).&lt;/p&gt;
&lt;p&gt;The cons for using this method is that frame data is transferred over the PCIe interface, which can be saturated.
This can result in slightly lower average framerates and more input lag.
But hey, a free way to get a 4GB GPU to run &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt; with better frame pacing is worth a try, right?&lt;/p&gt;
&lt;h3 id=&#34;nvidia-no-sign-of-progress&#34;&gt;NVIDIA, no sign of progress&lt;/h3&gt;
&lt;p&gt;The new (at the time of writing) 536.40 driver release that adds support for the RTX 4060 hasn’t introduced any regression for yuzu.
So it’s safe to update, just not “safe to upgrade” from older hardware yet.
Maybe the RTX 5000 series will be a more viable option.&lt;/p&gt;
&lt;p&gt;And from an interesting report that just came in, it seems using the NVIDIA Control Panel’s “Prefer maximum performance” option while playing &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; in conjunction with “Use asynchronous shader building” causes vertex explosions, most noticeably in cutscenes.
yuzu’s own “Force maximum clocks” toggle, while less efficient, doesn’t reproduce this interesting behaviour.
Something to keep in mind if you’re exploring Aionios with an NVIDIA GPU.&lt;/p&gt;
&lt;h3 id=&#34;amd&#34;&gt;AMD&lt;/h3&gt;
&lt;p&gt;Since driver release 23.7.1, a mysterious older “23.10.01.41 for Additional Vulkan Extensions” version, and the beta driver only available to Windows Insider testers, AMD official Vulkan drivers introduced a regression in how the &lt;code&gt;VK_EXT_extended_dynamic_state3&lt;/code&gt; extension handles colour blending.
&lt;a href=&#34;https://github.com/goldenx86&#34;&gt;Your writer&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10946&#34; data-gh-pr=&#34;10946&#34;&gt;blocked the affected bit&lt;/a&gt;
 while we monitor if future AMD driver releases manage to solve this problem.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/amdbug_hu17c3bc6a3d185c94d30a64cca0773439_1694707_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Who gave Link the Batman’s Detective Mode? (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2023/amdfix_hu10b83a5f07a910827940527992eb243c_1928433_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Who gave Link the Batman’s Detective Mode? (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Who gave Link the Batman’s Detective Mode? (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;


&lt;p&gt;The performance loss from this change is very small, so feel free to update to the latest drivers.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/GPUCode&#34;&gt;GPUCode&lt;/a&gt; has found a way to emulate D24 support on AMD GPUs by using the &lt;code&gt;VK_EXT_depth_bias_control&lt;/code&gt; extension, which is currently only available on the RADV Mesa driver on Linux.
In the near future, we’ll check if this method solves the remaining graphical issues specific to AMD hardware.
If it works, it would also solve the issue on the AMD official drivers, once/if the extension is supported there too.&lt;/p&gt;
&lt;p&gt;We know it’s not fun having to switch to OpenGL to be able to play some games, so we’re gearing up to combat even hardware limitations to defeat this foe.&lt;/p&gt;
&lt;h3 id=&#34;intel&#34;&gt;Intel&lt;/h3&gt;
&lt;p&gt;Intel had its fair share of fixes this month too.
First of all, as promised last month, byte[] added a translation for FP64 to FP32 when used in shaders.
This was required because Generation 12 Intel graphics (UHD 700/Iris Xe/Arc A series) removed support on a hardware level for double precision operations.
With this &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10693&#34; data-gh-pr=&#34;10693&#34;&gt;shader translation&lt;/a&gt;
 in place, games will no longer suddenly crash when trying to use these shaders, for example during the opening cutscene of &lt;code&gt;Tears of the Kingdom&lt;/code&gt; after starting a new game.&lt;/p&gt;
&lt;p&gt;The next issue is an interesting mix of unique behaviour by the Switch&amp;rsquo;s own graphics drivers, yuzu’s code at fault, and another case of lack of hardware support.
Intel&amp;rsquo;s GPUs allow the use of control barriers as specified by SPIR-V, which requires all threads in a dispatch to execute the same barriers at the same times, and don&amp;rsquo;t allow any threads to exit early if another barrier will occur.
But all other GPU vendors besides Intel, including mobile GPUs, do allow threads to exit early, and will free up barriers on the remaining threads as needed.
This situation caused Intel GPUs to hit device losses, as guest compute shaders had barriers that ended up hitting this exact type of control flow.&lt;/p&gt;
&lt;p&gt;By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10699&#34; data-gh-pr=&#34;10699&#34;&gt;removing barriers&lt;/a&gt;
 after conditional control flow, Intel GPUs are free from their device loss crashes.&lt;/p&gt;
&lt;p&gt;And lastly, one loose end remained, our toggle to disable the compute pipeline on Intel GPUs.
This option was a stopgap solution until a driver update was released. But since Intel has finally published a driver update fixing the issues, it has now become irrelevant. toastUnlimited therefore modified the option to only show up in yuzu’s settings if an old driver known to be affected is still in use.
The disable compute pipeline toggle is now a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10835&#34; data-gh-pr=&#34;10835&#34;&gt;legendary drop option&lt;/a&gt;
 only available for the most unlucky Generation 12 users, as the option will also remain hidden for unaffected Generation 11 and older devices.
&lt;a href=&#34;https://www.intel.com/content/www/us/en/download/729157/intel-arc-iris-xe-graphics-beta-windows.html&#34;&gt;Remember to update your drivers!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With all driver and yuzu stability-related issues fixed, we can finally recommend Intel hardware again, especially current-generation integrated GPUs like the Iris Xe.
While the lower-end 80EU-equipped Iris Xe can bottleneck performance at docked 1X mode in the most intensive games, it makes up for that by having zero texture related stuttering thanks to being the last breed of Intel GPUs with native ASTC texture support.
We don’t know if future iGPUs will keep supporting ASTC, but it’s a reality that Arc dedicated GPUs don’t offer it.&lt;/p&gt;
&lt;p&gt;Still, we can finally focus on working on the few remaining quirks for the Generation 12 architecture.
Right now, the Iris Xe can easily beat a Geforce MX450 in ASTC intensive games like &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt;, using less RAM and having no texture stuttering.
Here, the E-cores are a blessing for shader building.&lt;/p&gt;
&lt;p&gt;Hopefully future Intel products offer better FP16, higher performance, longer driver life support, don’t base their pricing on software gimmicks like their competition, and add a much-needed dedicated compute queue.&lt;/p&gt;
&lt;h3 id=&#34;android&#34;&gt;Android&lt;/h3&gt;
&lt;p&gt;With the release of the Android builds, the whole team is learning about the platform’s ecosystem, its features and limitations, quirks and advantages.
There are fun times ahead for sure.
This means we also learned about the depressing state of its GPU drivers…&lt;/p&gt;
&lt;h4 id=&#34;adreno-or-just-waiting-for-mesa&#34;&gt;Adreno, or just waiting for Mesa&lt;/h4&gt;
&lt;p&gt;Adreno hardware has great specifications, but their proprietary official drivers are incredibly bad!
We’re starting to work on improving rendering on the official Adreno drivers used by default on Qualcomm equipped devices, but there’s only so much we can do.
The real solution comes from, you guessed it, the team that manages to make good drivers with no access to confidential information: Mesa.&lt;/p&gt;
&lt;p&gt;One has to wonder why Android vendors don’t just use Mesa to begin with. Nothing deemed “confidential” or “trade-secret” here is more important than providing good software support!&lt;/p&gt;
&lt;p&gt;While the Adreno 600 series is well-supported and has great rendering with Mesa Turnip drivers, the 700 series is too new to enjoy the same benefits.
There have been a few packaged releases by &lt;a href=&#34;https://github.com/K11MCH1&#34;&gt;K11MCH1&lt;/a&gt; using the currently-in-development a700 branch of Mesa Turnip, but it’s exactly what it says on the tin: currently in development.
We can’t work on fixing regressions on a driver that is a work in progress; the only thing to do is to wait for it to mature.&lt;/p&gt;
&lt;h4 id=&#34;mali-good-drivers-slow-hardware-weird-decisions&#34;&gt;Mali, good drivers, slow hardware, weird decisions&lt;/h4&gt;
&lt;p&gt;Mali is the complete opposite of Adreno. While there is no current Mesa support for it, we found their proprietary Vulkan driver to be in great shape once its initial quirks were addressed.
The same can’t be said about their OpenGL ES driver as our friends at Citra will gladly tell you, but thankfully that’s not an issue here.
The main problem is that the most common hardware the driver gets to run on is pretty subpar, at least for Switch emulation.
Clearly, high-end devices won’t have much issue on the GPU front as they are not far behind Adreno in hardware specs, but the rest of the product stack will suffer from low framerates and GPU bottlenecks.&lt;/p&gt;
&lt;p&gt;Unfortunately, due to an unstable kernel API, and the lack of a maintained Mesa driver for these devices, there isn&amp;rsquo;t currently any practical way to replace the running driver on a Mali device with a better one.
If a device ships with an outdated driver too old for yuzu and the vendor doesn’t update it, chances are nothing can be done about it.&lt;/p&gt;
&lt;p&gt;That’s either planned obsolescence at its finest, or sheer incompetence. We’ll let you be the judge of that.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;Fun stuff is cooking, we can’t announce the several yet-unnamed projects at the moment, but know this ship isn’t slowing down any time soon.&lt;/p&gt;
&lt;p&gt;There’s work by Blinkhawk for faster GPU emulation, native code execution for ARM CPUs, MacOS gets a bit of much needed love, and more.
We’ll be reporting progress on these projects in the future, so keep your eyes peeled.&lt;/p&gt;
&lt;p&gt;toastUnlimited started a big UI rewrite for the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/10839&#34;&gt;per-game configurations&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some changes that didn’t make it in time for the cut-off date of this article include fixing crashes affecting Unreal engine games running on NVIDIA GPUs.
We’ll cover those next month.&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you for reading until the end. We hope to see you next month!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report May 2023</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/</link>
      <pubDate>Sat, 17 Jun 2023 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/</guid>
      <description>&lt;p&gt;&lt;em&gt;What a month!&lt;/em&gt; GOAT releases, yuzu ventures onto new platforms, we get a taste of Project Gaia, full Amiibo support, further Project Y.F.C., and a lot more!
Put on your safety belt and start playing some &lt;a href=&#34;https://youtu.be/8B4guKLlbVU&#34;&gt;eurobeat&lt;/a&gt;, this will be a long ride.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;&lt;em&gt;What a month!&lt;/em&gt; GOAT releases, yuzu ventures onto new platforms, we get a taste of Project Gaia, full Amiibo support, further Project Y.F.C., and a lot more!
Put on your safety belt and start playing some &lt;a href=&#34;https://youtu.be/8B4guKLlbVU&#34;&gt;eurobeat&lt;/a&gt;, this will be a long ride.&lt;/p&gt;
&lt;h2 id=&#34;the-legend-of-zelda-tears-of-the-vram&#34;&gt;The Legend of Zelda: Tears of the VRAM&lt;/h2&gt;
&lt;p&gt;Six years and the wait was worth it.
No pay to win mechanics, no soul-draining microtransactions, no apology letter published after release. &lt;a href=&#34;https://youtu.be/i1qnIBLNOG0?t=16&#34;&gt;Just game, just good game&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./totk1.png&#34; title=&#34; Runs on a 2015 tablet. (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/totk1_hu4c26e6f44ce602714c2f9c45119e276c_6949524_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Runs on a 2015 tablet. (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Runs on a 2015 tablet. (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Zelda is back, and once again teaches the gaming industry how to make a video game, while also making it fit inside a 15-year-old USB stick and run on an 8-year-old mobile SoC.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./totk2.png&#34; title=&#34; And it’s only 16GB! (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/totk2_hu1691cbeb1cce00455f62c66c8a7c7a9a_6221803_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; And it’s only 16GB! (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; And it’s only 16GB! (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt; not only made its predecessor (a game which already reinvented how open-world gameplay should be done) look like a tech demo, but it also turned out to be one massive heavyweight, punching way above its class in hardware requirements when emulated.
The combination of a heavier physics engine, massive amounts of shaders, and the ludicrous use of enormous ASTC textures has brought emulators to their knees.&lt;/p&gt;
&lt;p&gt;Let’s begin with the most complex problem the Princess introduced the project to. The old Switch-emulation-on-PC nemesis, now elevated to new heights: ASTC.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./deer.png&#34; title=&#34; Deer. (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/deer_hue909b28ae187dd3247bf93e7ec2d87af_11809427_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Deer. (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Deer. (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;As there isn&amp;rsquo;t a single dedicated desktop or laptop graphics card that supports the native decoding of &lt;a href=&#34;https://en.wikipedia.org/wiki/Adaptive_scalable_texture_compression&#34;&gt;ASTC textures&lt;/a&gt; (with the exception of Intel iGPUs), yuzu is forced to transcode them on the fly into a safe and lossless format that all GPUs support; in this case, the &lt;code&gt;RGBA8&lt;/code&gt; format.&lt;/p&gt;
&lt;p&gt;This was perfectly fine until now (even on 2GB GPUs), since &lt;code&gt;ASTRAL CHAIN&lt;/code&gt; was the only game that made &amp;ldquo;extensive&amp;rdquo; use of ASTC textures, shipping with 4K textures on a mobile device intended for 1080p and 720p screen resolutions.
Our garbage collector, introduced two years ago with &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/&#34;&gt;Project Hades&lt;/a&gt;, which our veteran users know as “the memory Reaper”, was tuned for this worst case scenario at the time.&lt;/p&gt;
&lt;p&gt;But what happens if a game with many more textures and a teletransportation system that allows the player to reach different regions in-game (and, in turn, load a truckload of new, different textures) releases?
What if this hypothetical game made use of dozens and dozens of huge ASTC textures?&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./totk3.png&#34; title=&#34; The VRAM is on fire! (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/totk3_hu69161542e16dd42527c449c77bb331f0_9025078_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The VRAM is on fire! (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The VRAM is on fire! (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Well, suddenly the old and trusted garbage collector we developed is no longer capable of keeping even 8GB GPUs working.
That’s right, the VRAM starvation affecting the PC gaming industry hurts yuzu too.
Serious changes had to be made, and they had to allow 2GB GPUs to still be compatible somehow.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gpu.jpg&#34; title=&#34; Your writer’s Tower of VRAM Testing. GTX 750 2GB, RX 550 2GB, and RX 6600 8GB. Not pictured, GTX 1650 4GB, GTX 1660 SUPER 6GB, and RTX 3060 Ti 8GB&#34;&gt;&lt;img src=&#34;./gpu.jpg&#34; alt=&#34; Your writer’s Tower of VRAM Testing. GTX 750 2GB, RX 550 2GB, and RX 6600 8GB. Not pictured, GTX 1650 4GB, GTX 1660 SUPER 6GB, and RTX 3060 Ti 8GB&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Your writer’s Tower of VRAM Testing. GTX 750 2GB, RX 550 2GB, and RX 6600 8GB. Not pictured, GTX 1650 4GB, GTX 1660 SUPER 6GB, and RTX 3060 Ti 8GB&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The solution, which took many attempts, was split into several parts to ensure that no other games were negatively affected by the changes, and required the combined efforts of &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt;, &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; and &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While investigating very low VRAM devices, byte[] found that yuzu used &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10286&#34; data-gh-pr=&#34;10286&#34;&gt;incompatible memory property flags&lt;/a&gt;
 when the Vulkan memory allocator was under pressure, causing low VRAM GPUs to crash when trying to actually use a recycled allocation.&lt;/p&gt;
&lt;p&gt;Having more VRAM available certainly helps, but that’s not enough to avoid the game from biting off more than the GPU’s memory can chew under stressful conditions — for example, teleporting between different regions.&lt;/p&gt;
&lt;p&gt;Previously, if VRAM was almost full, the memory manager would try to use shared memory, which is just a portion of system RAM, for new allocations.
This caused massive slowdowns during gameplay, as the transfer operation of going over system RAM, CPU, PCIe, GPU, and finally VRAM is a slow process that introduces a high latency.&lt;/p&gt;
&lt;p&gt;Collecting memory in VRAM is much faster than transferring data over to system RAM.
So, instead of relying on the slow shared memory, the memory manager (Reaper) now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10288&#34; data-gh-pr=&#34;10288&#34;&gt;keeps everything in dedicated memory&lt;/a&gt;
 (VRAM), leaving some free space to accommodate sudden spikes in VRAM usage when new assets are loaded.
If you see 2GB or more of always-free VRAM in your system, know that its purpose is to keep gameplay smooth, even on 4GB GPUs.
Don’t worry, we’re not wasting your precious VRAM. We’re just keeping it warm and cozy for when you need it.
This also has the added benefit of saving on system RAM consumption, allowing 8GB RAM users to have more stable gameplay.&lt;/p&gt;
&lt;p&gt;All of this is not enough to allow 4GB VRAM users or less to achieve stable gameplay, so it’s time to reveal the ace up yuzu’s sleeve.
What if, instead of relying on the pixel-accurate but bigger &lt;code&gt;RGBA8&lt;/code&gt; texture format, the emulator recompressed to some other smaller formats?&lt;/p&gt;
&lt;p&gt;Ladies and gentlemen, we present you &lt;code&gt;ASTC recompression&lt;/code&gt;, a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10398&#34; data-gh-pr=&#34;10398&#34;&gt;new option&lt;/a&gt;
 available in &lt;code&gt;Emulation &amp;gt; Configure &amp;gt; Graphics &amp;gt; Advanced&lt;/code&gt; that intends to reduce VRAM consumption by turning those Ganon-cursed unsupported ASTC textures into something more suitable for low-VRAM GPUs.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./astcrecomp.png&#34; title=&#34; We recommend avoiding BC1 if possible.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/astcrecomp_hua6fbb28a9636f9125975b59c1e7c36d0_14281_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; We recommend avoiding BC1 if possible.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; We recommend avoiding BC1 if possible.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The principle is pretty simple, we just add one more step to the recompression process, from ASTC &amp;gt; RGBA8, to ASTC &amp;gt; RGBA8 &amp;gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/S3_Texture_Compression&#34;&gt;BC1 or BC3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The default &lt;code&gt;Uncompressed&lt;/code&gt; setting uses the old &lt;code&gt;RGBA8&lt;/code&gt; method, which preserves the original image quality, but also consumes the most VRAM.
For users that wish to emulate &lt;code&gt;Tears of the Kingdom&lt;/code&gt;, we recommend setting this option if their GPU has at least 10-12GB of VRAM.
For other, more &lt;strong&gt;reasonable&lt;/strong&gt; games, this option is suitable for users with cards with at least 4GB of VRAM.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;BC3 (medium quality)&lt;/code&gt; setting reduces the VRAM usage of ASTC textures by a factor of four, with a very minimal loss in quality, typically showing as marginally softer textures.
This setting is recommended for emulating &lt;code&gt;Tears of the Kingdom&lt;/code&gt; on 6GB and 8GB GPUs.
For other games, this setting is good for GPUs with 3GB of VRAM.&lt;/p&gt;
&lt;p&gt;Finally, the &lt;code&gt;BC1 (low quality)&lt;/code&gt; setting cuts down the VRAM consumption by a factor of eight, but will also have a significant impact on texture quality, to the point where some assets will look completely different.
We don’t recommend using this setting unless you really have to.
It allows users with 4GB of VRAM to play &lt;code&gt;Tears of the Kingdom&lt;/code&gt; without significant issues, and will make 2GB users have a smoother and more reliable experience in other games.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bc11.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/bc11_hu1f674452370eccfd708de7b768ba77de_11681037_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From first to last, BC1 vs BC3 vs ASTC (Fire Emblem Engage)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bc31.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/bc31_hu94f37d3941248d118c6ab5ac7ce2c451_8337901_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From first to last, BC1 vs BC3 vs ASTC (Fire Emblem Engage)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./astc1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/astc1_huead856a653126882f7408344941cb705_8190681_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From first to last, BC1 vs BC3 vs ASTC (Fire Emblem Engage)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;From first to last, BC1 vs BC3 vs ASTC (Fire Emblem Engage)&lt;/p&gt;


&lt;p&gt;As you can see, BC1 destroys image quality in some games.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bc12.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/bc12_hu7985fb6b7462d7a53a917bbf4a86066b_2623192_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From first to last, BC1 vs BC3 vs ASTC (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bc32.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/bc32_hu0b16de1510bcea3c9bf010ebc2cc5a26_2580495_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From first to last, BC1 vs BC3 vs ASTC (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./astc2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/astc2_hue80861dd99209960b580762d9d2c534d_2558465_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From first to last, BC1 vs BC3 vs ASTC (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;From first to last, BC1 vs BC3 vs ASTC (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;


&lt;p&gt;But in others, the difference is less noticeable.
If you only have 2GB of VRAM and 8GB of RAM, the sacrifice may be worth it.&lt;/p&gt;
&lt;p&gt;This is currently done using the CPU, but GPU acceleration is planned for the future.
We also hope to add an option to use BC7 in the future to provide a higher quality experience.&lt;/p&gt;
&lt;p&gt;Keep in mind that &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10398&#34; data-gh-pr=&#34;10398&#34;&gt;ASTC recompression&lt;/a&gt;
 only works on ASTC textures, so the actual VRAM usage reduction will depend on the game. Not every resource held in VRAM is ASTC.
If your hardware can handle ASTC natively, this setting won’t do anything for you, as there&amp;rsquo;s no need for any recompression.&lt;/p&gt;
&lt;p&gt;In addition, byte[] has also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10422&#34; data-gh-pr=&#34;10422&#34;&gt;tuned the memory manager&lt;/a&gt;
 to be more ruthless.
This change should help improve gameplay stability during long sessions on systems with less RAM.
yuzu always aims to support a minimum of 8GB of RAM on systems with dedicated GPUs.&lt;/p&gt;
&lt;p&gt;He also made sure that &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10452&#34; data-gh-pr=&#34;10452&#34;&gt;memory collection doesn’t happen during the configuration step,&lt;/a&gt;
 so that it doesn&amp;rsquo;t cause a device loss (i.e. the GPU driver shutting down).&lt;/p&gt;
&lt;p&gt;By fixing the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10433&#34; data-gh-pr=&#34;10433&#34;&gt;block depth adjustment on slices,&lt;/a&gt;
 Blinkhawk solved the rendering issues affecting the gloom textures on the terrain in &lt;code&gt;Tears of the Kingdom&lt;/code&gt;, a bug that was especially frustrating on low VRAM hardware.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/gloombug_hu97940f3797ff5cf99ed91267dcd08503_1482598_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Let’s not make the gloom feel depressed… (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/gloomfix_huc6e12810f24c64c096e2f247e20b96a2_1445193_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Let’s not make the gloom feel depressed… (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Let’s not make the gloom feel depressed… (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;


&lt;p&gt;And for integrated GPU users with 16GB of system RAM or less, such as the Steam Deck, newcomer &lt;a href=&#34;https://github.com/scorpion81&#34;&gt;scorpion81&lt;/a&gt; has a treat for you.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10411&#34; data-gh-pr=&#34;10411&#34;&gt;Setting a hard cap at 4GB&lt;/a&gt;
 allows &lt;code&gt;Tears of the Kingdom&lt;/code&gt; to be playable without hitting the page file/swap too hard.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./astcbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./astcfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The difference made on a 2GB equipped GTX 750 (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;


&lt;p&gt;That wraps up the list of changes made to memory management to allow &lt;code&gt;Tears of the Kingdom&lt;/code&gt; to be playable in at least the components listed in our &lt;a href=&#34;https://yuzu-mirror.github.io/help/quickstart/#hardware-requirements&#34;&gt;hardware requirements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These changes would not be necessary if GPUs just supported ASTC textures.
Wouldn&amp;rsquo;t you like your games to be no bigger than 100GB instead of having software features that ruin image quality, such as frame generation?
Native ASTC decoding support would make this possible.&lt;/p&gt;
&lt;p&gt;An Intel Iris Xe iGPU can run the game at 30 FPS in handheld mode while using less memory than any other hardware combination, all thanks to being their last GPU capable of decoding ASTC.
More on Intel&amp;rsquo;s driver support later.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./totkception.png&#34; title=&#34; We need to go deeper! (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/totkception_hu47371e20be95bdb32a4f67883fedbadf_6286128_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; We need to go deeper! (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; We need to go deeper! (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This was the worst part&amp;hellip; up to this point. More work was needed to get the game to boot and render properly. Let’s dive into that.&lt;/p&gt;
&lt;p&gt;One thing that both the Switch and Android devices have in common is the way they present to the screen.
Google&amp;rsquo;s OS uses &lt;code&gt;SurfaceFlinger&lt;/code&gt; (the only good Linux presentation method), and the Switch uses &lt;code&gt;nvnflinger&lt;/code&gt;, which is a custom adaptation of &lt;code&gt;SurfaceFlinger&lt;/code&gt; designed for the Switch&amp;rsquo;s firmware and operating system.
While this gives us a good frame of reference for how &lt;code&gt;nvnflinger&lt;/code&gt; should be emulated, sometimes bugs can still sneak in.
These bugs are not always easy to spot, especially if no game had rendering problems until now.&lt;/p&gt;
&lt;p&gt;byte[] realised that yuzu was &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10236&#34; data-gh-pr=&#34;10236&#34;&gt;serialising binder responses incorrectly&lt;/a&gt;
 (in a different way to how Android does it).
Fixing this simple bug allowed for &lt;code&gt;Tears of the Kingdom&lt;/code&gt; to boot.&lt;/p&gt;
&lt;p&gt;Meanwhile, Maide implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10234&#34; data-gh-pr=&#34;10234&#34;&gt;shader fixes,&lt;/a&gt;
 suggested by &lt;a href=&#34;https://github.com/Kristijan1001&#34;&gt;Kristijan1001&lt;/a&gt;, solving issues with cloud flickering and missing geometry in The Depths.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./depths.jpeg&#34; title=&#34; Your GPU is fine, it’s just software. (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;img src=&#34;./depths.jpeg&#34; alt=&#34; Your GPU is fine, it’s just software. (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Your GPU is fine, it’s just software. (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Next is a bug that only affected the base game. Following updates were unaffected, as they rendered in a different order.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./red.png&#34; title=&#34; Ganon likes to record Link… (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/red_hud6d4bcc4aeed3191d1fee6deb4efb26a_1662324_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Ganon likes to record Link… (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Ganon likes to record Link… (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This mysterious red dot on the right was caused by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10243&#34; data-gh-pr=&#34;10243&#34;&gt;incorrectly tracking&lt;/a&gt;
 render target indexes when clearing.
Thanks to some behaviour changes made by Maide, Link is no longer being spied on.&lt;/p&gt;
&lt;p&gt;After the game was released, several users reported that the date in the game&amp;rsquo;s save files was always set to January 1st, 1970.
After checking the behaviour of the Switch, byte[] implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10244&#34; data-gh-pr=&#34;10244&#34;&gt;a few changes&lt;/a&gt;
 that solved the issue with an updated service implementation that allows for computing the time in nanoseconds, automatically adjusting for clock skew, and using the same clock source as the system’s steady clock.&lt;/p&gt;
&lt;p&gt;There were also reports of graphical glitches when using the 2X resolution scaling factor: Link and terrain textures would become corrupted after switching weapons.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./2x.png&#34; title=&#34; Scrambled textures. (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/2x_hud4ddb31e2abf39c65898258ea642c893_2656586_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Scrambled textures. (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Scrambled textures. (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Blinkhawk quickly found the cause of this problem: wrong clears were performed in the code responsible for synchronization in the buffer cache.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10249&#34; data-gh-pr=&#34;10249&#34;&gt;Some tweaks,&lt;/a&gt;
 and the game can be safely played while scaled.&lt;/p&gt;
&lt;p&gt;For the Linux AMD users, especially those not using the latest Mesa RADV Vulkan driver releases, byte[] found that one of the features of &lt;code&gt;VK_EXT_extended_dynamic_state3&lt;/code&gt;, dynamic depth clamp, was implemented incorrectly in the driver, leading to vertex explosions in some expository moments in the game.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/radvbug_hu3e3fbdd95b8c532ec485605a68ef924b_215985_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Oh, there goes the vertex… (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/radvfix_hu21bf0834f03b5ea53d95076456c9f7f6_2208018_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Oh, there goes the vertex… (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Oh, there goes the vertex… (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;


&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10262&#34; data-gh-pr=&#34;10262&#34;&gt;Disabling the feature&lt;/a&gt;
 for the affected driver version and older solves this issue.&lt;/p&gt;
&lt;p&gt;Another identified issue affected the light projection made by the Ultrahand ability, intended to help the player position objects.
The green glow had a pixelated look, caused by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10402&#34; data-gh-pr=&#34;10402&#34;&gt;missing barriers on attachment feedback loops.&lt;/a&gt;
&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    &lt;img src=&#34;./ultrabug.jpg&#34; alt=&#34;Green Lantern hand. (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    
    
    
    
    
    &lt;img src=&#34;./ultrafix.jpg&#34; alt=&#34;Green Lantern hand. (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Green Lantern hand. (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;


&lt;p&gt;Several keyboard strokes later, and byte[] went green with envy.&lt;/p&gt;
&lt;p&gt;Next on the list of weird rendering issues is one that affected camera changes — for example, when talking to an NPC or aiming with the bow/throwing a weapon.
Large areas in front of the player would turn black for a frame and then return to normal.
Needless to say, it was very distracting.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./bow.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; A bow so cursed, it tries to take you to the Shadow Realm! (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This bug was caused by the way the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10418&#34; data-gh-pr=&#34;10418&#34;&gt;texture cache&lt;/a&gt;
 processed aliases and overlaps, which were in the wrong order and caused sync problems.
After a few tries by Blinkhawk and byte[], the issue was finally fixed.&lt;/p&gt;
&lt;p&gt;While investigating bugs related to &lt;code&gt;Tears of the Kingdom&lt;/code&gt;, a copy-paste error hidden in the code for 3 years was also found.
In the shader recompilation code, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; copied over the wrong value from one line to the next.
This is another interesting case of the problem not being an issue until now, as no one noticed this bug until Zelda needed rescuing again&amp;hellip;
By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10459&#34; data-gh-pr=&#34;10459&#34;&gt;changing a single character,&lt;/a&gt;
 byte[] solved the terrain gaps that could be spotted from a distance all over the map, but most noticeably in The Depths.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/gapbug_hu499b45ba78b0d6d67f03437b528d7810_2847630_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;What’s deeper than The Depths? (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/gapfix_hufe7d491bb8f69350d1ae04f2af87db62_2833307_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;What’s deeper than The Depths? (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;What’s deeper than The Depths? (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;


&lt;p&gt;In an interesting case where a UI setting is needed to improve a game’s rendering, byte[] added an option to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10464&#34; data-gh-pr=&#34;10464&#34;&gt;clean the cache storage for a game,&lt;/a&gt;
 which can be accessed from the &lt;code&gt;Remove&lt;/code&gt; menu when right clicking a game in yuzu’s game list.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./remove.png&#34; title=&#34; It’s fun to watch the game reconstruct the images in real time.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/remove_hu11d246035b50058ef89bca88801cf802_29282_790x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; It’s fun to watch the game reconstruct the images in real time.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; It’s fun to watch the game reconstruct the images in real time.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This option is needed because using Asynchronous shader building in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced&lt;/code&gt; will mess up fused weapon icons in the weapon selection menu, as well as autobuild history.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/cachebug_hua9a14e9e9ea5142730f8724f2b9950ce_2680105_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Not even close, baby! (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/cachefix_huef5336b2385dcd7ea9d9005c249bbfb3_2885615_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Not even close, baby! (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Not even close, baby! (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;


&lt;p&gt;Disabling Asynchronous shader building and clearing the cache storage lets the game properly rebuild the images of all your weaponized abominations.&lt;/p&gt;
&lt;p&gt;That’s the progress so far with &lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt;!
You may have noticed there are no performance improvements mentioned here.
We’re following one of the most important rules of coding, “Make it work. Make it right. Make it fast.”&lt;/p&gt;
&lt;p&gt;As this is a particularly popular game (and for good reason), here are some recommendations that user reports and fixes have taught us.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This game is very demanding on hardware. What we list in yuzu’s &lt;code&gt;recommended&lt;/code&gt; &lt;a href=&#34;https://yuzu-mirror.github.io/help/quickstart/#hardware-requirements&#34;&gt;hardware requirements&lt;/a&gt; is the minimum needed to sustain 30 FPS in most areas. A 6-core desktop Zen 2/11th gen Core, 16GB of RAM, and a GPU with at least 6GB of VRAM are the baseline for now.&lt;/li&gt;
&lt;li&gt;The latest CPUs (Zen 4/13th gen Core, always speaking of desktop products) provide massive improvements in IPC, RAM bandwidth, and cache sizes. Where a Ryzen 7 5800X3D barely manages 55 FPS, a Ryzen 5 7600 reaches 90 FPS.&lt;/li&gt;
&lt;li&gt;Normal GPU accuracy can be used to improve performance safely.&lt;/li&gt;
&lt;li&gt;Unsafe CPU accuracy can improve performance at the cost of small inaccuracies.&lt;/li&gt;
&lt;li&gt;Enabling asynchronous presentation degrades performance a bit.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t use &lt;code&gt;Decode ASTC textures asynchronously&lt;/code&gt; for this game, it will cause crashes.&lt;/li&gt;
&lt;li&gt;In some rare cases audio events can cause crashes, so be careful when using multi-arrow bows and bombs.&lt;/li&gt;
&lt;li&gt;The Depths are particularly hungry for VRAM. Remember to use ASTC recompression if you are VRAM starved. We recommend at least 8GB of VRAM for 2X resolution scaling using BC3 compression.&lt;/li&gt;
&lt;li&gt;The modding community has been providing amazing mods. Dynamic framerate, improved resolution and details, and much more are only a few clicks away. Here’s a &lt;a href=&#34;https://github.com/HolographicWings/TOTK-Mods-collection&#34;&gt;collection with recommendations&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Old FPS mods compatible with the base version of the game (1.0.0) are unstable and will cause softlocks and crashes during certain actions like the Game Over screen. Update your game and use newer mods.&lt;/li&gt;
&lt;li&gt;Remember to test the game without mods before reporting issues, as mods are still altering memory regions to work.&lt;/li&gt;
&lt;li&gt;If you disabled &lt;code&gt;Use Fast GPU Time&lt;/code&gt; due to recommendations from modders, do it only for &lt;code&gt;Tears of the Kingdom&lt;/code&gt;, as you will be seriously affecting performance in other games. Right clicking a game in yuzu’s game list and selecting properties shows the per-game configuration. We strongly recommend keeping &lt;code&gt;Use Fast GPU Time&lt;/code&gt; enabled in all scenarios.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=1pN8TvupNn4&#34;&gt;Now go. Let the Legend come back to life.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;project-lime&#34;&gt;Project Lime&lt;/h2&gt;
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10508&#34; data-gh-pr=&#34;10508&#34;&gt;Bet you didn’t expect this.&lt;/a&gt;

&lt;p&gt;That’s right, with the blessing from Skyline’s &lt;a href=&#34;https://github.com/bylaws&#34;&gt;bylaws&lt;/a&gt;, help from Dolphin’s &lt;a href=&#34;https://github.com/t895&#34;&gt;t895&lt;/a&gt; and Citra’s &lt;a href=&#34;https://github.com/GPUCode&#34;&gt;GPUCode&lt;/a&gt;, work from yuzu’s and Citra’s &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;flTobi&lt;/a&gt;, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt;, &lt;a href=&#34;https://github.com/merryhime&#34;&gt;Merry&lt;/a&gt;, &lt;a href=&#34;https://github.com/Schplee&#34;&gt;Flamboyant Ham&lt;/a&gt;, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;, and more, yuzu is now &lt;a href=&#34;https://yuzu-mirror.github.io/downloads/#android&#34;&gt;available for Android devices&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;We recommend that you read the dedicated yuzu on Android article &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/&#34;&gt;here&lt;/a&gt;.
In this section, we will give you an overview of our future plans, some tips on settings and hardware requirements, and a realistic outlook on what you can expect from yuzu on Android right now.&lt;/p&gt;
&lt;p&gt;The Android version of yuzu was not an easy feat. It took us almost eight months of hard work to make it happen.
Right now, the core is essentially the same as the desktop version, with an Android UI and &lt;em&gt;very few&lt;/em&gt; platform-specific tweaks.
This means you can enjoy features like 32-bit game support, NVDEC video decoding support, motion, controller automapping, resolution scaling, and filters.
On the other hand, features like mod and cheat management, LDN, and the controller configuration applet are still under development.
Our goal is to gradually have the Android builds reach parity with the PC version.&lt;/p&gt;
&lt;p&gt;In addition to the Google Play Store, we will soon be posting releases on our GitHub, and F-Droid is also on the horizon.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./lime1.png&#34; title=&#34; Don’t judge, it’s a light game and loads quickly, it was great for testing. (Sakura Neko Calculator)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/lime1_hu3025deda088ea43d826cd4ce5d7e4bbf_1119083_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Don’t judge, it’s a light game and loads quickly, it was great for testing. (Sakura Neko Calculator)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Don’t judge, it’s a light game and loads quickly, it was great for testing. (Sakura Neko Calculator)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;One of the biggest lessons we learned from Project Lime is that, even after 8 years since the launch of the NVIDIA Tegra X1 (the SoC that powers the Nintendo Switch), Android SoC vendors still don’t know how to make GPU drivers.&lt;/p&gt;
&lt;p&gt;They all started working on Vulkan drivers around the same time in 2016. And yet, none of them have managed to deliver a compliant and stable Vulkan Android driver, except for the rare few NVIDIA devices.&lt;/p&gt;
&lt;p&gt;It is obvious that only 4 vendors have the expertise and the commitment to make Vulkan drivers work: NVIDIA, AMD, and Mesa, with a special mention for Intel, who recently stepped up their game.&lt;/p&gt;
&lt;p&gt;Although not one of these 4, we decided that limiting support to Qualcomm SoCs was our only option for now if we didn&amp;rsquo;t want to spend several months further modifying our GPU code to accommodate all the quirks and broken extensions of Android phones and tablets.
Not because their driver is decent — it’s bad.
But it was just good enough to get some games to render, albeit incorrectly most of the time.&lt;/p&gt;
&lt;p&gt;Qualcomm is the best option (and for now, the only one) because bylaws created &lt;a href=&#34;https://github.com/bylaws/libadrenotools&#34;&gt;AdrenoTools&lt;/a&gt;, which lets users load the &lt;em&gt;&lt;strong&gt;vastly&lt;/strong&gt;&lt;/em&gt; superior &lt;a href=&#34;https://docs.mesa3d.org/drivers/freedreno.html&#34;&gt;Mesa Turnip&lt;/a&gt; drivers on their Adreno 600 series GPUs, providing more accurate rendering, comparable to the quality expected of PC products.
Any Qualcomm SoC with a name like “Snapdragon ###” from the 460 to the 888+ equipped with an Adreno 600 series GPU can choose to use either the proprietary Qualcomm driver or Mesa Turnip.&lt;/p&gt;
&lt;p&gt;The performance gain you can expect from a device with a Snapdragon Gen 1 or Gen 2 is quite significant.
But the problem is that, while the Adreno 700 series GPU that comes with it is very powerful hardware-wise, the proprietary Qualcomm driver for it is subpar at best, and Mesa has only just begun to work on adding support for Turnip.
There&amp;rsquo;s an early driver release to test, but results are not great for now.
It will take weeks, if not months, before we see proper support emerge. In the meantime, we intend to work on improving the rendering on the official Adreno drivers.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./driver.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/driver_hu79e5580693449f2927282912ff23d783_115103_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Try several, don’t marry the first one that works. Divorcing a shader cache isn’t fun.&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./driver2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/driver2_hu79e5580693449f2927282912ff23d783_116167_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Try several, don’t marry the first one that works. Divorcing a shader cache isn’t fun.&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Try several, don’t marry the first one that works. Divorcing a shader cache isn’t fun.&lt;/p&gt;


&lt;p&gt;The Adreno 500 series is too outdated for yuzu. Its proprietary Vulkan driver is missing many of the essential features required, and Turnip has no plans to support it either.&lt;/p&gt;
&lt;p&gt;Mali is an example of good but weak hardware being limited by the quirks of its available drivers.
Unlike Adreno, Mali has no viable Mesa alternative to rescue it, and the current proprietary Mali drivers are in bad shape for Switch emulation.
Its current status is that it won’t boot any game on yuzu, but:&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mali.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./mali.jpg&#34; alt=&#34;Internal dev build, work-in-progress in getting G series Mali running.&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mali2.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./mali2.jpg&#34; alt=&#34;Internal dev build, work-in-progress in getting G series Mali running.&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Internal dev build, work-in-progress in getting G series Mali running.&lt;/p&gt;


&lt;p&gt;We’re working on solving all the quirks needed to get Mali rendering on yuzu as soon as possible.
This is the most common GPU vendor on the platform after all.
Mali support will happen, we just need some time.
Expect news very soon!&lt;/p&gt;
&lt;p&gt;The last case of hardware that should work, but doesn’t, is the AMD RDNA2-based Xclipse 920 from Samsung, used only in the latest Exynos 2200 SoC, and somehow completely skipped from the S23 series phones.
Available information suggests that it may just be an old AMD Windows driver ported to Android, but for some reason the devices refuse to start rendering on yuzu.
This is a GPU we want to get working, as there is no clear reason why it doesn&amp;rsquo;t work, while desktop AMD products work almost flawlessly.
Unfortunately, we haven&amp;rsquo;t yet been able to get our hands on one, but we&amp;rsquo;ll update with more info once we do.&lt;/p&gt;
&lt;p&gt;For all other vendors like PowerVR, Vivante, etc: don&amp;rsquo;t bother.
These vendors offer such low quality drivers that support is impossible.&lt;/p&gt;
&lt;p&gt;We’re working hard on improving GPU compatibility, adding the necessary changes needed to boot within the limitations set by the vendors.&lt;/p&gt;
&lt;p&gt;CPU emulation still relies on the Dynarmic JIT, instead of native code execution.
This allows us to run 32-bit games like &lt;code&gt;Mario Kart 8 Deluxe&lt;/code&gt;, but is slow for 64-bit games.
Expect “good” compatibility, similar to the desktop version thanks to this, but also low performance and high temperatures.
Native code execution, or NCE (do I smell &lt;code&gt;Project Nice&lt;/code&gt;?) is on our list of goals for the Android builds.&lt;/p&gt;
&lt;p&gt;The CPU itself, while very crucial for performance and the main bottleneck for now, is less important than the GPU, for the reasons previously mentioned (the drivers).
The same rules as on PC apply here: 6 cores or more is preferred, and the highest possible IPC is strongly recommended. A Snapdragon 8 Gen 2 can be twice as fast as a Snapdragon 865.&lt;/p&gt;
&lt;p&gt;RAM use is both a blessing and a curse.
A blessing because Android devices natively support ASTC textures — the format is designed for such devices.
This allows the GPU to use very little RAM, just like on the Switch.&lt;/p&gt;
&lt;p&gt;The curse is that, because Android is such a heavy OS, there is no guarantee that complex games will run on devices with 6GB of RAM. 8GB is the strong recommendation, which puts compatibility on the pricey side of the spectrum.
A certain Zelda game we wrote a lot about currently requires at least 12GB of RAM to run.&lt;/p&gt;
&lt;p&gt;There are ongoing efforts to reduce memory requirements, such as native code execution and &lt;a href=&#34;https://en.wikipedia.org/wiki/Unified_Memory_Architecture&#34;&gt;UMA&lt;/a&gt; optimizations for the GPU code, but the reality is that emulation adds overhead and Android will only get fatter over time.
We may be able to get light 2D games running on 4GB devices, but we don&amp;rsquo;t expect complex 3D games to run on less than 8GB any time soon, if ever.&lt;/p&gt;
&lt;p&gt;We have set the minimum required operating system to Android 11.
This decision was made to prevent installation on completely unsuitable hardware (like Adreno 500 series devices or older T series Mali GPUs), and to reduce installation on low-memory devices as much as possible.
This is final, as there are no plans to support older Android versions.&lt;/p&gt;
&lt;p&gt;Of course, it must be a 64-bit Android 11 or newer; just like on desktop, 32-bit devices will never be supported.&lt;/p&gt;
&lt;p&gt;Users with capable hardware stuck on older Android versions can either build yuzu themselves and remove the code responsible for performing this check, or install custom ROMs such as &lt;a href=&#34;https://lineageos.org/&#34;&gt;LineageOS&lt;/a&gt; to get unofficial Android updates on their device.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./lime2.png&#34; title=&#34; Your writer will enjoy playing visual novels and simple platformers. (The Liar Princess and the Blind Prince)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/lime2_hueff6b71be2e0d0f9bb98040525381bef_1762391_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Your writer will enjoy playing visual novels and simple platformers. (The Liar Princess and the Blind Prince)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Your writer will enjoy playing visual novels and simple platformers. (The Liar Princess and the Blind Prince)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Now that we have covered the harsh reality of Android software and hardware, let’s focus on the current experience.&lt;/p&gt;
&lt;p&gt;We included a customisable input overlay with haptics, which can be disabled if you prefer to play with a Bluetooth Xbox controller, Sony Dualshock 4 or Dual Sense, or a Nintendo Pro Controller, and a framerate counter.
You can access these settings in-game by dragging from the left side of the screen.&lt;/p&gt;
&lt;p&gt;If you updated from a previous version, the overlay may be invisible. Just select &lt;code&gt;Overlay Options &amp;gt; Reset Overlay&lt;/code&gt; to make it visible again.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./settings1.png&#34; title=&#34; Set as you see fit. (Cooking Mama: Cookstar)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/settings1_hue4d1bdf3d0261eecda07c557799ce8e2_1136719_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Set as you see fit. (Cooking Mama: Cookstar)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Set as you see fit. (Cooking Mama: Cookstar)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While playing a game you can select Settings from the left menu, or select it from the main menu.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./settings2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/settings2_hu49138a21e1d583ef4777a555be7a1086_114570_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Expect this tab to expand in the coming months.&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./settings3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/settings3_huffda48ad9043c8eec40ecef47ef12a69_151188_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Expect this tab to expand in the coming months.&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Expect this tab to expand in the coming months.&lt;/p&gt;


&lt;p&gt;Here you will find setting and customization options. Most are self-explanatory, but if you want explanations for the options in Advanced settings, check our settings glossary &lt;a href=&#34;https://community.citra-emu.org/t/settings-glossary/768483&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After the initial configuration is done, just tap a game and play.
A search option is available for your convenience, along with a few search filters.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./list.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/list_hu2320918461605780dbcca582471489a6_2209877_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Choose your destiny.&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./search.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/search_hud0f3348da429cdff75027bfc9d114daa_1605280_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Choose your destiny.&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Choose your destiny.&lt;/p&gt;


&lt;p&gt;One of the first improvements added by &lt;a href=&#34;https://github.com/PabloG02&#34;&gt;PabloG02&lt;/a&gt; is a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10534&#34; data-gh-pr=&#34;10534&#34;&gt;save manager&lt;/a&gt;
 that can be accessed from the Settings.
This makes importing and exporting saves very simple. Thank you!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./saves.png&#34; title=&#34; It’s dangerous to go alone, take this!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/saves_hu645ef100a855fb762da9c3fedb9aeb66_117171_540x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; It’s dangerous to go alone, take this!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; It’s dangerous to go alone, take this!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;One important thing to remember: Android has the most… unusual file system permissions.
We recommend creating a yuzu folder on your storage root to store your keys, as to avoid any permissions issues.&lt;/p&gt;
&lt;p&gt;You can get different Adreno and Turnip driver versions to test from &lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases&#34;&gt;here&lt;/a&gt;.
Keep in mind, this option will only change the driver for yuzu. It won’t (and can’t) replace anything on a system level.&lt;/p&gt;
&lt;p&gt;At the time of writing, we recommend &lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases/tag/v23.2.0-dev&#34;&gt;Turnip 23.2.0&lt;/a&gt; (or &lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases/tag/v23.1.0-dev&#34;&gt;23.1.0&lt;/a&gt; if you have Android 11) for Adreno 600, while Adreno 700 users can run the &lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases/tag/v676.22FIX&#34;&gt;Qualcomm 676.22&lt;/a&gt; driver to improve performance and compatibility somewhat.&lt;/p&gt;
&lt;p&gt;There’s an early alpha Turnip release supporting Adreno 730 and 740 products (but not 725) &lt;a href=&#34;https://github.com/K11MCH1/AdrenoToolsDrivers/releases/tag/v23.2.0_A7XX&#34;&gt;here&lt;/a&gt;.
It is also compatible with Adreno 600 series hardware, so it’s a simple global driver to test.&lt;/p&gt;
&lt;p&gt;There have been reports of users not being able to load custom drivers — we are still investigating this, but there&amp;rsquo;s still a lot of work to do.&lt;/p&gt;
&lt;p&gt;For those interested in playing with the source, we have a work-in-progress build guide &lt;a href=&#34;https://yuzu-mirror.github.io/wiki/building-for-android/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That’s all fo… What do you mean there’s still a whole article to write?
Oh right, we have more to talk about!&lt;/p&gt;
&lt;h2 id=&#34;other-graphical-changes&#34;&gt;Other graphical changes&lt;/h2&gt;
&lt;p&gt;Because this isn’t just a Zelda emulator after all.&lt;/p&gt;
&lt;p&gt;Who wants more &lt;code&gt;Project Y.F.C.&lt;/code&gt; goodies?
Blinkhawk serves us &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10155&#34; data-gh-pr=&#34;10155&#34;&gt;Reactive Flushing,&lt;/a&gt;
 with fries.&lt;/p&gt;
&lt;p&gt;In the early days of yuzu, if the CPU were to read an area modified by the GPU, full sync flushing between the host and guest GPU (emulated and system’s GPU) would trigger (let’s call it “old reactive flushing”).
This was safe and rendered things properly, but was also slow.
Blinkhawk replaced this system with predictive flushing some years ago, improving performance significantly but introducing several graphical regressions, such as broken shadows and lighting, wrong thumbnails on saves and photos, and even vertex explosions.&lt;/p&gt;
&lt;p&gt;With this release of the yuzu fried chicken, Blinkhawk introduces the new Reactive Flushing, which has the following fixes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fixes old regressions such as &lt;code&gt;Bayonetta 2&lt;/code&gt;&amp;rsquo;s shadows.&lt;/li&gt;
&lt;li&gt;Fixes lighting in &lt;code&gt;Xenoblade Chronicles&lt;/code&gt; games.&lt;/li&gt;
&lt;li&gt;Improves performance in buffer-heavy games like &lt;code&gt;Monster Hunter Rise&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Thumbnails and in-game photos in a bunch of games such as: saves in &lt;code&gt;Xenoblade Chronicles Definitive Edition&lt;/code&gt; and &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;, camera photos in &lt;code&gt;ASTRAL CHAIN&lt;/code&gt;, and partially fixes thumbnails in &lt;code&gt;Luigi&#39;s Mansion 3&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Vertex explosions in &lt;code&gt;Pokemon Violet/Scarlet&lt;/code&gt; and &lt;code&gt;Yoshi’s Crafted World&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Make High GPU Accuracy fully use asynchronous buffers in Vulkan, improving performance.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rf1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/rf1_hu8dbdccbc6ed361d5e89f2d55e23c50ba_4823016_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From first to last: Bayonetta 2, ASTRAL CHAIN, Xenoblade Chronicles Definitive Edition, and Luigi’s Mansion 3&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rf2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/rf2_hu1f096d0b69a6735dffe23ed72d798c9e_224002_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From first to last: Bayonetta 2, ASTRAL CHAIN, Xenoblade Chronicles Definitive Edition, and Luigi’s Mansion 3&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rf3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/rf3_hu99696c8b361a4017b324bb9289331f33_807874_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From first to last: Bayonetta 2, ASTRAL CHAIN, Xenoblade Chronicles Definitive Edition, and Luigi’s Mansion 3&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rf4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/rf4_hu34564d58e04b064fb3a255d797339f18_1115335_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From first to last: Bayonetta 2, ASTRAL CHAIN, Xenoblade Chronicles Definitive Edition, and Luigi’s Mansion 3&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;From first to last: Bayonetta 2, ASTRAL CHAIN, Xenoblade Chronicles Definitive Edition, and Luigi’s Mansion 3&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rf6.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/rf6_hudfeaeac304dba5b51f0356eaea661685_2177740_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From first to last: Mario &amp;#43; Rabbids Kingdom Battle, Pokémon Scarlet, and Yoshi&amp;#39;s Crafted World&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rf7.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/rf7_hu797db64f8f829402eac55b0e0c4cfe38_1504355_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From first to last: Mario &amp;#43; Rabbids Kingdom Battle, Pokémon Scarlet, and Yoshi&amp;#39;s Crafted World&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rf8.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/rf8_hu05d53871f60f905ec6c5cfbc8b961c40_3548527_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From first to last: Mario &amp;#43; Rabbids Kingdom Battle, Pokémon Scarlet, and Yoshi&amp;#39;s Crafted World&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;From first to last: Mario &amp;#43; Rabbids Kingdom Battle, Pokémon Scarlet, and Yoshi&amp;#39;s Crafted World&lt;/p&gt;


&lt;p&gt;The option still carries a performance cost, sometimes a considerable one.
It’s enabled by default, but users can disable it from &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced &amp;gt; Enable Reactive Flushing&lt;/code&gt;.
If you need the performance, and can tolerate the graphical regressions introduced by disabling it, the option is there.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./reactive.png&#34; title=&#34; If you have performance to spare, keep it enabled.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/reactive_hubd6eef459c8ea3e6a379f091fac92161_14845_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; If you have performance to spare, keep it enabled.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; If you have performance to spare, keep it enabled.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Users with AMD and Intel GPUs complained that high-framerate mods couldn&amp;rsquo;t push the framerate past the display&amp;rsquo;s refresh rate when using Vulkan.
This was because the VSync toggle was assuming the best option for each hardware driver based on compatibility.&lt;/p&gt;
&lt;p&gt;What used to be just VSync on, off, or triple buffer in the good old OpenGL days is now more complex with Vulkan, even if current games insist on mistakenly calling the setting “VSync on” for legacy reasons.
In fact, nowadays there are 4 VSync options commonly supported by GPU drivers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Immediate: No VSync. Tearing will happen, but no framerate restrictions will apply.&lt;/li&gt;
&lt;li&gt;FIFO: Double buffering. This is equivalent to yuzu’s old VSync on. Tearing won’t happen, but input will have one frame of latency, and the refresh rate can’t exceed the display’s capabilities.&lt;/li&gt;
&lt;li&gt;Relaxed FIFO: Identical to regular FIFO, but allows for tearing to happen if a desynchronisation happens. Can be considered similar to adaptive VSync. Useful for games with dynamic framerates.&lt;/li&gt;
&lt;li&gt;Mailbox: Triple buffering, avoids tearing while allowing for framerates higher than the refresh rate of the display. Similar to what AMD calls Enhanced sync, and what NVIDIA calls Fast sync.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mailbox is the obvious recommendation for most games, so of course only NVIDIA on Windows, Mesa on Linux, and Android drivers offer support for it.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vsync.png&#34; title=&#34; Android has no tolerance for tearing.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/vsync_hu8208f0c845c8bc89fe93622ab7464e50_4915_486x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Android has no tolerance for tearing.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Android has no tolerance for tearing.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Per your writer’s &lt;del&gt;begging&lt;/del&gt; request, &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; updated the old VSync toggle in the Graphics menu to a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10125&#34; data-gh-pr=&#34;10125&#34;&gt;proper drop list&lt;/a&gt;
 mentioning all available Vulkan options.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mailbox.png&#34; title=&#34; If it is an option, pick Mailbox.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/mailbox_hu0cfaecfd579b213e5427a84ff9fe5935_31918_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; If it is an option, pick Mailbox.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; If it is an option, pick Mailbox.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;If, for example, someone with an AMD or Intel GPU on Windows wants to play &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; with a 120 FPS mod on a 60 Hz display, they now have the option to use Immediate mode, which is what the emulator switches to when the player unlocks the framerate with Ctrl + U.
The rest can just enjoy Mailbox.&lt;/p&gt;
&lt;p&gt;We recommend setting the driver’s control panel to Enhanced/Fast sync for the best results.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./amd.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/amd_hu68872be7292166c3d641d27f66b99701_481412_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Press F to sync&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nvidia.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/nvidia_hua5e5873b92bd27e4a2cc31b038ec2870_77019_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Press F to sync&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./intel.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/intel_hu6d3abb7448a4b00d0dcb1390428ba7fe_90849_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Press F to sync&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Press F to sync&lt;/p&gt;


&lt;p&gt;Maide found an issue related to the size of the pipeline cache.
yuzu used to return the size of the shader code in bytes, which was later used to resize the unsigned 64 bit integer array in charge of storing the cache, making the array 8 times larger than it was supposed to be.
This is fixed by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10145&#34; data-gh-pr=&#34;10145&#34;&gt;using the length of the array&lt;/a&gt;
 instead of the size in bytes.&lt;/p&gt;
&lt;p&gt;A common complaint from users with 8GB of RAM is that games become unstable over time. This isn&amp;rsquo;t necessarily a memory leak — it&amp;rsquo;s likely just the system running out of RAM as new shaders are added to the pipeline cache.
This change greatly benefits them.
&lt;del&gt;But it’s 2023, you should seriously consider getting 16GB by now. Tears of the Kingdom is not Super Mario Odyssey.&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;ASTC continues to be in the news here — this time a problem with &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10206&#34; data-gh-pr=&#34;10206&#34;&gt;3D ASTC&lt;/a&gt;
 textures, because it isn’t enough to deal with flat 2D ones.
A bug in their implementation caused the level Frantic Fields in &lt;code&gt;Donkey Kong Country: Tropical Freeze&lt;/code&gt; to render incorrectly.
Some tweaks by the ‘hawk, and the Kong army is back in action.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dk.png&#34; title=&#34; No more quicksand! (Donkey Kong Country: Tropical Freeze)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/dk_huf12c2bfd48914622096c4076786a9c57_3069171_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; No more quicksand! (Donkey Kong Country: Tropical Freeze)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; No more quicksand! (Donkey Kong Country: Tropical Freeze)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;yuzu&amp;rsquo;s buffer cache is responsible for storing most forms of arbitrary data for the GPU to process.
Buffers can be modified by either the GPU or the CPU, so yuzu would track the buffer to one type of modification, then wait for the other type of modification to synchronize the data. But in reality, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10216&#34; data-gh-pr=&#34;10216&#34;&gt;performing the synchronization&lt;/a&gt;
 before tracking the modification would make much more sense.
Maide noticed this discrepancy and set out to correct it, streamlining the code.&lt;/p&gt;
&lt;p&gt;Since the old code would track buffers globally, some draws would end up ignoring channel swaps, leading to leftover values from the wrong channel getting bound in uniform buffers.
If instead we &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10469&#34; data-gh-pr=&#34;10469&#34;&gt;move buffer bindings&lt;/a&gt;
 to be channel specific, the issue is solved.
This fix should affect more games using multiple 3D channels too.&lt;/p&gt;
&lt;p&gt;Continuing with code optimisations, Maide found some incorrect behaviour in how render targets are selected.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Render Target&lt;/code&gt; (The OG RT for rendering devs before RTX came to town) is a texture containing the image to be rendered during a draw or clear operation.&lt;/p&gt;
&lt;p&gt;The emulator has to look at the format of the available render targets to determine which one to clear.
For example, suppose there are 5 images bound as render targets, indexed from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;4&lt;/code&gt;, and the game requests to clear the render target with index &lt;code&gt;2&lt;/code&gt;.
The next step is to look at the format of render &lt;code&gt;target[2]&lt;/code&gt; in the array.
This is where the old code would work incorrectly and inefficiently, as it would iterate through all the render targets and pick the first one that returned a valid format corresponding to &lt;code&gt;target[2]&lt;/code&gt;.
This could very well be &lt;code&gt;target[2]&lt;/code&gt; as expected, or an earlier render target such as &lt;code&gt;target[0]&lt;/code&gt; or &lt;code&gt;target[1]&lt;/code&gt;, in which case the code would completely ignore the actual render target we wanted to clear.&lt;/p&gt;
&lt;p&gt;In short, this process was both slower and potentially unsafe due to the risk of clearing the wrong render target.
Not happy with this, Maide worked to sort it out, getting &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10217&#34; data-gh-pr=&#34;10217&#34;&gt;the correct render target&lt;/a&gt;
 cleared.&lt;/p&gt;
&lt;p&gt;Time to introduce another term! &lt;code&gt;Descriptor Sets&lt;/code&gt; are a feature of the Vulkan API. Their purpose is to allow the CPU to update input bindings, the list of resources used by a shader, in an efficient way.&lt;/p&gt;
&lt;p&gt;Previously, yuzu would share the same descriptor set update queues between guest operations (operations directly translated from a game) and host operations (operations yuzu performs to emulate specific Switch GPU features which don&amp;rsquo;t exist in Vulkan).
This could mistakenly end up with host operations overwriting the descriptor set updates of a guest pipeline during processing.
At best, this would break the state of the guest pipeline, and at worst, it would take down the entire GPU driver.
If you experienced random crashes in &lt;code&gt;Xenoblade Chronicles&lt;/code&gt; games, &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt;, &lt;code&gt;Bayonetta 3&lt;/code&gt;, among others, you might now know why.&lt;/p&gt;
&lt;p&gt;So, how can this be solved? “Simple!” Let’s just give the host and guest compute pipelines their own &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10222&#34; data-gh-pr=&#34;10222&#34;&gt;queues.&lt;/a&gt;

Having this information in separate queues fixes the data integrity issues, greatly improving stability.&lt;/p&gt;
&lt;p&gt;Newcomer &lt;a href=&#34;https://github.com/danilaml&#34;&gt;danilaml&lt;/a&gt; identified a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10254&#34; data-gh-pr=&#34;10254&#34;&gt;missing bitflag&lt;/a&gt;
 in the header responsible for decoding H.264 videos.
This fixes video rendering for &lt;code&gt;Layton&#39;s Mystery Journey: Katrielle and the Millionaires&#39; Conspiracy&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./layton.png&#34; title=&#34; Games are boring without their cutscenes, right? (Layton&amp;#39;s Mysterious Journey: Katrielle and the Millionaires)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/layton_hu61fe7f70d48a912b3d7702ec39e3685b_903484_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Games are boring without their cutscenes, right? (Layton&amp;#39;s Mysterious Journey: Katrielle and the Millionaires)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Games are boring without their cutscenes, right? (Layton&amp;#39;s Mysterious Journey: Katrielle and the Millionaires)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Not stopping there, danilaml also added support for deinterlaced video playback by using the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10283&#34; data-gh-pr=&#34;10283&#34;&gt;yadif filter&lt;/a&gt;
 included with &lt;a href=&#34;https://ffmpeg.org/&#34;&gt;FFmpeg&lt;/a&gt;, fixing the game&amp;rsquo;s video rendering.
Thank you!&lt;/p&gt;
&lt;p&gt;Intel’s Linux Mesa Vulkan driver, ANV, broke the &lt;code&gt;VK_KHR_push_descriptor&lt;/code&gt; extension with version 22.3.0 and later, causing several games to fail to boot.
toastUnlimited &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10365&#34; data-gh-pr=&#34;10365&#34;&gt;disabled the extension&lt;/a&gt;
 to ensure proper game compatibility, and then, after a quick response from the ANV developers fixing the issue, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10414&#34; data-gh-pr=&#34;10414&#34;&gt;allowed the use&lt;/a&gt;
 of the extension on current Mesa versions.
Mesa is an example of how GPU driver development should be done.&lt;/p&gt;
&lt;p&gt;GPUCode improved overall performance when using Vulkan in a few percentage points by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10474&#34; data-gh-pr=&#34;10474&#34;&gt;removing a wait semaphore.&lt;/a&gt;

Every bit helps.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;Epicboy&lt;/a&gt; continues his crusade to improve OpenGL.
This time, he &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10483&#34; data-gh-pr=&#34;10483&#34;&gt;fixed&lt;/a&gt;
 the use of &lt;code&gt;Accelerate ASTC texture decoding&lt;/code&gt; when ASTC recompression was set to Uncompressed.&lt;/p&gt;
&lt;p&gt;And finally, to close this section, Maide fixed homebrew console apps crashing by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10506&#34; data-gh-pr=&#34;10506&#34;&gt;skipping a section of the buffer cache&lt;/a&gt;
 that isn’t needed when an app doesn’t use graphics.&lt;/p&gt;
&lt;h2 id=&#34;project-gaia-lite&#34;&gt;Project Gaia-lite&lt;/h2&gt;
&lt;p&gt;byte[] implemented some file system changes on his own, giving us a taste of what’s to come.&lt;/p&gt;
&lt;p&gt;Here’s a fun one. Why does it take minutes to boot &lt;code&gt;Fire Emblem Engage&lt;/code&gt; or &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; with mods?
Because the old implementation became quadratically slower as the number of the files in the game increased!&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10183&#34; data-gh-pr=&#34;10183&#34;&gt;Fixing&lt;/a&gt;
 the terrible time complexity reduces patch times during boot in &lt;code&gt;Fire Emblem Engage&lt;/code&gt; from one and a half minutes to &lt;em&gt;three seconds&lt;/em&gt;, and in &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; from about a minute to &lt;em&gt;one and a half seconds&lt;/em&gt;. Wow!&lt;/p&gt;
&lt;p&gt;That function wasn&amp;rsquo;t the only source of unnecessarily quadratic behavior. Reads also grew quadratically in time with file count, which has now been &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10463&#34; data-gh-pr=&#34;10463&#34;&gt;optimized,&lt;/a&gt;
 improving in-game load times as well as boot times.&lt;/p&gt;
&lt;p&gt;Another source of slowdown we&amp;rsquo;ve identified comes from unnecessary copying and freeing of strings, and we plan to address this in Project Gaia in the future.&lt;/p&gt;
&lt;p&gt;Finally, a savedata reader for &lt;code&gt;cache storage&lt;/code&gt; needed to be &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10237&#34; data-gh-pr=&#34;10237&#34;&gt;stubbed&lt;/a&gt;
 to get &lt;code&gt;Tears of the Kingdom&lt;/code&gt; to boot.&lt;/p&gt;
&lt;h2 id=&#34;input-and-amiibo-improvements&#34;&gt;Input and Amiibo improvements&lt;/h2&gt;
&lt;p&gt;HD Rumble is one of the marketed features of the Switch, which is a cool way of saying the official Switch controllers have &lt;code&gt;Linear Resonant Actuators&lt;/code&gt; in charge of rumble, instead of the good old rumble motors we were used to in the past.&lt;/p&gt;
&lt;p&gt;Well, Sony’s DualSense controller also has linear resonant actuators, so in theory, it should be able to emulate HD Rumble.
The problem is that SDL, the API we use to support non-Nintendo controllers on yuzu, currently doesn’t expose a way to take advantage of these fancy actuators.&lt;/p&gt;
&lt;p&gt;Well, newcomer &lt;a href=&#34;https://github.com/marius851000&#34;&gt;marius851000&lt;/a&gt; improved this situation for DualSense owners, so they came up with the idea to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10119&#34; data-gh-pr=&#34;10119&#34;&gt;change the rumble amplitude&lt;/a&gt;
 based on the frequency requested by the game, with 140-400 Hz operating as the low frequency, and 200-700 Hz as the high frequency.
This way, some sense of “rumble audio”, and an overall better shaky-shaky experience, is achieved.
Thank you!&lt;/p&gt;
&lt;p&gt;To help you see if the motion controls are working, german77 has added a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10167&#34; data-gh-pr=&#34;10167&#34;&gt;cute little cube&lt;/a&gt;
 to the controller preview.
Feel free to play with it!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./motion.png&#34; title=&#34; Warning, it’s addictive.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/motion_hu5a14615918c04a3900571ae7311923ba_33611_489x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Warning, it’s addictive.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Warning, it’s addictive.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Stick drift is not the only fear for gamers using controllers, there’s also the rarer &lt;em&gt;motion drift!&lt;/em&gt;
This could happen naturally, or after some &lt;em&gt;serious gaming&lt;/em&gt; moments, so an option for &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10203&#34; data-gh-pr=&#34;10203&#34;&gt;recalibration&lt;/a&gt;
 was needed.
Thankfully german77 took care of it, adding the option if you right click the Motion # mapping in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Controls&lt;/code&gt;.
If you use it, remember to leave the controller/device on a flat surface for at least 5 seconds so the process can take place.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gyro.png&#34; title=&#34; Stop shaking!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/gyro_hud5dc13a28e9fbe9cdfd4f257119508a4_28667_499x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Stop shaking!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Stop shaking!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Now something for the &lt;del&gt;dirty cheaters&lt;/del&gt; open-minded players out there.
Games will block trying to use the same Amiibo more than once, so german77 added a way to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10207&#34; data-gh-pr=&#34;10207&#34;&gt;randomly generate a new ID&lt;/a&gt;
 each time the Amiibo is used. The option can be enabled from &lt;code&gt;Emulation &amp;gt; Configure.. &amp;gt; Controls &amp;gt; Advanced &amp;gt; Use random Amiibo ID&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./id.png&#34; title=&#34; Bottom right corner, can’t miss it.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/id_hu98332bea17ee04d2b7ea800ee8f5ed2a_37465_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Bottom right corner, can’t miss it.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Bottom right corner, can’t miss it.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Keep in mind games like &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; will complain if the ID changes.&lt;/p&gt;
&lt;p&gt;Scanning for Amiibos seems to be a very demanding task for the available Bluetooth bandwidth when using Joy-Cons.
To mitigate this, german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10265&#34; data-gh-pr=&#34;10265&#34;&gt;reduced the scan rate&lt;/a&gt;
 from once per frame (30 or 60 Hz) to 5 Hz, and reduced the number of attempts to get valid data to 1 down from 7.
This should alleviate the right Joy-Con’s oversaturation of the available Bluetooth bandwidth, reducing stutters considerably.&lt;/p&gt;
&lt;p&gt;But what if you want to enjoy some Amiibo scanning on your Pro Controller?
Previously, support was only available for Joy-Cons.
But now, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10344&#34; data-gh-pr=&#34;10344&#34;&gt;Pro Controllers are also supported!&lt;/a&gt;
 As long as the controller is connected over Bluetooth and the custom Pro Controller driver is enabled in &lt;code&gt;Emulation &amp;gt; Configure.. &amp;gt; Controls &amp;gt; Advanced &amp;gt; Enable direct Pro Controller driver [EXPERIMENTAL]&lt;/code&gt;.
That EXPERIMENTAL label is in its last days now.&lt;/p&gt;
&lt;p&gt;Not stopping there with the Amiibo changes, german77 also implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10396&#34; data-gh-pr=&#34;10396&#34;&gt;full support for Amiibo writing&lt;/a&gt;
 when using a Joy-Con or Pro Controller!
This enables the last missing piece for full Amiibo emulation, just as you would use them on the Switch itself.&lt;/p&gt;
&lt;p&gt;Feel free to scan to your heart&amp;rsquo;s content! As long as you managed to grab one of the plastic things while they were in stock.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s worth mentioning that writing Amiibo data will require dumping the relevant keys.
However, if all you want to do is load decrypted Amiibo dumps, german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10415&#34; data-gh-pr=&#34;10415&#34;&gt;added support&lt;/a&gt;
 for using them without needing to dump the Amiibo keys.&lt;/p&gt;
&lt;p&gt;At this point, the only thing left to complete Amiibo support is to add a manager!&lt;/p&gt;
&lt;h2 id=&#34;audio-and-miscellaneous-changes&#34;&gt;Audio and miscellaneous changes&lt;/h2&gt;
&lt;p&gt;The war against properly shutting down yuzu rages on.
This time Maide implements a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10128&#34; data-gh-pr=&#34;10128&#34;&gt;fix in the DSP engine&lt;/a&gt;
 so it closes before a required system instance is terminated.
This way a deadlock is avoided during shutdown, improving the situation slightly.
Another battle won, but how many remain?&lt;/p&gt;
&lt;p&gt;This next one left us wondering&amp;hellip;
&lt;a href=&#34;https://github.com/ronikirla&#34;&gt;ronikirla&lt;/a&gt; reported that &lt;code&gt;Pokémon Mystery Dungeon Rescue Team DX&lt;/code&gt; would consistently crash due to a read access violation after two hours of gameplay.&lt;/p&gt;
&lt;p&gt;That’s not a simple bug to track down and fix, yet someone in ronikirla&amp;rsquo;s Twitch chat identified the issue as a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10178&#34; data-gh-pr=&#34;10178&#34;&gt;bad block check&lt;/a&gt;
 in the address space code and passed along a fix.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pmd.png&#34; title=&#34; Love the art style! (Pokémon Mystery Dungeon Rescue Team DX)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/pmd_hu74176344ca696e4eceaffd94e3b889d8_4269472_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Love the art style! (Pokémon Mystery Dungeon Rescue Team DX)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Love the art style! (Pokémon Mystery Dungeon Rescue Team DX)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The change seems to also fix &lt;code&gt;Advance Wars 1+2: Re-Boot Camp&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./aw.png&#34; title=&#34; Bond, yuzu Bond. (Advance Wars 1&amp;#43;2: Re-Boot Camp)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/aw_hu1b26414fd4c4e53c79337156101a36d9_4380502_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Bond, yuzu Bond. (Advance Wars 1&amp;#43;2: Re-Boot Camp)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Bond, yuzu Bond. (Advance Wars 1&amp;#43;2: Re-Boot Camp)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Recent changes made to audio emulation improved performance and solved crashes, but also had an interesting regression.
Some sound effects played at a slower speed.&lt;/p&gt;
&lt;p&gt;After doing some extensive reverse engineering, Maide reached the conclusion that due to how the DSP works, a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10221&#34; data-gh-pr=&#34;10221&#34;&gt;5 ms timeout&lt;/a&gt;
 is needed in the processing wait.
With the timeout implemented, &lt;code&gt;SUPER MARIO ODYSSEY&lt;/code&gt; and &lt;code&gt;Kirby Star Allies&lt;/code&gt;, among others can now play back their audio at full speed.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/danilaml&#34;&gt;danilaml&lt;/a&gt; continues to deliver the good stuff.
This time, simply &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10362&#34; data-gh-pr=&#34;10362&#34;&gt;updating cubeb&lt;/a&gt;
 (one of our audio backends, and most of the time the default one) fixed a bug that muted the emulator after waking the PC from sleep.
Feel free to close your lids and continue later!&lt;/p&gt;
&lt;p&gt;Users noticed that after recent changes to fix the wire audio in &lt;code&gt;SUPER MARIO ODYSSEY&lt;/code&gt;, audio in many games could desync and sound crackled or distorted.
bylaws suggested allowing the audio buffer to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10471&#34; data-gh-pr=&#34;10471&#34;&gt;wait indefinitely&lt;/a&gt;
 if a queue is too big, so Maide implemented this idea and et voilà, the problem is gone!
(Pardon my French; Spanish is cooler).&lt;/p&gt;
&lt;h2 id=&#34;ui-improvements&#34;&gt;UI improvements&lt;/h2&gt;
&lt;p&gt;If your yuzu is configured with multiple user profiles, and the &lt;code&gt;Prompt for user on game boot&lt;/code&gt; option in &lt;code&gt;Emulation &amp;gt; Configure &amp;gt; General&lt;/code&gt; option is enabled, you will have to click the profile you want to boot and then click OK.
Well, for the newcomer &lt;a href=&#34;https://github.com/Qigo42&#34;&gt;Qigo42&lt;/a&gt;, this was unsatisfactory, so they allowed the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10189&#34; data-gh-pr=&#34;10189&#34;&gt;profile selection pop-up&lt;/a&gt;
 to work with just a double click!
Nothing beats quality-of-life changes. Thank you!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jbeich&#34;&gt;jbeich&lt;/a&gt; is back, fixing &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10205&#34; data-gh-pr=&#34;10205&#34;&gt;BSD support&lt;/a&gt;
 again!
It’s always good to have more OS alternatives working.&lt;/p&gt;
&lt;p&gt;Continuing the trend in quality-of-life changes, newcomer &lt;a href=&#34;https://github.com/grimkor&#34;&gt;grimkor&lt;/a&gt; has a nice gift for us.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./context.png&#34; title=&#34; And now, for your convenience…&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/context_hu46997d07b4f2c6fc1abd9425f442806f_3804_211x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; And now, for your convenience…&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; And now, for your convenience…&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;A &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10352&#34; data-gh-pr=&#34;10352&#34;&gt;context menu&lt;/a&gt;
 for the filter and antialiasing options! You no longer have to go through the entire list of options if you want to try a different one, simply right click and choose.
Thank you!&lt;/p&gt;
&lt;p&gt;If you double clicked a game in the game list, you could end up double clicking it again or pressing enter before the game list got unloaded, which would cause yuzu to try to load the game twice, and usually just crash.
german77 fixed this up by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10482&#34; data-gh-pr=&#34;10482&#34;&gt;immediately disabling the game list&lt;/a&gt;
 after a game has been launched.&lt;/p&gt;
&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;p&gt;We no longer only support the PC! In future articles, we will include any news for Android GPU vendors.&lt;/p&gt;
&lt;h3 id=&#34;nvidia&#34;&gt;NVIDIA&lt;/h3&gt;
&lt;p&gt;We have some good news and a little disappointment for the Green Team.
But first, we have some progress with the Maxwell and Pascal situation.&lt;/p&gt;
&lt;p&gt;In the past, we used to recommend users to stick to older driver releases for the GTX 750/900/1000 series, as anything newer than the 470 driver series was unstable.
Thanks to the work done with the garbage collector for &lt;code&gt;Tears of the Kingdom&lt;/code&gt;, we now know that the problem with these cards is how the driver handles out-of-memory situations.
We were even able to observe it on Turing cards with 4GB, so it wasn&amp;rsquo;t unique to older cards, we just didn&amp;rsquo;t have a game that used VRAM as much as Zelda.&lt;/p&gt;
&lt;p&gt;We reported our findings to NVIDIA with a test case, so it’s in their hands now.&lt;/p&gt;
&lt;p&gt;As the VRAM fills up, an AMD card will get slower and slower until it stops working and crashes yuzu, while an NVIDIA GPU would corrupt the entire desktop, taking all the displays with it, sometimes even forcibly rebooting the system.&lt;/p&gt;
&lt;p&gt;Using the ASTC recompression option helps a lot to avoid this problem.
But if it does happen, it can still cause a system lock or reboot, so we need a way to mitigate this while NVIDIA investigates the issue.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/nvidiabug_hu013442e1f034522763ac77510f38d058_1763805_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Now playable with only 2GB of VRAM! (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/nvidiafix_hu9e782bcf9dfa45b179a0b37047b4e46f_896532_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Now playable with only 2GB of VRAM! (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Now playable with only 2GB of VRAM! (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;


&lt;p&gt;Fortunately, we stumbled upon a stopgap measure that solves the problem, and we updated our &lt;a href=&#34;https://community.citra-emu.org/t/recommended-settings/319349&#34;&gt;recommended settings&lt;/a&gt; guide to include it.
Just change &lt;code&gt;Vulkan/OpenGL presentation method&lt;/code&gt; in the NVIDIA Control Panel to &lt;code&gt;Prefer layered on DXGI Swapchain&lt;/code&gt;.
The same setting used to get AutoHDR working helps contain the out-of-VRAM crashes.
Using this in combination with BC1 ASTC recompression will make old 2GB cards run without crashes.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./nvcp.png&#34; title=&#34; This interface is so old…&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/nvcp_hue047e2b4af35569fb587c75128172f73_24253_530x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; This interface is so old…&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; This interface is so old…&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Switching to the the good side of news, &lt;a href=&#34;https://github.com/HolographicWings/&#34;&gt;HolographicWings&lt;/a&gt; made an amazing tutorial on how to use &lt;code&gt;DLDSR&lt;/code&gt; in yuzu &lt;a href=&#34;https://github.com/HolographicWings/TOTK-Mods-collection/blob/main/Guide/Guide.pdf&#34;&gt;here&lt;/a&gt;.
DLDSR is a way to use the Tensor cores available in RTX cards to upscale the image. You can consider it a mix of DLSS and FSR 1.0, as it works for any game, but uses deep learning instead of traditional filters.
Needless to say, it’s a great way to improve image quality if you have the hardware to test it.&lt;/p&gt;
&lt;p&gt;And in other good news, &lt;a href=&#34;https://special-k.info/&#34;&gt;Special K&lt;/a&gt; now supports HDR in Vulkan and it works with yuzu!
NVIDIA is still the only supported vendor, as this is only possible thanks to the magic &lt;code&gt;Prefer layered on DXGI Swapchain&lt;/code&gt; option, but the quality and customization offered by Special K over AutoHDR is outstanding. That expensive OLED never looked so tempting.&lt;/p&gt;
&lt;p&gt;Note that we have confirmed in testing that &lt;code&gt;Prefer layered on DXGI Swapchain&lt;/code&gt; needs to be manually enabled for Special K to work properly.
This also includes other NVIDIA-exclusive goodies such as input lag reduction thanks to NVIDIA Reflex.
Feel free to experiment with the app, it&amp;rsquo;s amazing.&lt;/p&gt;
&lt;p&gt;Here are some comparison pics in .jxr format, they can be opened with the default Photo app included with Windows 11, and an SDR control capture in .png format:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First the scene in &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-emu.github.io/blob/hugo/site/content/entry/yuzu-progress-report-may-2023/sdr.png&#34;&gt;SDR&lt;/a&gt;, the default experience.&lt;/li&gt;
&lt;li&gt;Windows 11’s &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-emu.github.io/blob/hugo/site/content/entry/yuzu-progress-report-may-2023/autohdr.jxr&#34;&gt;AutoHDR&lt;/a&gt; with the Cemu renaming trick.&lt;/li&gt;
&lt;li&gt;SpecialK’s HDR with &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-emu.github.io/blob/hugo/site/content/entry/yuzu-progress-report-may-2023/specialk.jxr&#34;&gt;Perceptual Boost disabled&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;SpecialK’s HDR with &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-emu.github.io/blob/hugo/site/content/entry/yuzu-progress-report-may-2023/specialkpb.jxr&#34;&gt;Perceptual Boost enabled&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Keep in mind, Special K needs to be tuned to the capabilities of the display, and my humble 350 nit Gigabyte G27Q is a disservice to what this change can do on actually good HDR displays.
Expect better results if you have an OLED, or a display with dimming zones and a higher peak brightness.&lt;/p&gt;
&lt;p&gt;Now, on to the disappointing news: the RTX 4060 Ti.&lt;/p&gt;
&lt;p&gt;We don’t understand what kind of decisions NVIDIA took when deciding the Ada Lovelace GeForce product stack, but it has been nothing but mistakes.
The RTX 4060 Ti 8GB with only a 128-bit wide memory bus and GDDR6 VRAM is a serious downgrade for emulation when compared to its predecessor, the 256-bit wide equipped RTX 3060 Ti.
You will be getting slower performance in Switch emulation if you get the newer product.
We have no choice but to advise users to stick to Ampere products if possible, or aim higher in the product stack if you have to get a 4000 series card for some reason (DLSS3 or AV1 encoding), which is clearly what NVIDIA is aiming for.&lt;/p&gt;
&lt;p&gt;The argument in favour of Ada is the increased cache size, which RDNA2 confirmed in the past helps with performance substantially, but it also has a silent warning no review mentions: if you saturate the cache, you’re left with the performance of a 128-bit wide card, and it’s very easy to saturate the cache when using the resolution scaler — just 2X is enough to tank performance.&lt;/p&gt;
&lt;p&gt;Spending 400 USD on a card that has terrible performance outside of 1X scaling is, in our opinion, a terrible investment, and should be avoided entirely.
We hope the 16GB version at least comes equipped with GDDR6X VRAM, which would increase the available bandwidth and provide an actual improvement in performance for this kind of workload.&lt;/p&gt;
&lt;h3 id=&#34;amd&#34;&gt;AMD&lt;/h3&gt;
&lt;p&gt;AMD has shown steady progress with each new driver release and, thanks to this, the experience on yuzu is in very good shape for Radeon owners, besides some documented hardware limitations causing graphical issues we&amp;rsquo;ve mentioned &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/#amd-delivering-on-their-promises&#34;&gt;in the past&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The main exception is a rendering issue affecting &lt;code&gt;Tears of the Kingdom&lt;/code&gt;, which only happens with RDNA3 hardware, the RX 7000 series.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rdna1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/rdna1_huba7fb081b6abfe4dc05cb4142b8c0b37_180216_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Both the RX 7900 and RX 7600 series are affected. (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rdna2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/rdna2_hucbdf059d8a2682edf0f036817329fb07_238824_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Both the RX 7900 and RX 7600 series are affected. (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rdna3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/rdna3_hu175162c6e17dd125a4cc3e3c9b305672_240888_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Both the RX 7900 and RX 7600 series are affected. (The Legend of Zelda: Tears of the Kingdom)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Both the RX 7900 and RX 7600 series are affected. (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;


&lt;p&gt;As you can see, the textures get mangled in an interesting way.
We couldn’t find any issue in the code, and older hardware is not affected, so we submitted a simple test case to AMD to demonstrate the extent of the problem.
Affected users will have to wait to see if future driver updates solve this.&lt;/p&gt;
&lt;h3 id=&#34;intel&#34;&gt;Intel&lt;/h3&gt;
&lt;p&gt;After the… peculiar &lt;a href=&#34;https://github.com/IGCIT/Intel-GPU-Community-Issue-Tracker-IGCIT/issues/159&#34;&gt;discussion&lt;/a&gt; we had with Intel regarding their drivers and how they handle bug reports, we are happy to announce the &lt;a href=&#34;https://www.intel.com/content/www/us/en/download/729157/intel-arc-iris-xe-graphics-beta-windows.html&#34;&gt;latest public beta driver&lt;/a&gt; solves the SPIR-V issues we reported seven months ago!
We strongly recommend Intel Windows users to update to this driver to improve stability with most games.&lt;/p&gt;
&lt;p&gt;Sadly, fixing this issue showed us two areas where yuzu is at fault.
But luckily both issues have fixes in testing in the latest Early Access release (at the time of writing). If everything goes according to plan, they should hit Mainline in a few days. Stay tuned.&lt;/p&gt;
&lt;p&gt;The first problem is in yuzu&amp;rsquo;s code.
Some compute shaders have barriers in places that result in generating invalid SPIR-V code, and while NVIDIA and AMD have no problem with it, Intel is following the Vulkan specification much more closely and doesn’t like the result, leading to crashes.
While we test the solution, for now we recommend Mainline Intel users to keep the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10181&#34; data-gh-pr=&#34;10181&#34;&gt;freshly added&lt;/a&gt;
 &lt;code&gt;Enable Compute Pipelines (Intel Vulkan only)&lt;/code&gt; disabled in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./compute.png&#34; title=&#34; This is just temporary (famous last words…)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2023/compute_hu99131a1e93851dbfb303e19b6f4d772f_19272_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; This is just temporary (famous last words…)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; This is just temporary (famous last words…)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The other issue is a hardware limitation.
Intel decided to remove support for Float64 operations on their Generation 12 graphics products (UHD 700/Xe/Arc) without providing a driver fallback.
Well, it turns out that, for unknown reasons, &lt;code&gt;Tears of the Kingdom&lt;/code&gt; requires over the top precision in its cutscenes — precision that current Intel hardware physically lacks, causing us to crash when building the shader.
We’re testing a Float64 to Float32 shader conversion to solve the problem.
For now, Mainline Intel users will want to use a save that&amp;rsquo;s past the intro cutscene, or use OpenGL, as the OpenGL spec dictates that Float64 must be supported one way or another, even if it is via software emulation.&lt;/p&gt;
&lt;p&gt;Currently, the game is playable at a mostly-consistent 30 FPS with an i5 1240P running an Iris Xe iGPU (if you stick to handheld rendering), and exhibits better performance than AMD&amp;rsquo;s Vega iGPUs.&lt;/p&gt;
&lt;p&gt;For those interested in the experience with desktop products, here is footage captured with an Arc A770 16GB:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./totk.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Arc is viable! (The Legend of Zelda: Tears of the Kingdom)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;We don’t have much to announce for now regarding ongoing projects — we were very busy with &lt;code&gt;Tears of the Kingdom&lt;/code&gt; and the Android release!&lt;/p&gt;
&lt;p&gt;GPUCode is working on a couple of cool things. One of them is implementing a way to have an equivalent to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10545&#34; data-gh-pr=&#34;10545&#34;&gt;DXGI presentation&lt;/a&gt;
 working on Intel and AMD hardware; that way, AutoHDR can be used with any GPU vendor, not just NVIDIA.&lt;/p&gt;
&lt;p&gt;That’s all folks! For real this time. If you&amp;rsquo;ve reached this point, thank you for your patience and for reading to the end. We hope you&amp;rsquo;ve enjoyed this mega-report! See you next month!
&lt;del&gt;We all need some sleep…&lt;/del&gt;&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>New Platform Release - yuzu on Android</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-android/</link>
      <pubDate>Tue, 30 May 2023 00:00:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-android/</guid>
      <description>&lt;p&gt;Hey there, yuz-ers!
We are happy to announce that yuzu is available, today, for Android!
There&amp;rsquo;s so much to discuss and show you, let&amp;rsquo;s get started!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey there, yuz-ers!
We are happy to announce that yuzu is available, today, for Android!
There&amp;rsquo;s so much to discuss and show you, let&amp;rsquo;s get started!&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;where-do-i-get-it&#34;&gt;Where do I get it?&lt;/h1&gt;
&lt;p&gt;If you&amp;rsquo;re too excited, you can jump in immediately by downloading yuzu from the Google Play Store!&lt;br&gt;&lt;/p&gt;
&lt;article class=&#34;message&#34; style=&#34;border-radius:10px;&#34;&gt;
  &lt;div class=&#34;message-header&#34; style=&#34;border-radius:10px 10px 0 0;&#34;&gt;
    &lt;p&gt;Download yuzu for free, or support us and receive some fantastic benefits with Early Access.&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&#34;message-body&#34; style=&#34;text-align: center;&#34;&gt;
    &lt;div class=&#34;columns is-desktop&#34;&gt;
      &lt;div class=&#34;column&#34;&gt;
        &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.yuzu.yuzu_emu&#34;&gt;
          &lt;div style=&#34;align-items: center&#34;&gt;&lt;img alt=&#34;yuzu mainline&#34; src=&#34;./svg/mainline.svg&#34; width=&#34;400&#34;&gt;&lt;/div&gt;
          &lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34; width=&#34;200&#34;&gt;
        &lt;/a&gt;
      &lt;/div&gt;
      &lt;div class=&#34;column&#34;&gt;
        &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.yuzu.yuzu_emu.ea&#34;&gt;
          &lt;div style=&#34;align-items: center;&#34;&gt;&lt;img alt=&#34;yuzu early access&#34; src=&#34;./svg/early_access.svg&#34; width=&#34;400&#34;&gt;&lt;/div&gt;
          &lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34; width=&#34;200&#34;&gt;
        &lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/article&gt;
&lt;p&gt;The GitHub releases aren&amp;rsquo;t live yet, but we will edit this article with a link to download them once they are.
This initial release won&amp;rsquo;t have parity with the feature-rich Desktop builds of yuzu, but we are looking forward to introducing all the features you love as we fine-tune them for Android.&lt;/p&gt;
&lt;br&gt;
&lt;article class=&#34;message&#34;&gt;&lt;div class=&#34;message-header&#34;&gt;
&lt;p&gt;⚠️ Update&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;message-body&#34;&gt;&lt;p style=&#34;color:white;&#34;&gt;
&lt;b&gt;Standalone GitHub releases are now available &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-android/releases/&#34; style=&#34;color:#03a9f4;&#34;&gt; here.&lt;/a&gt;
&lt;/b&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;
&lt;p&gt;Features such as multiplayer over LAN/LDN, Input Profiles, TAS, etc. are not yet available.
For now, we want to focus on compatibility and performance as performing cutting-edge emulation on typical Android hardware has several challenges.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re still reading, make sure to stick around for a little development history, expectations, and compatibility reports!&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/botw_hu288dabd54c4df12af13e179000f13198_2015343_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Breath of the Wild (Samsung Galaxy S20 FE, Mesa Turnip GPU driver Vs. Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/botw_adreno_hu48b69fb6684628bb69d2b1fac92e03a3_1694738_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Breath of the Wild (Samsung Galaxy S20 FE, Mesa Turnip GPU driver Vs. Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Breath of the Wild (Samsung Galaxy S20 FE, Mesa Turnip GPU driver Vs. Samsung Galaxy S23, Qualcomm proprietary GPU driver)&lt;/p&gt;


&lt;h1 id=&#34;why&#34;&gt;Why?&lt;/h1&gt;
&lt;p&gt;In the past year, we have made significant strides in improving both the accuracy and performance of yuzu.
And with many more such improvements in progress, we understood that the longer we waited, the more challenging it would become for us to support an Android build.&lt;/p&gt;
&lt;p&gt;With this public release, all future yuzu development activities will account for, and address, both feature and platform compatibility for Android.
This is expected to help facilitate and streamline our development process to better achieve our goal of platform independence.&lt;/p&gt;
&lt;p&gt;We hope to welcome Android developers interested in lending their expertise to a cutting-edge project and produce new yuzu features, optimizations, and other improvements!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;skyrim.png&#34; title=&#34; You&amp;#39;re finally awake! yuzu on Android launched! (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/skyrim_hud781edb267d9b060700f6e88ea611772_2753287_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; You&amp;#39;re finally awake! yuzu on Android launched! (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; You&amp;#39;re finally awake! yuzu on Android launched! (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h1 id=&#34;state-of-things-where-are-we-what-can-users-expect&#34;&gt;State of things: Where are we? What can users expect?&lt;/h1&gt;
&lt;p&gt;Before we talk more about where we are and what users can expect, we would like to make a few things clear:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We&amp;rsquo;re committed to improving the feature parity, compatibility, and performance of our Android builds; most improvements for desktop platforms, like Windows and Linux, will also help improve our Android users&amp;rsquo; experience.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;yuzu Android is in rapid development and early builds should be considered akin to a beta.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Expect to see a variety of results regarding compatibility and performance on different devices, discussed in more detail later.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With that out of the way, let&amp;rsquo;s dive into the state of things for yuzu Android.&lt;/p&gt;
&lt;h2 id=&#34;some-background&#34;&gt;Some background&lt;/h2&gt;
&lt;p&gt;Like our sister project, Citra, yuzu has always been developed with multi-platform support in mind.
We&amp;rsquo;ve supported major desktop operating systems, such as Windows and Linux, since the earliest builds of yuzu.
yuzu&amp;rsquo;s core code has, by design, been kept modular and frontend agnostic to ensure any future efforts to expand supported platforms does not run into unwanted dependency issues.&lt;/p&gt;
&lt;p&gt;Although we originally couldn&amp;rsquo;t support macOS due to Apple deprecating OpenGL support on it, there has been a recent rekindling of efforts to support macOS using MoltenVK — and it so happens that the new Macs are powered by 64-bit ARM-based Apple Silicon (M1/M2, at the time of writing) SoCs (System-on-Chip).
But then we faced another hurdle — Dynarmic&amp;rsquo;s lack of host recompilation support for ARM64.&lt;/p&gt;
&lt;p&gt;In case you weren&amp;rsquo;t aware, yuzu uses &lt;a href=&#34;https://github.com/merryhime/dynarmic&#34;&gt;Dynarmic&lt;/a&gt; for its CPU emulation.
Dynarmic works by recompiling (translating) the Nintendo Switch&amp;rsquo;s (guest) ARM CPU instructions to the user&amp;rsquo;s (host) CPU.
And because Dynarmic didn&amp;rsquo;t yet support recompiling guest code for ARM64, yuzu&amp;rsquo;s CPU emulation couldn&amp;rsquo;t work on any of these host CPUs.&lt;/p&gt;
&lt;p&gt;Thanks to the efforts of &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; and &lt;a href=&#34;https://github.com/merryhime&#34;&gt;merryhime&lt;/a&gt;, this hurdle didn&amp;rsquo;t stand in our way for too long.
With ARM64 host support ready to go, byte[] set his sights on getting yuzu to work on macOS.
But that&amp;rsquo;s a story for another day.&lt;/p&gt;
&lt;p&gt;By the way, did you know that there are other platforms that use ARM64 SoCs extensively?&lt;/p&gt;
&lt;h2 id=&#34;bringing-yuzu-to-android&#34;&gt;Bringing yuzu to Android&lt;/h2&gt;
&lt;p&gt;Knowing that Dynarmic support for ARM64 host recompilation was underway and that Vulkan support on Android would probably be better than macOS, we were optimistic about getting yuzu working on Android.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;flTobi&lt;/a&gt; and &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; quickly started putting things together, with the first goal to simply get yuzu building for Android.
These early builds lacked a working renderer to display graphics, but progress was promising.
After some fixes, they got a few 32-bit games such as &lt;code&gt;Mario Kart 8 Deluxe&lt;/code&gt; and &lt;code&gt;Captain Toad: Treasure Tracker&lt;/code&gt; booting with just the audio.&lt;/p&gt;
&lt;p&gt;Once the Dynarmic ARM64 support was completed, byte[] joined them and the trio got working on getting the Vulkan renderer backend working on Android.
While OpenGL ES didn&amp;rsquo;t pan out, bunnei was able to get yuzu to render basic homebrew on Android with Vulkan:&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./proto1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/proto1_hu7d98b4fdf5c238ed23a9bd72a736787e_143512_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./proto2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/proto2_hu69b8e6990c2f06e174d60a343c3330c1_493248_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./proto3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/proto3_hu838d443e1e1ba4b878618efd8b6f96d7_327396_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Snake, try to remember the basics of rendering&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./proto4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/proto4_hu09610889b48776ed7123ed31fee600b4_192509_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Snake, try to remember the basics of rendering&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Snake, try to remember the basics of rendering&lt;/p&gt;


&lt;p&gt;With our lead moderator &lt;a href=&#34;https://github.com/Schplee&#34;&gt;Flamboyant Ham&lt;/a&gt; working on a new input overlay design and app themes, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; started working with them on integrating the input backend to the touch-screen overlay.
As a sudden surprise for us, developer &lt;a href=&#34;https://github.com/t895&#34;&gt;t895&lt;/a&gt;, who&amp;rsquo;s been improving &lt;a href=&#34;https://github.com/dolphin-emu/dolphin&#34;&gt;Dolphin&amp;rsquo;s&lt;/a&gt; Android app, accepted our request and joined the team to work on overhauling our app UI.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ui1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/ui1_hu6f59b90a9a19086cdc720f134d322330_321432_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Peruse our settings and customize as you see fit!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ui2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/ui2_hu4600dbf20a8fb46467e980eca82b2a1e_134627_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Peruse our settings and customize as you see fit!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ui3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/ui3_hu842b9b18c85d57cf7828ed87c6130ac0_124189_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Peruse our settings and customize as you see fit!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Peruse our settings and customize as you see fit!&lt;/p&gt;


&lt;p&gt;Together, with Flamboyant Ham creating the designs and t895 working his dev magic, an onboarding process and search menu were added, helping users select their keys, games folder, and search for titles with ease!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./intro1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/intro1_hu62de5ba706f9889db5cef6161a430b03_131518_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Simple and straightforward - our favorite!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./intro2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/intro2_hufd006daf3df20b8b2809baf415a949b0_104201_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Simple and straightforward - our favorite!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./search.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/search_hue69d5fd14331a06f2918393a60a118f7_2531671_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Simple and straightforward - our favorite!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Simple and straightforward - our favorite!&lt;/p&gt;


&lt;p&gt;Special thanks to the Citra GPU dev, &lt;a href=&#34;https://github.com/GPUCode&#34;&gt;GPUCode&lt;/a&gt;, for taking their time away from Citra Android and Vulkan development to improve this release with their special sauce &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9973&#34; data-gh-pr=&#34;9973&#34;&gt;Async Presentation&lt;/a&gt;
.&lt;/p&gt;
&lt;h1 id=&#34;what-to-expect&#34;&gt;What to expect?&lt;/h1&gt;
&lt;p&gt;Android is a platform that boasts a huge userbase, but brings with it its fair share of problems.
As there is a lot of hardware variation for Android devices, compatibility and performance will vary.
So, to temper expectations, we would like to clarify our minimum requirements for the near future.&lt;/p&gt;
&lt;h2 id=&#34;hardware-requirements&#34;&gt;Hardware requirements&lt;/h2&gt;
&lt;p&gt;At the moment, yuzu requires devices powered by Qualcomm Snapdragon SoCs which have Adreno GPUs.
Devices powered by SoCs like Exynos, Mediatek, etc. are expected to not work at all due to their &amp;ldquo;worse-than-Adreno&amp;rdquo; GPU drivers, at least for the near future.&lt;/p&gt;
&lt;br&gt;
&lt;article class=&#34;message&#34;&gt;&lt;div class=&#34;message-header&#34;&gt;
&lt;p&gt;⚠️ Update&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;message-body&#34;&gt;&lt;p style=&#34;color:white;&#34;&gt;
&lt;b&gt;yuzu now supports Xclipse based and Mali G-series based SoC GPUs.&lt;/b&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;
&lt;p&gt;Also, yuzu on Android has high RAM requirements, therefore fairly high-end devices provide the best experience (e.g. SD 865 and 8GB of RAM or better).&lt;/p&gt;
&lt;p&gt;yuzu on Android ships with the ability to run custom GPU drivers, such as newer official Adreno drivers, or &lt;a href=&#34;https://docs.mesa3d.org/drivers/freedreno.html&#34;&gt;Turnip&lt;/a&gt; using &lt;a href=&#34;https://github.com/bylaws/libadrenotools&#34;&gt;libadrenotools&lt;/a&gt; to improve the performance on older generation Snapdragon SoCs.
Apart from this, there are still many more Android-specific optimizations to be done.
We have plenty of opportunity to improve performance, but this explains the current high minimum system requirements.&lt;/p&gt;
&lt;p&gt;This initial release has been intentionally kept fairly minimal so that we can focus on improving performance and stability.
As stated earlier, feature parity with our PC builds is something we&amp;rsquo;re committed to, but expect it to happen slowly and not immediately.&lt;/p&gt;
&lt;h2 id=&#34;performance-and-compatibility&#34;&gt;Performance and Compatibility&lt;/h2&gt;
&lt;p&gt;Regarding software requirements, yuzu requires Android 11 or newer and a myriad of mandatory Vulkan extensions that the Play Store will automatically check for.
That being said, the Android GPU driver ecosystem is very inconsistent; not all devices will be the same.
Being able to download and install yuzu doesn&amp;rsquo;t mean the performance or compatibility will be great.
As expected, Qualcomm is (currently) king here.&lt;/p&gt;
&lt;p&gt;All Qualcomm device users will have the option to test different Mesa Turnip driver versions, thanks to &lt;a href=&#34;https://github.com/bylaws/libadrenotools&#34;&gt;libadrenotools&lt;/a&gt;.
We will link them in our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord server&lt;/a&gt;. You can download any compatible drivers, and select them by going to &lt;code&gt;Settings &amp;gt; Install GPU Driver &amp;gt; Install&lt;/code&gt; in yuzu.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gpu_driver_install.png&#34; title=&#34; Just tap on Install!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/gpu_driver_install_hu567ffde8e7b5ab42484669911065be2a_218201_540x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Just tap on Install!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Just tap on Install!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The latest is not always better, and specific games may prefer specific drivers.&lt;/p&gt;
&lt;p&gt;Currently, the best compatibility is achieved using Adreno 600 series GPUs running the Mesa Turnip drivers.
If you want games to start and render correctly, this is the way to go.&lt;/p&gt;
&lt;p&gt;The best performance comes from Adreno 700 series hardware (Snapdragon 8 Gen 1 and newer), which won&amp;rsquo;t have Turnip support for a while.
While performance is typically higher, you will experience rendering issues or some games refusing to start.&lt;/p&gt;
&lt;br&gt;
&lt;article class=&#34;message&#34;&gt;&lt;div class=&#34;message-header&#34;&gt;
&lt;p&gt;⚠️ Update&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;message-body&#34;&gt;&lt;p style=&#34;color:white;&#34;&gt;
&lt;b&gt;Current Turnip drivers provide good support for both Adreno 600 and 700 series hardware, but performance is still better with official Qualcomm drivers in the few games that render correctly with them.&lt;/b&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;
&lt;p&gt;With that said, take a look at some performance numbers from several games:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./performance.png&#34; title=&#34; Not too shabby for a first release!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/performance_hu2b55b5b504193e5f4d963ad39e9c9a77_33691_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Not too shabby for a first release!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Not too shabby for a first release!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;We think that devices with Exynos 2200 and newer SoCs running AMD RDNA2 GPUs could also work well, but we haven’t been able to test them out due to how hard they are to find.&lt;/p&gt;
&lt;br&gt;
&lt;article class=&#34;message&#34;&gt;&lt;div class=&#34;message-header&#34;&gt;
&lt;p&gt;⚠️ Update&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;message-body&#34;&gt;&lt;p style=&#34;color:white;&#34;&gt;
&lt;b&gt;Samsung&#39;s Xclipse 900 series GPUs are perfectly usable now.&lt;/b&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;
&lt;p&gt;Available information suggests they run some older form of the AMD proprietary driver, so support may be somewhat good knowing AMD&amp;rsquo;s track record.&lt;/p&gt;
&lt;p&gt;Regardless of the device, disabling &lt;code&gt;Docked mode&lt;/code&gt; and/or using lower resolution multipliers can help with performance in most games.
However, your mileage will vary here.
Some games may prefer docked mode, and some drivers don&amp;rsquo;t play well with resolution multipliers under 1x.
You&amp;rsquo;ll have to test and see what works for you!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./graphics_settings.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/graphics_settings_hu5d94fd2028d4082bd4134708cf5e34f5_214628_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;We&amp;#39;re still figuring out what the best settings are for each game, so please experiment!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./system_settings.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/system_settings_hu7234e078ed35c3ba308f05c8faf0f119_159848_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;We&amp;#39;re still figuring out what the best settings are for each game, so please experiment!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;We&amp;#39;re still figuring out what the best settings are for each game, so please experiment!&lt;/p&gt;


&lt;p&gt;Cooling is an important factor of performance as well.
We tested several devices with the Snapdragon 8 Gen 2 SoC, and while a gaming-oriented Redmagic 8 Pro had no problems keeping its clock speeds high (even locked to maximum) and temperatures low, a regular Samsung Galaxy S23, on the other hand, is a boiling machine, climbing to 90°C in seconds.
This temperature won&amp;rsquo;t damage the device, as TjMax is at 100°C, but higher temperatures do lead to lower clock speeds.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pokemon_sword_cpu_usage.png&#34; title=&#34; Hand warmer included (Pokémon Sword)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/pokemon_sword_cpu_usage_hube0069d3642a8e9c1324f76d521b68e8_2052366_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Hand warmer included (Pokémon Sword)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Hand warmer included (Pokémon Sword)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Overheating leading to thermal throttling can result in a 30-50% performance loss over time, so this is one of the few times when gamer-gimmick marketing isn&amp;rsquo;t lying.&lt;/p&gt;
&lt;p&gt;Regarding other specs, RAM is crucial.
The recommended value is 8GB or more, big emphasis on more, and the absolute minimum is 6GB, but this will lead to many resource intensive games crashing.
&lt;code&gt;The Legend of Zelda: Tears of the Kingdom&lt;/code&gt; requires 12GB at the moment.&lt;/p&gt;
&lt;p&gt;Storage is not a critical aspect, but keep in mind that Switch games are typically large — there are visual novels over 20GB, and that&amp;rsquo;s not counting updates and DLC.&lt;/p&gt;
&lt;p&gt;Controller input support is in its early stages.
The ability to configure multiple controllers and their button mappings is currently being worked on, but not yet ready.
Xbox, PlayStation, and Switch Pro controllers are automatically mapped when they are paired over Bluetooth.
Generic DirectInput controllers are supported, but until more development time is spent dedicated to them, you may see some mapping issues and potentially missing mappings for buttons.
Joy-Cons are not supported for now, Android doesn&amp;rsquo;t allow access to them so they will have missing functionality.&lt;/p&gt;
&lt;p&gt;An on-screen input overlay will always be available, and it can be hidden while playing.
Swipe from the left side of the screen and toggle &lt;code&gt;Input Overlay &amp;gt; Show Overlay&lt;/code&gt; if you want to disable it.
The Button and Stick placements can be adjusted here as well.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./input1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/input1_hu7d05dd863d82bb76b53ea4529660112b_302740_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Adjust to your liking&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./input2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/input2_hu95fb207c34b12c5a667f5d67cecc973f_199689_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Adjust to your liking&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./input3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/input3_hu6508c04901adf99a6f817434a1842340_205510_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Adjust to your liking&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Adjust to your liking&lt;/p&gt;


&lt;h1 id=&#34;setup-guide&#34;&gt;Setup guide&lt;/h1&gt;
&lt;p&gt;If you need help setting up yuzu, our &lt;a href=&#34;https://yuzu-mirror.github.io/help/quickstart/&#34;&gt;Quickstart Guide&lt;/a&gt; will provide all the steps required to get up and running.
All the same requirements apply, including having a PC and the mandatory hacked Nintendo Switch.
The yuzu on Android onboarding process will have you select the location of your &lt;code&gt;prod.keys&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;The only major difference is that the yuzu folder is located in &lt;code&gt;Android/data/org.yuzu.yuzu_emu/files&lt;/code&gt;, which you will need access to in order to install Switch firmware files and any preferred mods.
A quick-and-easy management interface for DLC, updates, mods, and saves will be added at a later date, so for those who dare, the process must be done manually for now (or copied from your PC installation of yuzu).&lt;/p&gt;
&lt;p&gt;In recent Android versions, Google started blocking access to app folders in file managers, so it is recommended to instead use Android&amp;rsquo;s integrated file manager to access the yuzu folder. Here is a link to an app that allows users to have &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.marc.files&#34;&gt;direct access to it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alternatively, you can always connect the phone/tablet to your PC via USB cable. No restrictions apply there.&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;And there you have it!
We&amp;rsquo;re excited for the opportunity that Android provides us, to hear all of your feedback, and we hope you enjoy playing!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./totk.png&#34; title=&#34; The Legend of Zelda: Tears of the Kingdom&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/totk_hue196ed8fc1e98709b473ca2d2af62eb2_976956_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The Legend of Zelda: Tears of the Kingdom&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The Legend of Zelda: Tears of the Kingdom&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;We don&amp;rsquo;t have anything else to talk about for now, but please enjoy the below selection of screenshots taken from yuzu on Android!&lt;/p&gt;
&lt;h1 id=&#34;media&#34;&gt;Media&lt;/h1&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;totk_qcom.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/totk_qcom_hu074e11d2e5e0fb98ddbbcf8fabc0ef1e_1294851_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Tears of the Kingdom (Samsung Galaxy S20 FE, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;totk_qcom2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/totk_qcom2_hue62b4ec23f32b8c0ed8dbbc4f2c507c0_531358_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Tears of the Kingdom (Samsung Galaxy S20 FE, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda: Tears of the Kingdom (Samsung Galaxy S20 FE, Qualcomm proprietary GPU driver)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;ssmb.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/ssmb_hub40203b89b0349a673b6fc83cf42921a_2343591_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Smash Bros. Ultimate (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;ssmb2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/ssmb2_hub2f8595851c0b56baecdb4e97414bd69_1756930_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Smash Bros. Ultimate (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Smash Bros. Ultimate (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;mk1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/mk1_hu3243736b2b1291e5231efd53f2963540_2312787_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mario Kart 8 Deluxe (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;mk2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/mk2_hu169cd2a6f596b44f6c653ec989c7042d_2584405_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mario Kart 8 Deluxe (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Mario Kart 8 Deluxe (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;smo1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/smo1_hu51137cb4490c76ca429cacf58bf3786b_2645049_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;smo2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/smo2_hud82764d666df9cfef2b38dadd79288db_1199547_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;acnh.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/acnh_hu786a05ac3767d7b9cb95ea54b287b632_2385951_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Animal Crossing: New Horizons (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;acnh2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/acnh2_hue6a2ef5067c316512525fa578fa33de5_1603818_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Animal Crossing: New Horizons (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Animal Crossing: New Horizons (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;tloz-awakening.png&#34; title=&#34; The Legend of Zelda: Link&amp;#39;s Awakening (Samsum Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/tloz-awakening_hu5c26ec0a00cc0732baf203c54e17d41e_2608019_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The Legend of Zelda: Link&amp;#39;s Awakening (Samsum Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The Legend of Zelda: Link&amp;#39;s Awakening (Samsum Galaxy S23, Qualcomm proprietary GPU driver)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;tloz-ss.png&#34; title=&#34; The Legend of Zelda: Skyward Sword HD (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/tloz-ss_hu37a2b43980d0e0f56e05c708a55286a4_1715400_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The Legend of Zelda: Skyward Sword HD (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The Legend of Zelda: Skyward Sword HD (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;dkctf.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/dkctf_hu761ff8e1a346e4ff9195dc630234ac27_2192055_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Donkey Kong Country: Tropical Freeze (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;dkctf2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/dkctf2_hu7f9111758047a36445be9bce07f39f8d_2219440_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Donkey Kong Country: Tropical Freeze (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Donkey Kong Country: Tropical Freeze (Samsung Galaxy S20 FE, Mesa Turnip GPU driver)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;fe_engage.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/fe_engage_hu8b9e065c3630838f4fc28def757b9ed0_2258923_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fire Emblem Engage (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;fe_engage2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/fe_engage2_hu2963457f7a863d8e903d83d163676602_2153602_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fire Emblem Engage (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Fire Emblem Engage (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;dread.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/dread_hue45dc85ae2b35b9141c22e8b50770a37_1604162_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Metroid Dread (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;dread2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/dread2_hu15d80e1f8afc768323d708fcc839e2c4_817863_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Metroid Dread (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Metroid Dread (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;pokemon-shield.png&#34; title=&#34; Pokémon Sword (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/pokemon-shield_hu7ff78e8669b06488b436d03ad0cb1f47_2294918_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Pokémon Sword (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Pokémon Sword (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;arceus.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/arceus_hu2f09464e5227ffa36c4d0c54fbc0cb38_1764145_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokemon Legends: Arceus (Samsung Galaxy S20 FE, Turnip GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;arceus2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/arceus2_hub9ae1cfdeaa2dd10bc617b1a13f9828f_1564092_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokemon Legends: Arceus (Samsung Galaxy S20 FE, Turnip GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Pokemon Legends: Arceus (Samsung Galaxy S20 FE, Turnip GPU driver)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;sm3d_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/sm3d_1_hubaf177c44f672af8cc76ae26eb1ea862_1746952_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario 3D World &amp;#43; Bowser&amp;#39;s Fury (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;sm3d_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/sm3d_2_huab034ee6848261863cd219e07d6fabca_2390210_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario 3D World &amp;#43; Bowser&amp;#39;s Fury (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario 3D World &amp;#43; Bowser&amp;#39;s Fury (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;atelier_ryza_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/atelier_ryza_1_hu3d04eca0ee8cb50c5c9d28a2c3ad9fc6_2987081_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Atelier Ryza: Ever Darkness &amp;amp; the Secret Hideout (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;atelier_ryza_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/atelier_ryza_2_hub5f7449fe3201ab95d497df57daef16c_2669439_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Atelier Ryza: Ever Darkness &amp;amp; the Secret Hideout (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Atelier Ryza: Ever Darkness &amp;amp; the Secret Hideout (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;d3_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/d3_1_hu710f4eb46ad73d26cbc5923896144488_1656624_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Diablo III: Eternal Collection (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;d3_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-android/d3_2_hu888aced21d54d4efda780c12c2e27be2_1970471_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Diablo III: Eternal Collection (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Diablo III: Eternal Collection (Samsung Galaxy S23, Qualcomm proprietary GPU driver)&lt;/p&gt;


&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report April 2023</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/</link>
      <pubDate>Wed, 10 May 2023 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/</guid>
      <description>&lt;p&gt;Hello yuz-ers! There were fewer individual changes this month, but the changes that were made are substantial! You won&amp;rsquo;t want to miss this.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello yuz-ers! There were fewer individual changes this month, but the changes that were made are substantial! You won&amp;rsquo;t want to miss this.&lt;/p&gt;
&lt;p&gt;Poor Melia up there.&lt;/p&gt;
&lt;h2 id=&#34;project-yfc-190&#34;&gt;Project Y.F.C. 1.90!&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; showed up one weekend and asked, “Want to test a 50% performance boost and almost perfect rendering on Normal GPU accuracy?”
And that’s exactly what we did.&lt;/p&gt;
&lt;p&gt;A more accurate name for this change would be “a rewrite of the Buffer Cache Rewrite”, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10084&#34; data-gh-pr=&#34;10084&#34;&gt;perhaps rBCR for short?&lt;/a&gt;

Essentially, Blinkhawk rewrote most of the old buffer cache changes that &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; introduced &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-bcr/&#34;&gt;two years ago&lt;/a&gt;, taking into account the new demands of recent games and the issues found with the original BCR.&lt;/p&gt;
&lt;p&gt;Part of the work &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10088&#34; data-gh-pr=&#34;10088&#34;&gt;also involves:&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Allowing the verification of fencing and writing of asynchronous downloads in a separate thread&lt;/li&gt;
&lt;li&gt;Restructuring how accuracy is managed by skipping host-guest fence synchronization and not downloading on host conditional rendering for normal GPU accuracy&lt;/li&gt;
&lt;li&gt;Improving consistency for &lt;code&gt;Query Cache&lt;/code&gt; asynchronous downloads&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The results are amazing. Most games that used to need High GPU accuracy to render correctly can now run on Normal with no issues.
Additionally, all this wizardry reduces bandwidth usage and boosts performance up to 87% for everyone (50% on average), from the low-end APUs to the high-end beasts.&lt;/p&gt;
&lt;p&gt;Here’s an incomplete list of changes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As noted previously, many games which required High GPU accuracy to be visually accurate now work with Normal GPU accuracy with minimal sacrifice.&lt;/li&gt;
&lt;li&gt;Particles and character lighting/shading in &lt;code&gt;Pokémon Sword &amp;amp; Shield&lt;/code&gt; have been fixed on Normal GPU accuracy. Performance has improved by up to 40% on Normal GPU accuracy.&lt;/li&gt;
&lt;li&gt;Models (the BowWow, for example) and particle rendering are fixed on Normal GPU accuracy in &lt;code&gt;The Legend of Zelda: Link&#39;s Awakening&lt;/code&gt;. Performance on Normal accuracy, with correct rendering, is now up to 70% higher than before.&lt;/li&gt;
&lt;li&gt;Lighting in &lt;code&gt;Diablo II: Resurrected&lt;/code&gt; has been fixed and will no longer flicker.&lt;/li&gt;
&lt;li&gt;Lighting and shadows in &lt;code&gt;Luigi&#39;s Mansion 3&lt;/code&gt; will no longer randomly flicker.&lt;/li&gt;
&lt;li&gt;Pokémon photograph detection and data of &lt;code&gt;New Pokémon Snap&lt;/code&gt; has been fixed on Normal GPU accuracy. This results in up to a 50% increase in performance with working photograph detection.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Kirby and the Forgotten Land&lt;/code&gt; vertex explosions, lighting, and particles have been fixed on Normal GPU accuracy. This results in an up to 40% performance increase, with accurate rendering on Normal accuracy.&lt;/li&gt;
&lt;li&gt;Red lights in some machines in &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; have been fixed.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Fire Emblem Warriors&lt;/code&gt; has been accurately fixed and no longer requires a workaround.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MONSTER HUNTER RISE&lt;/code&gt; now accurately renders on Normal GPU accuracy, resulting in an up to 50% performance increase (note, however, that updates after 3.0.0 still have issues and require more work).&lt;/li&gt;
&lt;li&gt;Vertex explosions in &lt;code&gt;Persona 5 Royal&lt;/code&gt; no longer occur with Normal GPU accuracy, resulting in an up to 30% increase in performance.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Atelier Ryza&lt;/code&gt; series games now render correctly.&lt;/li&gt;
&lt;li&gt;The pessimistic flushes option in advanced graphics settings is no longer needed in any of the affected games it benefitted and we have now removed it.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Mortal Kombat 11&lt;/code&gt; no longer has any vertex explosions.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NieR:Automata The End of YoRHa Edition&lt;/code&gt; now renders correctly.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Bayonetta 3&lt;/code&gt; no longer requires High GPU accuracy to render correctly.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Splatoon 2&lt;/code&gt;’s ink physics work correctly on AMD GPUs while using High GPU accuracy.&lt;/li&gt;
&lt;li&gt;Particles in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; have been fixed, resulting in 40% higher performance and accurate rendering on Normal GPU accuracy.&lt;/li&gt;
&lt;li&gt;Tree flickering in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; has been fixed on all GPU accuracy options.&lt;/li&gt;
&lt;li&gt;And much, much more!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No option needs to be enabled to take advantage of all of this, just switch GPU accuracy to Normal if you haven’t already. What are you waiting for?&lt;/p&gt;
&lt;p&gt;Here are some stats of some of the most popular games.
We compared High GPU accuracy in Mainline 1407, and Normal GPU accuracy in Mainline 1421.
All tests are done at 2X resolution scaling, and using mods to disable dynamic resolution when possible.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./yfc1.png&#34; title=&#34; Hardware makers cry over this kind of free performance boost&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/yfc1_hu1ca0f7be3ca1b352ba00516928888a28_20568_720x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Hardware makers cry over this kind of free performance boost&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Hardware makers cry over this kind of free performance boost&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;And then we have these four, the high FPS squad. They&amp;rsquo;re reason enough to consider asking the modding community to start releasing 240 FPS mods!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./yfc2.png&#34; title=&#34; When you gotta go so fast on a previous generation CPU that a second graph is required&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/yfc2_hua95c5b25a667dce02039959de714a454_15699_720x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; When you gotta go so fast on a previous generation CPU that a second graph is required&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; When you gotta go so fast on a previous generation CPU that a second graph is required&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Expect even higher numbers with a Zen 4 3D V-cache chip.
For example, in the same testing spot of &lt;code&gt;Breath of the Wild&lt;/code&gt;, a non-3D 7900X gets 90 FPS.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./bsod.png&#34; title=&#34; Your writer’s PC is feeling like a snail compared to the current monsters on sale…&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/bsod_hub9a87add176dcd185d07255d7c6944a8_1981763_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Your writer’s PC is feeling like a snail compared to the current monsters on sale…&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Your writer’s PC is feeling like a snail compared to the current monsters on sale…&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;other-graphical-changes&#34;&gt;Other graphical changes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/citra-emu/citra&#34;&gt;Citra&lt;/a&gt;-legend &lt;a href=&#34;https://github.com/GPUCode&#34;&gt;GPUCode&lt;/a&gt; stepped up to give us a hand with presentation. Presentation is the final step of most graphics code — the process of getting the output to the screen.&lt;/p&gt;
&lt;p&gt;GPUCode&amp;rsquo;s work &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9973&#34; data-gh-pr=&#34;9973&#34;&gt;moves swapchain operations&lt;/a&gt;
 to a separate thread in order to avoid stalling the main GPU thread. This improves performance in more demanding titles and on low-end hardware, and can make the difference between barely getting 60 and getting a smooth 60 frames per second in many cases.&lt;/p&gt;
&lt;p&gt;However, it can also make the frametimes less consistent, therefore we&amp;rsquo;ve turned it off by default to allow for further testing. We need to determine which systems and games benefit the most.
For those interested in trying it, the toggle is available in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced &amp;gt; Enable asynchronous presentation (Vulkan only)&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./async.png&#34; title=&#34; Share your experience with us!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/async_hue0996b1ae49311328229b5c8975de57c_26389_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Share your experience with us!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Share your experience with us!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; continues to work on making the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10008&#34; data-gh-pr=&#34;10008&#34;&gt;code match the information NVIDIA has made public&lt;/a&gt;
 in their latest documentation.&lt;/p&gt;
&lt;p&gt;You may remember &lt;a href=&#34;https://github.com/Wollnashorn&#34;&gt;Wollnashorn&lt;/a&gt; from their role in &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/#new-challenger-approaching&#34;&gt;overhauling the Vulkan pipeline cache&lt;/a&gt;.
Now, Wollnashorn presents us with a technique to bypass hardware limitations in order to make &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; render accurately on non-NVIDIA hardware.&lt;/p&gt;
&lt;p&gt;Object edges, especially grass blades, had distinct black borders on AMD and Intel GPUs.
The issue occurred regardless of the driver in use, so it was clearly a hardware limitation, and an incompatibility with what the game expects.
&lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; uses a technique called deferred rendering–in this particular case, shadows render at half the resolution.
Four pixels of the full resolution depth texture are sampled simultaneously with a &lt;a href=&#34;https://registry.khronos.org/OpenGL-Refpages/gl4/html/textureGather.xhtml&#34;&gt;textureGather&lt;/a&gt; call.
&lt;code&gt;textureGather&lt;/code&gt; has the characteristic of working with normalized floating-point coordinates for the texture, so each fragment is always at the boundary of the four selected pixels.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gather.png&#34; title=&#34; The four special pixels&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/gather_hu7568f8d0b364fb97b0f831708bb03e63_11036_549x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The four special pixels&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The four special pixels&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Now, &lt;code&gt;textureGather&lt;/code&gt; uses floating-point, and each GPU design will have a different rounding precision.
Additionally, thanks to a &lt;a href=&#34;https://www.reedbeta.com/blog/texture-gathers-and-coordinate-precision/&#34;&gt;blogspot by Nathan Reed&lt;/a&gt;, we know the integer coordinates of the pixel on the texture are calculated by the GPU after a conversion from a floating-point number to a fixed-point number.&lt;/p&gt;
&lt;p&gt;With floating point conversions involved, you may be able to tell where this is going.
If the user’s GPU is not using the same rounding precision as the Nintendo Switch, different pixels can be sampled. Ergo, only NVIDIA GPUs got the four correct pixels the game intended.&lt;/p&gt;
&lt;p&gt;How did Wollnashorn solve this? With a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10030&#34; data-gh-pr=&#34;10030&#34;&gt;clever little trick,&lt;/a&gt;
 of course.
Adding a very tiny (1/512) subpixel offset to the sample coordinates is sufficient to fudge the rounding.
Achieving that required modifying the code of the SPIR-V and GLSL backends, altering how the operation is handled only for AMD and Intel hardware for now, with the option to force it for any other future hardware that may require it, for example, a certain fruit company.&lt;/p&gt;
&lt;p&gt;Here’s the final result:&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/botwbug_huc94fba8e453f244c1eb2ffcde3d424d4_3564871_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Funny how we end up sharing the same problems Cemu faced (The Legend of Zelda: Breath of the Wild)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/botwfix_hua41d5eebbd2221c48daaa4feb265f9ad_3441229_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Funny how we end up sharing the same problems Cemu faced (The Legend of Zelda: Breath of the Wild)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Funny how we end up sharing the same problems Cemu faced (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;


&lt;p&gt;Something we have to mention is that this doesn’t fix a very similar-looking black line issue present when using &lt;code&gt;anisotropic filtering&lt;/code&gt; values higher than Default with AMD and Intel GPUs.
That’s a separate issue and we recommend Red and Blue Team users to at least set a per-game setting for &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; to set it to Default only.
The game doesn’t benefit from higher values anyway, since its terrain textures don’t seem to take advantage of it.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/afbug_hu19ba5ebbef1fd13e58d5f18d4e742f4f_1900734_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That’s a clean look all around (The Legend of Zelda: Breath of the Wild)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/affix_hu86b423ea4caacd1bcc9ddb65124300a3_1930313_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That’s a clean look all around (The Legend of Zelda: Breath of the Wild)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;That’s a clean look all around (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;


&lt;p&gt;Linux got its well deserved share of love too thanks to &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First up, he fixed up &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10051&#34; data-gh-pr=&#34;10051&#34;&gt;initialization of the Vulkan swapchain on Wayland,&lt;/a&gt;
 helping Linux NVIDIA users to be able to launch their games.
As some of you may know, NVIDIA was historically very stubborn about their support of Wayland, and it doesn’t help that most Wayland compositors are very stubborn on their own too.
The year of the Linux desktop, always around the corner…&lt;/p&gt;
&lt;p&gt;Second, he fixed a crash that happened to Flatpak users trying to play &lt;code&gt;Bayonetta 3&lt;/code&gt;.
An &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10069&#34; data-gh-pr=&#34;10069&#34;&gt;out-of-bounds&lt;/a&gt;
 could occur in an array access intended for size estimations, leading to “nasty stuff”.
A small adjustment, and the issue is no more. Nice pull request number there.&lt;/p&gt;
&lt;p&gt;Speaking of out-of-bounds, &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; found an interesting case happening in corner sampling due to a previously added offset.
Not accounting for this offset caused another out-of-bounds situation during &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10074&#34; data-gh-pr=&#34;10074&#34;&gt;2D texture blitting.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Fixing this special case solved the depth-of-field rendering issues in &lt;code&gt;Kirby Star Allies&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/kirbybug_hu0bc591a192ed9095fa6df942e8082595_187737_360x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Poyo! (Kirby Star Allies)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/kirbyfix_hue3e0410ac72719ac1bd78f847100984c_181254_360x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Poyo! (Kirby Star Allies)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Poyo! (Kirby Star Allies)&lt;/p&gt;


&lt;p&gt;Still on fire, and with more work to come, Blinkhawk hasn’t stopped.
For something light, he decided to refactor a big part of &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/#project-yfc-175&#34;&gt;Accelerate DMA&lt;/a&gt; to do &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10082&#34; data-gh-pr=&#34;10082&#34;&gt;texture downloads&lt;/a&gt;
 through the texture cache instead.
The result is a return to the performance &lt;code&gt;Pokémon Sword &amp;amp; Shield&lt;/code&gt; and &lt;code&gt;Hyrule Warriors: Age of Calamity&lt;/code&gt; had before the old Y.F.C 1.75 changes.
Add up the gains from Y.F.C 1.90, and you have a winner for low-end systems!&lt;/p&gt;
&lt;p&gt;We have many more changes Blinkhawk implemented, but they didn’t make it in time for the deadline for the progress report, so we will be mentioning them next month.&lt;/p&gt;
&lt;h2 id=&#34;general-changes-and-settings-glossary&#34;&gt;General changes and settings glossary&lt;/h2&gt;
&lt;p&gt;The modding community requested us to allow for larger texture mods. The old 6GB limit was not enough, so byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10035&#34; data-gh-pr=&#34;10035&#34;&gt;expanded it to support a custom 8GB arrangement&lt;/a&gt;
 instead, giving almost all of it to the emulated program.&lt;/p&gt;
&lt;p&gt;However, this had unforeseen consequences.&lt;/p&gt;
&lt;p&gt;We discovered that users like to enable settings without knowing what they do.
Shocking, right?&lt;/p&gt;
&lt;p&gt;Having a much higher amount of memory available than the normal development console would has caused problems. For example, after getting several reports of Pokémon failing to respawn in &lt;code&gt;Pokémon Scarlet &amp;amp; Violet&lt;/code&gt; after playing the game for a few minutes, we narrowed the changes down to users with this setting enabled.&lt;/p&gt;
&lt;p&gt;However, this option is &lt;strong&gt;only meant&lt;/strong&gt; for very large texture mods, and should not be enabled unless you are using such a mod.
Unfortunately, it was on the first page of the yuzu settings when opening it, so it was a very visible setting.
Additionally, we found some YouTube tutorials which incorrectly suggested it may improve performance and stability, and users followed that.
This would have resulted in 4GB of extra RAM wasted for no benefit, and potentially caused issues in games.&lt;/p&gt;
&lt;p&gt;To try to prevent this, we recommend reading our new &lt;a href=&#34;https://community.citra-emu.org/t/settings-glossary/768483&#34;&gt;settings glossary&lt;/a&gt;, which together with our &lt;a href=&#34;https://community.citra-emu.org/t/recommended-settings/319349&#34;&gt;recommended settings&lt;/a&gt; page, should help people understand what each setting does, and what’s recommended to change.&lt;/p&gt;
&lt;p&gt;Moreover, to solve the problem for the users who don’t check our official channels, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10124&#34; data-gh-pr=&#34;10124&#34;&gt;moved the setting&lt;/a&gt;
 to the bottom of the &lt;code&gt;System&lt;/code&gt; tab, and renamed it, ensuring that no previous configuration file will enable it again without user intervention.
If you have a real need for extended memory layout, make sure to manually enable it again.
Or don’t, we won’t judge you… too much.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/extendedbug_hu346e19ec9a68ff51d29d0d3689fb73dc_20952_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;You have been relegated to System settings&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/extendedfix_hua746fa1d9d2072337ecce3a12f2e6431_20409_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;You have been relegated to System settings&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;You have been relegated to System settings&lt;/p&gt;


&lt;p&gt;Users reported that &lt;code&gt;IGS Classic Arcade Collection&lt;/code&gt; wasn’t playable.
vonchenplus investigated the cause and found the reason in our audio emulation.
Apparently the game doesn’t do a very good job implementing its audio code on the Switch, and fails to initialize a new audio output session, which should return an error.
Properly &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10056&#34; data-gh-pr=&#34;10056&#34;&gt;returning this error as a result&lt;/a&gt;
 is enough to get the game working.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./igs.png&#34; title=&#34; Nothing beats the classics (IGS Classic Arcade Collection)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/igs_hu19241526fcb90ac27ddfb7e5037c3af8_1277614_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Nothing beats the classics (IGS Classic Arcade Collection)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Nothing beats the classics (IGS Classic Arcade Collection)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;One of the options made available to our &lt;a href=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/&#34;&gt;LDN&lt;/a&gt; users is the ability to &lt;a href=&#34;https://yuzu-mirror.github.io/help/feature/multiplayer/&#34;&gt;create private rooms&lt;/a&gt;, providing hosts with several options to configure their servers as they want.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/twitchax&#34;&gt;twitchax&lt;/a&gt; knows that for certain server hosts, such as &lt;code&gt;fly.io&lt;/code&gt;, a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10068&#34; data-gh-pr=&#34;10068&#34;&gt;custom bind address&lt;/a&gt;
 is needed.
They implemented the functionality and now users can pass the &lt;code&gt;--bind-address&lt;/code&gt; argument to the room’s configuration.
Thanks!&lt;/p&gt;
&lt;p&gt;Continuing his work on &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10086&#34; data-gh-pr=&#34;10086&#34;&gt;improving CPU timing accuracy,&lt;/a&gt;
 &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; fixed confusion between the raw CPU frequency and &lt;code&gt;Counter-timer Frequency&lt;/code&gt;, or CNTFRQ.
The difference between the two is that CNTFRQ reports the frequency of the system clock, instead of the CPU frequency.
While fixing this, he also reduced the time it takes to measure timing information by about 60%.&lt;/p&gt;
&lt;p&gt;What does this mean for the user?
A sweet 1-7% performance boost.&lt;/p&gt;
&lt;h2 id=&#34;input-changes&#34;&gt;Input changes&lt;/h2&gt;
&lt;p&gt;Also known as &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;’s section.&lt;/p&gt;
&lt;p&gt;How you interact with a game might just be more important than even graphics or audio. After all, it’s what differentiates it from a CG animated movie.
As it is tradition by now, our dear Kraken has been working on further improving yuzu’s input emulation.&lt;/p&gt;
&lt;p&gt;A big part of the work of writing an emulator involves reverse engineering, so he’s been working on making the NFC service match what the Switch does internally — in this case, implementing all the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10053&#34; data-gh-pr=&#34;10053&#34;&gt;remaining missing interfaces,&lt;/a&gt;
 putting them on the same level as what the real console does.&lt;/p&gt;
&lt;p&gt;This next change is a simple revelation that came from the work done on TAS.
If you implement a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10060&#34; data-gh-pr=&#34;10060&#34;&gt;virtual controller,&lt;/a&gt;
 it won’t need range and dead zone settings as it will be &lt;em&gt;virtually&lt;/em&gt; perfect (sorry, not sorry).&lt;/p&gt;
&lt;p&gt;But not all work was done by german77, &lt;a href=&#34;https://github.com/v1993&#34;&gt;v1993&lt;/a&gt; caught a little nasty bug that slipped by.
Motion emulation with mouse movement is handled by a 3D vector (x, y, z). Yes, surprise math lesson, deal with it.
Anyway, yuzu was doing this:&lt;/p&gt;
&lt;p&gt;(x, y, z) = (x, y, z) + (1, 2, z)&lt;/p&gt;
&lt;p&gt;Which results in:&lt;/p&gt;
&lt;p&gt;(x + 1, y + 2, 2z)&lt;/p&gt;
&lt;p&gt;The z component was being doubled by mistake!&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10055&#34; data-gh-pr=&#34;10055&#34;&gt;The solution&lt;/a&gt;
 is to instead do:&lt;/p&gt;
&lt;p&gt;(x, y, z) = (x, y, z) + (1, 2, 0)&lt;/p&gt;
&lt;p&gt;Which gives us:&lt;/p&gt;
&lt;p&gt;(x + 1, y + 2, z)&lt;/p&gt;
&lt;p&gt;And now all’s right with the world.
This should improve the quality of mouse motion, for those that prefer an FPS experience with a keyboard and mouse.
Or just like to torture themselves.&lt;/p&gt;
&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;p&gt;A recurring problem users face when running modern emulators that utilize Vulkan is the lack of a way to get helpful feedback if the program crashes.
Vulkan is very picky.
Any wrong step in the middle and it will refuse to start, and any Vulkan layer program can cause this. Anything from outdated screen recorders, to mod managers, performance overlays, and even the disaster code motherboard vendors call RGB software.
Of particular nasty interest is the Epic Game Store’s overlay, which is reported to cause severe performance issues.&lt;/p&gt;
&lt;p&gt;To some extent, yuzu can detect these problems and switch to OpenGL to avoid them, but that doesn’t tell the user where the problem is.
We recently found out about a cute little program the &lt;a href=&#34;https://github.com/RPCS3/rpcs3&#34;&gt;RPCS3&lt;/a&gt; community has been using for some time to diagnose these problems, &lt;a href=&#34;https://github.com/13xforever/vkdiag&#34;&gt;VkDiag&lt;/a&gt;.
You can find its latest version &lt;a href=&#34;https://github.com/13xforever/vkdiag/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What this program does is list all relevant components and layers affecting Vulkan rendering and warn about potential problems in any of them.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vkdiag1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/vkdiag1_hu2e7c463b0f5074be02033f4f68919c9b_42488_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s already been combat tested, both outdated drivers and broken layers are in its sights&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vkdiag2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/vkdiag2_hu23c9cb26618393d44e3162b48cd05e49_67613_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s already been combat tested, both outdated drivers and broken layers are in its sights&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;It&amp;#39;s already been combat tested, both outdated drivers and broken layers are in its sights&lt;/p&gt;


&lt;p&gt;We have started using it in our support channels with amazing success, and we recommend self-serving users to keep it in their toolkit. You never know when that OBS install you forgot to update can cause you problems, or when that RGB software decides to go rogue.&lt;/p&gt;
&lt;h3 id=&#34;nvidia-enjoying-auto-hdr&#34;&gt;NVIDIA, enjoying Auto HDR&lt;/h3&gt;
&lt;p&gt;Here’s some great news for Windows 11 users rocking HDR displays.
Some time ago, GitHub user &lt;a href=&#34;https://github.com/svonolfen&#34;&gt;svonolfen&lt;/a&gt; in our issue tracker found an interesting way to make Auto HDR work with NVIDIA GPUs. &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/issues/9221#issuecomment-1493392941&#34;&gt;Here’s the link&lt;/a&gt;. By renaming yuzu to &amp;ldquo;Cemu&amp;rdquo; and performing additional steps, Auto HDR is suddenly functional.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./hdr.png&#34; title=&#34; Don’t mind the Spanish&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/hdr_hu6ba8d40391998613422fdef2398bc884_112830_600x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Don’t mind the Spanish&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Don’t mind the Spanish&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Cemu gets privileges, indeed.
This is only available for NVIDIA Windows drivers because, at least for now, only the NVIDIA Control Panel offers the option to force a DXGI swapchain — effectively making the Vulkan program present to screen as a Direct3D one.
This has a few benefits: Auto HDR works, improving dynamic range considerably, borderless optimizations are applied to yuzu, improving input lag and frame synchronization, and the G-Sync/Freesync issue is solved.
It has a downside worth mentioning, it can be up to 5% slower than regular Vulkan presentation.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dxgi.png&#34; title=&#34; Don’t forget to set up your NVIDIA control panel accordingly!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/dxgi_hudd083df4b1fb3a97f4c526c14ad62bd9_67565_960x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Don’t forget to set up your NVIDIA control panel accordingly!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Don’t forget to set up your NVIDIA control panel accordingly!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While this fun renaming works fine, we also heard from Windows Insider users that future versions of the Xbox Game Bar application will allow yuzu to work with Auto HDR without doing any renaming.
This will most likely require newer NVIDIA drivers to work.&lt;/p&gt;
&lt;p&gt;If you own an HDR-compatible monitor and want to compare the results, here’s a .jxr &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-emu.github.io/blob/hugo/site/content/entry/yuzu-progress-report-apr-2023/hdr.jxr&#34;&gt;HDR capture&lt;/a&gt; that the default Windows 11 photo viewer can open, and a comparable .png native &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-emu.github.io/blob/hugo/site/content/entry/yuzu-progress-report-apr-2023/sdr.png&#34;&gt;SDR capture&lt;/a&gt;.
You will of course need HDR output enabled in both your display’s and Windows 11 settings.
Notice the difference in the sky and lamps.
The tonemapping isn’t perfect, but we will never get Switch games outputting native HDR anyway.&lt;/p&gt;
&lt;p&gt;Your writer’s simple HDR400 display with no dimming zones is enough to notice the benefits, so here’s your excuse to convince your parents/wife to buy that OLED monitor you’ve been eyeing for weeks. Zelda. In HDR.&lt;/p&gt;
&lt;p&gt;A Vulkan extension can be implemented in yuzu to get global support for any GPU.
You can be sure I’ll be nagging our GPU devs until it gets added.&lt;/p&gt;
&lt;h3 id=&#34;amd-delivering-on-their-promises&#34;&gt;AMD, delivering on their promises&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/#amd-2332-and-newer-drivers&#34;&gt;Last month,&lt;/a&gt; we mentioned that AMD introduced a regression that caused graphical corruption and crashes with some games.&lt;/p&gt;
&lt;p&gt;We’re happy to announce that since driver version 23.4.2 and later the issue is resolved for Vega and newer, allowing Radeon Windows users to fully benefit from the new Vulkan extensions supported by the latest drivers, reducing shader building stuttering to a minimum.
Just as AMD promised, except&amp;hellip;&lt;/p&gt;
&lt;p&gt;Polaris (RX 400/500 series) cards may still be unstable under some rare cases, but a fix shouldn&amp;rsquo;t take too long to appear.
In the meantime, Polaris users should stick to driver &lt;a href=&#34;https://www.amd.com/en/support/kb/release-notes/rn-rad-win-23-3-1&#34;&gt;23.3.1&lt;/a&gt;, unless they want to face results like this:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./polaris.png&#34; title=&#34; Your whole desktop looks like this&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/polaris_hufe5215d7cc57880fe14b91b45884a4ef_662301_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Your whole desktop looks like this&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Your whole desktop looks like this&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;On another topic, we reported to AMD what we suspect is the cause of the Pentelas Region vertex explosions in &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;, which also now affect the initial regions in its new expansion, &lt;code&gt;Future Redeemed&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pentelas.png&#34; title=&#34; That’s the water performing the mother of all vertex explosions (Xenoblade Chronicles 3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/pentelas_huab03152bc8fb75bdbe5e3536ded27949_1372391_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; That’s the water performing the mother of all vertex explosions (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; That’s the water performing the mother of all vertex explosions (Xenoblade Chronicles 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Since the issue affects both the official AMD and Mesa drivers indiscriminately, we suspect it’s a hardware limitation — possibly the lack of support for D24 depth formats, which many games utilize (Xenoblade games included), and both NVIDIA and Intel support.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./d24.png&#34; title=&#34; That’s what a hardware limitation looks like&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/d24_huab53e5604339b59563847cadd0d10b8f_14995_954x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; That’s what a hardware limitation looks like&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; That’s what a hardware limitation looks like&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h3 id=&#34;intel&#34;&gt;Intel…&lt;/h3&gt;
&lt;p&gt;As we’ve been previously reporting, &lt;a href=&#34;https://github.com/IGCIT/Intel-GPU-Community-Issue-Tracker-IGCIT/issues/159&#34;&gt;Intel Windows Vulkan drivers are unstable&lt;/a&gt;.
The SPIR-V compiler (the part that handles Vulkan pipeline shaders) can crash working on compute shaders and some specific shader instructions.&lt;/p&gt;
&lt;p&gt;We found a case where the driver crashes when compiling a shader with more than 5 cases in a switch block, or more than 5 if-else blocks of the same condition.
Maybe an optimization gone wrong?&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./case.png&#34; title=&#34; If you uncomment out the last two cases, the driver crashes&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/case_hu685de7de1bbdd103f2089beff89e4d31_186721_491x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; If you uncomment out the last two cases, the driver crashes&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; If you uncomment out the last two cases, the driver crashes&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;We reported the crash to Intel six months ago, and their reply this month was:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thank you for reporting this issue. Our priority is to target the most popular games and apps to focus our efforts on providing a high quality, stable experience for the broadest set of users. We will continue to improve our software performance and compatibility throughout 2023 and beyond.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So even after waiting six months with a test case provided, the reason explained, and even after pointing out where in the driver the crash happens, Intel can’t find the time to fix the issue.
This is some kind of twisted joke.
For comparison, when you do this with NVIDIA, they &lt;em&gt;hire&lt;/em&gt; you.&lt;/p&gt;
&lt;p&gt;We’re left with no option but to mitigate the crashes as much as we can.
To do so, Morph &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10110&#34; data-gh-pr=&#34;10110&#34;&gt;disabled compute shaders&lt;/a&gt;
 entirely for Intel Windows drivers, ensuring games like &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; can still boot ― even though they&amp;rsquo;ll have gameplay issues as a result.&lt;/p&gt;
&lt;p&gt;This isn’t enough to solve all crashes. Some games like &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; will still crash the shader compiler. We haven&amp;rsquo;t diagnosed this yet, but believe that it&amp;rsquo;s likely closely related to the same issue we have already reported.&lt;/p&gt;
&lt;p&gt;Disabling compute shaders produces this lovely side effect on some games like &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smash.png&#34; title=&#34; That’s what happens when we’re forced to remove an entire pipeline stage, Intel (Super Smash Bros. Ultimate)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/smash_hu51d3508264ab8b4e4b23d1dbf6051556_231321_946x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; That’s what happens when we’re forced to remove an entire pipeline stage, Intel (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; That’s what happens when we’re forced to remove an entire pipeline stage, Intel (Super Smash Bros. Ultimate)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;For those that prefer proper rendering on Intel Windows drivers, can tolerate the random crashes, and don’t want to just use the actually working Linux Mesa drivers, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-mainline/releases/download/mainline-0-1414/yuzu-windows-msvc-20230429-3aaa245f7.7z&#34;&gt;Mainline 1414&lt;/a&gt; is currently the last version with support for compute shaders.
We’re working to add a toggle that can be configured per game.&lt;/p&gt;
&lt;p&gt;But wait, there’s more, the fun doesn’t stop there.
Reddit users discovered that Intel 12th and 13th Gen CPUs running on Windows 11 have noticeably worse frametimes than the same hardware running on Windows 10.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./intel.png&#34; title=&#34; What would EA say to this&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2023/intel_hu17973bff825239bcac607d1ef0000006_143964_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; What would EA say to this&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; What would EA say to this&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;So if you notice stutter while playing, the solution may be quite simple: perform a clean Windows 10 install!&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;So releasing &lt;code&gt;Project Y.F.C&lt;/code&gt; in parts paid off.
Blinkhawk is working on the final part of it, which includes a restructuring of the GPU accuracy settings, and a few other surprises.
Stay tuned.&lt;/p&gt;
&lt;p&gt;You will also hear news about &lt;code&gt;Project Lime&lt;/code&gt; &lt;em&gt;very soon!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you for reading until the end, nothing makes us happier.&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report March 2023</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/</link>
      <pubDate>Mon, 10 Apr 2023 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/</guid>
      <description>&lt;p&gt;Hi yuz-ers! We&amp;rsquo;ve been working hard as usual, and this March saw improvements in performance, graphics, audio, CPU precision, input, and much more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hi yuz-ers! We&amp;rsquo;ve been working hard as usual, and this March saw improvements in performance, graphics, audio, CPU precision, input, and much more!&lt;/p&gt;
&lt;h2 id=&#34;making-cpus-go-the-opposite-of-brrrr&#34;&gt;Making CPUs go the opposite of BRRRR&lt;/h2&gt;
&lt;p&gt;One of the biggest changes this month is the set of improvements in CPU accuracy.
This requires some backtracking so let’s rewind a little bit.&lt;/p&gt;
&lt;p&gt;Back in &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/#core-timing-or-how-to-suffer-so-much-with-a-fix&#34;&gt;July,&lt;/a&gt; we explained how &lt;code&gt;CoreTiming&lt;/code&gt; operates in its current form, using a host timer.
A thread called &lt;code&gt;HostTiming&lt;/code&gt; is used to process HLE events such as input and audio.
However, some of these events, like audio, require a high level of timer precision to behave the way games expect, more than Windows would usually allow.&lt;/p&gt;
&lt;p&gt;By default, Windows only allows a precision of 1ms since the OS event loop runs at 1000Hz.
This is not enough.
However, devices running Linux, BSD, and MacOS don&amp;rsquo;t face this limitation and can achieve μs (microsecond) levels of precision.&lt;/p&gt;
&lt;p&gt;If a game wants to run at a frametime of 16.67ms (60 FPS), you could wait for 17ms two-thirds of the time and 16ms for the remaining one-third, but this has already proved in the past to be terrible for audio accuracy.
The alternative, and old method in use for Windows, is to wait for 16ms and do a busy wait for 0.67ms.
During that 0.67ms, the CPU thread isn&amp;rsquo;t doing anything and consumes power without actually working.&lt;/p&gt;
&lt;p&gt;Here comes the benefit of removing support for Windows 7 and 8/8.1.
The Windows 10 SDK has new undocumented functions, &lt;code&gt;NtSetTimerResolution&lt;/code&gt; and &lt;code&gt;NtDelayExecution&lt;/code&gt;, which allow improving timer resolution down to 0.5ms.
This allows yuzu to wait for 16.5ms and only spin the remaining 0.17ms, which is four times shorter than the previous default method.&lt;/p&gt;
&lt;p&gt;By implementing these &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9889&#34; data-gh-pr=&#34;9889&#34;&gt;new functions,&lt;/a&gt;
 &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; reduced the time the CPU spends in a spinlock, resulting in reduced CPU usage for timing-heavy games like Kirby Forgor 💀… &lt;code&gt;Kirby and the Forgotten Land&lt;/code&gt;, and &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.
The new free resources mean better performance for low core count CPUs such as quad cores, and for systems with limited power budgets such as laptops and handhelds.
With this change, we measured up to a 24% reduction in CPU use or power consumption, depending on the limiting factor.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./usebug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/usebug_hu05b278de8f59bb3ffe0e7f5e9cec37a3_94425_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Left: old 1ms precision; Right: current 0.5ms precision. The result comes from your writer’s laptop which runs a Single Language Windows installation, so don’t mind the Spanish. Note that there is a difference in CPU use between the two results&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./usefix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/usefix_hu473113d7ff1ce19aa17ca6e4d3efc844_77708_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Left: old 1ms precision; Right: current 0.5ms precision. The result comes from your writer’s laptop which runs a Single Language Windows installation, so don’t mind the Spanish. Note that there is a difference in CPU use between the two results&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Left: old 1ms precision; Right: current 0.5ms precision. The result comes from your writer’s laptop which runs a Single Language Windows installation, so don’t mind the Spanish. Note that there is a difference in CPU use between the two results&lt;/p&gt;


&lt;p&gt;If you can perform more tasks in the same power envelope, you can improve performance without sacrificing battery life.
Alternatively, a more common scenario for an emulator, if your ceiling is a fixed framerate, you can reduce temperatures.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./tempbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/tempbug_hu17859b2cb0ec53714f6c5c6be11154a4_45421_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This is why the lap in laptop is a lie, mind the package temperature (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./tempfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/tempfix_hua495fd005016b0b81e9f4450de5e6bd7_59321_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This is why the lap in laptop is a lie, mind the package temperature (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;This is why the lap in laptop is a lie, mind the package temperature (Xenoblade Chronicles 3)&lt;/p&gt;


&lt;p&gt;Users reported that games have less audio stuttering thanks to the improved timer precision.&lt;/p&gt;
&lt;p&gt;Another nice tool that the Windows 10 SDK adds is allowing us to set yuzu as a &lt;code&gt;HighQoS&lt;/code&gt; process, hinting to the Windows scheduler that if there are higher performance cores available, they should take priority.
This further improves performance for current Ryzen CPUs by suggesting to use the best cores of a CCX, and for Intel 12th Gen and newer, by prioritizing P-cores (&amp;ldquo;performance cores&amp;rdquo;, normal cores).&lt;/p&gt;
&lt;p&gt;It’s heavily recommended to keep chipset drivers up to date to take the best advantage of your hardware.&lt;/p&gt;
&lt;p&gt;If the CPU performs in a more efficient way, how do we go even further beyond?
Well, Morph figured the next step is to improve how the CPU counts time itself!&lt;/p&gt;
&lt;p&gt;On modern CPUs using the x86 architecture, the invariant timer is fetched with the the &lt;a href=&#34;https://en.wikipedia.org/wiki/Time_Stamp_Counter&#34;&gt;RDTSC&lt;/a&gt; instruction.
The thing with RDTSC is that… it isn’t accurate over longer periods.
It can’t be on multicore processors.&lt;/p&gt;
&lt;p&gt;The small differences between what RDTSC provides as a best estimate and actual reality causes time drift in games like &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.
You may notice this issue surfaces its ugly head as inaccurate match times.
Intel 12th Gen, the most affected CPU architecture we measured (also all the way back in July), was as bad as a second off per minute.&lt;/p&gt;
&lt;p&gt;Morph’s &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9917&#34; data-gh-pr=&#34;9917&#34;&gt;solution&lt;/a&gt;
 to this issue is to spawn an extra thread whose task is to take two measurements of the TSC for 10 seconds, then take that difference and apply it to know how many actual ticks have passed in those first 10 seconds.
If you then divide the number of ticks by 10, you get the exact frequency the host RDTSC timer was running at.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./timerbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/timerbug_hu2ef0d7e45e56135ea721dad8f32724ad_1495707_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Good thing we don’t have to use old stopwatches for this (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./timerfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/timerfix_hu73bddc4153e34bd6d4a23fa1057653a0_975369_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Good thing we don’t have to use old stopwatches for this (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Good thing we don’t have to use old stopwatches for this (Super Smash Bros. Ultimate)&lt;/p&gt;


&lt;p&gt;The result is practically perfect timing on Ryzen and Intel 11th Gen and older systems, and &lt;em&gt;almost&lt;/em&gt; perfect timing on 12th Gen Alder Lake systems.
Having completely different cores counting time simultaneously inside the CPU is not pretty for this specific application.
We can’t defeat the hybrid asymmetric nature of Intel’s design, but we managed to reduce the drift from a second per minute, to a second every 5 minutes or so.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Okay, this is pretty good&amp;rdquo; said Morph, but how can you go even deeper?
The only option left is to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9982&#34; data-gh-pr=&#34;9982&#34;&gt;drop to assembly.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;The optimization in question is currently only available for 12th Gen and newer Intel CPUs; AMD has not added support for it yet.
We’re talking about &lt;a href=&#34;https://www.felixcloutier.com/x86/tpause&#34;&gt;TPAUSE&lt;/a&gt; (CPUID name &lt;code&gt;WAITPKG&lt;/code&gt;), a new instruction from Team Blue which allows the CPU to enter a lower power state and idle until a precise amount of time has passed.&lt;/p&gt;
&lt;p&gt;Some testing was required to specify the correct number of cycles for the wait period; a wrong value would reduce precision too much on one extreme, or not produce any benefit on the other.
100000 cycles was the magic number in Morph’s testing, which reduced CPU use/power consumption by up to 20%, on top of the previous benefits.&lt;/p&gt;
&lt;p&gt;If only Intel GPU drivers &lt;a href=&#34;https://github.com/IGCIT/Intel-GPU-Community-Issue-Tracker-IGCIT/issues/159&#34;&gt;worked&lt;/a&gt;, their Xe equipped laptops/handhelds would now be very viable yuzu gaming machines…
Oh well, 12th/13th Gen users running actual working GPU drivers from NVIDIA or AMD will benefit greatly from all this work.&lt;/p&gt;
&lt;h2 id=&#34;graphical-changes&#34;&gt;Graphical changes&lt;/h2&gt;
&lt;p&gt;Enough with the CPU improvements. What about graphics?
Well, we have quite a bit to talk about.&lt;/p&gt;
&lt;p&gt;Users reported interesting colour banding on &lt;code&gt;STORY OF SEASONS: A Wonderful Life&lt;/code&gt;. &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; dug deep into the issue, and identified the culprit in &lt;code&gt;S8_UINT&lt;/code&gt; colour formats, like &lt;code&gt;D32_FLOAT_S8_UINT&lt;/code&gt; and &lt;code&gt;S8_UINT_D24_UNORM&lt;/code&gt;.
With some trial and error, and some big help from the great &lt;a href=&#34;https://github.com/bylaws&#34;&gt;bylaws&lt;/a&gt; (from the &lt;a href=&#34;https://github.com/skyline-emu/skyline&#34;&gt;Skyline&lt;/a&gt; emulator), Maide managed to sort out the issues, providing &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9896&#34; data-gh-pr=&#34;9896&#34;&gt;accurate colour rendering&lt;/a&gt;
 without breaking other games.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/sosbug_hu5c8bcb7bb3b76444625e2a3906d5fc1e_1450072_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Now you can enjoy this farming simulator, with all its vibrant hues, without having to worry about colour banding. Isn’t that a-moo-sing? (STORY OF SEASONS: A Wonderful Life)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/sosfix_hu236986598565b2900263fa0d0f4f895d_1205655_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Now you can enjoy this farming simulator, with all its vibrant hues, without having to worry about colour banding. Isn’t that a-moo-sing? (STORY OF SEASONS: A Wonderful Life)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Now you can enjoy this farming simulator, with all its vibrant hues, without having to worry about colour banding. Isn’t that a-moo-sing? (STORY OF SEASONS: A Wonderful Life)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; strikes again with his ninja updates. This time he gives some love to the &lt;em&gt;still thriving&lt;/em&gt; OpenGL gang, bringing all the goodies of &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9913&#34; data-gh-pr=&#34;9913&#34;&gt;AccelerateDMA,&lt;/a&gt;
 which we discussed in the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/#project-yfc-175&#34;&gt;last report&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This means that OpenGL users, especially those with Fermi and Kepler GPUs, can enjoy the speed boost of this pseudo-Y.F.C. 2 change, making games such as &lt;code&gt;Metroid Prime Remastered&lt;/code&gt; run much faster.
No more waiting for Samus to load her arm cannon.&lt;/p&gt;
&lt;p&gt;We strongly advise users of older hardware without good Vulkan support to upgrade to something newer, as support for OpenGL is soon nearing its End of Life. That being said, thanks to epicboy, those who can’t upgrade won’t suffer from terrible performance using the old but gold OpenGL API.&lt;/p&gt;
&lt;p&gt;But that’s not all, epicboy also added an &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9925&#34; data-gh-pr=&#34;9925&#34;&gt;optimization&lt;/a&gt;
 for &lt;code&gt;GL_SYNC_STATUS&lt;/code&gt;, boosting performance slightly.
Your writer observes a 3-5% performance increase in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;, one of the few games that runs faster on OpenGL with NVIDIA hardware, if you ignore the shader stuttering.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./botw.png&#34; title=&#34; From 54 to 57 FPS in one of the heaviest spots in the game, OpenGL still has life in it! For now… (The Legend of Zelda: Breath of the Wild)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/botw_hue7f8ce9d3d2f3df2e8310b6792e8e6f5_2293449_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; From 54 to 57 FPS in one of the heaviest spots in the game, OpenGL still has life in it! For now… (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; From 54 to 57 FPS in one of the heaviest spots in the game, OpenGL still has life in it! For now… (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;bylaws came to the rescue again, pointing out that our old Vulkan scheduler implementation had some regressions &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/#graphics-and-general-bug-fixes&#34;&gt;back in October&lt;/a&gt; of last year, when &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; worked on making homebrew apps work with Vulkan.&lt;/p&gt;
&lt;p&gt;This meant that games and homebrew would have to wait for a frame to show up on screen before starting to render, which in some cases is a bad example of feedback looping at its worst.&lt;/p&gt;
&lt;p&gt;By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9931&#34; data-gh-pr=&#34;9931&#34;&gt;waiting in the background&lt;/a&gt;
 for the queue to be emptied without having to wait for the frame to be presented, byte[] fixed the regression.
Thanks bylaws!&lt;/p&gt;
&lt;p&gt;Remember that lovely game we talked about &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/#other-gpu-and-video-changes&#34;&gt;last month?&lt;/a&gt;
The one for all ages! Totally safe to play with your family.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; decided to make it playable, so &lt;del&gt;weebs&lt;/del&gt; players around the world could enjoy the amazing gameplay of &lt;code&gt;Moero Crystal H&lt;/code&gt;, by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9943&#34; data-gh-pr=&#34;9943&#34;&gt;fixing&lt;/a&gt;
 some errors in how yuzu processed the inline index and draw texture commands.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mch.png&#34; title=&#34; Cultured gaming (Moero Crystal H)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/mch_hu38a690a748d339661e36473fc6c160e0_3738961_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Cultured gaming (Moero Crystal H)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Cultured gaming (Moero Crystal H)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;A recent system update for the Steam Deck messed up the graphics in many games. The culprit? Some issue with &lt;code&gt;VK_EXT_extended_dynamic_state3&lt;/code&gt;, one of the Vulkan extensions that helps reduce shader building stutter.&lt;/p&gt;
&lt;p&gt;A combination of yuzu expecting NVIDIA driver behaviour, and a difference in the latest Mesa implementation on the Deck caused what you see next:&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./eds1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/eds1_huaa5b610d9122d93ef767bac5c7409295_2091343_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Looks like someone spilled some paint on the screen (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./eds2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/eds2_hu473653b412ccb6ad1b2dfb0baec0c52d_3481550_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Looks like someone spilled some paint on the screen (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./eds3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/eds3_hub070a68fafb83ba685c66755b0b3e00d_2919142_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Looks like someone spilled some paint on the screen (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Looks like someone spilled some paint on the screen (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;


&lt;p&gt;byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9955&#34; data-gh-pr=&#34;9955&#34;&gt;disabled&lt;/a&gt;
 the feature that caused the problem for now, but we’ll reconsider turning it on again in the future as it’s very likely Mesa &lt;a href=&#34;https://gitlab.freedesktop.org/mesa/mesa/-/issues/8325&#34;&gt;has already fixed the issues&lt;/a&gt; on their end.&lt;/p&gt;
&lt;p&gt;Here’s a couple of important fixes for the Xenoblade fans, which Maide spent a lot of time working on.&lt;/p&gt;
&lt;p&gt;Shaders were broken in-game due to issues with sRGB border colour conversions in the samplers.
This is a process that converts colours from one colour space to another.
This would cause inaccuracies that made some checks fail on affected shaders, resulting in discarding the wrong pixels as shadows.&lt;/p&gt;
&lt;p&gt;We need more information to fully understand the issue, but for now, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9962&#34; data-gh-pr=&#34;9962&#34;&gt;ignoring&lt;/a&gt;
 colourspace transformations on sRGB samplers allows for hardware-accurate rendering.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/xcbug_hu38d47cad4e7d5eef306f34cae56cb5b4_1633755_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Rex knew what the future held for him, wink wink (Xenoblade Chronicles 2)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/xcfix_hu59e8d7ef4855c73f1cd0f7fa32b6fe37_1652755_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Rex knew what the future held for him, wink wink (Xenoblade Chronicles 2)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Rex knew what the future held for him, wink wink (Xenoblade Chronicles 2)&lt;/p&gt;


&lt;p&gt;The other long-standing issue affecting the Xenoblade trilogy (well, Definitive Edition and 2 at least) has been plaguing yuzu since the legendary &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/&#34;&gt;Texture Cache Rewrite&lt;/a&gt;.
It was the random &amp;ldquo;rainbow mode&amp;rdquo; that could happen anytime during gameplay, or in a specific late-game cutscene in &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; that I won’t spoil for new players.
If you played it in yuzu, you know which one.
It makes you wonder if you’re in &lt;a href=&#34;https://tvtropes.org/pmwiki/pmwiki.php/VideoGame/Bioshock&#34;&gt;Rapture&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sea.png&#34; title=&#34; Somewhere, beyond the (cloud) sea! (Xenoblade Chronicles 2)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/sea_hu0c5198bc6f576610a91d09a5ece53316_8341004_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Somewhere, beyond the (cloud) sea! (Xenoblade Chronicles 2)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Somewhere, beyond the (cloud) sea! (Xenoblade Chronicles 2)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Another observed problem was excessive lighting making the whole scene unreadable (especially at night with an HDR display, not a pleasant sudden flashbang).&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./flashbang.png&#34; title=&#34; My eyes! (Xenoblade Chronicles 2)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/flashbang_huac2e0fba6b516d1fb16d91a384c6ff5c_473374_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; My eyes! (Xenoblade Chronicles 2)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; My eyes! (Xenoblade Chronicles 2)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Maide found that the issue was caused by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10004&#34; data-gh-pr=&#34;10004&#34;&gt;replacing&lt;/a&gt;
 fresh guest data with stale host data in the environment lighting cubemaps.
The solution is to only copy data that has been marked as GPU-modified, following the behaviour of the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-bcr/&#34;&gt;Buffer Cache Rewrite&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/xcdebug_hu47c3e4f16c6e363287c88e1e51fe6ae5_5207444_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This isn’t 2009, we don’t need this much bloom, thank you very much (Xenoblade Chronicles: Definitive Edition)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/xcdefix_hu399dd37a469819b45d1b5cdd535252f2_4922485_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This isn’t 2009, we don’t need this much bloom, thank you very much (Xenoblade Chronicles: Definitive Edition)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;This isn’t 2009, we don’t need this much bloom, thank you very much (Xenoblade Chronicles: Definitive Edition)&lt;/p&gt;


&lt;p&gt;With these changes, few graphical issues remain affecting the Xenoblade Chronicles saga, making it a great choice to enjoy on yuzu from start to finish.
Then you can join your writer in debating over which Queen is the best.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/xc2bug_hu0c5198bc6f576610a91d09a5ece53316_8341004_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Since this issue only happens the first time the cutscene renders, I’ll cheat using bug report pics, bite me (Xenoblade Chronicles 2)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/xc2fix_hu0b2a198fea75b086a405a4f3829e721d_8188046_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Since this issue only happens the first time the cutscene renders, I’ll cheat using bug report pics, bite me (Xenoblade Chronicles 2)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Since this issue only happens the first time the cutscene renders, I’ll cheat using bug report pics, bite me (Xenoblade Chronicles 2)&lt;/p&gt;


&lt;p&gt;Newcomer &lt;a href=&#34;https://github.com/rschlaikjer&#34;&gt;rschlaikjer&lt;/a&gt;, I hope I pronounced that right, has been digging deep into the texture cache, trying to figure out why a simple visual novel like &lt;code&gt;Tsukihime -A Piece of Blue Glass Moon-&lt;/code&gt; would stutter when changing scenes.
Maybe it’s because the game is too emotional for the emulator to handle.&lt;/p&gt;
&lt;p&gt;The culprit was a missing reference operator when capturing the GPU page table, which caused the table to be copied over and over again thousands of times per second. That would make anyone stutter, let alone an emulator. &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9988&#34; data-gh-pr=&#34;9988&#34;&gt;Converting&lt;/a&gt;
 the capture to a reference solved the issue, and it might also fix similar problems in other games.&lt;/p&gt;
&lt;p&gt;We’re glad rschlaikjer caught this bug before it got out of hand. We don’t want to end up like &lt;a href=&#34;https://youtu.be/NPVRBa-VSMg&#34;&gt;that chair&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;Some issues are so elusive that they go unnoticed for years. Some issues are so complex that they require a deep understanding of all the layers involved to find the right solution. They frustrate many developers who give up, hoping someone else will have better luck.&lt;/p&gt;
&lt;p&gt;And some issues are just plain silly. Like when a game crashes because the default user profile is damaged.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; found a simple fix for crashes in dozens of games:  &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9908&#34; data-gh-pr=&#34;9908&#34;&gt;setting the default profile picture&lt;/a&gt;
 to a real 32x32 resolution instead of 0x0.
That’s it.&lt;/p&gt;
&lt;p&gt;Continuing to work on UI improvements, german77 also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9941&#34; data-gh-pr=&#34;9941&#34;&gt;moved the last audio&lt;/a&gt;
 setting &lt;code&gt;Mute audio when in background&lt;/code&gt; to the Audio section, where it belongs. No more wandering around in General for this option.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/audiobug_hu790272569dba658cfda7ee7e661a93c9_35013_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Good, proper order&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/audiofix_hu661ab224fa27ebe25da380f4e5968a92_36082_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Good, proper order&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Good, proper order&lt;/p&gt;


&lt;p&gt;This next one is a great improvement for UX (user experience), and a huge relief for me personally.
Before, when using per-game controller profiles, if you forgot to change your input settings before starting a game, you would lose them when the game closes and have to set them up again next time.&lt;/p&gt;
&lt;p&gt;epicboy &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9965&#34; data-gh-pr=&#34;9965&#34;&gt;fixed this annoying issue&lt;/a&gt;
 and german77 merged the changes.
Thank you so much for this fix.&lt;/p&gt;
&lt;p&gt;german77 is also working on making the profile selection applet better.
The &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10006&#34; data-gh-pr=&#34;10006&#34;&gt;current changes&lt;/a&gt;
 are just the beginning, we will keep you updated on any progress in the future.&lt;/p&gt;
&lt;h2 id=&#34;input-improvements&#34;&gt;Input improvements&lt;/h2&gt;
&lt;p&gt;Let’s talk about input, where german77 continues to shine.&lt;/p&gt;
&lt;p&gt;Not satisfied with the mouse and keyboard experience when &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9906&#34; data-gh-pr=&#34;9906&#34;&gt;playing&lt;/a&gt;
 &lt;code&gt;Metroid Prime Remastered&lt;/code&gt;, german77 set the default mouse sensitivity to 50% and removed the smoothing filter, improving the performance on high DPI gaming mice after getting valuable feedback from Metroid fans.
He also lowered the motion threshold, clamped the rotation speed, and accumulated all input until delivery, which fixed the delay and choppiness of the previous implementation.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./prime.png&#34; title=&#34; Have you noticed how Samus lacks a lead indicator? Her suit couldn’t spare a tiny bit more processing power for that? (Metroid Prime Remastered)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/prime_huf3f2f9748c1285d4adfe70ff1233237f_7595158_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Have you noticed how Samus lacks a lead indicator? Her suit couldn’t spare a tiny bit more processing power for that? (Metroid Prime Remastered)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Have you noticed how Samus lacks a lead indicator? Her suit couldn’t spare a tiny bit more processing power for that? (Metroid Prime Remastered)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Thanks to those changes, &lt;code&gt;Metroid Prime Remastered&lt;/code&gt; showed that it could be a great PC game. If only Nintendo would let it out of its dungeon.&lt;/p&gt;
&lt;p&gt;A common question we get is &amp;ldquo;will this third party Switch controller work?&amp;rdquo;
The short answer is maybe, but the long answer is a bit more complicated.&lt;/p&gt;
&lt;p&gt;According to Nintendo’s API, Joy-Cons have two modes: active and passive.
Official Joy-Cons use active mode, but some third party controllers use passive mode, usually because they don’t follow the API properly and don’t support any configuration commands.
They just run with the default settings, for better or worse.&lt;/p&gt;
&lt;p&gt;That doesn’t mean passive controllers are useless. They still work on the Switch. But it does mean that they work differently. Active controllers update their status every 15 ms, while passive controllers only do it when something happens, such as a button press or release.&lt;/p&gt;
&lt;p&gt;Well, it turns out yuzu didn’t support passive mode until now! So german77’s &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9907&#34; data-gh-pr=&#34;9907&#34;&gt;changes&lt;/a&gt;
 made a lot of third party controller users happy.
That’s quite handy, considering how many unofficial controllers are out there.&lt;/p&gt;
&lt;p&gt;The battle with vibration goes on!
While doing his usual research, german77 found out that if you have more than one player using the same type of controller, or if you use a dual Joy-Con setup with a single controller, you can end up sending two vibration commands to the same controller in a row.
This can be annoying, and it also takes up the limited bandwidth of Bluetooth connections.&lt;/p&gt;
&lt;p&gt;The &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9939&#34; data-gh-pr=&#34;9939&#34;&gt;solution is simple:&lt;/a&gt;
 only take the latest element in the &lt;a href=&#34;https://www.youtube.com/watch?v=gzY8VH7eb8Y&#34;&gt;cool vibrations&lt;/a&gt; queue for each controller, check if the controller can handle the requested vibration, and ignore the rest.&lt;/p&gt;
&lt;p&gt;We all love Quality of Life changes, right? Even if they are not very flashy.&lt;/p&gt;
&lt;p&gt;Let’s talk about the &lt;code&gt;Controller Applet&lt;/code&gt;, which is responsible for asking players to choose their input settings when the game requests it.
Until now, the applet was unskippable; you had to give a valid answer to continue with your game.
While this was passable, it’s bothersome and inaccurate.
Some games go back to a previous menu instead of getting stuck in an endless loop if the players can’t or won’t confirm their input style.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./applet.png&#34; title=&#34; You shall pass!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/applet_hu4d00f2f4e4589aa2bd3acdfc36ca125a_32651_811x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; You shall pass!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; You shall pass!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;german77 solved this &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9997&#34; data-gh-pr=&#34;9997&#34;&gt;behaviour,&lt;/a&gt;
 and while at it also solved a bug where the player count wasn’t correct.&lt;/p&gt;
&lt;p&gt;german77 implemented the… hold on, let me catch my breath first, &lt;code&gt;SetNpadJoyAssignmentModeSingleWithDestination&lt;/code&gt; service call.
He &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9999&#34; data-gh-pr=&#34;9999&#34;&gt;implemented&lt;/a&gt;
 it hoping to make &lt;code&gt;Let’s Get Fit&lt;/code&gt; playable, but unfortunately there are more issues in the way.&lt;/p&gt;
&lt;p&gt;Changing topics to Amiibo support, a lot has happened this month.&lt;/p&gt;
&lt;p&gt;First of all, german77 managed to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9953&#34; data-gh-pr=&#34;9953&#34;&gt;write&lt;/a&gt;
 the correct &lt;a href=&#34;https://en.wikipedia.org/wiki/Cyclic_redundancy_check&#34;&gt;CRC&lt;/a&gt;, making Amiibo data written by yuzu compatible with the Switch; no more invalid info.&lt;/p&gt;
&lt;p&gt;Next, if you tried to connect a controller while scanning an Amiibo, it would not be recognized. By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9981&#34; data-gh-pr=&#34;9981&#34;&gt;accounting&lt;/a&gt;
 for this and initializing or finalizing the controller, he fixed the issue.&lt;/p&gt;
&lt;p&gt;And last but not least, to wrap up the Amiibo saga, Herman the German Sherman &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9995&#34; data-gh-pr=&#34;9995&#34;&gt;added support&lt;/a&gt;
 for plain Amiibo files.
Some Amiibos, like the ones themed after &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;, can be edited without the need of keys. Now yuzu can read non-encrypted game data from your Amiibos correctly!&lt;/p&gt;
&lt;h2 id=&#34;audio-fixes&#34;&gt;Audio fixes&lt;/h2&gt;
&lt;p&gt;Maide managed to spot a bug in how the reverb pre-delay line was being read, causing problems in the output.
Solving it by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9890&#34; data-gh-pr=&#34;9890&#34;&gt;correctly reading&lt;/a&gt;
 via input instead of output gives games like &lt;code&gt;New Super Mario Bros. U Deluxe&lt;/code&gt; proper audio.
Now you can enjoy Mario’s voice without any echo. Mama mia!&lt;/p&gt;
&lt;p&gt;bylaws has been digging deep into &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9969&#34; data-gh-pr=&#34;9969&#34;&gt;audio synchronization,&lt;/a&gt;
 improving the codebase here and there, and managing to avoid stalls by linking the guest sample tracking to the host.&lt;/p&gt;
&lt;p&gt;This change caused some regressions, as some games are &lt;em&gt;very sensitive&lt;/em&gt; to audio scheduling requirements.
Users reported popping sounds after the merge, so bylaws improved the situation by adding a constant 15 ms of &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10027&#34; data-gh-pr=&#34;10027&#34;&gt;latency&lt;/a&gt;
 to the sample count reporting.&lt;/p&gt;
&lt;h2 id=&#34;other-code-changes&#34;&gt;Other code changes&lt;/h2&gt;
&lt;p&gt;Fire Emblem fans have been experiencing freezes in-game, and after some investigation, Morph found out that the culprit was the bounded threadsafe queue, introduced with a pull request from &lt;a href=&#34;https://github.com/behunin&#34;&gt;behunin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The queue’s job is to pass events from an event producer (like the CPU cores) to an event consumer (like the GPU thread).
The previous implementation, which behunin replaced, kept allocating and freeing memory, causing periodic latency spikes.&lt;/p&gt;
&lt;p&gt;The way to solve this issue is to turn the queue into a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9778&#34; data-gh-pr=&#34;9778&#34;&gt;bounded queue,&lt;/a&gt;
 meaning no memory allocation is needed as there is a fixed amount of resources available.
And that’s what behunin did, but the new queue implementation seemed to be buggy.
Morph added a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9971&#34; data-gh-pr=&#34;9971&#34;&gt;simplified implementation,&lt;/a&gt;
 fixing the new gameplay freezes affecting &lt;code&gt;Fire Emblem: Three Houses&lt;/code&gt; and &lt;code&gt;Fire Emblem Engage&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/goldenx86&#34;&gt;Your writer&lt;/a&gt; re-enabled LTO for GCC builds, following the changes made for Windows last time, but only applying the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/10014&#34; data-gh-pr=&#34;10014&#34;&gt;optimizations to the core and video_core subprojects,&lt;/a&gt;
 providing Linux users a nice, free performance boost.&lt;/p&gt;
&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;h3 id=&#34;amd-2332-and-newer-drivers&#34;&gt;AMD 23.3.2 and newer drivers&lt;/h3&gt;
&lt;p&gt;One bad and two good pieces of news.&lt;/p&gt;
&lt;p&gt;On the positive side, AMD has finally added support for the missing dynamic state extensions in their latest Windows driver release, which improves the shader build times and reduces the stuttering on Radeon GPUs, making them perform on par with NVIDIA.&lt;/p&gt;
&lt;p&gt;However, on the negative side, this driver update also introduces a serious regression:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./amd.png&#34; title=&#34; This can affect your entire desktop (Metroid Prime Remastered)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2023/amd_huf6c4d40ff2cbc00069403b8d4c8f6aae_7081827_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; This can affect your entire desktop (Metroid Prime Remastered)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; This can affect your entire desktop (Metroid Prime Remastered)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Some games, such as &lt;code&gt;Metroid Prime Remastered&lt;/code&gt; and &lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt;, trigger what seems to be an out-of-bounds crash that causes desktop corruption and a driver crash.
We advise users to stay on driver version 23.3.1 or older for now. Some older Radeon cards may also benefit from using 23.2.2.&lt;/p&gt;
&lt;p&gt;We reported this issue to AMD and they promptly confirmed it, reproduced it, and informed us that they are working on a fix.&lt;/p&gt;
&lt;p&gt;Now &lt;em&gt;that’s&lt;/em&gt; how you do customer support.&lt;/p&gt;
&lt;p&gt;Speaking of which…&lt;/p&gt;
&lt;h3 id=&#34;doing-intels-job&#34;&gt;Doing Intel’s job&lt;/h3&gt;
&lt;p&gt;While testing a crucial rendering fix for &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; that we will discuss next month, Morph did some feature testing to investigate what makes Intel Windows drivers run so horribly.&lt;/p&gt;
&lt;p&gt;His findings are both expected and disappointing.
The main culprit for about 95% of the crashes is a faulty compute shader stage in the drivers.
Disabling compute shaders like we used to do for older Intel hardware makes most games run, but not all.
We still don’t know the cause of the crashes when opening the menu in &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We’re now trying to figure out what triggers the compute shaders to crash the driver like this, but this also raises a dilemma.
Should we patch the issue ourselves, making game rendering worse and letting Intel off the hook, or should we leave it broken so they have to fix it properly?&lt;/p&gt;
&lt;p&gt;The solution while the investigation continues is to use ol’ reliable Linux, or avoid buying hardware that relies only on Intel GPUs. Sigh.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;We’re not even halfway through April and I’m already thrilled about what’s coming up in the next progress report.
The devs are on fire and they’re not stopping anytime soon.&lt;/p&gt;
&lt;p&gt;Maide is working on more improvements for the Xenoblade series, such as fixing the cloud flickering in &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt;, the particle effects in &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;, and the texture flickering that affects the whole saga and some other games.
However, these fixes come at a performance cost, so he needs some help from another GPU developer to optimize them.
Maybe &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; could lend a hand?&lt;/p&gt;
&lt;p&gt;Nintendo contributed in releasing the holy grail of Vulkan extensions, &lt;a href=&#34;https://registry.khronos.org/vulkan/specs/1.3-extensions/man/html/VK_EXT_shader_object.html&#34;&gt;VK_EXT_shader_object&lt;/a&gt;.
This extension promises to cut down the amount of work needed to build shaders significantly, as its dependencies suggest, requiring support for all previous dynamic state extensions.&lt;/p&gt;
&lt;p&gt;Most likely Nintendo intends to use it for their internal emulators, maybe for &amp;ldquo;backwards compatibility.&amp;rdquo;
Regardless of any of that, we have a lot of work ahead of us to add support for this extension.&lt;/p&gt;
&lt;p&gt;But enough about that. Let’s talk about some exciting projects in the works.

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gaia.jpg&#34; title=&#34; Flute intensifies&#34;&gt;&lt;img src=&#34;./gaia.jpg&#34; alt=&#34; Flute intensifies&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Flute intensifies&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;Regarding Project Gaia:
it is still in development.&lt;/p&gt;
&lt;p&gt;Oh, and Project Lime is in release candidate status, under intense internal testing.&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you for sticking around until the end of this progress report.&lt;/p&gt;
&lt;p&gt;Thanks to Bing Chat for the terrible jokes.&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report February 2023</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/</link>
      <pubDate>Sun, 12 Mar 2023 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/</guid>
      <description>&lt;p&gt;Hello yuz-ers! This month has seen changes across all aspects of yuzu. We have improvements in the GPU, Kernel, Services, Input, User Interface and Experience, Driver related rants, and more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello yuz-ers! This month has seen changes across all aspects of yuzu. We have improvements in the GPU, Kernel, Services, Input, User Interface and Experience, Driver related rants, and more!&lt;/p&gt;
&lt;h2 id=&#34;project-yfc-175&#34;&gt;Project Y.F.C. 1.75?&lt;/h2&gt;
&lt;p&gt;Another month, another Project Y.F.C. addendum. Introducing one of the features that was missing from the previous 1.5 release.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; implemented host texture download acceleration for the Switch’s DMA engine (or Accelerate DMA for short).&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9786&#34; data-gh-pr=&#34;9786&#34;&gt;DMA acceleration&lt;/a&gt;
 reduces a ton of overhead by letting the GPU handle texture downloads, improving performance considerably with games that aren’t CPU bottlenecked.&lt;/p&gt;
&lt;p&gt;yuzu, in the past, ran everything via the host&amp;rsquo;s CPU and system memory, with the process of &lt;a href=&#34;https://en.wikipedia.org/wiki/Z-order_curve#Texture_mapping&#34;&gt;swizzling/unswizzling&lt;/a&gt; textures being a primary task.
Now this process is done on the GPU and its VRAM, saving CPU cycles and avoiding having to transfer information back to system memory, and giving us access to the vastly superior bandwidth available in a modern GPU&amp;rsquo;s video memory.&lt;/p&gt;
&lt;p&gt;When you find a game that benefits from faster texture downloads, the numbers speak for themselves:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dma.png&#34; title=&#34; Bottleneck busters!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/dma_hu6567dee3919ef709d7b1c5f65e7c3b0a_12746_721x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Bottleneck busters!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Bottleneck busters!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;other-gpu-and-video-changes&#34;&gt;Other GPU (and video) changes&lt;/h2&gt;
&lt;p&gt;Before going over the &lt;em&gt;rendering&lt;/em&gt; changes in GPU emulation, let’s cover something we haven’t touched in a while: video decoding.&lt;/p&gt;
&lt;p&gt;Firstly, &lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; improved the speed at which &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9777&#34; data-gh-pr=&#34;9777&#34;&gt;video frame data&lt;/a&gt;
 is copied.
That is, as long as the compiler notices the optimization and makes use of it.
When it works, this has the added benefit of reducing the time it takes to start playing videos.&lt;/p&gt;
&lt;p&gt;Next, &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; disabled multi-frame decoding, which caused a frame of delay, giving Maide the option to also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9810&#34; data-gh-pr=&#34;9810&#34;&gt;set the decoder to use all available CPU threads.&lt;/a&gt;

While most people don’t have issues with video decoding performance, people running old GPUs, for example AMD Polaris series (RX 400/500 cards), will use their CPU for decoding VP9 videos, as these older cards lack the required hardware decoder.&lt;/p&gt;
&lt;p&gt;Games such as &lt;code&gt;The Legend of Zelda: Skyward Sword HD&lt;/code&gt; will provide much smoother video playback with these changes.&lt;/p&gt;
&lt;p&gt;Okay, enough about pre-rendered 2D frames in sequence, what about real 3D stuff?
Happily, we have a bit to talk about.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/behunin&#34;&gt;behunin&lt;/a&gt; is back, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9744&#34; data-gh-pr=&#34;9744&#34;&gt;optimizing the&lt;/a&gt;
 &lt;code&gt;gpu_thread&lt;/code&gt; code.
The &lt;code&gt;gpu_thread&lt;/code&gt; has one job and only one job, to consume its command queue.
The problem is that it was also generating commands as well as consuming them.
By getting rid of this undesired behaviour, the &lt;code&gt;gpu_thread&lt;/code&gt; is back to only consuming commands, leaving the road open for more future fixes.&lt;/p&gt;
&lt;p&gt;Even from the shadows, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; still gifts us a handful of new toys. A true Eminence in Shadow.&lt;/p&gt;
&lt;p&gt;Avid readers may remember that &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/&#34;&gt;MSAA image uploads&lt;/a&gt; hold a weird spot in Switch emulation.
There’s a conflict between what the Switch can do with its native NVN API, and what our available graphics APIs (OpenGL and Vulkan) allow.&lt;/p&gt;
&lt;p&gt;Both OpenGL and Vulkan are very restrictive regarding &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9746&#34; data-gh-pr=&#34;9746&#34;&gt;MSAA texture&lt;/a&gt;
 uploads and copies, leaving epicboy with the only remaining tool available. Yep, you’re right! Time to use a compute shader!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./msaabug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./msaafix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Breaking the rules to get proper rendering (Sonic Forces)&lt;/p&gt;


&lt;p&gt;This way, rendering is accurate.
Do keep in mind that this is an implementation only for OpenGL.
Vulkan, as always, is much more work so it’s homework for later.&lt;/p&gt;
&lt;p&gt;While working on &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9749&#34; data-gh-pr=&#34;9749&#34;&gt;fixing regressions&lt;/a&gt;
 in Blinkhawk’s &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/9559&#34;&gt;cached writes pull request&lt;/a&gt; affecting &lt;code&gt;Yoshi&#39;s Crafted World&lt;/code&gt; (the game would freeze when using Normal GPU accuracy), epicboy also fixed &lt;code&gt;Pokémon Scarlet/Violet&lt;/code&gt;’s missing building geometry issues.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/pokebug_hu73c38e4f9ea4f02dcb1f9e54aef1e60b_6210593_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more ghost town (Pokémon Scarlet)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/pokefix_hu75cd442802fb4ed58ed45b66f9d0566a_6167589_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more ghost town (Pokémon Scarlet)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;No more ghost town (Pokémon Scarlet)&lt;/p&gt;


&lt;p&gt;Ahh, &lt;a href=&#34;https://en.wikipedia.org/wiki/Adaptive_scalable_texture_compression&#34;&gt;ASTC&lt;/a&gt;, most of you know the struggle by now.
Mobile devices like phones, tablets, Macs, the Nintendo Switch, among others, have native support for this very compressed texture format, but laptop/desktop/server GPUs don’t.
This leaves the Switch emulation community struggling with ways to mitigate the slow process of decoding these textures on hardware that is not designed for such a task.&lt;/p&gt;
&lt;p&gt;Yes, even the weak and outdated Switch beats an RTX 4090 in this task.
Bet your wallet isn’t happy about that fact.&lt;/p&gt;
&lt;p&gt;yuzu’s weapons in this fight so far were multithreaded CPU decoding, and GPU decoding via compute shaders, which takes advantage of the huge parallelization power of modern GPUs.
Both solutions have stuttering always present while the decoding takes place, especially in new games that overly use large ASTC textures, like &lt;code&gt;Bayonetta 3&lt;/code&gt; and &lt;code&gt;Metroid Prime Remastered&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Well, epicboy adds a new weapon to our arsenal, and oh boy it can help. At a price.
Introducing &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9849&#34; data-gh-pr=&#34;9849&#34;&gt;Asynchronous ASTC texture decoding!&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;For those that prefer zero ASTC related stuttering during their gameplay, this new toggle uses a background thread to decode ASTC textures while the game is being rendered.
Such an approach will eliminate stuttering, but has the cost of introducing graphical glitches until the textures finish loading in.&lt;/p&gt;
&lt;p&gt;Here’s a comparison of asynchronous decoding with a 16 threads Ryzen 7 5800X3D (so not even the king of the hill in thread count, what matters the most for CPU decoding), vs an RTX 4090, the biggest commercially available compute monster for consumers right now.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./compute.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./async.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;GPU compute shader decoding on the left, asynchronous CPU decoding on the right (ASTRAL CHAIN)&lt;/p&gt;


&lt;p&gt;As you can see, while the process taking place is pretty obvious to the eye with asynchronous decoding, it’s significantly faster than the best GPU available right now.
Even a 12-thread CPU would still win a drag race in the most intensive ASTC game ever, &lt;code&gt;ASTRAL CHAIN&lt;/code&gt;.
Users with lower thread count CPUs (like quad cores with 8 threads or lower) may need to time their results.&lt;/p&gt;
&lt;p&gt;You can find the option in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced &amp;gt; Decode ASTC textures asynchronously (Hack)&lt;/code&gt;.
Enabling it will also override the setting &lt;code&gt;Accelerate ASTC texture decoding&lt;/code&gt; in the &lt;code&gt;Graphics&lt;/code&gt; tab. This setting makes yuzu use the GPU, but enabling &lt;code&gt;Decode ASTC textures asynchronously (Hack)&lt;/code&gt; will force yuzu to always use CPU decoding. So remember to disable asynchronous ASTC decode if you want to use GPU compute decoding instead.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./astc.png&#34; title=&#34; We recommend low CPU thread users to stick to GPU decoding&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/astc_hu0e193bbda92f82ec734bfd3be037a732_23725_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; We recommend low CPU thread users to stick to GPU decoding&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; We recommend low CPU thread users to stick to GPU decoding&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;According to epicboy, while an asynchronous GPU compute method is possible, the rules and limitations of compute shaders hinder its potential, most likely making it barely any better than regular GPU decoding with the compute units.&lt;/p&gt;
&lt;p&gt;Life would be so much easier if GPU vendors properly added native ASTC support to their GPUs… Your reporter would gladly take it over useless stuff like RGB, ugly plastic shrouds, or driver DVDs.&lt;/p&gt;
&lt;p&gt;NVIDIA, AMD, please consider adding native ASTC support.
It’s certainly more useful than generating fake frames with disgusting artifacting.
Intel, you had great ASTC support in your iGPUs.
Consider adding it back to future versions of Arc graphics.&lt;/p&gt;
&lt;p&gt;Maide has been working on trying to solve the overlapping textures glitches that can be spotted in games like &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; and &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;.
While it isn’t a perfect solution, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9802&#34; data-gh-pr=&#34;9802&#34;&gt;re-adding&lt;/a&gt;
 the (accidentally) removed &lt;code&gt;invalidate_texture_data_cache&lt;/code&gt; register helps mitigate the issue at almost any camera angle except the most oblique ones.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/botw1_hud929a3af30b958f83e93295e9ab66efe_160091_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;We present you: New crack sealer! Move the camera and the cracks are gone! (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/botw2_hud5be77e327251dcb6e2045322648d1aa_148119_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;We present you: New crack sealer! Move the camera and the cracks are gone! (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;We present you: New crack sealer! Move the camera and the cracks are gone! (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;


&lt;p&gt;Depending on the shape of the terrain, or the camera angle, the issue can surface again.
But as a temporary solution, this change makes playing affected games much more tolerable.
Work continues!&lt;/p&gt;
&lt;h2 id=&#34;cpu-kernel-services-and-optimizations&#34;&gt;CPU, kernel, services, and optimizations&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/merryhime&#34;&gt;Merry&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9735&#34; data-gh-pr=&#34;9735&#34;&gt;updated dynarmic&lt;/a&gt;
, our JIT, to version 6.4.5, solving some issues and improving compilation times.
One game that benefited from this is &lt;code&gt;Taiko Risshiden V DX&lt;/code&gt;, which got its load times reduced considerably.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./taiko1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/taiko1_hu04ceb0629c93b719c92fc827aaee2abd_8502303_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Take your time (Taiko Risshiden V DX)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./taiko2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/taiko2_hu8378888cca9f2bc69bb9acccb870b3bc_11192093_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Take your time (Taiko Risshiden V DX)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Take your time (Taiko Risshiden V DX)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; has also been going deep into the kernel code. One of his changes improves the &lt;code&gt;SVC wrappers&lt;/code&gt;.
But what are the wrappers? Well, games and homebrew need to talk to the kernel, and to do so they use SVC instructions, which act as an interface with the kernel.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./wrapper.png&#34; title=&#34; The return of mspaint&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/wrapper_hud540926667c06dd6505d83e6e7ac2624_8185_932x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The return of mspaint&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The return of mspaint&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The work of the wrapper is to translate a request from the game into a C++ call into the kernel, and then get the result from the kernel back into the game.
In the past, yuzu used manually written wrappers that were very error-prone. With this change, byte[] instead &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9742&#34; data-gh-pr=&#34;9742&#34;&gt;automatically generates&lt;/a&gt;
 the needed wrappers.
This code is far more accurate, so if you find games that no longer crash or soft-lock, here’s the new code responsible for it.
One such example is &lt;code&gt;Moero Crystal H&lt;/code&gt; which starts booting for the first time.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mch.png&#34; title=&#34; Don’t judge, it’s part of the Switch’s library (Moero Crystal H)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/mch_hua44d7150bdead4d8764c4eae00e427fe_3691736_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Don’t judge, it’s part of the Switch’s library (Moero Crystal H)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Don’t judge, it’s part of the Switch’s library (Moero Crystal H)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This game requires more work to get proper video and gameplay rendering.&lt;/p&gt;
&lt;p&gt;Keeping the pursuit for accuracy, byte[] also implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9832&#34; data-gh-pr=&#34;9832&#34;&gt;HLE multiprocess&lt;/a&gt;
 for services.
Now instead of pushing the game’s requests to the services, the services wait for the requests to arrive.
All this processing is done, for the most part, in what would be the emulated &lt;code&gt;core 3&lt;/code&gt; of the Switch, instead of all over the place with one thread per service.
Games usually only have access to cores 0 to 2, so we&amp;rsquo;re now dedicating the last core for system service processing, just as the actual Switch operating system does!&lt;/p&gt;
&lt;p&gt;This part of CPU emulation is one of the main reasons we recommend at least 6 cores in our &lt;a href=&#34;https://yuzu-mirror.github.io/help/quickstart/#hardware-requirements&#34;&gt;hardware requirements&lt;/a&gt;, 4 for uninterrupted emulation of the Switch’s CPU, and extras for other processes and tasks. Just a 4 core CPU will be usually overburdened. HT/SMT may help, but that will always depend on the workload at any given moment.
A SMT/HT thread can’t improve performance in a significant way if the core is already saturated.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; chimed in too, fixing a mistake in &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9773&#34; data-gh-pr=&#34;9773&#34;&gt;memory mapping.&lt;/a&gt;

We erroneously used the (bear with me, it’s not a redundancy) system’s system resource tracking, instead of relying on the application’s resource tracking when loading programs into memory.
Most games were tolerant to this, but &lt;code&gt;FINAL FANTASY CRYSTAL CHRONICLES Remastered Edition&lt;/code&gt; didn’t like it, getting stuck every time the user tried to load a save.
A tweak here and there and the regression is now gone!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ffcc.png&#34; title=&#34; Feel free to progress the game now (FINAL FANTASY CRYSTAL CHRONICLES Remastered Edition)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/ffcc_huf5d9c8baaa09e77411a4bb286bf8eeab_10743227_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Feel free to progress the game now (FINAL FANTASY CRYSTAL CHRONICLES Remastered Edition)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Feel free to progress the game now (FINAL FANTASY CRYSTAL CHRONICLES Remastered Edition)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;New Pokémon game update, new things to fix.
Once again, &lt;code&gt;Pokémon Scarlet/Violet&lt;/code&gt; is giving us a headache.&lt;/p&gt;
&lt;p&gt;This time, the recently released update 1.2.0 wouldn’t boot on yuzu. After investigating for a bit, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; found out that the cause was that some &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9874&#34; data-gh-pr=&#34;9874&#34;&gt;Bluetooth functions&lt;/a&gt;
 weren’t properly implemented, causing the game to crash when attempting to start with the latest update installed.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ps.png&#34; title=&#34; Mandatory protagonist seat (Pokémon Scarlet)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/ps_hu81fdd4de17bb956b966609ec1ea8910d_2173145_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Mandatory protagonist seat (Pokémon Scarlet)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Mandatory protagonist seat (Pokémon Scarlet)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Some code changes later, and german77 fixed the issue! Now anyone can enjoy the reduced NPC count and lower draw distance.&lt;/p&gt;
&lt;p&gt;Even &lt;a href=&#34;https://github.com/goldenx86&#34;&gt;your writer&lt;/a&gt; tried to give a hand (emphasis on tried).
&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/#cpu-requirement-changes-with-free-performance&#34;&gt;As reported in the past&lt;/a&gt;, we applied &lt;code&gt;Link-time Optimization&lt;/code&gt; to all of yuzu’s subprojects. This meant that every section like audio, input, UI, etc. used LTO at build time, trying to squeeze out every possible bit of performance.
This caused an unexpected problem: RAM consumption while building increased enough to cause our buildbot to cry for help, causing builds on our Azure DevOps CI to randomly run out of memory.&lt;/p&gt;
&lt;p&gt;byte[] suggested that I instead profile which subprojects would provide the most performance boosts, and to only apply LTO to those.
A few rounds of toasting a CPU by building yuzu later, and it was determined that the two most obvious candidates, core and video_core, were the responsible ones for the performance boost provided by enabling LTO.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9872&#34; data-gh-pr=&#34;9872&#34;&gt;Partially applying LTO&lt;/a&gt;
 to only the core and video_core projects not only reduced compiler RAM use, but also provided a very minor but still consistently measured performance increase. For example, &lt;code&gt;The Legend of Zelda: Link’s Awakening&lt;/code&gt; increased from 257 FPS to 260 FPS.
Nothing groundbreaking, but it’s a free bonus from a change that was only intended to reduce RAM use!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; later added a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9887&#34; data-gh-pr=&#34;9887&#34;&gt;small but very critical fix&lt;/a&gt;
 to get all this actually working.
I’m a disaster, sorry.&lt;/p&gt;
&lt;h2 id=&#34;input-improvements&#34;&gt;Input improvements&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Metroid Prime Remastered&lt;/code&gt; introduced a serious dilemma: People want to play the game as an FPS with mouse and keyboard.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mpr.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/mpr_hu9f44dbe3c49289861f74038ea0c2431d_13024158_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This game is gorgeous, like Samus (Metroid Prime Remastered)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mpr2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/mpr2_hu090a9c65652d8ced4d1b2de7386a9ed6_5669207_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This game is gorgeous, like Samus (Metroid Prime Remastered)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;This game is gorgeous, like Samus (Metroid Prime Remastered)&lt;/p&gt;


&lt;p&gt;The problem is that the game uses motion on top of stick input to aim, making it an interesting case for how to handle non-controller input.&lt;/p&gt;
&lt;p&gt;This was incentive enough to get german77 interested in giving it a try:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First off, he fixed an issue where &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9757&#34; data-gh-pr=&#34;9757&#34;&gt;motion would be constantly getting recalibrated.&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Next, german77 tweaked the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9815&#34; data-gh-pr=&#34;9815&#34;&gt;mouse scaling&lt;/a&gt;
 for users running a DPI scaling higher than 100% (1.0x).&lt;/li&gt;
&lt;li&gt;Following up, the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9842&#34; data-gh-pr=&#34;9842&#34;&gt;mapping for mouse input&lt;/a&gt;
 was improved. By default a mouse to stick is considered a joystick, which includes assuming deadzone and ranges that aren’t zero by default. This pull request includes some other miscellaneous changes, like fixing some UI elements not working.&lt;/li&gt;
&lt;li&gt;And finally, to address &lt;code&gt;Metroid Prime Remastered&lt;/code&gt;’s &amp;ldquo;Dual Stick mode&amp;rdquo;, support for &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9848&#34; data-gh-pr=&#34;9848&#34;&gt;dedicated motion using the mouse&lt;/a&gt;
 was added. Since the game only uses two axes, this can be directly mapped 1:1 to mouse movement, making aiming a breeze!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To use this feature, go to &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Controls&lt;/code&gt;, click on &lt;code&gt;Motion 1&lt;/code&gt;, then click again to set the mouse to motion. Then in the Advanced tab, enable mouse panning. After that map the keys manually as if to configure an FPS.&lt;/p&gt;
&lt;p&gt;GitHub user &lt;a href=&#34;https://github.com/SixelAlexiS90&#34;&gt;SixelAlexiS90&lt;/a&gt; provides an input profile. To use it, on yuzu go to &lt;code&gt;File &amp;gt; Open yuzu folder&lt;/code&gt; and place &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/files/10958194/MetroidPrimeRemasteredM%2BK.txt&#34;&gt;this input profile&lt;/a&gt; inside the &lt;code&gt;config\input&lt;/code&gt; folder (make a new &amp;ldquo;input&amp;rdquo; folder if there isn&amp;rsquo;t one). All that&amp;rsquo;s left to do after that is to select the profile in yuzu&amp;rsquo;s control settings.&lt;/p&gt;
&lt;p&gt;The user can adjust the sensitivity of mouse motion with the same setting used for mouse panning in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Controls &amp;gt; Advanced&lt;/code&gt;&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mouse.png&#34; title=&#34; Remember to set sensitivity to your liking&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/mouse_hu4e9131a7dd19f835d43b029bbbe5cd1d_51055_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Remember to set sensitivity to your liking&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Remember to set sensitivity to your liking&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;But did german77 focus on nothing but &lt;code&gt;Metroid Prime Remastered&lt;/code&gt;? No.
Continuing the work started in &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/#new-joy-con-driver-and-other-input-improvements&#34;&gt;December of 2022&lt;/a&gt;, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9759&#34; data-gh-pr=&#34;9759&#34;&gt;support for Pro Controllers&lt;/a&gt;
 within the new custom “Joy-Con” driver.
Since the option is experimental, it only works properly on official Switch Pro Controllers and not with third party controllers, so it’s disabled by default.
Owners of &lt;em&gt;real&lt;/em&gt; Pro Controllers are encouraged to enable this option, as it will provide much improved motion and HD Rumble support.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./procon.png&#34; title=&#34; Not the same screenshot as the previous one, I swear&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/procon_hudacbf108db642f84b89d9163ab6c8faa_51108_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Not the same screenshot as the previous one, I swear&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Not the same screenshot as the previous one, I swear&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Previous limitations, like being unable to use a Pro Controller for Amiibo detection, still exist as there’s still work to be done.&lt;/p&gt;
&lt;h2 id=&#34;audio-improvements&#34;&gt;Audio improvements&lt;/h2&gt;
&lt;p&gt;There are some interesting changes in audio emulation that many users will be happy about, let’s go one by one.&lt;/p&gt;
&lt;p&gt;A crash was fixed by german77 when &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9758&#34; data-gh-pr=&#34;9758&#34;&gt;initializing&lt;/a&gt;
 &lt;a href=&#34;https://github.com/mozilla/cubeb&#34;&gt;cubeb&lt;/a&gt;, our default audio library.
Guess having fewer crashes is always good, right?&lt;/p&gt;
&lt;p&gt;Merry made an attempt at fixing a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9768&#34; data-gh-pr=&#34;9768&#34;&gt;rounding issue&lt;/a&gt;
 in the bi-quad filter.&lt;/p&gt;
&lt;p&gt;While the intention of this change is to partially improve the audio quality in several games, most notably &lt;code&gt;Metroid Prime Remastered&lt;/code&gt; (the game of the month), it didn’t quite hit the mark.
This wasn’t enough to solve the random noise issues affecting the game, so Maide set out to investigate and found out that the audio emulation codebase was incorrectly saving the state of all different audio channels in the same address!&lt;/p&gt;
&lt;p&gt;As you can imagine, if the left audio channel stores some samples, the right channel does the same (overwriting what the left channel stored), and then the left channel fetches back something unexpected, the result can sound&amp;hellip; interesting.
Users described this problem in Metroid as “if someone shot a gun right by your ears”.&lt;/p&gt;
&lt;p&gt;Now each audio channel stores its information in &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9795&#34; data-gh-pr=&#34;9795&#34;&gt;different memory regions,&lt;/a&gt;
 avoiding any issues with overlapping access.
Not only &lt;code&gt;Metroid Prime Remastered&lt;/code&gt; benefits from this; both &lt;code&gt;Fire Emblem&lt;/code&gt; games have shown improvements as well.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./fee.png&#34; title=&#34; Clown Swimsuit (Fire Emblem Engage)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/fee_hu08d3944a4532940b89d0efd7a9d163eb_5307826_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Clown Swimsuit (Fire Emblem Engage)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Clown Swimsuit (Fire Emblem Engage)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Another issue Maide found was a missed check causing an array index to read negative values, which is, in simple terms, “very wrong”.
This was causing the audio engine to grab &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9769&#34; data-gh-pr=&#34;9769&#34;&gt;random chunks of memory&lt;/a&gt;
 as information for mixing, crashing the audio engine, and yuzu with it.&lt;/p&gt;
&lt;p&gt;Solving this oopsie resolves crashes happening while playing &lt;code&gt;Metroid Prime Remastered&lt;/code&gt;, and most likely others too.&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;The LDN lobby window got some love from newcomer &lt;a href=&#34;https://github.com/unfamiliarplace&#34;&gt;unfamiliarplace&lt;/a&gt;, adding the option to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9713&#34; data-gh-pr=&#34;9713&#34;&gt;hide empty rooms.&lt;/a&gt;

Nothing beats quality of life changes like this, thanks!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./lobby.png&#34; title=&#34; Only the dankest rooms, please&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/lobby_hu21e694d61ac83f3641e0d98413345f76_62217_1001x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Only the dankest rooms, please&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Only the dankest rooms, please&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;For Discord gamers, &lt;a href=&#34;https://github.com/SoRadGaming&#34;&gt;SoRadGaming&lt;/a&gt; implemented proper game images for your &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9720&#34; data-gh-pr=&#34;9720&#34;&gt;Discord Status!&lt;/a&gt;

The images are grabbed from our compatibility wiki, which is under a rewrite, so expect some games to be missing for now.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./discord1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/discord1_hud7fc1ca0dc4a60b969009e3226ebbd45_8631_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Make your friends envy you with this simple trick!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./discord2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/discord2_hu3f9b7e90483236c997e75262cc39c29b_19068_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Make your friends envy you with this simple trick!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Make your friends envy you with this simple trick!&lt;/p&gt;


&lt;p&gt;A small mistake caused the web applet to lose the ability to redraw and zoom its content when resizing the yuzu web applet window.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9761&#34; data-gh-pr=&#34;9761&#34;&gt;Re-adding&lt;/a&gt;
 the &lt;code&gt;setZoomFactor&lt;/code&gt; call fixes the scaling, allowing players to fit their Mario Manual to their needs.&lt;/p&gt;
&lt;p&gt;Per-game settings are very useful, but also very tricky to get right codewise.
&lt;a href=&#34;https://github.com/m-HD&#34;&gt;m-HD&lt;/a&gt; greets us by adding a few missing graphical settings to the list, solving conflicting issues when setting the fullscreen mode, resolution scaling, filter, and antialiasing values in the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9784&#34; data-gh-pr=&#34;9784&#34;&gt;per-game&lt;/a&gt;
 configuration window.&lt;/p&gt;
&lt;p&gt;german77 then properly implemented per-game configuration support for the &lt;code&gt;Force maximum clocks&lt;/code&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9863&#34; data-gh-pr=&#34;9863&#34;&gt;setting&lt;/a&gt;
 AMD GPUs &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/&#34;&gt;benefit&lt;/a&gt; so much from.&lt;/p&gt;
&lt;p&gt;While we are constantly working to improve the user experience, yuzu sometimes does crash. That’s expected of any first generation emulator, but what shouldn’t happen is not saving changes made to the configuration settings after a crash or a force close.
The problem was in our Qt UI, and german77 worked to properly tell Qt to save and sync the configuration to file, avoiding any &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9817&#34; data-gh-pr=&#34;9817&#34;&gt;configuration change loss&lt;/a&gt;
 after a force close.&lt;/p&gt;
&lt;h2 id=&#34;general-fixes&#34;&gt;General fixes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/MonsterDruide1&#34;&gt;MonsterDruide1&lt;/a&gt; continues to do wonders with the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/&#34;&gt;LDN&lt;/a&gt; code.
This time, proper error handling.
One of the possible errors when handling TCP connections is &lt;code&gt;ECONNRESET&lt;/code&gt;, which happens when the other end closes the connection abruptly.
Old-school gamers call this “rage quitting”.&lt;/p&gt;
&lt;p&gt;Jokes aside, when a sudden disconnection like this happens, the error used to get caught by yuzu instead of the game, causing the game to never get the notification of the client disconnection.
Properly &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9843&#34; data-gh-pr=&#34;9843&#34;&gt;passing the error&lt;/a&gt;
 through to the game allows it to handle the issue its own way instead of crashing the yuzu LDN session.&lt;/p&gt;
&lt;p&gt;Some improvements were done to yuzu-cmd, the command-line alternative to the default Qt UI.&lt;/p&gt;
&lt;p&gt;german77 added support for &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9729&#34; data-gh-pr=&#34;9729&#34;&gt;touch inputs from mouse clicks and SDL controller input support,&lt;/a&gt;
 and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9730&#34; data-gh-pr=&#34;9730&#34;&gt;two parameters:&lt;/a&gt;
 &lt;code&gt;-g&lt;/code&gt;  for specifying a game file location and &lt;code&gt;-u&lt;/code&gt; for specifying a user profile.&lt;/p&gt;
&lt;p&gt;Your writer also showed up, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9737&#34; data-gh-pr=&#34;9737&#34;&gt;updating&lt;/a&gt;
 the graphical filters and resolution multiplier options that were recently added to the Mainline yuzu.&lt;/p&gt;
&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;h3 id=&#34;nvidia-driver-53118-its-a-good-one&#34;&gt;NVIDIA driver 531.18, it’s a good one&lt;/h3&gt;
&lt;p&gt;This latest (at the time of writing) release of the NVIDIA driver, 531.18, includes support for &lt;code&gt;VK_EXT_extended_dynamic_state3&lt;/code&gt;, a Vulkan extension previous readers will be familiar with.
Having this extension supported means fewer shaders need to be built, resulting in a smoother experience thanks to reduced shader stuttering, and lower RAM use.&lt;/p&gt;
&lt;p&gt;We recommend at least Turing and newer (GTX 1600, RTX 2000-4000) users to update, as we expect this release to not fix the issues affecting Pascal and Maxwell hardware (GTX 1000 and older).&lt;/p&gt;
&lt;h3 id=&#34;amd-ryzen-7000x3d-series-and-the-importance-of-game-mode&#34;&gt;AMD Ryzen 7000X3D series, and the importance of Game Mode&lt;/h3&gt;
&lt;p&gt;AMD recently released their Zen 4 CPUs with 3D V-Cache technology, and in an effort to copy Intel in weirdness, they decided to release a top of the line asymmetric design with the 7950X3D.&lt;/p&gt;
&lt;p&gt;Only one of this gaming-beast CPU’s two CCDs (modules containing 8 cores each) has access to the expanded L3 V-Cache, and the decision on which one to use is up to Windows Game Bar.
To our dismay, there is no hardware scheduler here.
The chipset driver and a Windows toggle decide which mode is better.&lt;/p&gt;
&lt;p&gt;Since yuzu, and basically any other emulator, are not registered as games by Windows, the user will have to manually intervene and enable &lt;code&gt;Game Mode&lt;/code&gt; in order to let the chipset driver profile performance and decide which CCD will perform the best.&lt;/p&gt;
&lt;p&gt;Doing this should also benefit every user, not just 7000X3D ones, as Windows uses the toggle to allocate resources (RAM, threads) to the affected program, so it’s not a bad practice at all!&lt;/p&gt;
&lt;p&gt;Here are the steps:&lt;/p&gt;
&lt;p&gt;With yuzu or any other emulator/program of choice open, press &lt;code&gt;Windows + G&lt;/code&gt;, and go to the Settings cogwheel.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./xbox1.png&#34; title=&#34; Bet you didn’t know about this extra bloat in Windows&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/xbox1_hu8147f8dc57294a8b377305e160267e22_37875_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Bet you didn’t know about this extra bloat in Windows&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Bet you didn’t know about this extra bloat in Windows&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Then enable &lt;code&gt;Remember this is a game&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./xbox3.png&#34; title=&#34; And just like that, better performance!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/xbox3_hu986d78b158d988ed24c0c49f95d866d1_33102_935x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; And just like that, better performance!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; And just like that, better performance!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;That’s it!&lt;/p&gt;
&lt;p&gt;Now Windows will allocate resources in a smarter way, and Ryzen 7000X3D users will get the best performance out of their shiny new CPU.
Testing also shows that this helps improve performance with proper P-Core and E-Core allocation on current Intel CPUs too.
For older Ryzen users, the latest chipset update that enables the performance profiling for the 3D Zen4 products reportedly also improves performance slightly.&lt;/p&gt;
&lt;p&gt;Who can say no to free performance after two clicks, right?&lt;/p&gt;
&lt;h3 id=&#34;intel-please-fix-your-vulkan-support&#34;&gt;Intel, please fix your Vulkan support&lt;/h3&gt;
&lt;p&gt;We’re waiting for Intel to fix their SPIR-V compiler crashes on the Windows drivers.
In its current state, any game can crash at any moment if you use Vulkan, and unlike AMD who solved most of their OpenGL issues with a rewrite, Intel doesn’t get a fallback option with the old graphics API, which in its current state renders almost everything in black.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./intel.png&#34; title=&#34; This crash can happen at any moment&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2023/intel_hu88a3df07ba3bc4406b409fcd1baf07bf_53664_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; This crash can happen at any moment&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; This crash can happen at any moment&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Frustratingly, this isn’t a problem with the Mesa Linux drivers, or the old Gen9/9.5/11 iGPUs and its discontinued Windows drivers, so it’s a proper critical regression affecting the new driver branch that will have to wait until AAA native PC games are running well enough to give the developers time to focus on the “less important stuff”, like professional programs, and console emulators.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;I’ve been kidnapped by our devs, so no leaks this time. I promise more for next month!&lt;/p&gt;
&lt;p&gt;There is one thing I’m allowed to mention, recent core timing changes have reduced CPU use by 5-20% across the board on Windows depending on the total thread count. This means better performance and reduced power consumption, especially benefiting mobile devices like laptops and handhelds.
This change is already in both &lt;a href=&#34;https://yuzu-mirror.github.io/downloads/&#34;&gt;Mainline&lt;/a&gt; and &lt;a href=&#34;https://yuzu-mirror.github.io/help/early-access/&#34;&gt;Early Access&lt;/a&gt;, but we’ll talk more about it and other nice things next month.&lt;/p&gt;
&lt;p&gt;That’s all folks!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report January 2023</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/</link>
      <pubDate>Sat, 11 Feb 2023 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/</guid>
      <description>&lt;p&gt;New year, more work to do! 2023 started with a plethora of graphical changes, audio and input improvements, TAS and LAN/LDN fixes, and more! Stay tuned yuz-ers, this is just the start of what&amp;rsquo;s to come this year!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;New year, more work to do! 2023 started with a plethora of graphical changes, audio and input improvements, TAS and LAN/LDN fixes, and more! Stay tuned yuz-ers, this is just the start of what&amp;rsquo;s to come this year!&lt;/p&gt;
&lt;h2 id=&#34;new-challenger-approaching&#34;&gt;New challenger approaching!&lt;/h2&gt;
&lt;p&gt;During the time it took to merge last month’s &lt;code&gt;Project Y.F.C. 1.5&lt;/code&gt;, several other GPU related changes had to be delayed.
One change that slipped by, made by a new contributor, improved the Vulkan experience so dramatically, it almost feels like cheating…
The change is simple: instead of relying on the GPU driver to store and validate the pipeline cache (a.k.a. the shaders), and having the usual suspects like the Windows AMD driver fail to store 95% of them because of some arbitrary low size limitation, &lt;a href=&#34;https://github.com/Wollnashorn&#34;&gt;Wollnashorn&lt;/a&gt; decided that &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9527&#34; data-gh-pr=&#34;9527&#34;&gt;doing it with the official Vulkan API is better.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;By storing the entire pipeline cache in a custom file among yuzu’s folders, AMD GPUs running on Windows can now properly load large caches in mere seconds, as it should be.
This has saved me literal hours of time while playing &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; with an RX 6600, as the game has the &lt;em&gt;lovely perk&lt;/em&gt; of many heavy shaders.
Booting the game with 25000 shaders used to take close to 15 minutes, with the driver only providing the first 3000 shaders or so, and the rest always being recompiled. The process now takes mere &lt;em&gt;seconds&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./shaders.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; NVIDIA and Intel are faster at shader building than AMD&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;But this isn’t just another fix for AMD Windows users. While the objective was accomplished, the benefits didn’t stop there.
As it turns out, locally stored files are much quicker to save compared to relying on the GPU driver.
Possibly due to fewer checks being performed?
All GPU vendors see reduced stuttering when facing new shaders!&lt;/p&gt;
&lt;p&gt;The usual limitations apply: the cache still asks the driver for validation, so updating it to a newer or older version will require a recompilation, and since the cache is vendor-specific, you won’t get to keep the cache if you switch to a new GPU from another vendor. (And we’re glad there are more than two options now.)&lt;/p&gt;
&lt;p&gt;While Wollnashorn intended this feature to be optional at first, we consider it fully stable, so it’s now enabled by default.
Anyone interested in testing disabling it will find the new option in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced &amp;gt; Use Vulkan pipeline cache&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./turboui.png&#34; title=&#34; Vulkan only, OpenGL is not this flexible with compute work&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/turboui_hu2edc6c9bb7bd4202cdaea9d0c8cbe68f_24944_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Vulkan only, OpenGL is not this flexible with compute work&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Vulkan only, OpenGL is not this flexible with compute work&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Wollnashorn, delivering another amazing entry for the new year, implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9539&#34; data-gh-pr=&#34;9539&#34;&gt;support for AMD&amp;rsquo;s FidelityFX Super Resolution (FSR) in the OpenGL backend.&lt;/a&gt;

While AMD only really intended this adapting filter to be used with Vulkan and Direct3D 12, it is actually portable to OpenGL, and provides generally superior results compared to other filters.
Thanks!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./fsr.png&#34; title=&#34; Fermi users rejoice&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/fsr_hu3d07aa01796e70406d0ee5400d145ac3_32631_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Fermi users rejoice&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Fermi users rejoice&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;fire-emblem-unity&#34;&gt;Fire Emblem Unity&lt;/h2&gt;
&lt;p&gt;A new entry in the series, and, some core changes aside, a good one at that!
The best part of this release is in the technical aspect.
Gone is the clunky and slow Koei Tecmo engine. &lt;code&gt;Fire Emblem Engage&lt;/code&gt; uses  the much more flexible and optimized Unity engine instead.&lt;/p&gt;
&lt;p&gt;For us emulation fans, this means 60 FPS is achievable on very low-end hardware, and the game can be reasonably played with the framerate unlocked too. Only some animations and 2D elements experience issues with the higher framerates, something we hope the modding community can solve.
We expect to see 120 and even 240 FPS mods working fine on reasonably powerful hardware.&lt;/p&gt;
&lt;p&gt;Another point, and maybe even more important, is shader stuttering.
Koei’s engine is notoriously infamous for having bloated shaders that, without tons of work from our side, can make any GPU driver crash on timeouts.
Unity, on the other hand, has much lighter shaders, allowing Vulkan’s parallel building to shine, and asynchronous shader building provides extra help, if your CPU doesn’t have enough threads to hide what little stutter remains.&lt;/p&gt;
&lt;p&gt;Still, new game release, new issues, and new fixes for them. So let’s list what has been done so far.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt;, who may or may not have just discovered the Fire Emblem series, noticed an issue with the shader compiler: the only place where multisampled (MSAA) textures were actually being intentionally processed in shaders was in the &lt;code&gt;GLASM&lt;/code&gt; shader backend, albeit incorrectly.
In the &lt;code&gt;GLSL&lt;/code&gt; backend, it was completely ignored, and in the &lt;code&gt;SPIR-V&lt;/code&gt; backend, it produced an invalid combination of arguments to a &lt;code&gt;SPIR-V&lt;/code&gt; instruction, which caused Mesa to abort when processing our shader.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9652&#34; data-gh-pr=&#34;9652&#34;&gt;Passing through multisample information&lt;/a&gt;
 fixed the crash, but left more work to do&amp;hellip;&lt;/p&gt;
&lt;p&gt;&amp;hellip;which &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt;, one of the original authors of the shader compiler, took notice of, and came back with a rapid-fire series of fixes to address.
His first fix was to continue what byte[] had started and fully &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9687&#34; data-gh-pr=&#34;9687&#34;&gt;implement multisampled texture fetches&lt;/a&gt;
 in the &lt;code&gt;GLSL&lt;/code&gt; and &lt;code&gt;GLASM&lt;/code&gt; backends, cleaning up rendering of the game with those backends.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/oglbug_hu453b1ee5d04294595c79624d9719662f_899582_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From Stealth to Tactical RPG (Fire Emblem Engage)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/oglfix_hu78986c70cafcc27c48dc771c20a7a2f5_2197193_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From Stealth to Tactical RPG (Fire Emblem Engage)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;From Stealth to Tactical RPG (Fire Emblem Engage)&lt;/p&gt;


&lt;p&gt;He then implemented two more changes: &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9694&#34; data-gh-pr=&#34;9694&#34;&gt;preventing translations of the &lt;code&gt;TXQ instruction&lt;/code&gt; from producing another invalid combination of arguments,&lt;/a&gt;
 and then &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9703&#34; data-gh-pr=&#34;9703&#34;&gt;implementing full support for multisampled images&lt;/a&gt;
 with the &lt;code&gt;TXQ instruction&lt;/code&gt;, with only a few minor loose ends to tidy up &amp;ndash; which will require another cache invalidation.
We preemptively apologize to all Smash players (even though it hasn&amp;rsquo;t happened yet).&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/feebug_hufc5c20eefa6ced9a79c84224c7d5959a_7626290_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Now your favorite characters won&amp;#39;t be half-way in the Shadow Realm (Fire Emblem Engage)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/feefix_hue4bd20ffe95c9d30ba0cefda7004606d_4505202_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Now your favorite characters won&amp;#39;t be half-way in the Shadow Realm (Fire Emblem Engage)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Now your favorite characters won&amp;#39;t be half-way in the Shadow Realm (Fire Emblem Engage)&lt;/p&gt;


&lt;p&gt;This fixed menu rendering in other games, such as &lt;code&gt;Dokapon UP!&lt;/code&gt; and &lt;code&gt;Pokémon Mystery Dungeon: Rescue Team DX&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/pmdbug_hu533d8c07b8c73c14c4c3e736a365d891_2209706_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fight fire with fire (Pokémon Mystery Dungeon: Rescue Team DX)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/pmdfix_hufc55b8aab5c685925157d8f10524aae0_2556166_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fight fire with fire (Pokémon Mystery Dungeon: Rescue Team DX)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Fight fire with fire (Pokémon Mystery Dungeon: Rescue Team DX)&lt;/p&gt;


&lt;p&gt;As any NVIDIA &lt;code&gt;Pokémon Brilliant Diamond/Shining Pearl&lt;/code&gt; player will tell you, Unity engine games are more stable on OpenGL, one of the rare cases where the old API is preferred.
We’re working to fix this issue, but for now, if you are experiencing crashes when using Vulkan with an NVIDIA GPU, try using OpenGL instead, and as an alternative, see if disabling Accelerate ASTC texture decoding helps.
As always, both options can be found in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;turbo-modehttpswwwyoutubecomwatchvd3djvw3dsga&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=D3djVW3dSGA&#34;&gt;Turbo mode&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you followed previous progress reports, you may have noticed a certain pattern.
Your writer has a stupid idea, and byte[] is the one that ends up listening to my rambling and makes that idea a reality.
This routine worked successfully with SMAA for Vulkan, unsuccessfully with increasing the staging buffer size to take advantage of ReBAR, sadly, and this time, it &lt;em&gt;almost worked&lt;/em&gt; with &lt;code&gt;Turbo mode&lt;/code&gt;, or its official/boring name, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9552&#34; data-gh-pr=&#34;9552&#34;&gt;Force maximum clocks.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;You might be able to see where this is going.
&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/#vulkan-is-the-future&#34;&gt;A year ago,&lt;/a&gt; Patreon funding got your writer access to an RX 6500 to help with testing and debugging.
That card died a horrible, premature death (and no one misses it), but before kicking the bucket, it allowed us to learn that RDNA and RDNA2 hardware from AMD suffer from serious downclocking issues if you’re not constantly shoving work to the GPU.
Thankfully, due to the cryptomining crash, an RX 6600 took its place for no extra cost.
In your face, miners.&lt;/p&gt;
&lt;p&gt;Ehem, back on topic.
The card will try to idle as much as possible to save power, so if the workload is not constant, it switches to a lower clock speed, and raising the clocks again takes time.
This results in lower performance.
While the issue affects all GPU vendors in one way or another, only AMD suffers from up to 70% performance losses, with both Windows &lt;em&gt;and&lt;/em&gt; Linux drivers. Yes, even RADV.&lt;/p&gt;
&lt;p&gt;Since asking the users to apply external workarounds like encoding video in the background to keep VRAM usage high or overclocking the minimum clock speed are not easy to communicate, or can count as voiding your warranty, your writer was going insane trying to find ways to cleanly solve this issue, as it seems AMD isn’t very interested in it.&lt;/p&gt;
&lt;p&gt;The solution came from an overclocking background again.
&lt;a href=&#34;https://github.com/ihaque/memtestCL&#34;&gt;memtestCL&lt;/a&gt; is a tool to test stability of video memory: you set a size, how many iterations to run, and the compute load will compare results, informing you of any errors.
Running yuzu and memtestCL at the same time completely fixed the downclocking issues of AMD cards!&lt;/p&gt;
&lt;p&gt;Some small discussions and prototyping later, and a solution was starting to take shape.
Creating and running an OpenCL/CUDA process in parallel was deemed to be too much work, and could be sent to the background by the scheduler, nullifying any gain.
Instead, we decided to use Vulkan’s own compute capabilities.
A useless dummy load will constantly run on the GPU, forcing it to always keep its clocks as high as possible, and with it, the power consumption.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./turboperf.png&#34; title=&#34; Four of the most GPU intensive games. Lower end cards like the infamous RX 6500 XT can see jumps as high as 70%&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/turboperf_hu8b0c4153ed292fec9fca4b60cf4c632b_20789_720x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Four of the most GPU intensive games. Lower end cards like the infamous RX 6500 XT can see jumps as high as 70%&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Four of the most GPU intensive games. Lower end cards like the infamous RX 6500 XT can see jumps as high as 70%&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While this is a simple solution, it has a few drawbacks that forced us to sadly not enable this option by default:&lt;/p&gt;
&lt;p&gt;First, not all users want to or can run their GPUs at maximum performance. On mobile devices, it results in terrible battery life, or hitting power limits on AMD and Intel APUs, like the Steam Deck for example, with its small 15W default TDP.&lt;/p&gt;
&lt;p&gt;Second, low constant loads like an old game running at very high framerates, or an emulator performing dummy cycles, produce a noise known as coil whine, an electrical “purring” that varies in intensity with each GPU. Some are barely audible, others can scare their users, even if the card is under no harm.&lt;/p&gt;
&lt;p&gt;And third, while this is a safe option for AMD dedicated GPUs, on NVIDIA and Intel, the results are much more variable.
Weaker NVIDIA cards (anything weaker than an RTX 3060) will most likely lose considerable performance with Turbo mode, while the powerful, expensive cards will see performance gains similar to AMD.
The RTX 4090 in particular performs better with Turbo than even NVIDIA’s own “Prefer maximum performance” setting in their control panel.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nvidia1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/nvidia1_hu0bc3911e6a1094c00d23383f8bba4bd2_2480363_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Left is default performance with an RTX 4090, middle is using the driver&amp;#39;s &amp;#39;Prefer maximum performance&amp;#39;, right is yuzu&amp;#39;s Turbo mode (Pokémon Scarlet)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nvidia2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/nvidia2_hu8492deb82de8720af0fa15ad1ad75163_2156616_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Left is default performance with an RTX 4090, middle is using the driver&amp;#39;s &amp;#39;Prefer maximum performance&amp;#39;, right is yuzu&amp;#39;s Turbo mode (Pokémon Scarlet)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nvidia3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/nvidia3_hub42a0e2d489aade2a00c5a7777072243_2486406_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Left is default performance with an RTX 4090, middle is using the driver&amp;#39;s &amp;#39;Prefer maximum performance&amp;#39;, right is yuzu&amp;#39;s Turbo mode (Pokémon Scarlet)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Left is default performance with an RTX 4090, middle is using the driver&amp;#39;s &amp;#39;Prefer maximum performance&amp;#39;, right is yuzu&amp;#39;s Turbo mode (Pokémon Scarlet)&lt;/p&gt;


&lt;p&gt;Intel is, as always, a special case.
While Turbo mode certainly helps desktop Arc GPUs, integrated Xe graphics and older can only run a single queue.
This means that, by design, these iGPUs can’t render and run compute tasks at the same time.
While the scheduler seems to do a fantastic job, not causing any performance loss with Turbo, you still get all the drawbacks and no benefit while using Intel iGPUs.&lt;/p&gt;
&lt;p&gt;We have worked to resolve as many limitations as we could, but since the results are so variable between different vendors and cards, the option will remain disabled by default.
We strongly recommend that everyone tests it. If it produces a performance gain in a game, it should be consistent across the board.
At least all desktop AMD users, Big Chungus NVIDIA owners, and the 5 people with an Arc will benefit greatly from it.
The option can be found in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced &amp;gt; Force maximum clocks&lt;/code&gt;.
…I still prefer calling it Turbo mode…&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./turboui.png&#34; title=&#34; Let&amp;#39;s reuse the same pic, no one will notice it&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/turboui_hu2edc6c9bb7bd4202cdaea9d0c8cbe68f_24944_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Let&amp;#39;s reuse the same pic, no one will notice it&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Let&amp;#39;s reuse the same pic, no one will notice it&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;yet-more-gpu-changes&#34;&gt;Yet more GPU changes&lt;/h2&gt;
&lt;p&gt;Starting off the new year with a bang, &lt;a href=&#34;https://github.com/bylaws&#34;&gt;bylaws&lt;/a&gt; of &lt;a href=&#34;https://github.com/skyline-emu/skyline&#34;&gt;Skyline&lt;/a&gt; fame returned with another round of fixes for our shader compiler project.
&lt;code&gt;Geometry shader passthrough&lt;/code&gt; is an NVIDIA hardware feature available on the Switch which is primarily used to select a viewport or layer without needing an actual geometry shader, and it is available to and used by yuzu with desktop NVIDIA cards.
However, AMD, Intel, and other vendors don&amp;rsquo;t support this extension, and require emulation using geometry shaders.
bylaws &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9535&#34; data-gh-pr=&#34;9535&#34;&gt;added support for geometry shader passthrough emulation,&lt;/a&gt;
 which fixed rendering issues in &lt;code&gt;NieR:Automata The End of YoRHa Edition&lt;/code&gt;, &lt;code&gt;Marvel Ultimate Alliance 3: The Black Order&lt;/code&gt;, &lt;code&gt;Pokémon: Legends Arceus&lt;/code&gt;, and likely many other games.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/nabug_hu32c08b339fed1302669ed3070316c121_112270_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Robot shoot is pretty funny (NieR:Automata The End of YoRHa Edition)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/nafix_huf218b531e0dccaf97db6d7e80ea384a6_2312099_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Robot shoot is pretty funny (NieR:Automata The End of YoRHa Edition)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Robot shoot is pretty funny (NieR:Automata The End of YoRHa Edition)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9556&#34; data-gh-pr=&#34;9556&#34;&gt;implemented the &lt;code&gt;draw texture method&lt;/code&gt;,&lt;/a&gt;
 another NVIDIA-exclusive feature, with both native and emulated versions.
It’s like the Switch used some sort of NVIDIA GPU, hmm.&lt;/p&gt;
&lt;p&gt;Generally, graphics APIs like OpenGL and Vulkan require shaders and some geometry (at minimum, a triangle) defined to render a texture to the framebuffer, but the &lt;code&gt;draw texture method&lt;/code&gt; bypasses this requirement and draws an axis-aligned texture to the screen with only the coordinates of the bounding rectangle.
When using OpenGL on NVIDIA hardware, yuzu will try to use the host&amp;rsquo;s draw texture function, and it will be emulated with shaders on Vulkan or other platforms.
This fixes the rendering of the title screen on &lt;code&gt;Titan Quest&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/tqbug_hu4bd9a46e3fd58685b1bac6d4e2225543_1115010_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;And people ask why we &amp;#39;make&amp;#39; games run faster on NVIDIA hardware (Titan Quest)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/tqfix_hu3991b94497dc9404c40291579087a4f5_2983557_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;And people ask why we &amp;#39;make&amp;#39; games run faster on NVIDIA hardware (Titan Quest)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;And people ask why we &amp;#39;make&amp;#39; games run faster on NVIDIA hardware (Titan Quest)&lt;/p&gt;


&lt;p&gt;byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9608&#34; data-gh-pr=&#34;9608&#34;&gt;corrected a mistake in the way yuzu treated swap intervals.&lt;/a&gt;

One method for limiting framerate on the Switch is to set a number controlling how many times a frame will be presented, where presentation happens 60 times per second.
A program could limit itself to 30 frames per second by setting this number to 2, 20 frames per second by setting this value to 3, and so on.
yuzu mistakenly treated the swap interval as being based on powers of two, so the values of 1 and 2, corresponding to 60 and 30 frames per second, worked correctly, but a value of 3 incorrectly presented at 15 frames per second.
While fixing this mistake, byte[] also added support for mod developers to use negative values as &lt;em&gt;multiples&lt;/em&gt; of 60 frames per second.
Let the (high-framerate) games begin!&lt;/p&gt;
&lt;p&gt;epicboy also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9708&#34; data-gh-pr=&#34;9708&#34;&gt;fixed a longstanding issue with asynchronous shader building on OpenGL,&lt;/a&gt;
 forcing shaders to be fully flushed and available to the main rendering context before signalling availability.
This should alleviate any persistent graphical errors exclusive to asynchronous shaders in the old API.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; returns with another &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9559&#34; data-gh-pr=&#34;9559&#34;&gt;significant performance improvement&lt;/a&gt;
 for the world&amp;rsquo;s seemingly-least optimized Pokémon games. This allows them to render in our much faster, but lower-accuracy, GPU Normal mode, and implements a few related optimizations along the way.
Have fun shiny hunting!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./psn.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/psn_hu13d63d1dee794d74a8c111377255bb95_7365260_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;If you ask why all pics are in the same area, it&amp;#39;s one of the best benchmarking spots. Normal accuracy on the left, High accuracy on the right (Pokémon Scarlet)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./psh.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/psh_hud1323468cb7452db34fb670f0a0d3ff1_5484768_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;If you ask why all pics are in the same area, it&amp;#39;s one of the best benchmarking spots. Normal accuracy on the left, High accuracy on the right (Pokémon Scarlet)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;If you ask why all pics are in the same area, it&amp;#39;s one of the best benchmarking spots. Normal accuracy on the left, High accuracy on the right (Pokémon Scarlet)&lt;/p&gt;


&lt;p&gt;Keep in mind that Normal GPU accuracy will produce vertex explosions for a frame, but only last just as long. Permanent vertex explosions be gone!
High GPU accuracy will be cleaner, but slower, so pick your side.&lt;/p&gt;
&lt;p&gt;As one final note for the GPU section, your writer implemented a feature which had been requested for quite a while since the resolution scaler was released, but nobody had really bothered to look at until now &amp;ndash; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9612&#34; data-gh-pr=&#34;9612&#34;&gt;additional resolution options.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Now you can select from the additional options of 1.5x scaling, or 7x and 8x (if you have a death wish for your graphics card).
User reports confirm that the RTX 4090 can play some games at 8x, and the RX 6950 XT doesn&amp;rsquo;t have many problems with 7x.
The odd one, 1.5x, was added because our metrics show that the most used non-iGPU cards are strong enough to have surplus performance at 1x, but are not powerful enough to handle 2x.
A middle ground is ideal to get crisper graphics while keeping the 30/60FPS target, or if the user has a 1440p display.
We think this should be reasonably future proof for now.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./16k.jpg&#34; title=&#34; Warning, don&amp;#39;t click this image on weak devices: 16K resolution (SUPER MARIO ODYSSEY)&#34;&gt;&lt;img src=&#34;./16k.jpg&#34; alt=&#34; Warning, don&amp;#39;t click this image on weak devices: 16K resolution (SUPER MARIO ODYSSEY)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Warning, don&amp;#39;t click this image on weak devices: 16K resolution (SUPER MARIO ODYSSEY)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Small warning, AMD and Intel hardware don&amp;rsquo;t support textures as big as NVIDIA, so it&amp;rsquo;s possible to hit this limit in some games and make the driver crash.
If you have performance and VRAM to spare and you hit a crash, lower the multiplier.&lt;/p&gt;
&lt;h2 id=&#34;macos-progress&#34;&gt;macOS progress&lt;/h2&gt;
&lt;p&gt;Since we have been providing little snippets of a possible return for macOS support for the past few months, know that the progress is slow for now, but we have some significant results to report.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mvk.png&#34; title=&#34; Baby Mario steps (SUPER MARIO ODYSSEY)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/mvk_hu04c922e8e1ac176c55a993e297ad0ad4_1627953_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Baby Mario steps (SUPER MARIO ODYSSEY)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Baby Mario steps (SUPER MARIO ODYSSEY)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;byte[] implemented a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9528&#34; data-gh-pr=&#34;9528&#34;&gt;fallback for the absence of &lt;code&gt;nullDescriptor&lt;/code&gt; support&lt;/a&gt;
 in MoltenVK, avoiding a crash when attempting to bind buffer slots on MoltenVK.&lt;/p&gt;
&lt;p&gt;Then, he implemented a &lt;em&gt;substantial&lt;/em&gt; refactor of how &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9530&#34; data-gh-pr=&#34;9530&#34;&gt;yuzu performs Vulkan feature testing,&lt;/a&gt;
 making it both more streamlined and able to cope with the absence of features which yuzu currently still requires as mandatory &amp;ndash; such as the aforementioned &lt;code&gt;nullDescriptor&lt;/code&gt; feature.&lt;/p&gt;
&lt;p&gt;Finally, &lt;a href=&#34;https://github.com/PCSX2/pcsx2&#34;&gt;PCSX2&lt;/a&gt; and &lt;a href=&#34;https://github.com/dolphin-emu/dolphin&#34;&gt;Dolphin&lt;/a&gt; contributor &lt;a href=&#34;https://github.com/TellowKrinkle&#34;&gt;TellowKrinkle&lt;/a&gt; helped us &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9596&#34; data-gh-pr=&#34;9596&#34;&gt;discover a bug in MoltenVK&lt;/a&gt;
 where the number of bindings it reports as available doesn&amp;rsquo;t correspond to the number we can actually use, and suggested a workaround, which byte[] committed, allowing trivial homebrew examples to finally begin rendering correctly.
We are also able to render some simpler games, but be aware: most things don&amp;rsquo;t work yet.
Baby steps!&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/mvkbug_hu46695e858d2b3c097cd4ba85a4a19e8d_611817_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s hard to describe, has the performance, but lacks the features, but has modern features&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/mvkfix_hu46695e858d2b3c097cd4ba85a4a19e8d_505465_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s hard to describe, has the performance, but lacks the features, but has modern features&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;It&amp;#39;s hard to describe, has the performance, but lacks the features, but has modern features&lt;/p&gt;


&lt;h2 id=&#34;general-changes&#34;&gt;General changes&lt;/h2&gt;
&lt;p&gt;byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9561&#34; data-gh-pr=&#34;9561&#34;&gt;triggered the scheduled mandatory Dynarmic update,&lt;/a&gt;
 blessing us with &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-fastmem/&#34;&gt;fastmem and page table support&lt;/a&gt; for ARM64 devices, boosting performance considerably.
Anyone with an ARM64 device running a “normal” GPU (not mobile-tier hardware) interested in testing yuzu, feel free to install our official &lt;a href=&#34;https://flathub.org/apps/details/org.yuzu_emu.yuzu&#34;&gt;Flatpak&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; stumbled upon an issue which was causing input threads to randomly crash yuzu for seemingly no reason, but only on shutdown.
byte[] found that &lt;code&gt;CoreTiming&lt;/code&gt; had the same logic issue that he fixed last month in the kernel code when adding &lt;code&gt;KHardwareTimer&lt;/code&gt;: callbacks could be removed while in-progress, which could cause the input threads to continue using memory after it had been freed.
With this code changed to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9619&#34; data-gh-pr=&#34;9619&#34;&gt;wait until any in-progress callbacks are finished before removal,&lt;/a&gt;
 this issue should be solved for good.&lt;/p&gt;
&lt;p&gt;After the merge of german77&amp;rsquo;s impressive Joy-Con driver release &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/#new-joy-con-driver-and-other-input-improvements&#34;&gt;last month&lt;/a&gt;, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; noticed that yuzu was often taking a significantly longer amount of time to shutdown, sometimes more than 5 seconds longer than it should have been allowed to.
He discovered that this was due to sleep calls in the Joy-Con driver to poll for new devices that weren&amp;rsquo;t being cancelled on shutdown, and with help from byte[], he &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9677&#34; data-gh-pr=&#34;9677&#34;&gt;implemented a proper fix&lt;/a&gt;
 so that they would immediately stop waiting when shutdown was signalled.&lt;/p&gt;
&lt;p&gt;More battles won for the Shutdown Wars, with seemingly no end in sight!
It&amp;rsquo;s starting to almost feel like a &lt;a href=&#34;https://www.youtube.com/watch?v=HWJsY4FoSZ8&#34;&gt;Worms&lt;/a&gt; game.&lt;/p&gt;
&lt;p&gt;An interesting report from a user pointed byte[] to the visual novel &lt;code&gt;うみねこのなく頃に咲 ～猫箱と夢想の交響曲～&lt;/code&gt; (Umineko no Naku Koro ni Saku - Nekobako to Musou no Koukyoukyoku), which seemed to reliably crash in fast-forward mode, but only when audio was enabled.
He quickly identified that the issue was happening at the same time the audio system was temporarily stalling the game (in order to avoid dropping any samples).
He had previously implemented stalling in the kernel in a way that seemed superficially reasonable, but actually completely broke the scheduler when just the right conditions were met!
byte[] then &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9666&#34; data-gh-pr=&#34;9666&#34;&gt;reimplemented stalling more carefully,&lt;/a&gt;
 avoiding breaking the conditions required by the scheduler, and preventing a deadlock due to incorrect behaviour around suspension.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./umi.png&#34; title=&#34; Without love, it cannot be seen (Umineko no Naku Koro ni Saku - Nekobako to Musou no Koukyoukyoku)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/umi_hu3d9bfe082e8985b3d6fa376823baecde_2011577_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Without love, it cannot be seen (Umineko no Naku Koro ni Saku - Nekobako to Musou no Koukyoukyoku)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Without love, it cannot be seen (Umineko no Naku Koro ni Saku - Nekobako to Musou no Koukyoukyoku)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Users reported a regression when trying to play &lt;code&gt;Mario Kart 8 Deluxe&lt;/code&gt; over LAN mode.
The game would refuse to access the mode and return to the main menu.
german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9543&#34; data-gh-pr=&#34;9543&#34;&gt;updated the implementation to match the latest reverse engineering efforts&lt;/a&gt;
 and poof, back to launching blue shells at all your friends!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./lan.png&#34; title=&#34; Hot take, only Gran Turismo gets close to this series in music quality (Mario Kart 8 Deluxe)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/lan_huf79319bbd8edffe7d326c8da4acde207_3698176_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Hot take, only Gran Turismo gets close to this series in music quality (Mario Kart 8 Deluxe)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Hot take, only Gran Turismo gets close to this series in music quality (Mario Kart 8 Deluxe)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/MonsterDruide1&#34;&gt;MonsterDruide1&lt;/a&gt; is back with &lt;em&gt;the good fixes&lt;/em&gt;.
This time? LDN.
Game mods that add network connectivity sometimes use sockets with a timeout in order to keep the game responsive while waiting for more packets.
yuzu used to hate this behaviour, spamming errors in the log, and generally just having a bad time.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9558&#34; data-gh-pr=&#34;9558&#34;&gt;Changing this unnecessarily cautious behaviour&lt;/a&gt;
 allows network gameplay mods to work properly, for example, &lt;a href=&#34;https://github.com/fruityloops1/smo-practice&#34;&gt;smo-practice&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/SoRadGaming&#34;&gt;SoRadGaming&lt;/a&gt; suddenly showed up one day and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9661&#34; data-gh-pr=&#34;9661&#34;&gt;implemented IPv6 and hostname support&lt;/a&gt;
 for LDN.
Thanks! Now more players can enjoy their online matches, and we’re ready for the eventual death of IPv4, which is expected to happen someday in this geological era.
Or maybe the next one.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dc.png&#34; title=&#34; Remember when domain names were free?&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/dc_hu54980d73885eedb0cc5315bcd8a5baa3_6954_457x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Remember when domain names were free?&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Remember when domain names were free?&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/merryhime&#34;&gt;Merry&lt;/a&gt;, taking a break from Dynarmic to play with some areas of yuzu, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9615&#34; data-gh-pr=&#34;9615&#34;&gt;implemented a set of fixes&lt;/a&gt;
 to the audio codebase, focusing on upsampling.
An off-by-one error fix should translate to in-game music not cutting off as much, and improved audio fidelity.&lt;/p&gt;
&lt;h2 id=&#34;input-and-tas-improvements&#34;&gt;Input and TAS improvements&lt;/h2&gt;
&lt;p&gt;TAS got its fair share of improvements, all thanks to MonsterDruide1 and german77.
The first fix is &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9540&#34; data-gh-pr=&#34;9540&#34;&gt;properly recording sanitized inputs,&lt;/a&gt;
 instead of the raw inputs from the player.
By sanitized, we mean input adjusted by range and dead zone settings.
There isn&amp;rsquo;t much use for a TAS script if what you record doesn’t correspond to what the game received originally.&lt;/p&gt;
&lt;p&gt;Next, yuzu, by design, can support multiple controllers per player, which can lead to multiple stick inputs overlapping (“flapping”) each other.
yuzu would ignore switching to any stick input that didn’t reach full tilt.
To avoid this behaviour causing problems with TAS, MonsterDruide1 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9547&#34; data-gh-pr=&#34;9547&#34;&gt;overrules this safety threshold value&lt;/a&gt;
 for TAS-based stick input, so every movement gets registered, even the most minuscule ones right from the start.
This change also adds the extra logic of returning to regular input if the TAS stick reaches a value of 0 in both axes.&lt;/p&gt;
&lt;p&gt;And to end the TAS changes, MonsterDruide1 also now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9565&#34; data-gh-pr=&#34;9565&#34;&gt;shows the progress of multiple scripts&lt;/a&gt;
 when several controllers are running their own records, for example, &lt;code&gt;TAS state: Running 35/100, 20, 0, 40&lt;/code&gt;.
Now all players in local multiplayer matches can get their corresponding information.&lt;/p&gt;
&lt;p&gt;On the topic of regular input, german77 has been busy improving it, and he has implemented a couple of changes that we think many will like.&lt;/p&gt;
&lt;p&gt;For our keyboard and mouse fans, there’s now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9605&#34; data-gh-pr=&#34;9605&#34;&gt;support for mapping the mouse wheel&lt;/a&gt;
 to any button.
Sounds like a simple way to switch gear in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; to me, for example.&lt;/p&gt;
&lt;p&gt;german77 has been gluing his eyes to some unit tests lately trying to find out why &lt;code&gt;EARTH DEFENSE FORCE: WORLD BROTHERS&lt;/code&gt; would outright ignore input in some cases.
After several back and forths between yuzu and the real Switch, he found out that the stick range didn’t seem to have minimum value of -32768, the usual value expected from a 16-bit signed integer (a range of -32768 to 32767), and instead seemed to have a minimum of -32766.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./input.png&#34; title=&#34; Unpatched Switch consoles are invaluable for us&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/input_hucbe6861752989f16f771b240687f644f_414538_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Unpatched Switch consoles are invaluable for us&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Unpatched Switch consoles are invaluable for us&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Okay, &lt;a href=&#34;https://www.youtube.com/watch?v=VreFw1Zd020&#34;&gt;Nintendo is as Nintendo does&lt;/a&gt;, have it your way, we will just &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9617&#34; data-gh-pr=&#34;9617&#34;&gt;fix the minimum stick range&lt;/a&gt;
 in our code.
Problem solved, right?&lt;/p&gt;
&lt;p&gt;No.&lt;/p&gt;
&lt;p&gt;As it turns out, this is a game bug.
You can get the Switch to reach -32767 under certain conditions, and &lt;code&gt;EARTH DEFENSE FORCE: WORLD BROTHERS&lt;/code&gt; will &lt;em&gt;also&lt;/em&gt; refuse to accept input on the real hardware.
So what do we do then? german77 decided that the best solution is to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9676&#34; data-gh-pr=&#34;9676&#34;&gt;apply a 0.99996x multiplier&lt;/a&gt;
 to the received input from the sticks, just to avoid weird games from behaving incorrectly.&lt;/p&gt;
&lt;p&gt;People have been complaining about poor Joy-Con reception since, well, ever, and honestly, there’s a limit to how much we can do, only Nintendo knows what Bluetooth black magic they use to get good range on the Switch.
Thankfully, the new custom Joy-Con driver allows us to have more freedom on the parameters of the Bluetooth connection, and german77 discovered that &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9683&#34; data-gh-pr=&#34;9683&#34;&gt;disabling low power mode,&lt;/a&gt;
 one of the available parameters, after establishing a connection is closer to what the console does, and should help improve range to some extent.&lt;/p&gt;
&lt;p&gt;Our general recommendations still apply: if you’re using an Intel WiFI + BT combo chipset, turn off WiFi, and make sure to have your phone away from the BT chipset and the Joy-Cons.
It’s known that off-brand generic USB dongles provide better range than WiFi + BT combo chips.&lt;/p&gt;
&lt;p&gt;Now for players interested in bending the game engines to their limit, or just wanting to have some extra fun (us boomers like to call this “cheating”), german77 has a gift for you.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9696&#34; data-gh-pr=&#34;9696&#34;&gt;Turbo button support!&lt;/a&gt;
 Also known as rapidfire, this allows you to, as the name implies, repeatedly auto-press a button as fast as the game can register it.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./turbo.png&#34; title=&#34; For some reason, Mega Man comes to mind&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/turbo_hua42d56a9fc651d8156ee2ac6d879d7ad_75099_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; For some reason, Mega Man comes to mind&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; For some reason, Mega Man comes to mind&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Enjoy finding new ways to break your games with this!&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;This one has been cooking for over 2 years now, sheesh.
Morph originally started working on &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/4949&#34; data-gh-pr=&#34;4949&#34;&gt;improving high-DPI support&lt;/a&gt;
 in yuzu all the way back in November of 2020.
Now it’s ready, and the results are great.
Users that run displays at DPI values over 100% can now see proper UI element scaling, particularly noticeable in the Controls setting window.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/dpibug_hu86207e2f48e2c076f5082e44e408393e_114891_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;4K display users rejoice&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/dpifix_hue0afda8b9e9934f2f7e44c1bfbef6a68_208399_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;4K display users rejoice&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;4K display users rejoice&lt;/p&gt;


&lt;p&gt;Nothing is safe from bugs in the user interface code, and Wollnashorn found an interesting one affecting LDN.
The Direct Connect window asks the user for an IP and nickname.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dc.png&#34; title=&#34; We believe in recycling here, that includes pics&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/dc_hu54980d73885eedb0cc5315bcd8a5baa3_6954_457x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; We believe in recycling here, that includes pics&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; We believe in recycling here, that includes pics&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Those settings got lost every time a game was booted.
Well, the issue was that those settings were being saved on the per-game configuration files for no reason.
It doesn&amp;rsquo;t make sense to include a fundamentally global setting in the per-game settings, so &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9521&#34; data-gh-pr=&#34;9521&#34;&gt;removing them&lt;/a&gt;
 solved the issue.&lt;/p&gt;
&lt;p&gt;byte[] solved an issue where accessing fullscreen would cause yuzu to crash.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9601&#34; data-gh-pr=&#34;9601&#34;&gt;Adjusting the behaviour of yuzu’s bootmanager&lt;/a&gt;
 was enough to stop the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/issues/9550&#34;&gt;CRASH!!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Newcomer &lt;a href=&#34;https://github.com/SaiKai&#34;&gt;SaiKai&lt;/a&gt; implements one of those Quality of Life changes that you can’t live without and you can’t believe it wasn’t a thing before.
Pressing and holding the hotkey assigned to lowering or raising &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9637&#34; data-gh-pr=&#34;9637&#34;&gt;volume will now auto-repeat,&lt;/a&gt;
 making it much easier to control.
Thanks!&lt;/p&gt;
&lt;p&gt;Per-game configuration returns to mess with us, now with the language selection.
The language ComboBox index gets altered in per-game configuration, so setting the region to Korea or Taiwan would result in a crash.
german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9660&#34; data-gh-pr=&#34;9660&#34;&gt;fixes this discrepancy&lt;/a&gt;
 and solves the issue.&lt;/p&gt;
&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;p&gt;Let’s revive this section for a bit, there’s some information I’d like to discuss.&lt;/p&gt;
&lt;h4 id=&#34;nvidia-forgetting-about-their-old-cards&#34;&gt;NVIDIA, forgetting about their old cards.&lt;/h4&gt;
&lt;p&gt;We previously mentioned that the 527.XX release of drivers solved issues we previously had with Pascal and newer cards.
While this was true for most issues, Pascal is still hitting some of the old problems, like crashes with ASTC texture decoding enabled.
We recommend Pascal users to either disable ASTC texture decoding, or revert back to 512.95 drivers.
We hope NVIDIA backports the fixes Turing and newer cards got to the old guard too.&lt;/p&gt;
&lt;h4 id=&#34;amd-custom-drivers-are-not-good&#34;&gt;AMD, custom drivers are not good&lt;/h4&gt;
&lt;p&gt;The recently released RX 7000 series, or RDNA3, are not particularly compatible with emulators right now, with yuzu not being an exception.
Broken rendering and crashes were reported by early adopters.&lt;/p&gt;
&lt;p&gt;Sadly, we can’t focus on these products while they run a custom driver branch.
Until AMD merges the RDNA3 driver with the regular Polaris to RDNA2 one we’re all used to, it’s impossible to focus efforts on trying to solve any particular issues of this new release.
Sorry early adopters, you will have to wait.&lt;/p&gt;
&lt;p&gt;Having access to hardware that doesn’t cost NVIDIA-stupid levels would also help.
AMD, please don’t take a year to release the mid and low end.&lt;/p&gt;
&lt;p&gt;Now, regarding unofficial custom drivers, we received reports that Amermine Zone drivers break rendering in many games.
Regular drivers are perfectly fine, so just stick to official AMD releases.&lt;/p&gt;
&lt;h4 id=&#34;intel-artificial-limitations-capping-good-hardware&#34;&gt;Intel, artificial limitations capping good hardware&lt;/h4&gt;
&lt;p&gt;Your writer recently had to replace an old i3-5005U laptop because its WiFi died, but HP only allows a very limited selection of cards as replacements, and said parts are no longer in production.
I’m never buying HP ever again.&lt;/p&gt;
&lt;p&gt;Sorry, back on topic.
This was a great opportunity to get an Iris Xe GPU, so an i5-1240P was acquired.
ASUS this time.
As this was first hand experience for a tester with a Gen 12 Intel GPU, we now have both good and bad information to discuss.&lt;/p&gt;
&lt;p&gt;Let’s start with the bad, and this is something that affects many users, as it is the default configuration of most laptops.&lt;/p&gt;
&lt;p&gt;Intel, in their &lt;em&gt;infinite wisdom&lt;/em&gt;, decided that single channel memory configurations should &lt;a href=&#34;https://www.intel.com/content/www/us/en/support/articles/000059744/graphics.html&#34;&gt;artificially limit the integrated GPU to the slower UHD Graphics spec&lt;/a&gt;, reducing its EU (execution unit) count.
Basically, running the GPU with half its cylinders.&lt;/p&gt;
&lt;p&gt;Unless the user pays the premium for a dual channel configuration, or has the option to manually add the extra SO-DIMM stick later, performance on Intel Xe devices, or “UHD Graphics”, is &lt;em&gt;terrible&lt;/em&gt;.
Most 3D games can’t run at playable framerates even at 0.5x handheld scaling.&lt;/p&gt;
&lt;p&gt;To top it out, it’s very clear that Vulkan drivers are still a weak spot with Intel hardware.
It’s a lottery with each game. They may perform correctly, similar to their AMD and NVIDIA counterparts, or may have glaring issues.
Some shaders, for example, outright crash the driver. We will report these issues to Intel as we find them.&lt;/p&gt;
&lt;p&gt;Sadly, the usual solution of just running Linux is not a fix this time. Mesa support for Gen 12 Intel graphics hardware (Xe, Arc, etc) is still in very early stages, and the performance is usually in the sub-10 FPS territory.
We can’t wait to see Mesa once again show the Windows driver team how their job is done.
Windows users, make sure to periodically update your drivers, as each release introduces major changes, so it’s critical to keep up.
Intel is finally caring about their GPU division with the release of Arc.
And finally, as a side note, Xe graphics are sensitive to the use of FSR. They lose a considerable amount of performance, so we strongly recommend using Scaleforce instead.&lt;/p&gt;
&lt;p&gt;Now the good parts.
Getting a proper dual channel configuration not only doubles the available bandwidth, which is the most critical point of iGPU performance, but also raises the EU count to the proper Iris Xe spec you originally paid for.&lt;/p&gt;
&lt;p&gt;Benchmarking shows that under these conditions, Xe graphics manage to surpass Vega iGPUs in yuzu, as long as the Intel Vulkan drivers cooperate.
It also shows that Xe graphics are more tolerant to SMAA than, for example, NVIDIA Pascal GPUs, being an almost free setting, performance wise.
This, coupled with the better IPC of Intel CPUs, should provide an edge on budget laptops.
At least, until AMD remembers that not everyone wants to pay a fortune for an RDNA2 integrated GPU and releases a refreshed low end lineup. I got tired of waiting.&lt;/p&gt;
&lt;p&gt;As an extra juicy bonus, unlike Arc, the Intel iGPUs still have their amazing native ASTC texture decoder.
This means no delays in ASTC heavy games like &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt;, &lt;code&gt;Bayonetta 3&lt;/code&gt;, or &lt;code&gt;Astral Chain&lt;/code&gt;. The almighty RTX 4090 can’t do that.&lt;/p&gt;
&lt;p&gt;A small note regarding the ASTC support of Intel iGPUs.
Not all texture formats used by Switch games are supported by Intel, some will still need to be specially decoded.
Since these GPUs only have a single queue, Xe users should disable ASTC texture decoding from yuzu’s graphics settings.
Most of the time the Xe GPU will be the bottleneck, and making it constantly switch between decoding textures and rendering the game will incur a performance loss.
Letting the CPU carry this work will help graphical performance.
Finally some good use for those E-Cores.&lt;/p&gt;
&lt;p&gt;For those that don’t fear noise or heat, tweaking the sliders in &lt;a href=&#34;https://www.intel.com/content/www/us/en/download/17881/29183/intel-extreme-tuning-utility-intel-xtu.html?&#34;&gt;XTU&lt;/a&gt; is an easy way to get an extra GHz out of their CPUs while plugged in.
This can help double the performance in yuzu.&lt;/p&gt;
&lt;p&gt;Unfortunately, Intel’s EoL status regarding Windows drivers is starting to affect compatibility with recent games, so we officially consider Gen 9/9.5/11 Intel GPUs to be out of support on yuzu.
This covers Gen 6 to 11 CPUs, Skylake to Ice Lake.
We will provide support and log issues for them only if they run on Linux.
Or, well, macOS, once MoltenVK is fully working.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;I’m still under a sort of “NDA” with the developers, so I’m not allowed to tell you what’s cooking yet, or else.&lt;/p&gt;
&lt;p&gt;Our spies still managed to pass along a bit of information before going dark, &lt;code&gt;Project Lime&lt;/code&gt;, a co-development between bunnei, Tobi, german77, and byte[].
Stay tuned for its official announcement.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Project Gaia&lt;/code&gt; continues to progress slowly, growing closer to the internal beta testing phase.
Some of its standalone features have already been tested:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gaia.png&#34; title=&#34; This was a performance test to see how long it takes to load a game list&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2023/gaia_hu817b4f32132f260f39f23d16e4c9ec47_109187_902x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; This was a performance test to see how long it takes to load a game list&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; This was a performance test to see how long it takes to load a game list&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;A bit of sad news for outdated hardware users: we have discussed plans to discontinue OpenGL.
Fixes and improvements that are critical for Vulkan are becoming a chore to port to OpenGL, and, as you’ve seen with the progress on MoltenVK support, we have to worry about new devices that depend exclusively on Vulkan.
It won’t be very soon, but it’s time to consider getting a GPU with Vulkan support, you know, something made within the last 11 years.&lt;/p&gt;
&lt;p&gt;That’s all folks!&lt;/p&gt;
&lt;p&gt;Thank you for reading to the end.
And very special thanks to Mysterious Writer B, without their help, this article would have been seriously delayed.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./byte.jpg&#34; title=&#34; Out of the night, when the full moon is bright, comes a horseman known as B…&#34;&gt;&lt;img src=&#34;./byte.jpg&#34; alt=&#34; Out of the night, when the full moon is bright, comes a horseman known as B…&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Out of the night, when the full moon is bright, comes a horseman known as B…&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report December 2022</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/</link>
      <pubDate>Tue, 10 Jan 2023 12:00:00 -0300</pubDate>
      <author>Honghoa</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/</guid>
      <description>&lt;p&gt;Hello yuz-ers. What a year! We ended 2022 with more yuzu Fried Chicken, Vulkan changes, a new input driver, an exorbitant amount of kernel work, more performance, better visuals, and much more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello yuz-ers. What a year! We ended 2022 with more yuzu Fried Chicken, Vulkan changes, a new input driver, an exorbitant amount of kernel work, more performance, better visuals, and much more!&lt;/p&gt;
&lt;h2 id=&#34;project-yfc-part-15-and-a-cache-invalidation&#34;&gt;Project Y.F.C. part… 1.5, and a cache invalidation&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; has also been working hard on his beloved project, releasing &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9501&#34; data-gh-pr=&#34;9501&#34;&gt;Y.F.C. Part 1.5.&lt;/a&gt;

Basically an abridged version of what is expected for the full “Part 2” release.
The changes in this pull request include a rework of the &lt;code&gt;MacroHLE&lt;/code&gt; implementation to include various new macros for indirect draws and configurations.&lt;/p&gt;
&lt;p&gt;As discussed in previous articles, macros are small GPU programs that implement features like indirect and instanced draws. They must be emulated.
MacroHLE (High-Level Emulation) is the process of avoiding executing a requested macro and instead translating it directly to the code that it would have generated (like an instanced or indirect draw).
This works in contrast and in parallel with MacroJIT, which works by actually emulating the loops and control flow contained in macro programs in a &lt;a href=&#34;https://en.wikipedia.org/wiki/Just-in-time_compilation&#34;&gt;just-in-time&lt;/a&gt; fashion.&lt;/p&gt;
&lt;p&gt;Now, why keep both? Well, each one performs their own specialized task.
MacroHLE&amp;rsquo;s advantage compared to MacroJIT has to do with the emulation of indirect calls.
An indirect call, such as a draw, uses data generated somewhere in the GPU through some shader in order to establish the draw parameters and its draw count.
Traditionally with MacroJIT we had to sync the Host GPU and Guest GPU to obtain the indirect data in order to execute the macro correctly.
With MacroHLE, we create an indirect draw command in the host GPU that points to the translated address of where the GPU generated data should be.
Thus skipping the syncing.&lt;/p&gt;
&lt;p&gt;Thanks to these improvements, yuzu now is able to more efficiently execute macros, considerably reducing CPU overhead, and without having to change any setting.
What we internally like to call a “passive skill”.&lt;/p&gt;
&lt;p&gt;As a result of these changes, performance has been improved in several titles, including those developed by Koei Tecmo, &lt;code&gt;Pokémon Scarlet and Violet&lt;/code&gt;, &lt;code&gt;Bayonetta 3&lt;/code&gt;, and &lt;code&gt;Monster Hunter Rise&lt;/code&gt; (with the exception of version 12.0.0, which still requires further fixes) to name a few.
The crashes in &lt;code&gt;Fire Emblem: Warriors&lt;/code&gt; have also been fixed.
We measured a 5-20% performance boost in select titles, but the improvement may be higher on CPUs with a lot of cache. From our testing, the 5800X3D can reach over 30% in some games.
The performance cost of rendering at higher resolutions was also greatly reduced.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./yfc.png&#34; title=&#34; R5 5600X - 2x16GB 3933MHz CL18 - RX 6600&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/yfc_hu407360582f839a91299aa44ce61b9086_19647_736x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; R5 5600X - 2x16GB 3933MHz CL18 - RX 6600&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; R5 5600X - 2x16GB 3933MHz CL18 - RX 6600&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;But the goodies don’t end here! Blinkhawk also added support for the &lt;code&gt;VK_EXT_extended_dynamic_state2&lt;/code&gt; and &lt;code&gt;VK_EXT_extended_dynamic_state3&lt;/code&gt; Vulkan extensions, reducing the amount and size of shaders needed to be built during gameplay.&lt;/p&gt;
&lt;p&gt;This relatively “new” pair, along with the already implemented &lt;code&gt;VK_EXT_extended_dynamic_state&lt;/code&gt; and &lt;code&gt;VK_EXT_vertex_input_dynamic_state&lt;/code&gt;, are the four extensions responsible for considerably reducing shader building stuttering.
But as it always goes, support for these extensions in consumer GPUs is spotty at best, and a mess to support at worst.
&lt;code&gt;State3&lt;/code&gt; in particular is only supported by the &lt;a href=&#34;https://developer.nvidia.com/vulkan-driver&#34;&gt;NVIDIA Vulkan Beta&lt;/a&gt; drivers, version 527.86 at the time of writing, and recent (late 2021 and newer) RADV Mesa drivers.
We recommend anyone interested in testing how a fresh shader cache performs to give these drivers a go.&lt;/p&gt;
&lt;p&gt;With no alternative, implementing these extensions forced us to perform another dreaded cache invalidation.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dynamic.png&#34; title=&#34; Proof that the best GPUs for yuzu continue to be NVIDIA for either OS, or AMD on Linux&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/dynamic_huac5e87ab1daa4478db6473d6600ae77d_8010_663x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Proof that the best GPUs for yuzu continue to be NVIDIA for either OS, or AMD on Linux&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Proof that the best GPUs for yuzu continue to be NVIDIA for either OS, or AMD on Linux&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Most drivers cover at least 3 of the 4 extensions without issue, one way or another, with one glaring exception, AMD Windows drivers.
The price of this is higher stuttering during gameplay when new shaders are being processed compared to running the same card on Linux with RADV, or using any other brand.&lt;/p&gt;
&lt;p&gt;A small side-note, Linux RADV users should update their Mesa version to the latest (or use a more recent distro version if needed), as support for &lt;code&gt;state2&lt;/code&gt; was broken in versions before 21.2.&lt;/p&gt;
&lt;p&gt;As a last second change, Blinkhawk tested removing the 16-bit floating point (FP16) blacklist enforced on NVIDIA Ampere and newer GPUs (RTX 3000 series and higher). If it worked, it would have allowed them to work similarly to Turing and AMD Radeon offerings in this aspect. However, NVIDIA redesigned how their FP32 and FP16 units operate on Ampere and newer, with both providing identical performance. Unfortunately, even if it were faster, it&amp;rsquo;d be irrelevant in the end, as FP16 on Ampere and Ada is still bugged in the drivers, producing graphical issues in many games.&lt;/p&gt;
&lt;p&gt;The only remaining architecture that could benefit from enabling blacklisted FP16 support is Intel on Windows, but their drivers are a dumpster fire regarding FP16. So they continue to emulate 16-bit precision with 32-bit the same way as Ampere and Ada, in this case with its always present performance loss.
&lt;em&gt;Of course&lt;/em&gt; the weakest architecture that could benefit the most from this change is the only one that remains broken…&lt;/p&gt;
&lt;p&gt;Another extra benefit of this iteration of &lt;code&gt;Y.F.C.&lt;/code&gt; is that &lt;code&gt;Normal&lt;/code&gt; GPU accuracy is much safer to use.
Particles will continue to be better in &lt;code&gt;High&lt;/code&gt;, but games like &lt;code&gt;Pokémon Scarlet/Violet&lt;/code&gt;, &lt;code&gt;Bayonetta 3&lt;/code&gt;, and many others can be played with &lt;code&gt;Normal&lt;/code&gt; accuracy without glitches much more regularly with the big performance benefit this provides (&lt;code&gt;Bayonetta 3&lt;/code&gt; in particular still needs &lt;code&gt;High&lt;/code&gt; for its title screen, but gameplay is safe on &lt;code&gt;Normal&lt;/code&gt;).&lt;/p&gt;
&lt;h2 id=&#34;other-awesome-gpu-changes-and-yet-more-cache-invalidations&#34;&gt;Other awesome GPU changes, and yet more cache invalidations&lt;/h2&gt;
&lt;p&gt;The month doesn’t stop there, there has been a plethora of changes worth mentioning too in our GPU codebase.&lt;/p&gt;
&lt;p&gt;Oh boy, &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; sure has been busy this month.&lt;/p&gt;
&lt;p&gt;To start off, he is responsible for &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9409&#34; data-gh-pr=&#34;9409&#34;&gt;implementing the SMAA anti-aliasing filter&lt;/a&gt;
 for our Vulkan and OpenGL backends.
But that’s not the whole story, so let’s elaborate further.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SMAA&lt;/code&gt;, or enhanced subpixel morphological antialiasing, is an improvement over &lt;a href=&#34;https://en.wikipedia.org/wiki/Morphological_antialiasing&#34;&gt;MLAA&lt;/a&gt; developed by the Spanish Universidad de Zaragoza and video game studio Crytek, of Crysis fame.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/breadfish64&#34;&gt;BreadFish&lt;/a&gt; implemented the original OpenGL version, intending to release it as part of the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/&#34;&gt;resolution scaler&lt;/a&gt;. As it turns out, implementing &lt;code&gt;SMAA&lt;/code&gt; for Vulkan is no joke, and after being nagged by your writer, byte[] had to work 2 weeks to get it in shape.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SMAA&lt;/code&gt;, being based on &lt;code&gt;MLAA&lt;/code&gt;, intends to be a post-processing (aka shader-based) option focused on quality over performance by analyzing adjacent pixels, unlike &lt;code&gt;FXAA&lt;/code&gt; which just blurs the entire screen.
The &lt;code&gt;SMAA&lt;/code&gt; filter is implemented using render passes and it produces its best results when combined with FSR filtering.
AMD recommends properly anti-aliasing the image in their official Overview Integration Guide.
The results speak for themselves:&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/noaa_hue908f0f6b2436540c86aa7f674431f49_361749_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Here you can see an ideal test case for SMAA, the simple triangle of death&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/1smaa_huedf690bda4e99ac55af06fd456bd7739_379469_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Here you can see an ideal test case for SMAA, the simple triangle of death&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Here you can see an ideal test case for SMAA, the simple triangle of death&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./svnoaa.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/svnoaa_hu79520dc4751513dffa3df3ff1e263340_1171535_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ropes and power lines, the classic example for anti-aliasing testing (Pokémon Scarlet)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./svfxaa.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/svfxaa_huaf80677739c1c974c725bf6e52b5913b_1198121_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ropes and power lines, the classic example for anti-aliasing testing (Pokémon Scarlet)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./svsmaa.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/svsmaa_hu40d2a8459748093c0e32d8d553dc7d48_1338828_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ropes and power lines, the classic example for anti-aliasing testing (Pokémon Scarlet)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Ropes and power lines, the classic example for anti-aliasing testing (Pokémon Scarlet)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc3noaa.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/xc3noaa_hu12c9cd8179560b0492309d83c10bf4b5_278143_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Sprite elements in 3D games benefit from it (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc3fxaa.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/xc3fxaa_hu927f4720b6fc328452a804eb2370d856_275106_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Sprite elements in 3D games benefit from it (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc3smaa.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/xc3smaa_hua53a8f42219e109ec9d7cb4ecc09bb19_276508_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Sprite elements in 3D games benefit from it (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Sprite elements in 3D games benefit from it (Xenoblade Chronicles 3)&lt;/p&gt;


&lt;p&gt;For those interested, we used the &lt;code&gt;ULTRA&lt;/code&gt; preset, testing showed a low performance loss even with a GT 1030, so we preferred to focus on quality.
Only users with old integrated GPUs should avoid &lt;code&gt;SMAA&lt;/code&gt;. For the rest, it’s a safe option to turn on and forget.
You can find the feature in &lt;code&gt;Emulation &amp;gt; Configure &amp;gt; Graphics &amp;gt; Anti-Aliasing Method&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/botwfxaa_hua72d1159361779e5688a2c180126e113_695738_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;SMAA doesn’t suffer from the horrible colour banding of FXAA (The Legend of Zelda: Breath of the Wild)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/botwsmaa_hu3cb7005c7501afc4fc98d4f15d086c38_714089_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;SMAA doesn’t suffer from the horrible colour banding of FXAA (The Legend of Zelda: Breath of the Wild)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;SMAA doesn’t suffer from the horrible colour banding of FXAA (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;




&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/lowresbug_hu297de1eefde4fa5cedbb38e199ed299e_1867108_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;And it&amp;#39;s a great help for users running low resolution multipliers. This example is 0.5x Bilinear alone Vs 0.5x FSR &amp;#43; SMAA (Pokémon Scarlet)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/lowresfix_hu33d4d1cbdb8d477978e65678bee89940_3690733_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;And it&amp;#39;s a great help for users running low resolution multipliers. This example is 0.5x Bilinear alone Vs 0.5x FSR &amp;#43; SMAA (Pokémon Scarlet)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;And it&amp;#39;s a great help for users running low resolution multipliers. This example is 0.5x Bilinear alone Vs 0.5x FSR &amp;#43; SMAA (Pokémon Scarlet)&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./all3.png&#34; title=&#34; A close-up to finish (Xenoblade Chronicles 3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/all3_hu0b93cac78d5b62c328d0abb5a23bfa7b_1363082_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; A close-up to finish (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; A close-up to finish (Xenoblade Chronicles 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;As a side note, NVIDIA’s version of FSR, NIS, was also tested, but the result is so ugly and over-sharpened, that we decided to keep the best option of the two, FSR.&lt;/p&gt;
&lt;p&gt;byte[] has also fixed a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9420&#34; data-gh-pr=&#34;9420&#34;&gt;problem with anisotropic filtering.&lt;/a&gt;

If users ran the RADV driver on Linux, anisotropic filtering values other than &lt;code&gt;Default&lt;/code&gt; would cause a distinct &amp;ldquo;acne-like&amp;rdquo; rendering issue in &lt;code&gt;Super Mario Odyssey&lt;/code&gt;. The issue persists at other anisotropic filtering and resolution multiplier values., but byte[] continues to work on the issue.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/off1bug_huaec446ec98515d58fbd69ce96b424f60_1018191_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The so called RADV acne (Super Mario Odyssey)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/off1fix_huec4631f796b5a363a4fe62141c36d0d6_996044_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The so called RADV acne (Super Mario Odyssey)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The so called RADV acne (Super Mario Odyssey)&lt;/p&gt;


&lt;p&gt;The change also addresses an issue with the buggy water rendering in &lt;code&gt;Super Mario Sunshine&lt;/code&gt; with automatic anisotropic filtering on Lavapipe (Mesa, Linux), although the error still occurs at other anisotropic filtering values.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/off2bug_huc4e77688effdd6d4aeb65b49f6c88017_926147_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Kind of makes it look even older (Super Mario Sunshine)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/off2fix_hu6d7dc462849d8ec5ab969daed909cbb1_862900_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Kind of makes it look even older (Super Mario Sunshine)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Kind of makes it look even older (Super Mario Sunshine)&lt;/p&gt;


&lt;p&gt;byte[] also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9415&#34; data-gh-pr=&#34;9415&#34;&gt;corrected the semantics of data cache management operations&lt;/a&gt;
 in the memory.&lt;/p&gt;
&lt;p&gt;Previously, when the guest requested a cache invalidation, the implementation would simply invalidate the cache on the hardware, rather than making the memory visible to the GPU as intended.&lt;/p&gt;
&lt;p&gt;On the side, he also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9372&#34; data-gh-pr=&#34;9372&#34;&gt;promoted various Vulkan Extensions to use core methods.&lt;/a&gt;
 In the Vulkan API, vendor extensions are optional features provided by specific hardware vendors or drivers that may not be available on all systems. In contrast, core methods are a fundamental part of the Vulkan specification and are guaranteed to be available on all systems that support the API. Thus, promoting extensions to use core methods can improve their reliability and portability.&lt;/p&gt;
&lt;p&gt;byte[] made further &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9393&#34; data-gh-pr=&#34;9393&#34;&gt;initialization tweaks to the Vulkan API.&lt;/a&gt;
 These changes included the restoration of &lt;code&gt;VK_KHR_timeline_semaphore&lt;/code&gt; and &lt;code&gt;VK_EXT_host_query_reset&lt;/code&gt;, which were mistakenly removed in a previous PR. He also added the flag &lt;code&gt;VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR&lt;/code&gt; to the &lt;code&gt;VkInstanceCreateInfo&lt;/code&gt; structure for &lt;code&gt;MoltenVK&lt;/code&gt; to allow &lt;code&gt;MoltenVK&lt;/code&gt; to be detected as an available Vulkan device.&lt;/p&gt;
&lt;p&gt;Keep in mind that a lot more work is needed in order to get yuzu rendering on macOS devices. This is only early preliminary work.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; has implemented the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9401&#34; data-gh-pr=&#34;9401&#34;&gt;draw manager for Maxwell3D&lt;/a&gt;
 with the aim of eliminating workarounds and reorganising the drawing process to more accurately enumerate the drawing behaviour.
As a result of these changes, the issue in &lt;code&gt;Dragon Quest Builders&lt;/code&gt; where some 3D models were not rendering properly has been fixed.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/dbqbug_hu7604a6c9854fd93fd9ea3ab3d8c0728e_2007627_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more missing stuff! (Dragon Quest Builders)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/dbqfix_hu9a5fee0025b0488988d7c3d2121f3765_2354924_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more missing stuff! (Dragon Quest Builders)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;No more missing stuff! (Dragon Quest Builders)&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ds.png&#34; title=&#34; No armour is best armour (DARK SOULS)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/ds_hu2ebb11c67e22dfde2808a3fe3a0dc478_717004_670x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; No armour is best armour (DARK SOULS)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; No armour is best armour (DARK SOULS)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Following these changes, vonchenplus also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9406&#34; data-gh-pr=&#34;9406&#34;&gt;improved the code for the topology update logic&lt;/a&gt;
 so that the implementation is more accurate. This change was necessary in order to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9423&#34; data-gh-pr=&#34;9423&#34;&gt;implement special topologies with Vulkan.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;This includes support for &lt;code&gt;quad strips&lt;/code&gt;, which require the use of triangles to simulate them, and the ability to simulate indexed and non-indexed modes.
In non-indexed mode, a fixed mapping table is used to connect the vertices, while in indexed mode, a compute shader is used to dynamically map the original drawing indices.
vonchenplus has also implemented support for line loops, which require the use of triangle lists to simulate them, and for polygons, which require the use of triangle fans.&lt;/p&gt;
&lt;p&gt;These changes fixed the Hero&amp;rsquo;s path in &lt;code&gt;Legend of Zelda: Breath of the Wild&lt;/code&gt;, as well as the Status Summary graphic in &lt;code&gt;Pokémon Scarlet and Violet&lt;/code&gt;, and they also gave us another shader cache invalidation, yay!&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/pokebug_hub8f2000f254dd66381f4f42279407863_2567699_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Don’t mess with the stats! Can’t do breeding without the stats! (Pokémon Scarlet)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/pokefix_hu2ed312f3b0484778d47affb8361bbd5a_2693247_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Don’t mess with the stats! Can’t do breeding without the stats! (Pokémon Scarlet)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Don’t mess with the stats! Can’t do breeding without the stats! (Pokémon Scarlet)&lt;/p&gt;




&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/botwbug_huaef779b194d81905c620c0f22f1b009c_3850902_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;When the Sheika GPS signal returns (The Legend of Zelda: Breath of the Wild)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/botwfix_hu0da78fa54c9c88e5b941eda3d0fb2ba4_3934569_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;When the Sheika GPS signal returns (The Legend of Zelda: Breath of the Wild)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;When the Sheika GPS signal returns (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;


&lt;p&gt;Blinkhawk has added &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9383&#34; data-gh-pr=&#34;9383&#34;&gt;alpha to coverage and alpha to one&lt;/a&gt;
 to our Vulkan backend.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Alpha to coverage&lt;/code&gt; is a multisampling technique that is used to improve the quality of transparent or partially transparent pixels.
It works by blending the alpha values of multiple samples taken from the same pixel to produce a single, more accurate result.
This can help to reduce aliasing and other rendering artifacts that can occur when rendering transparent pixels.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Alpha to one&lt;/code&gt;, on the other hand, is a technique that is used to improve the quality of partially transparent pixels by setting the alpha value of each pixel to a maximum of &lt;code&gt;1.0&lt;/code&gt;.
This can help to reduce the amount of alpha blending that needs to be performed, which can improve the performance of the rendering pipeline.&lt;/p&gt;
&lt;p&gt;These changes have fixed the shading of trees and grass problems when viewed up close or from a distance in &lt;code&gt;Pokémon Scarlet and Violet&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/alphabug_hucdeb648cb58d23bddcab0528f70d4621_4991715_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The camera isn’t more interested in that tree, you should learn from this, Dark Souls (Pokémon Scarlet)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/alphafix_hu700ef594cb151f34e4333545157bf0dc_7195506_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The camera isn’t more interested in that tree, you should learn from this, Dark Souls (Pokémon Scarlet)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The camera isn’t more interested in that tree, you should learn from this, Dark Souls (Pokémon Scarlet)&lt;/p&gt;


&lt;p&gt;vonchenplus has corrected errors caused by yuzu&amp;rsquo;s faulty detection of draw types.
In the past, yuzu would set every vertex and index count register to zero after each draw to determine if the next draw would be a regular or indexed draw.
&lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; proves to us that these registers initiate some draw calls based on previous values.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9353&#34; data-gh-pr=&#34;9353&#34;&gt;Changing this behaviour&lt;/a&gt;
 partially fixes the particles present in &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;. You can now more easily perform your off-seer duties.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./xc3.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Meat is on the menu! (Xenoblade Chronicles 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;cpu-requirement-changes-with-free-performance&#34;&gt;CPU requirement changes, with free performance&lt;/h2&gt;
&lt;p&gt;We don’t usually cover compilation changes here, but this time we had to do it because it affects compatibility.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/goldenx86&#34;&gt;Your writer&lt;/a&gt; (or co-writer in this progress report, my &lt;a href=&#34;https://github.com/kurenaihana&#34;&gt;partner&lt;/a&gt; did most of the work this time) has been playing with compilation flags in order to get more free performance, following previous work done by Blinkhawk some time ago.&lt;/p&gt;
&lt;p&gt;Microsoft Visual C++ (MSVC, Visual Studio) is simple enough (we’ll talk about Linux later). You enable full program optimizations, optimize for performance instead of size, a bit here, a bit there, and you gain a nice 3%, but I wanted more.
Last month, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; improved the build process, saving both time and memory. This created a “gap” big enough to enable the &lt;em&gt;Big One&lt;/em&gt;, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9442&#34; data-gh-pr=&#34;9442&#34;&gt;Link-Time Optimizations&lt;/a&gt;
 (LTO), an optimization that in the past had to be discarded for eating all the available RAM of our buildbots.&lt;/p&gt;
&lt;p&gt;Windows testing went well and in some cases the performance uplift reached up to 12%.
The problem was Linux. LTO is aggressive by nature, and there’s no guarantee that all parts of the project will react nicely to it.
In this case, the problem was Qt, the UI looked completely garbled.
So LTO had to go, but in its place, we now require what &lt;a href=&#34;https://github.com/merryhime/dynarmic/&#34;&gt;Dynarmic&lt;/a&gt; already did for a while, &lt;a href=&#34;https://en.wikipedia.org/wiki/X86-64#Microarchitecture_levels&#34;&gt;x86-64-v2&lt;/a&gt; hardware.&lt;/p&gt;
&lt;p&gt;GCC and Clang builds will now compile assuming the features of CPUs are compatible with the instruction sets that form part of x86-64-v2, the highest one being SSE4.2.
This means the minimum CPU required for yuzu to work without crashing, in both Windows and Linux, is now the first generation of Core i-series (500-900 series), which are almost 15 years old, and the FX and APU series from AMD, which are almost 12 years old.
The performance boost on GCC and Clang is up to 7%.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./lto1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/lto1_hu918e7ea11e9040fc28310e37ef5c636f_28477_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;First system runs i7-12700H - 2x16GB 4800MHz CL40 - RTX 3080 Mobile 16GB 175W, second system runs R7 5800X3D - 2x16GB 3600MHz CL16 - RTX 4090&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./lto2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/lto2_hu70113885fa42d19352338a1763fd1959_28146_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;First system runs i7-12700H - 2x16GB 4800MHz CL40 - RTX 3080 Mobile 16GB 175W, second system runs R7 5800X3D - 2x16GB 3600MHz CL16 - RTX 4090&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;First system runs i7-12700H - 2x16GB 4800MHz CL40 - RTX 3080 Mobile 16GB 175W, second system runs R7 5800X3D - 2x16GB 3600MHz CL16 - RTX 4090&lt;/p&gt;


&lt;p&gt;We originally wanted to enforce x86-64-v3 to get an even bigger performance boost, as well as to ensure a minimum level of performance, as any CPU lacking AVX, AVX2, and in particular, FMA, will be &lt;em&gt;&lt;strong&gt;very&lt;/strong&gt;&lt;/em&gt; slow, no matter its clock speed or core count.&lt;/p&gt;
&lt;p&gt;Yes, that means the 8 core Ivy Bridge Xeon you bought for 20 bucks is &lt;em&gt;not&lt;/em&gt; fast enough for this task.&lt;/p&gt;
&lt;p&gt;The problem, however, is that doing so would leave close to 9% of the user base out of support, according to our telemetry.
That many users is a considerable number, so we&amp;rsquo;ve decided to wait until more users adopt more modern CPUs before implementing this change.
We’ll re-evaluate enforcing x86-64-v3 in the future once OpenGL eventually ends up on the chopping block as well.&lt;/p&gt;
&lt;p&gt;While this change would also apply for Windows, MSVC is not flexible enough to let us build for x86-64-v2, it either supports SSE2, or jumps straight to the first AVX.
Dynarmic already manually uses x86-64-v2 extensions, so any CPU lacking SSE4.2 is considered unstable regardless of the OS in use.&lt;/p&gt;
&lt;p&gt;x86-64-v4 will not be an option for many years, mainly because Intel can’t decide if AVX-512, made by themselves, is something that their users should be allowed to actually use.&lt;/p&gt;
&lt;p&gt;If an old-school user is so strongly set on running yuzu on decades old CPUs, the Flatpak builds are still generic, or there’s always the option of building yuzu manually, allowing you to configure any requirements.&lt;/p&gt;
&lt;h2 id=&#34;new-joy-con-driver-and-other-input-improvements&#34;&gt;New Joy-Con driver and other input improvements&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; has done it again, giving us an amazing Christmas gift, a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9492&#34; data-gh-pr=&#34;9492&#34;&gt;new input driver for Joy-Cons&lt;/a&gt;

This is an in-house development that doesn’t rely on SDL, so it gives us much more freedom to add features that weren’t previously available.&lt;/p&gt;
&lt;p&gt;The basics are covered. Single and Dual Joy-Con modes are available, button, stick, motion mapping works the same as before.
But that&amp;rsquo;s not exciting, here’s all the new stuff that was added:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When launching yuzu, the controller player LEDs will show a blinking pattern to signal that the emulator has taken control. Once you’re in game, the LEDs will reflect the player number.&lt;/li&gt;
&lt;li&gt;HD Rumble is fully implemented now, complete parity to pairing natively.&lt;/li&gt;
&lt;li&gt;The emulator can now automatically select between automatic and custom calibration profiles, avoiding stick drift (as much as the Joy-Con can physically do, we can’t fix Nintendo’s problems) and providing much more accurate motion.&lt;/li&gt;
&lt;li&gt;Colour reading is added, now the actual colour of the controller is reflected in the UI and in games, just like on Switch.&lt;/li&gt;
&lt;li&gt;Amiibos can now be loaded with the Joy-Con just like you do on the Switch.&lt;/li&gt;
&lt;li&gt;The Ring Controller is now fully supported, no need for external programs.&lt;/li&gt;
&lt;li&gt;Preliminary support for the IR camera is done, games like &lt;code&gt;Night Vision&lt;/code&gt;, &lt;code&gt;Game Builder Garage&lt;/code&gt;, and &lt;code&gt;Nintendo Labo&lt;/code&gt; can make use of this neat feature at the base of the right Joy-Con.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All this extra accuracy highlights a problem we didn’t often face before: PC Bluetooth connections are very easy to saturate. Cheaper/Intel bluetooth chipsets or areas with tons of interference are especially prone to this.
For this reason, HD Rumble can potentially cause lag depending on the user’s specific circumstances. We recommend unmapping/disabling rumble in those cases.&lt;/p&gt;
&lt;p&gt;Speaking of saturation, the IR camera may be slow in some games. The reason being that we currently implement only the image transfer mode, which saves 320x240 pictures. Some games prefer faster framerates at the cost of resolution, going as low as 40x30.
Once all modes are added in, the choppy framerate will disappear.&lt;/p&gt;
&lt;p&gt;Amiibo data writing is a work in progress.&lt;/p&gt;
&lt;p&gt;german77&amp;rsquo;s desire for incredible input improvements doesn&amp;rsquo;t end there.&lt;/p&gt;
&lt;p&gt;german77 implemented the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9369&#34; data-gh-pr=&#34;9369&#34;&gt;&lt;code&gt;mifare&lt;/code&gt; service,&lt;/a&gt;
 allowing games read and write plain mifare tags.
Games like &lt;code&gt;Skylanders Imaginators&lt;/code&gt; make use of this feature.
The only feature lacking is support for encrypted read and writes.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sky.png&#34; title=&#34; Tagging! (Skylanders Imaginators)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/sky_hu94439d4602d36c3191bb97d9b620f96a_2298233_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Tagging! (Skylanders Imaginators)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Tagging! (Skylanders Imaginators)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Speaking of SDL, a recent update broke the way it handled the GUID, the identifier of several controllers, including the one integrated into the Steam Deck, causing many annoyances for Deck users.
So, with no alternative on hand, german77 had to implement a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9404&#34; data-gh-pr=&#34;9404&#34;&gt;custom filter&lt;/a&gt;
 to solve the issue.&lt;/p&gt;
&lt;p&gt;And lastly, as a very important quality of life change, german77 made the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9495&#34; data-gh-pr=&#34;9495&#34;&gt;input device list refresh automatically,&lt;/a&gt;
 ensuring that yuzu detects controllers without the need for manual intervention.
Goodbye tiny refresh button!&lt;/p&gt;
&lt;p&gt;To close the section, &lt;a href=&#34;https://github.com/MonsterDruide1&#34;&gt;MonsterDruide1&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9489&#34; data-gh-pr=&#34;9489&#34;&gt;increased the accuracy of analog sticks&lt;/a&gt;
 for TAS by hardcoding the range and deadzones of the user input.&lt;/p&gt;
&lt;h2 id=&#34;kernel-building-and-core-changes&#34;&gt;Kernel, building, and core changes&lt;/h2&gt;
&lt;p&gt;With an update for Dynarmic and SDL2, byte[] enabled &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9374&#34; data-gh-pr=&#34;9374&#34;&gt;support for ARM64&lt;/a&gt;
 compilation.
This means all Switch titles can be tested on Linux ARM64 devices with compatible Vulkan drivers.&lt;/p&gt;
&lt;p&gt;As part of this effort, we started implementing Flatpak support for ARM64 Linux devices. This &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9419&#34; data-gh-pr=&#34;9419&#34;&gt;required making OpenGL optional&lt;/a&gt;
 for the build process, as Flatpak’s Qt build only supports OpenGL ES, not the full fledged OpenGL 4.6 compatibility profile we require.&lt;/p&gt;
&lt;p&gt;Part of these changes fixed compilation for macOS, but the situation remains the same, without &lt;code&gt;MoltenVK&lt;/code&gt; support, nothing will be rendered.&lt;/p&gt;
&lt;p&gt;epicboy implemented a series of changes with the goal of minimizing the overhead of dynamic memory allocation, a task which involves requesting memory from the operating system, and can slow-down performance in some circumstances.&lt;/p&gt;
&lt;p&gt;The texture cache, in particular, was a significant contributor to this issue, as it constantly allocated and then deallocated memory when transferring textures to and from the GPU.
To address this problem, epicboy optimized the texture cache to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9490&#34; data-gh-pr=&#34;9490&#34;&gt;pre-allocate a buffer to store swizzle data&lt;/a&gt;
 and reuse it whenever possible, rather than performing a dynamic memory allocation every time this was done.
This change should result in reduced stuttering, as memory will now only be requested from the operating system if the buffer is not large enough to hold the data.&lt;/p&gt;
&lt;p&gt;epicboy also made similar changes to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9508&#34; data-gh-pr=&#34;9508&#34;&gt;optimise the &lt;code&gt;ReadBuffer&lt;/code&gt; function&lt;/a&gt;
, which likewise takes a similar approach: instead of allocating and deallocating memory, a buffer is created once to hold data in the memory, and it only reallocates whenever it needs to grow.&lt;/p&gt;
&lt;p&gt;Additionally, he introduced a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9453&#34; data-gh-pr=&#34;9453&#34;&gt;&lt;code&gt;ScratchBuffer&lt;/code&gt; class&lt;/a&gt;
 to act as a wrapper around a heap-allocated buffer of memory.&lt;/p&gt;
&lt;p&gt;The advantage of this class lies with the fact that it eliminates the need to initialize the stored values, and the need to copy the data when the buffer needs to grow.
Thus, it would help to speed up things by minimizing the amount of time spent on memory management tasks.&lt;/p&gt;
&lt;p&gt;german77 implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9444&#34; data-gh-pr=&#34;9444&#34;&gt;the &lt;code&gt;FreeThreadCount&lt;/code&gt; info type,&lt;/a&gt;
 which is needed by titles such as &lt;code&gt;Just Dance 2023 Edition&lt;/code&gt; (although that game requires additional changes in order to work).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Saalvage&#34;&gt;Saalvage&lt;/a&gt; noticed an error in yuzu&amp;rsquo;s kernel implementation and made the necessary changes to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9411&#34; data-gh-pr=&#34;9411&#34;&gt;unlock thread mutex before destruction,&lt;/a&gt;
 as not doing so incurs an undefined behaviour. “Here be Dragons” and all that.&lt;/p&gt;
&lt;p&gt;byte[] submitted a change that &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9398&#34; data-gh-pr=&#34;9398&#34;&gt;improves the handling of system startup failure,&lt;/a&gt;
 in order to prevent deadlocks and crashes when/if the GPU initialization fails.&lt;/p&gt;
&lt;p&gt;He also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9474&#34; data-gh-pr=&#34;9474&#34;&gt;added &lt;code&gt;KHardwareTimer&lt;/code&gt;.&lt;/a&gt;

This component is designed to fix an issue with incorrect event unregistration when threads request a timeout for certain operations.&lt;/p&gt;
&lt;p&gt;Without the fix, the threads would return successfully from the operation but fail to cancel the timeout, which would cause the timer to mistakenly fire on the thread and cancel a random unrelated operation.&lt;/p&gt;
&lt;p&gt;This change fixes the random hangs that have been plaguing us for months in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;, as well as &lt;code&gt;Persona 5 Royal&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./p5.png&#34; title=&#34; The soundtrack that steals your heart (Persona 5 Royal)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/p5_hu64069d0b4a06dbbf6748328b69d68bcf_4958703_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The soundtrack that steals your heart (Persona 5 Royal)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The soundtrack that steals your heart (Persona 5 Royal)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;byte[] also introduced a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9496&#34; data-gh-pr=&#34;9496&#34;&gt;workaround for crashes caused due to unallocated memory&lt;/a&gt;
 after noticing that yuzu always used memory blocks without marking them as allocated, causing it to overlap memory used by the game.
He fixed the bug by making sure we now allocate the memory before using it.
This is meant to alleviate the situation while other parts of the kernel are being ironed out.&lt;/p&gt;
&lt;p&gt;This is more related to error handling, but counts nonetheless.
byte[] added an option to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9370&#34; data-gh-pr=&#34;9370&#34;&gt;force the emulator to break when an invalid memory access happens.&lt;/a&gt;

This means that if/when a game explodes in the background, the emulator will crash instead of slowly eating all the available system RAM.
Problems like these can be caused by emulation issues, damaged game dumps, or even some wonky mods, so it’s always a better option to avoid  crashing the entire emulator, and if the user has little enough RAM, making the OS suffer.&lt;/p&gt;
&lt;p&gt;Along with endless silent changes that don’t get mentioned here, &lt;a href=&#34;https://github.com/lioncash&#34;&gt;lioncash&lt;/a&gt; made some changes to the input code to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9389&#34; data-gh-pr=&#34;9389&#34;&gt;reduce memory use ever so slightly.&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;user-interface-and-audio-changes&#34;&gt;User interface and audio changes&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;ve had some interesting user interface quality of life changes implemented!
lioncash made the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9394&#34; data-gh-pr=&#34;9394&#34;&gt;SPIR-V shader backend element translatable,&lt;/a&gt;
 so it doesn’t always show in English for everyone.
The community effort working on translation can now take the label and update it accordingly.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./spirv.png&#34; title=&#34; We still don’t recommend using it over GLSL, but Mesa users report they enjoy it&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/spirv_hueb8a6ccf7576163a4089672b3acf10c8_11937_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; We still don’t recommend using it over GLSL, but Mesa users report they enjoy it&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; We still don’t recommend using it over GLSL, but Mesa users report they enjoy it&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Some months ago, with the core timing changes, we allowed users to boot games with their framerate unlocked after continuous requests from the community.
As it turns out, nothing changed. Several games hate booting with unlocked framerates, and the support channels get their fair share of people asking why their game doesn’t want to boot.
So, simple fix, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9425&#34; data-gh-pr=&#34;9425&#34;&gt;unlocked framerate at boot rights denied.&lt;/a&gt;

The hotkey to toggle unlocked framerate is &lt;code&gt;Ctrl + U&lt;/code&gt; by default, only a small nuisance.&lt;/p&gt;
&lt;p&gt;Users reported that they couldn’t record or stream their yuzu window while in windowed mode.
byte[] found the cause was setting the &lt;code&gt;WA_DontCreateNativeAncestors&lt;/code&gt; Qt property for all platforms, instead of just for wayland.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9461&#34; data-gh-pr=&#34;9461&#34;&gt;Issue down, streamers rejoice.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Discord user piplup reported that yuzu didn’t save the device name (what you would call the console) after accessing a game’s custom configuration window.
german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9466&#34; data-gh-pr=&#34;9466&#34;&gt;fixed the issue&lt;/a&gt;
 (this particular setting lacked a custom configuration equivalent), and also fixed Qt 6 build issues while at it.&lt;/p&gt;
&lt;p&gt;Another very nice quality of life improvement made by german77 is making yuzu &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9467&#34; data-gh-pr=&#34;9467&#34;&gt;remember the last selected directory&lt;/a&gt;
 for &lt;code&gt;Install files to NAND…&lt;/code&gt;.
If you keep your dumps in the same folder, updating your games is going to take fewer clicks now.&lt;/p&gt;
&lt;p&gt;byte[] managed an amazing victory in the war against crashes when closing/stopping games. He worked on &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9476&#34; data-gh-pr=&#34;9476&#34;&gt;making shutdown not visibly freeze yuzu,&lt;/a&gt;
 avoiding crashing the emulator while the game quits, and showing a nice pop-up message while at it too!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./shutdown.png&#34; title=&#34; We take longer than the Switch, but some games really love to take their time on console&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2022/shutdown_hu2363a0c0f90b02957b604b0be8dfff72_895045_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; We take longer than the Switch, but some games really love to take their time on console&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; We take longer than the Switch, but some games really love to take their time on console&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; helped make this possible by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9477&#34; data-gh-pr=&#34;9477&#34;&gt;hiding button dialog boxes,&lt;/a&gt;
 allowing for the creation of the dialog overlay byte[] added.&lt;/p&gt;
&lt;p&gt;Another battle fought on this front is related to homebrew apps. byte[] is responsible for &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9486&#34; data-gh-pr=&#34;9486&#34;&gt;making them quit properly&lt;/a&gt;
 now too.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ChrisOboe&#34;&gt;ChrisOboe&lt;/a&gt; suddenly shows up with a glorious quality of life fix for the terminal-based yuzu-cmd build.
Marking the build as a “Windows” application instead of a “Console” one &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9485&#34; data-gh-pr=&#34;9485&#34;&gt;ensures that no empty command line window pops up&lt;/a&gt;
 needlessly.
This can help streaming programs set up to run specific games with yuzu-cmd, as this prevents the sudden empty black box from appearing in front of other windows.&lt;/p&gt;
&lt;p&gt;For our single audio change of this month, &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; properly &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9455&#34; data-gh-pr=&#34;9455&#34;&gt;signals a buffer event on audio stops,&lt;/a&gt;
 fixing an early softlock that affected the &lt;code&gt;Pokémon Brilliant Diamond/Shining Pearl&lt;/code&gt; games.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;We’re only a few days into 2023 and we already want to publish the next progress report. So much has happened in such a short time!&lt;/p&gt;
&lt;p&gt;Also, Blinkhaw, bunnei, and byte[] are up to something, and we can’t wait to tell you more.
And yes, there will be yet more cache invalidations. All in the name of progress.&lt;/p&gt;
&lt;p&gt;That’s all folks! Expect a few but &lt;em&gt;very&lt;/em&gt; critical Vulkan improvements next time, hope to see you then!&lt;/p&gt;
&lt;p&gt;⭐⭐⭐
Grande Messi&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report November 2022</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/</link>
      <pubDate>Sat, 10 Dec 2022 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/</guid>
      <description>&lt;p&gt;As a dear friend likes to say, meowdy yuwu-zers!
This month is special: a report detailing the uphill battle for the release of new titles in the goliath franchise that is Pokémon, adventures on &lt;em&gt;new architecture&lt;/em&gt; lands, and a list of fixes and improvements that were made along the way. Fasten your seat-belts, here we go!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;As a dear friend likes to say, meowdy yuwu-zers!
This month is special: a report detailing the uphill battle for the release of new titles in the goliath franchise that is Pokémon, adventures on &lt;em&gt;new architecture&lt;/em&gt; lands, and a list of fixes and improvements that were made along the way. Fasten your seat-belts, here we go!&lt;/p&gt;
&lt;h2 id=&#34;psa-for-nvidia-users-almost-a-flawless-victory&#34;&gt;PSA for NVIDIA users (almost a flawless victory)&lt;/h2&gt;
&lt;p&gt;Before we move on to what everyone wants to hear about (just a new Pokémon game, nothing special 😉), we have very exciting news to announce!
NVIDIA driver version &lt;code&gt;527.37&lt;/code&gt; finally solves all known driver related regressions on Pascal and newer hardware!
And to make it better, it affects all cards actively supported by NVIDIA. From the GT 1010 to the RTX 4090, there are no more driver related graphical issues (it&amp;rsquo;s only our fault for now&amp;hellip; until NVIDIA strikes again), exactly how the cards used to perform with driver version &lt;code&gt;472.12&lt;/code&gt; all the way back in September 2021.&lt;/p&gt;
&lt;p&gt;Sadly, Maxwell users (900 series and older) will have to remain on version &lt;code&gt;512.95&lt;/code&gt; to avoid frequent device loss errors when using Vulkan, but for those with GPUs newer than 8 years, there’s no longer a need to stick to old driver versions. Feel free to update to the latest release!&lt;/p&gt;
&lt;p&gt;Here are links for the &lt;a href=&#34;https://www.nvidia.com/download/driverResults.aspx/197300/en-us/&#34;&gt;desktop&lt;/a&gt; and &lt;a href=&#34;https://www.nvidia.com/download/driverResults.aspx/197301/en-us/&#34;&gt;laptop&lt;/a&gt; GPUs respectively.&lt;/p&gt;
&lt;h2 id=&#34;guess-whos-back&#34;&gt;Guess who’s back&lt;/h2&gt;
&lt;p&gt;It’s finally here.
&lt;del&gt;For better or worse.&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;Adopting some of the new gameplay elements introduced with &lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt;, &lt;code&gt;Pokémon Scarlet/Violet&lt;/code&gt; has been unleashed upon the world!
This time with ultra-realistic tree textures, and NPCs walking at 5 FPS.&lt;/p&gt;
&lt;p&gt;Fun new gameplay aside, this release has been quite the challenge for yuzu. It doesn’t help that the game has problems running natively on the Switch to begin with.
Low performance, storage related stuttering, and memory leaks being some of them.
However, while exposing several issues in yuzu, their corresponding fixes have helped other games in unexpected ways!&lt;/p&gt;
&lt;p&gt;When the game first released, it didn’t render anything in yuzu at all, which is not good. Something needed to be done.
&lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; was the first to answer, and identified that this was due the game&amp;rsquo;s use of &lt;code&gt;gl_Layer&lt;/code&gt;, and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9253&#34; data-gh-pr=&#34;9253&#34;&gt;added support for it in the shader compiler.&lt;/a&gt;

You will hear more about this &lt;code&gt;gl_Layer&lt;/code&gt; &amp;ldquo;character&amp;rdquo; later.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./poke.png&#34; title=&#34; One thing is for sure, the graphics have definitely improved (Pokémon Scarlet)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/poke_hufab2aaefdfad9ad55d2b04ea9b4dbe7d_7438763_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; One thing is for sure, the graphics have definitely improved (Pokémon Scarlet)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; One thing is for sure, the graphics have definitely improved (Pokémon Scarlet)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;With this change, the game starts to render and the team can focus on finding, documenting, and fixing any other bugs that show up.&lt;/p&gt;
&lt;p&gt;A limitation was quickly found by the community, &lt;code&gt;gl_Layer&lt;/code&gt; depends on having driver support for the &lt;code&gt;GL_ARB_shader_viewport_layer_array&lt;/code&gt; extension in OpenGL, or the Vulkan equivalent, &lt;code&gt;VK_EXT_shader_viewport_index_layer&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;While most GPU drivers do indeed support these extensions, the NVIDIA drivers don&amp;rsquo;t for Maxwell V1 and older cards. This means users trying to run &lt;code&gt;Pokémon Scarlet/Violet&lt;/code&gt; on GPUs older than the 900 series wouldn’t get the game to display anything on screen, in either graphics API and any shader backend.
Must be part of the promised package that included Vulkan support for Fermi, pure smoke.&lt;/p&gt;
&lt;p&gt;The way &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; solved this limitation is by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9363&#34; data-gh-pr=&#34;9363&#34;&gt;translating the gl_Layer assignments with geometry shaders,&lt;/a&gt;
 basically a brute-forced hardware accelerated way to replicate the missing extensions on older hardware.
This results in proper rendering for the decade-old Geforce Fermi, Kepler, and Maxwell V1 series GPUs, in either OpenGL and Vulkan.
Now an extra 6% of users can play the game.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./710.png&#34; title=&#34; The test subject, anyone can cook&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/710_hu8c2402d631bb13d469462a2ae1387e78_33155_388x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The test subject, anyone can cook&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The test subject, anyone can cook&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./710fix.png&#34; title=&#34; Old but gold! (Pokémon Scarlet)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/710fix_hu7c7687573c1fbc6a9174df733368ff31_2193637_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Old but gold! (Pokémon Scarlet)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Old but gold! (Pokémon Scarlet)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Let’s switch for a second to CPU related issues.
There were reports that certain moves like &lt;code&gt;Tail Whip&lt;/code&gt; could cause the opposing Pokémon to outright vanish, or that changing directions very quickly could cause a soft-lock.
Even simple map traversal could cause crashes.&lt;/p&gt;
&lt;p&gt;What do you do when all issues seem totally unrelated and random?
You blame the CPU precision, of course!&lt;/p&gt;
&lt;p&gt;More, ahem, precisely, in what optimizations are enabled by default.
The offending option turned out to be &lt;code&gt;Inaccurate NaN handling&lt;/code&gt;, an optimization made to improve the performance of some rooms in &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt;.
&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; updated the &lt;code&gt;Auto&lt;/code&gt; setting for CPU accuracy to skip this optimization.&lt;/p&gt;
&lt;p&gt;For anyone wishing to restore the performance for &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt;, we recommend using the per-game settings feature. Right click the game, go to &lt;code&gt;Properties&lt;/code&gt;, &lt;code&gt;CPU&lt;/code&gt; tab, set CPU accuracy to &lt;code&gt;Unsafe&lt;/code&gt;, and make sure &lt;code&gt;Inaccurate NaN handling&lt;/code&gt; is enabled, as shown in the example below:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./lm3.png&#34; title=&#34; The per-game settings window is a pathway to knowledge many consider... Unnatural&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/lm3_hua76c220c228272dbd677440de1112106_203517_902x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The per-game settings window is a pathway to knowledge many consider... Unnatural&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The per-game settings window is a pathway to knowledge many consider... Unnatural&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;We strongly recommend using a global setting of &lt;code&gt;Auto&lt;/code&gt; CPU accuracy, and only implement custom/unsafe settings on a per game basis, never globally.
Games WILL break with unsafe settings.&lt;/p&gt;
&lt;p&gt;Now going back to GPU related issues, AMD has its own share of problems, as it always does.
Users were quick to point out that the game looked as though the director of Breaking Bad produced it, seemingly rendering like a yellow/orange filter was applied.
This issue is for the history books, as both the official AMD drivers (the Windows driver, amdvlk, and AMDGPU-PRO) &lt;em&gt;and&lt;/em&gt; mesa (RADV) share the same behaviour.&lt;/p&gt;
&lt;p&gt;Let’s provide some context.
The default shader backend of Vulkan, &lt;a href=&#34;https://en.wikipedia.org/wiki/Standard_Portable_Intermediate_Representation&#34;&gt;SPIR-V&lt;/a&gt;,  describes the special properties variable decorations have.
Usually, a fragment shader’s input variables are set as &lt;code&gt;smooth&lt;/code&gt;, interpolating the values between each vertex.
But sometimes you end up with a value that is constant across all vertices in a triangle. There’s no need to waste computational power smoothing anything in a case like this, so you can set the variable as &lt;code&gt;flat&lt;/code&gt; instead.
Both the official AMD and RADV drivers think that the previously mentioned &lt;code&gt;gl_Layer&lt;/code&gt; input in the fragment shader needs to be decorated as flat, or they treat it as a constant zero across the triangle, instead of the value set in the vertex shader.
Jury is out on this, we reported the issue to AMD.&lt;/p&gt;
&lt;p&gt;A normal Vulkan program would never find itself in this situation because the GLSL compiler always decorates &lt;code&gt;gl_Layer&lt;/code&gt; as flat.
The NVIDIA driver doesn’t make this assumption and doesn’t treat &lt;code&gt;gl_Layer&lt;/code&gt; as a constant zero, regardless of the presence of the decoration.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/amdbug_hu627e2791b0f8f0c2c31853d342cd0aff_1576120_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Wasn&amp;#39;t this game based in Spain? (Pokémon Scarlet)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/amdfix_hua56cca2548670be4e8be446729e22404_1972689_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Wasn&amp;#39;t this game based in Spain? (Pokémon Scarlet)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Wasn&amp;#39;t this game based in Spain? (Pokémon Scarlet)&lt;/p&gt;


&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9260&#34; data-gh-pr=&#34;9260&#34;&gt;By adding the missing flat decoration,&lt;/a&gt;
 byte[] allows Radeon users to view the proper beautiful blue skies, in both Windows and Linux.&lt;/p&gt;
&lt;p&gt;Ping-ponging back to CPU bugs:
Even with all the work so far, &lt;code&gt;Pokémon Scarlet/Violet&lt;/code&gt; could periodically crash.
This gave us a sense of dread we haven’t felt since the release of &lt;code&gt;Pokémon Sword/Shield&lt;/code&gt;.
Thankfully, our fear was unfounded, as only Windows users reported this issue.
Linux users, for example Steam Deck users, didn’t crash at all.
This gave us the needed hook to reel the line of the cause, which ended up being a problem in dynarmic, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9271&#34; data-gh-pr=&#34;9271&#34;&gt;a stack misalignment in one of the memory accessors.&lt;/a&gt;

A quick call to &lt;a href=&#34;https://github.com/merryhime&#34;&gt;Merry&lt;/a&gt; over the red phone, and the crashing is no more.&lt;/p&gt;
&lt;p&gt;Back to the GPU, and this one was really annoying.
Your writer had to do an all-nighter running tests with &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; to figure it out.&lt;/p&gt;
&lt;p&gt;NPCs and characters could encounter vertex explosions at random, and while using &lt;code&gt;High&lt;/code&gt; GPU accuracy would mitigate the problem to a certain extent, it was still very common in cities, particularly in the academy.
To make it even uglier, those vertex explosions were permanent at specific camera angles.&lt;/p&gt;
&lt;p&gt;After a few dozen rounds of regression testing, the root cause was found in one of the changes introduced by &lt;code&gt;Project Y.F.C.&lt;/code&gt;, so Blinkhawk took over and implemented the proper changes, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9312&#34; data-gh-pr=&#34;9312&#34;&gt;fixing some buffer cache and engine upload issues.&lt;/a&gt;
&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ver1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/ver1_hu39d4dd418dd2251d00b84c879344a8fe_574734_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s like our personal curse, seems to happen with every release (Pokémon Scarlet &amp;amp; Violet)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ver2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/ver2_hu9169d1c10ca5c3887aa6ad8b36596f0e_646063_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s like our personal curse, seems to happen with every release (Pokémon Scarlet &amp;amp; Violet)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ver3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/ver3_hu9c1032922415a6208f9dcd056c4abff0_1353816_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s like our personal curse, seems to happen with every release (Pokémon Scarlet &amp;amp; Violet)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ver4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/ver4_hu6584179436b88ef2860ed5279ed95614_3612901_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s like our personal curse, seems to happen with every release (Pokémon Scarlet &amp;amp; Violet)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;It&amp;#39;s like our personal curse, seems to happen with every release (Pokémon Scarlet &amp;amp; Violet)&lt;/p&gt;


&lt;p&gt;While the NPC vertex explosions are fixed, some geometry pop-up issues remain. Homework for later.
Now any vertex related glitch only lasts one frame and should go away once the relevant shader gets cached.
Also, as a bonus, &lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt; can now be played at &lt;code&gt;Normal&lt;/code&gt; GPU accuracy without encountering vertex explosions, making good on our &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/#a-new-legend&#34;&gt;promise to fix it&lt;/a&gt;!
This can greatly increase performance on the older Pokémon title. One more thing to scratch off the list.
That buffer cache rewrite is still needed though.&lt;/p&gt;
&lt;p&gt;CPU&amp;rsquo;s turn again, or rather memory in this case.
byte[] fixed &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9279&#34; data-gh-pr=&#34;9279&#34;&gt;a silly mistake in the cheat engine&lt;/a&gt;
 that caused it to crash when using speedhack cheats.&lt;/p&gt;
&lt;p&gt;Quick, back to the GPU! Or more precisely, a change to the user defaults.&lt;/p&gt;
&lt;p&gt;As you may know from previous reports, Vulkan has a tendency to break when the user installs outdated screen recorders, overlays, or bloatware that messes with the Vulkan layers.
This leads people to still use the OpenGL API, which is not only considerably slower for &lt;code&gt;Pokémon Scarlet/Violet&lt;/code&gt; (over three times slower in some cases), but also run the &lt;code&gt;GLASM&lt;/code&gt; shader backend, an NVIDIA exclusive feature which is not particularly good with recent game releases, &lt;code&gt;Scarlet/Violet&lt;/code&gt; not being an exception.&lt;/p&gt;
&lt;p&gt;yuzu used to default to &lt;code&gt;GLASM&lt;/code&gt; so NVIDIA users could enjoy lower shader compilation related stuttering, as OpenGL’s default shader backend, &lt;code&gt;GLSL&lt;/code&gt;, is irritatingly slow in this aspect.
The problem with this approach is that the &lt;code&gt;GLASM&lt;/code&gt; backend (assembly shaders) was developed as an experiment, and its two primary maintainers have moved on from the project, with one literally &amp;ldquo;turning green with envy.&amp;rdquo;
No one on the team is taking the time to maintain a backend that has decades old and difficult-to-parse documentation, no debug tools, only partially helps a single GPU vendor, and has its advantages negated by a superior alternative, Vulkan.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/glasm_hu19e490b0b342323686dd76fc09ceef70_2230448_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Lavender Town? (Pokémon Violet)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/vulkan_hud42eea0b9e014b9cbf1f9e1c8cdc18e1_2122461_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Lavender Town? (Pokémon Violet)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Lavender Town? (Pokémon Violet)&lt;/p&gt;


&lt;p&gt;Assembly shaders were a useful alternative while Vulkan was in early development, but now it’s just dead weight taking precious development time that could be used to improve Vulkan instead.&lt;/p&gt;
&lt;p&gt;This problem is far more common than &lt;a href=&#34;https://github.com/goldenx86&#34;&gt;your writer&lt;/a&gt; would like, so for those NVIDIA users with the &lt;em&gt;special superpower&lt;/em&gt; to always break Vulkan, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9318&#34; data-gh-pr=&#34;9318&#34;&gt;OpenGL will default to GLSL now.&lt;/a&gt;

The option to use GLASM will remain available, as Fermi users love it due to their chronic lack of Vulkan support.&lt;/p&gt;
&lt;p&gt;To finish the changes implemented this month regarding this flawed best-seller, bunnei fixed an &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9320&#34; data-gh-pr=&#34;9320&#34;&gt;assert spam in the audio suspend process.&lt;/a&gt;

This change not only cleans up logs, it has the potential to improve performance to a degree.&lt;/p&gt;
&lt;p&gt;That’s all for this November’s list of Pokémon fixes and improvements.
More work is in development, as there is still stuff to fix, so while we wait let’s end this section with some recommendations we found to get the best experience while playing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NVIDIA, Intel, and AMD users &lt;a href=&#34;https://community.citra-emu.org/t/recommended-settings/319349&#34;&gt;must run the latest driver versions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;High&lt;/code&gt; GPU accuracy ensures proper rendering of vegetation and buildings. Missing graphics? Switch to High.&lt;/li&gt;
&lt;li&gt;Handheld mode improves performance considerably over Docked.&lt;/li&gt;
&lt;li&gt;Gym trials may require switching to Handheld mode for stability, this could be a game issue as it is known to have memory leaks on console. Later game updates seem to solve this.&lt;/li&gt;
&lt;li&gt;4 core/8 thread users seem to improve performance by a good margin by disabling SMT/HT.&lt;/li&gt;
&lt;li&gt;Installing the latest game update improves performance and stability over long gameplay sessions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;graphical-fixes&#34;&gt;Graphical fixes&lt;/h2&gt;
&lt;p&gt;Back to the usual agenda, games in general.&lt;/p&gt;
&lt;p&gt;vonchenplus found an &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9167&#34; data-gh-pr=&#34;9167&#34;&gt;issue in how yuzu handles tessellation shaders&lt;/a&gt;
 which causes black backgrounds in &lt;code&gt;The Legend of Heroes: Trails from Zero&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Why would you want to use tessellation shaders for 2D content in an RPG?&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./tfz.png&#34; title=&#34; A tessellated 2D background, in all its glory (The Legend of Heroes: Trails from Zero)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/tfz_hu487d13b97fb1e58c580004258168629e_1370237_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; A tessellated 2D background, in all its glory (The Legend of Heroes: Trails from Zero)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; A tessellated 2D background, in all its glory (The Legend of Heroes: Trails from Zero)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Immediately after implementing the change, we noticed that games didn’t render correctly, and it wasn’t the fix’s fault.
In cases like this, a cache invalidation is not only recommended, but needed.
&lt;a href=&#34;https://github.com/gidoly&#34;&gt;gidoly&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9175&#34; data-gh-pr=&#34;9175&#34;&gt;updated the cache version number,&lt;/a&gt;
 invalidating all previous caches, and causing a large disturbance in the Net, as if thousands of Smash players suddenly cried out in terror and were suddenly silenced.&lt;/p&gt;
&lt;p&gt;One of the important changes that didn’t make it in time for the first part of &lt;code&gt;Project Y.F.C.&lt;/code&gt;, Blinkhawk&amp;rsquo;s series of GPU related changes and fixes, is &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9194&#34; data-gh-pr=&#34;9194&#34;&gt;improving the handling of ASTC texture mipmap uploads.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;The original implementation rendered the ASTC mipmaps directly.
What actually happens on the Switch is that the NVIDIA driver uploads to its 2D engine first.
The incorrect implementation caused severe texture corruption in many cases, most commonly in games running Unreal Engine 4.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/ue4bug_huf39c332adf1cbbd8ebb3e688b6142c00_2096089_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fluffy (Yoshi&amp;#39;s Crafted World)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/ue4fix_hu047a7c844e888f76b6171f529752c5a9_2323378_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fluffy (Yoshi&amp;#39;s Crafted World)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Fluffy (Yoshi&amp;#39;s Crafted World)&lt;/p&gt;


&lt;p&gt;The list is long, so here’s a selection of games that were improved with this change:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Blue Fire&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;A Hat in Time&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;The Witcher 3: Wild Hunt Complete Edition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Darksiders III&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Diablo II Resurrected&lt;/code&gt; (character hair)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DRAGON QUEST XI S: Echoes of an Elusive Age – Definitive Edition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Life is Strange: True Colors&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Yoshi&#39;s Crafted World&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;F.I.S.T.: Forged In Shadow Torch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Digimon Story Cyber Sleuth: Complete Edition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Grand Theft Auto: The Trilogy – The Definitive Edition&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Working on improving OpenGL stability, vonchenplus &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9216&#34; data-gh-pr=&#34;9216&#34;&gt;reimplemented the inline index buffer binding,&lt;/a&gt;
 making the OpenGL implementation match the Vulkan one.
This solves certain cases where OpenGL would crash when using non-unified memory mode.&lt;/p&gt;
&lt;p&gt;Here’s an interesting one.
If a game had bad performance on a specific system and produced too low of framerates at boot, it could hang due to a lost wakeup.
Since the &amp;ldquo;secret project&amp;rdquo; byte[] was working on was a platform slower than a normal gaming PC (more on this in the next section), byte[] blasted this limitation to the Dark World, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9244&#34; data-gh-pr=&#34;9244&#34;&gt;allowing everyone to be able to boot their game dumps.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;A problem we reported a couple of times already, and AMD confirmed to be working on, was crashes happening in &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; with Vulkan, thanks to improving the precision of our MacroJIT code.
Since it became clear that more time was needed to solve this issue on the driver side, byte[] managed to implement a workaround, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9252&#34; data-gh-pr=&#34;9252&#34;&gt;an HLE multi-layer clear mechanism&lt;/a&gt;
 which bypasses this driver-level limitation.
This way, the game remains playable in Vulkan for AMD on Windows.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./xc3.png&#34; title=&#34; Always has great title screen music (Xenoblade Chronicles 3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/xc3_hu9d02021296f8f574b41ac717cf358ded_5376262_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Always has great title screen music (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Always has great title screen music (Xenoblade Chronicles 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Here’s an interesting find from one of our &lt;em&gt;old&lt;/em&gt; testers.
If you run &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; in its base 1.0.0 version, recent changes caused distant trees to have a black flicker.
This behaviour was not present in an updated game, but a glitch is a glitch, and it deserves attention.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./botwbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./botwfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The old result (left) has been reduced to 10 FPS to avoid triggering sensitive readers (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;


&lt;p&gt;vonchenplus found out that the order of the drawing commands was wrong in this case, and implemented a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9288&#34; data-gh-pr=&#34;9288&#34;&gt;more conservative drawing trigger mechanism.&lt;/a&gt;

No other game is known to be affected by this change, but if there is, it’s fixed!&lt;/p&gt;
&lt;p&gt;Your writer has been trying to slowly learn the ropes and decided to take on some small projects.
Too bad he’s also an idiot…&lt;/p&gt;
&lt;p&gt;The result of too many hours of suffering is the addition of a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9276&#34; data-gh-pr=&#34;9276&#34;&gt;sharpening slider for the FSR filter.&lt;/a&gt;
 Also known by its long name, &lt;code&gt;AMD FidelityFX Super Resolution 1.0.2&lt;/code&gt;.
However, it prefers being called FSR between friends.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./slider.png&#34; title=&#34; Emulation &amp;gt; Configure &amp;gt; Graphics&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/slider_hucfc36f7c0b1cd7fc7ac866457bb84be5_29408_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Emulation &amp;gt; Configure &amp;gt; Graphics&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Emulation &amp;gt; Configure &amp;gt; Graphics&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This allows the user to pick how much they want to sharpen a specific game.
Personal preference applies here, for example, &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; may look great at 100% sharpening, but that same value may be too much for &lt;code&gt;Pokémon Scarlet&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/fsr0_hu90bedbb6daabd24e50218af911c7dbbd_3334580_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Seems to help with distant objects (The Legend of Zelda: Breath of the Wild)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/fsr100_hufc3ecd9149e60703ff9742acb0c26050_5010805_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Seems to help with distant objects (The Legend of Zelda: Breath of the Wild)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Seems to help with distant objects (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;


&lt;p&gt;Test it to your preference and use the per-game profiles to make the most out of it.
Thank you &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; for helping me with the per-game support.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pgfsr.png&#34; title=&#34; Right-click &amp;gt; Properties &amp;gt; Graphics&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/pgfsr_hucf7658c83282cbfe5b1a75e1814261b2_203962_902x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Right-click &amp;gt; Properties &amp;gt; Graphics&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Right-click &amp;gt; Properties &amp;gt; Graphics&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Our own Poyo enjoyer, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt;, with help from byte[], worked on &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9307&#34; data-gh-pr=&#34;9307&#34;&gt;improving the usage bits&lt;/a&gt;
 Vulkan demands of the device’s supported formats, while at it also adding a new format to the list, &lt;code&gt;R16_SINT&lt;/code&gt;.
One of the “improved” games from this change is &lt;code&gt;Xenoblade Chronicles: Definitive Edition&lt;/code&gt;.
While the game complained about missing a texture format, graphics don’t seem to have changed.&lt;/p&gt;
&lt;h2 id=&#34;cpu-kernel-and-debugger-changes&#34;&gt;CPU, kernel, and debugger changes&lt;/h2&gt;
&lt;p&gt;Let’s address the elephant in the room, which byte[] has been feeding tons of peanuts lately.
yuzu now supports being &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9198&#34; data-gh-pr=&#34;9198&#34;&gt;built and run on ARM64 devices!&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Of course, hardware requirements remain the same: at least 8GB of RAM and an OpenGL 4.6 compatibility profile/Vulkan 1.2 plus specific extensions GPU driver is required.
This means that yuzu can run on, for example, Asahi Linux on an M1 Apple MacBook Air, but by using Lavapipe, Mesa’s CPU rendering Vulkan driver, which of course results in very slow performance.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./asahi.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/asahi_huc39f009729c1859ab20cfb4a7c9d7ff3_2908059_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This is what&amp;#39;s possible right now (Mario Kart 8 Deluxe &amp;amp; Super Mario Galaxy)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./asahi2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/asahi2_hubcb2ed02bc0c836498abce2c3db3eed3_1937355_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This is what&amp;#39;s possible right now (Mario Kart 8 Deluxe &amp;amp; Super Mario Galaxy)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;This is what&amp;#39;s possible right now (Mario Kart 8 Deluxe &amp;amp; Super Mario Galaxy)&lt;/p&gt;


&lt;p&gt;This initial implementation adds support for 32-bit games only.
As for 64-bit games (the most common), &lt;a href=&#34;https://github.com/merryhime/dynarmic/pull/719&#34;&gt;an update needs to be merged to Dynarmic&lt;/a&gt;.
Once it’s out, there will be no restrictions on which games can be executed.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./asahi64.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/asahi64_hua3a04fa1f7372b85c7a5f3cd1589199c_2025847_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This is what will be possible in the near future (Super Mario 3D World &amp;#43; Bowser&amp;#39;s Fury, Super Mario 3D All-Stars, &amp;amp; Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./asahi642.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/asahi642_hua3a04fa1f7372b85c7a5f3cd1589199c_1370853_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This is what will be possible in the near future (Super Mario 3D World &amp;#43; Bowser&amp;#39;s Fury, Super Mario 3D All-Stars, &amp;amp; Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./asahi643.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/asahi643_hua3a04fa1f7372b85c7a5f3cd1589199c_1565057_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This is what will be possible in the near future (Super Mario 3D World &amp;#43; Bowser&amp;#39;s Fury, Super Mario 3D All-Stars, &amp;amp; Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;This is what will be possible in the near future (Super Mario 3D World &amp;#43; Bowser&amp;#39;s Fury, Super Mario 3D All-Stars, &amp;amp; Super Mario Odyssey)&lt;/p&gt;


&lt;p&gt;Further improvements by byte[] includes &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9215&#34; data-gh-pr=&#34;9215&#34;&gt;corrections on atomic store ordering&lt;/a&gt;
 to improve stability, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9234&#34; data-gh-pr=&#34;9234&#34;&gt;implement data cache management operations,&lt;/a&gt;
 and the most fun one, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9289&#34; data-gh-pr=&#34;9289&#34;&gt;fix compilation for Apple Clang,&lt;/a&gt;
 allowing yuzu to run directly on macOS!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./macos.png&#34; title=&#34; If only Apple wasn&amp;#39;t a reptilian company and offered Vulkan support&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/macos_hub63e5780ce9cf37386e68ab10609a70b_2023798_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; If only Apple wasn&amp;#39;t a reptilian company and offered Vulkan support&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; If only Apple wasn&amp;#39;t a reptilian company and offered Vulkan support&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;We have a very long road ahead to fully support macOS, but a journey of a thousand miles begins with a single step, says the old man.&lt;/p&gt;
&lt;p&gt;Outside of venturing into new architecture seas, byte[] also contributed a few general changes too.&lt;/p&gt;
&lt;p&gt;Switch games can be weird. For example, &lt;code&gt;MONSTER HUNTER RISE&lt;/code&gt; has some fundamental love for opening services.
After a recent refactor, our kernel emulation incorrectly used a process per session, and this could lead to running out of slab heap, resulting in a hard crash.
As a workaround while byte[] refactors services to have a process tree accurate to the Switch, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9224&#34; data-gh-pr=&#34;9224&#34;&gt;the extraneous processes have been removed,&lt;/a&gt;
 keeping stability in check.&lt;/p&gt;
&lt;p&gt;The fight for proper kernel emulation rages on, and bunnei raises the bar by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9173&#34; data-gh-pr=&#34;9173&#34;&gt;implementing most of the Switch’s firmware 15.X.X features.&lt;/a&gt;

This brings memory management improvements (must resist making a boomerang joke), which should result in improved stability and slightly better resource usage.
While no game seems to specifically improve with this change, future games targeting the latest firmware versions will certainly benefit.
Nothing better than avoiding future headaches!&lt;/p&gt;
&lt;h2 id=&#34;services-input-and-audio-changes&#34;&gt;Services, input, and audio changes&lt;/h2&gt;
&lt;p&gt;On the last day of the month, when we cut the list of pull requests that will make it into this article, Morph contacts your writer asking for one last addition.
And it was one important addition.
Morph &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9348&#34; data-gh-pr=&#34;9348&#34;&gt;improved the stubs&lt;/a&gt;
 for the &lt;code&gt;Submit&lt;/code&gt;, &lt;code&gt;GetRequestState&lt;/code&gt;, and &lt;code&gt;GetResult&lt;/code&gt; service functions, allowing &lt;code&gt;Splatoon 3&lt;/code&gt; to boot while a network connection was configured for LAN/LDN play.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sp31.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/sp31_hud4e527aa1187a4e8a18daf7be14d0a38_1301030_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;While now you can join rooms, the game is not stable yet (Splatoon 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sp32.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/sp32_hu23d14baff80246b288a1e37040afda31_358509_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;While now you can join rooms, the game is not stable yet (Splatoon 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;While now you can join rooms, the game is not stable yet (Splatoon 3)&lt;/p&gt;


&lt;p&gt;A lot more work is required to make this game fully playable, but fixing boot related issues is always a great start.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jbeich&#34;&gt;jbeich&lt;/a&gt; is back in action, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9181&#34; data-gh-pr=&#34;9181&#34;&gt;ensuring that yuzu is compatible with BSD systems!&lt;/a&gt;

This change adds support for previous additions and fixes that were only considering Linux at the time.
A separate pull request deals with &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9178&#34; data-gh-pr=&#34;9178&#34;&gt;making BSD compatible with the changes required to run the LDN services.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;As part of byte[]’s efforts to get yuzu running on macOS, he and toastUnlimited had to make some changes to fit the platform’s special needs.
First, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9304&#34; data-gh-pr=&#34;9304&#34;&gt;assigned the menuRole property for actions to improve Cocoa support,&lt;/a&gt;
 and then toastUnlimited &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9308&#34; data-gh-pr=&#34;9308&#34;&gt;changed the Vulkan check on other platforms to behave closer to how the check for Windows works,&lt;/a&gt;
 improving the compatibility with the macOS file manager.
&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; joins the fun, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9322&#34; data-gh-pr=&#34;9322&#34;&gt;making changes to ensure reading SDL events doesn&amp;rsquo;t crash on macOS.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Regarding input in general, german77 went to infinity and beyond with yuzu’s multitouch detection, raising the 16-finger limit to, well, infinite!
As part of this change, he also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9191&#34; data-gh-pr=&#34;9191&#34;&gt;tuned the response speed of touches,&lt;/a&gt;
 which were a little bit too fast, resulting in missing input.
As a result &lt;code&gt;Mini Motorways&lt;/code&gt; is far more playable now!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./motor.png&#34; title=&#34; C&amp;#39;mon, touch it! (Mini Motorways)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/motor_hu6e14be7ef1299e0c6e6266903438c8d2_690582_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; C&amp;#39;mon, touch it! (Mini Motorways)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; C&amp;#39;mon, touch it! (Mini Motorways)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Amiibos also got some love from german77.
The first example is &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9219&#34; data-gh-pr=&#34;9219&#34;&gt;implementing the NFC&lt;/a&gt;
 &lt;code&gt;IUser&lt;/code&gt; service, which fixes the NFC detection in &lt;code&gt;Ultra Kaiju Monster Rancher&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./monster.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/monster_hu92acb6174bb58187f93869f8f8ed1078_992256_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;And it&amp;#39;s still a premium feature on most phones (Ultra Kaiju Monster Rancher)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nfc.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/nfc_hue1384523ff10ef2eb45b12531358b4b4_457325_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;And it&amp;#39;s still a premium feature on most phones (Ultra Kaiju Monster Rancher)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;And it&amp;#39;s still a premium feature on most phones (Ultra Kaiju Monster Rancher)&lt;/p&gt;


&lt;p&gt;Next, german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9238&#34; data-gh-pr=&#34;9238&#34;&gt;implemented the&lt;/a&gt;
 &lt;code&gt;cabinet applet&lt;/code&gt; (Amiibo manager window).
This new settings window allows the user to register, format, and delete game data from their Amiibos, while also displaying any additional data available.
This first implementation will only show up when a game requests it, a manual UI option will be added in the future.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./cabinet.png&#34; title=&#34; Images optional for now (Shovel Knight)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/cabinet_hu9cba8f604ddb04d6f0f25d84b9e8ea91_191899_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Images optional for now (Shovel Knight)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Images optional for now (Shovel Knight)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;On the audio side of things, &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; has been working on solving out-of-bounds crashing issues related to how the emulator and the Switch handle audio buffers.
Here’s the thing, the game decides how many buffers it wants to use, and has the freedom to use the buffers as it pleases.
As Maide says: “Put voice A in buffer 1 with voice B in buffer 2, mix them together into buffer 3. Put voice C in buffer 4 and mix buffer 3 and 4 into buffer 5, etc.”
At the end of the line, if you need to output to 2 channels, only two final buffers will be used, for 6 channels, 6 buffers, but there is no order to those selected buffers, no rule says that they must be buffer 0 and 1.
yuzu operated under the assumption that games would use buffers 0 to 5 for output, and that has been the case for the majority of games, but as always, there are exceptions, one being &lt;code&gt;The Legend of Zelda: Skyward Sword HD&lt;/code&gt;.
This particular game uses something similar to 8/9/12/13/10/11 for its 6 buffer outputs, or in proper hexadecimal values, 8/9/C/D/A/B.&lt;/p&gt;
&lt;p&gt;The previous implementation took the first buffer as a starting point, buffer 0, and added +1 to fill the remaining 5 slots.
That’s definitely not valid for &lt;code&gt;Skyward Sword&lt;/code&gt;, the moment you want to access a buffer that is not part of those 6 first consecutive buffers, you get a crash for getting out-of-bounds, and this happens even with the first actual output buffer, at 8!
Fixing this behaviour by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9297&#34; data-gh-pr=&#34;9297&#34;&gt;checking the highest buffer and adding +1&lt;/a&gt;
 stops the game from crashing, and should also have the benefit of not outputting weird sounds, as the correct buffers will be selected.&lt;/p&gt;
&lt;p&gt;As most of you know, our current file system emulation is far from ideal.
Morph’s &lt;code&gt;Project Gaia&lt;/code&gt; should address most issues we have with it once his rewrite is finished.
In the meantime, there’s nothing against fixing existing problems with it, and &lt;a href=&#34;https://github.com/v1993&#34;&gt;v1993&lt;/a&gt; provides a huge hand by addressing a case that could be invisible to the user, and really annoying as a result.
The emulator can auto-generate some of the keys required to decrypt and run Switch games.
The problem is that those auto-generated keys are sometimes worse than those the user provided during the dumping process, yet they still took precedence.
v1993 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9324&#34; data-gh-pr=&#34;9324&#34;&gt;flips this behaviour,&lt;/a&gt;
 solving cases of games refusing to boot due to this conflict.&lt;/p&gt;
&lt;h2 id=&#34;user-interface-improvements&#34;&gt;User interface improvements&lt;/h2&gt;
&lt;p&gt;Localization is an ongoing effort, and anyone can contribute &lt;a href=&#34;https://www.transifex.com/yuzu-emulator/yuzu&#34;&gt;here&lt;/a&gt;.
This time the community added support for another language, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9166&#34; data-gh-pr=&#34;9166&#34;&gt;Ukrainian!&lt;/a&gt;

This addition is possible thanks to the work done  by &lt;a href=&#34;https://github.com/Docteh&#34;&gt;Docteh&lt;/a&gt; and GillianMC.
Keep at it guys, we&amp;rsquo;re all with you.&lt;/p&gt;
&lt;p&gt;Docteh also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9180&#34; data-gh-pr=&#34;9180&#34;&gt;fixed the translation of pop-up warnings&lt;/a&gt;
 that show up when trying to remove game content.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./removebug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/removebug_hu58771770a5d292e3dab0e8d3cf564808_6430_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Como corresponde&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./removefix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/removefix_huf59b189dcf9220d3c511adcd7578112b_5337_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Como corresponde&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Como corresponde&lt;/p&gt;


&lt;p&gt;No one wants to lose their saves, especially not if it&amp;rsquo;s the user’s own fault.
As per the request of one such user, toastUnlimited added &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9247&#34; data-gh-pr=&#34;9247&#34;&gt;a warning pop-up when a user attempts to delete a user profile.&lt;/a&gt;

Because, yes, deleting a profile includes deleting its saves.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./delete.png&#34; title=&#34; The UI must also protect the users from themselves&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/delete_hu3e69e745207a32d103274b096f992b9d_25714_405x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The UI must also protect the users from themselves&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The UI must also protect the users from themselves&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;epicboy surprised everyone by slamming the front door open, throwing &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9273&#34; data-gh-pr=&#34;9273&#34;&gt;per-game input profile support&lt;/a&gt;
 in our faces, and leaving, refusing to elaborate further.
A real Chad.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./input.png&#34; title=&#34; Right-click game &amp;gt; Properties &amp;gt; Input Profiles&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2022/input_hu80ed239af2ff3d7350dfbffea818058c_221107_902x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Right-click game &amp;gt; Properties &amp;gt; Input Profiles&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Right-click game &amp;gt; Properties &amp;gt; Input Profiles&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This feature uses previously created input profiles, make sure to create some in &lt;code&gt;Emulation &amp;gt; Configure... &amp;gt; Controls&lt;/code&gt; beforehand.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;There’s a &lt;em&gt;lot&lt;/em&gt; going on behind closed doors, but it’s too early to start teasing you.
We can confirm that both &lt;code&gt;Project Gaia&lt;/code&gt; and &lt;code&gt;Project Y.F.C. Part 2&lt;/code&gt; are progressing healthily, but those are not the only important changes in the oven.&lt;/p&gt;
&lt;p&gt;Personally, I’m helping implement SMAA, but what started as just a rebase of &lt;a href=&#34;https://github.com/breadfish64&#34;&gt;BreadFish&amp;rsquo;s&lt;/a&gt; OpenGL implementation ended up being more than a week of extra work dealing with the Vulkan implementation, taking precious time from the already busy schedule byte[] has.
Sorry! But the result was worth it.
We&amp;rsquo;ll talk about it next month, as it didn&amp;rsquo;t make the cut for this report&amp;rsquo;s timeframe.&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you so much for giving us a bit of your time, and we hope to see you next time!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report October 2022</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/</link>
      <pubDate>Sun, 06 Nov 2022 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/</guid>
      <description>&lt;p&gt;Greetings, dear yuz-ers! What a month we&amp;rsquo;ve had. A dozen graphical fixes, big kernel changes, audio, input and amiibo fixes, and more!
Don’t touch that dial, because we&amp;rsquo;re just getting started!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Greetings, dear yuz-ers! What a month we&amp;rsquo;ve had. A dozen graphical fixes, big kernel changes, audio, input and amiibo fixes, and more!
Don’t touch that dial, because we&amp;rsquo;re just getting started!&lt;/p&gt;
&lt;h2 id=&#34;graphics-and-general-bug-fixes&#34;&gt;Graphics and general bug fixes&lt;/h2&gt;
&lt;p&gt;Let’s start with the meaty part. New month, new games to fix!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Persona 5 Royal&lt;/code&gt;, one of two blockbuster releases this month, launched with some mysteriously black battle scenes in Vulkan.
&lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; identified this as missing support for special OpenGL-style clear commands which are not supported by the Vulkan specification, and added a workaround to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9127&#34; data-gh-pr=&#34;9127&#34;&gt;skip clearing&lt;/a&gt;
 in this case.
More work remains to be done to properly implement these clears in Vulkan, but this allows the game to be playable.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/p5bug_hu70b6252cafdfd587f77ef6e45d0b9367_298497_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Joker, no stealing the screen! (Persona 5 Royal)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/p5fix_hu4e3541e1ae773713050071ae6084ed24_6317375_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Joker, no stealing the screen! (Persona 5 Royal)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Joker, no stealing the screen! (Persona 5 Royal)&lt;/p&gt;


&lt;p&gt;Longtime graphics contributor &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=sOnqjkJTMaA&#34;&gt;has returned from the dead&lt;/a&gt; to fix games.
The other major release of this month, &lt;code&gt;Bayonetta 3&lt;/code&gt;, came out, and to users&amp;rsquo; dismay, it did not work in yuzu.
After defeating the services issue causing it to freeze, Blinkhawk investigated and fixed a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9155&#34; data-gh-pr=&#34;9155&#34;&gt;rendering issue&lt;/a&gt;
 causing it to appear white in Vulkan.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/bayobug_hu45d21ab551aa801c1a6b94ba1230ed18_5147991_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Is this Paradiso? (Bayonetta 3)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/bayofix_huc55dabb8f8429dfd415b29f8885c6757_6449703_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Is this Paradiso? (Bayonetta 3)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Is this Paradiso? (Bayonetta 3)&lt;/p&gt;


&lt;p&gt;A new challenger approaches!
Or rather, a new showing from some older games, &lt;code&gt;Super Mario Sunshine&lt;/code&gt; and &lt;code&gt;Super Mario Galaxy&lt;/code&gt;.
While rendering bugs were fixed in Vulkan, and OpenGL with the GLSL backend, they are now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9011&#34; data-gh-pr=&#34;9011&#34;&gt;fixed with the NVIDIA-exclusive GLASM backend,&lt;/a&gt;
 as &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; finally acquired some NVIDIA hardware for testing and development.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/smgbug_hu11bde774a40d69b8d6e140756398885c_1807271_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Best. Music. Ever! (Super Mario Galaxy)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/smgfix_hu11bde774a40d69b8d6e140756398885c_1838581_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Best. Music. Ever! (Super Mario Galaxy)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Best. Music. Ever! (Super Mario Galaxy)&lt;/p&gt;


&lt;p&gt;An NVIDIA card is not the only new hardware acquired by byte[] this month.
He also acquired an Intel Arc A770 16GB, and used it to track down a driver issue.
Despite passing all of our validation tests, the Vulkan driver is unable to compile the ASTC decoder used by yuzu, and yuzu unconditionally compiles it at startup.
Therefore, byte[] has &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9097&#34; data-gh-pr=&#34;9097&#34;&gt;skipped compiling it if CPU decoding for ASTC is used&lt;/a&gt;
 instead, and filed a &lt;a href=&#34;https://github.com/IGCIT/Intel-GPU-Community-Issue-Tracker-IGCIT/issues/159&#34;&gt;report to Intel for their reference&lt;/a&gt;.
This allows yuzu to boot games in Vulkan when using the Intel Arc Windows Vulkan drivers.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./arc.png&#34; title=&#34; Blue Player joins the fray! (Super Mario 3D World &amp;#43; Bowser&amp;#39;s Fury)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/arc_hu2c06d98d1a4e9dd82a14bc1020a34051_1500543_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Blue Player joins the fray! (Super Mario 3D World &amp;#43; Bowser&amp;#39;s Fury)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Blue Player joins the fray! (Super Mario 3D World &amp;#43; Bowser&amp;#39;s Fury)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;byte[] also found and investigated two issues with the macro JIT this month.
The macro JIT is an optimization which recompiles small programs that are uploaded to the GPU to control drawing into native machine code.
The first issue he resolved allowed homebrew applications using the &lt;a href=&#34;https://github.com/devkitPro/deko3d&#34;&gt;deko3d&lt;/a&gt; rendering API to finally &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9005&#34; data-gh-pr=&#34;9005&#34;&gt;become visible with the macro JIT enabled.&lt;/a&gt;
&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./deko1.png&#34; title=&#34; Better than NVN, it&amp;#39;s free!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/deko1_hu7b467937bd5f198bc6ae3bb495c9c6cd_83868_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Better than NVN, it&amp;#39;s free!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Better than NVN, it&amp;#39;s free!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The second issue was causing &lt;code&gt;MONSTER HUNTER RISE&lt;/code&gt; to fail to render most scene elements.
yuzu has had a workaround in Mainline for &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6598&#34;&gt;over a year!&lt;/a&gt; However, this papered over this issue, which is why it took so long to get fixed.
byte[] fixed this issue as well, and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9010&#34; data-gh-pr=&#34;9010&#34;&gt;now all is working as intended&lt;/a&gt;
 &amp;ndash; there are no more known issues with the macro JIT!&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/mhrbug_hu03d323d73736d1a5e3af75734a00a1e7_2000108_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Someone put a world in my ocean (MONSTER HUNTER RISE)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/mhrfix_hu6a35ec48ce698871487f46b2631600be_2868038_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Someone put a world in my ocean (MONSTER HUNTER RISE)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Someone put a world in my ocean (MONSTER HUNTER RISE)&lt;/p&gt;


&lt;p&gt;Unfortunately, fixing the accuracy issues in the macro JIT has caused &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; to crash at boot with official AMD Vulkan drivers used on Windows and opt-in on Linux (amdvlk).
This issue previously manifested with the macro JIT disabled, and occurs due to a crash that happens when submitting a clear command.
We have reported this as a driver issue to AMD, and they have confirmed they&amp;rsquo;re looking into the issue.
While we wait for the fix, using OpenGL while running the game on 2x scaling can be a workaround.&lt;/p&gt;
&lt;p&gt;Speaking of &lt;code&gt;MONSTER HUNTER RISE&lt;/code&gt;, Blinkhawk contributed another fix for the rendering in this game, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9025&#34; data-gh-pr=&#34;9025&#34;&gt;implementing the ASTC 10x5 format.&lt;/a&gt;

Grainy textures begone!&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/mhr2bug_hue90c2878a79b76938c2cb9c110b5745b_16673870_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;ASTC acne, begone! (MONSTER HUNTER RISE)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/mhr2fix_hu057f38f689771d7d562815e741e6a202_13573321_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;ASTC acne, begone! (MONSTER HUNTER RISE)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;ASTC acne, begone! (MONSTER HUNTER RISE)&lt;/p&gt;


&lt;p&gt;byte[] found that while he was debugging graphical issues, yuzu would frequently crash after the merge of &lt;code&gt;Project Y.F.C.&lt;/code&gt;
He narrowed it down to some code that was improperly ported from our friends at the &lt;a href=&#34;https://github.com/skyline-emu/skyline&#34;&gt;Skyline emulator&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9049&#34; data-gh-pr=&#34;9049&#34;&gt;and implemented a fix,&lt;/a&gt;
 finally allowing him to debug without worrying about the game&amp;rsquo;s rendering speed causing any issues.
Now, a user’s PC performance won’t be a cause for crashes.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; and &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; were on top of two regressions from the merge of the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/8766&#34;&gt;3D registers pull request&lt;/a&gt; from a few months ago.
Morph found that the merge was causing many shaders to be recompiled unintentionally, and narrowed it down to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9067&#34; data-gh-pr=&#34;9067&#34;&gt;a different default value for the tessellation parameters in the register definitions.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Meanwhile, Maide and byte[] worked together to find a strange rendering problem affecting &lt;code&gt;Luigi&#39;s Mansion 3&lt;/code&gt;, and finally found the issue in &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9048&#34; data-gh-pr=&#34;9048&#34;&gt;the values of the stencil mask registers.&lt;/a&gt;
&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/lm3bug_hu9d3861468cfa2ca527f5a037e7a93f2b_1978432_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Luigi saw how much an RTX 4090 costs (Luigi&amp;#39;s Mansion 3)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/lm3fix_huda576a16d2dff33c9280e25d04032998_1981810_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Luigi saw how much an RTX 4090 costs (Luigi&amp;#39;s Mansion 3)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Luigi saw how much an RTX 4090 costs (Luigi&amp;#39;s Mansion 3)&lt;/p&gt;


&lt;p&gt;vonchenplus found an issue with how a compute shader for &lt;code&gt;TRIANGLE STRATEGY&lt;/code&gt; was being compiled by yuzu&amp;rsquo;s own shader recompiler project, and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9126&#34; data-gh-pr=&#34;9126&#34;&gt;implemented a fix by deleting a broken optimization pass,&lt;/a&gt;
 returning blocky rendering to normal.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/prbug_hufb89c357575796870da78540a4934255_1207919_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Project Rectangle, I mean, TRIANGLE STRATEGY&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/prfix_hue7489fc5838bb17e24719286badb4b35_1162584_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Project Rectangle, I mean, TRIANGLE STRATEGY&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Project Rectangle, I mean, TRIANGLE STRATEGY&lt;/p&gt;


&lt;p&gt;Still on a roll, vonchenplus also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9084&#34; data-gh-pr=&#34;9084&#34;&gt;implemented 1D texture copies.&lt;/a&gt;

Normally, the guest driver (the GPU driver included with each game) has to provide what kind of texture type is in use in memory, but thanks to the previously mentioned open documentation NVIDIA provides, we now know that there is a way to set the correct kind when the memory is initialized.
The end result is much improved rendering in &lt;code&gt;Snack World: The Dungeon Crawl - Gold&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/sw2bug_hu0ebd0927efbb8a54b75275b8a7117327_813760_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Almost looks like a 3D TV without glasses (Snack World: The Dungeon Crawl - Gold)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/sw2fix_hudf11827914d14ba1e6b39122e6150faf_712120_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Almost looks like a 3D TV without glasses (Snack World: The Dungeon Crawl - Gold)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Almost looks like a 3D TV without glasses (Snack World: The Dungeon Crawl - Gold)&lt;/p&gt;


&lt;p&gt;With Blinkhawk back, the team can finally start nagging him to fix his changes, more specifically, &lt;code&gt;Project Y.F.C.&lt;/code&gt; Part 1.
After &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9095&#34; data-gh-pr=&#34;9095&#34;&gt;addressing some semaphores and cache flush regressions,&lt;/a&gt;
 Blinkhawk fixed the remaining glitches affecting the ink logic in &lt;code&gt;Splatoon 2&lt;/code&gt; and the models flickering in the ATM in &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./blink.png&#34; title=&#34; Long vacations&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/blink_hub3e91b1f15a290fc4c26e750cbfc2125_396873_500x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Long vacations&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Long vacations&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;byte[]&amp;rsquo;s kernel and services work this month has been focused on getting homebrew running, but this also fixed some graphical issues.
The first major accomplishment was getting homebrew to run consistently in the first place.
byte[] noticed that launching homebrew in yuzu would often cause the entire emulator to lock up in almost 50% of attempts - but only when using Vulkan.
After enabling validation layers, and some careful investigation of the messages, he found and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9016&#34; data-gh-pr=&#34;9016&#34;&gt;fixed a subtle race condition in Vulkan queue submission,&lt;/a&gt;
 finally enabling homebrew apps to work reliably with Vulkan.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./deko2.png&#34; title=&#34; You could say that unit tests are at the heart of emulation development&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/deko2_hu37d4a6e830bf85251543c818f4dac0ca_23620_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; You could say that unit tests are at the heart of emulation development&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; You could say that unit tests are at the heart of emulation development&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;vonchenplus has also been on the ball with homebrew support this month, gifting yuzu corrected support for instanced draws and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9112&#34; data-gh-pr=&#34;9112&#34;&gt;the zany inline index 3D registers,&lt;/a&gt;
 fixing &lt;a href=&#34;https://github.com/switchbrew/switch-examples&#34;&gt;gpu_console&lt;/a&gt; and allowing the &lt;code&gt;Sonic 1 (2013)&lt;/code&gt; homebrew game to render in yuzu.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9140&#34; data-gh-pr=&#34;9140&#34;&gt;The usual slate&lt;/a&gt;
 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9163&#34; data-gh-pr=&#34;9163&#34;&gt;of regressions&lt;/a&gt;
 associated with these types of changes, this time affecting &lt;code&gt;Super Mario 64&lt;/code&gt;, &lt;code&gt;Super Mario Galaxy&lt;/code&gt;, &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;, and &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt;, have also been identified and fixed.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./console.png&#34; title=&#34; gpu_console, one of the examples available&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/console_hu5a83b585c401ce31574847fb2d088389_23656_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; gpu_console, one of the examples available&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; gpu_console, one of the examples available&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./sanic.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Yes Doctor, all the nostalgia directly to my bloodstream (Sonic 1 2013)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Finally, byte[] implemented a fix for the intense, seizure-inducing flickering produced when launching homebrew from the homebrew menu when Vulkan is enabled, which &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9154&#34; data-gh-pr=&#34;9154&#34;&gt;was caused by not recreating the images intended for presentation.&lt;/a&gt;

Now, you can launch console homebrew from the homebrew menu, just like on the Switch!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./hbmenu.png&#34; title=&#34; Emulating hacked consoles is so hot right now&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/hbmenu_huc3b745715e0dd5e3b0b66de38069a3ef_258586_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Emulating hacked consoles is so hot right now&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Emulating hacked consoles is so hot right now&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Switching topics to a minor (but quite annoying) issue, we have a quality of life improvement from byte[].
In the past, writing screenshots taken in yuzu to disk would noticeably block rendering the game.
The user would perceive this as a relatively short freeze (the length of this freeze varies according to the size of the resolution multiplier used).
byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9024&#34; data-gh-pr=&#34;9024&#34;&gt;made this fully asynchronous,&lt;/a&gt;
 allowing for smooth gameplay even during particularly intensive photo shoots.&lt;/p&gt;
&lt;h2 id=&#34;cpu-kernel-services-and-core-fixes&#34;&gt;CPU, Kernel, services, and core fixes&lt;/h2&gt;
&lt;p&gt;A fix for CoreTiming accuracy from a few months ago, as part of &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/8650&#34;&gt;Pull Request #8650&lt;/a&gt;, was added to intentionally waste CPU cycles until a certain amount of time had passed, due to extremely poor support in Windows for high precision timing events.
But in Linux, this fix isn&amp;rsquo;t needed, as Linux natively supports high-precision delays. byte[] modified the behavior, allowing Linux users to take advantage of this and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9040&#34; data-gh-pr=&#34;9040&#34;&gt;lower the high CPU usage.&lt;/a&gt;

Remember when we say that yuzu is faster on Linux? This is a great example of what we mean.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;No Man&#39;s Sky&lt;/code&gt; was released and our tester, &lt;a href=&#34;https://github.com/Law022&#34;&gt;Law&lt;/a&gt;, found that it could boot with auto-stubbing enabled.
byte[] investigated the log file and stubbed the previously unimplemented calls, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9032&#34; data-gh-pr=&#34;9032&#34;&gt;CheckFriendListAvailability&lt;/a&gt;
 and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9033&#34; data-gh-pr=&#34;9033&#34;&gt;GetCacheStorageSize,&lt;/a&gt;
 allowing &lt;code&gt;No Man&#39;s Sky&lt;/code&gt; to boot.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./nms.png&#34; title=&#34; Still the best screensaver&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/nms_hudee1a27772151d7dd0352748ca0d8a37_3822232_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Still the best screensaver&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Still the best screensaver&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Bayonetta 3&lt;/code&gt;&amp;rsquo;s release caused some issues that were tricky to track down.
Your resident &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; rabbit properly implemented &lt;code&gt;ListOpenContextStoredUsers&lt;/code&gt;, and the related &lt;code&gt;StoreOpenContext&lt;/code&gt; which is used to set stored opened user profiles.
&lt;code&gt;ListOpenContextStoredUsers&lt;/code&gt; was causing &lt;code&gt;Bayonetta 3&lt;/code&gt; to crash on startup.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9157&#34; data-gh-pr=&#34;9157&#34;&gt;Fixing the stubs&lt;/a&gt;
 allowed the game to finally boot, and while it is now playable, it is quite slow still.
Stay tuned for performance optimizations that will benefit this game!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; took part in the fun, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9149&#34; data-gh-pr=&#34;9149&#34;&gt;stubbing the SetRecordVolumeMuted service,&lt;/a&gt;
 allowing the game to boot.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./bayo.png&#34; title=&#34; Hot protagonists in your area (Bayonetta 3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/bayo_hu0c72031b3f0b7fc4d66bbb1b33bade81_11308440_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Hot protagonists in your area (Bayonetta 3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Hot protagonists in your area (Bayonetta 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Another notable release from bunnei this month was the start of the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9071&#34; data-gh-pr=&#34;9071&#34;&gt;multiprocess project.&lt;/a&gt;

Since the very beginning, yuzu has only ever supported a single-process architecture, as games only ever use one process on the Switch.
However, to help improve yuzu&amp;rsquo;s accuracy for Switch software, yuzu has been focusing on getting key operating system features working, and one of the most important is multiprocess support, since this corresponds to how Switch software actually works.&lt;/p&gt;
&lt;p&gt;byte[] and bunnei have been hard at work getting certain prerequisites available for multiprocess support. One of those is &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9055&#34; data-gh-pr=&#34;9055&#34;&gt;support for server sessions,&lt;/a&gt;
  needed for the &lt;code&gt;nx-hbloader&lt;/code&gt; homebrew.
This is used on the Switch to launch homebrew, and is needed for homebrew that do not work when launched directly from their NRO file.&lt;/p&gt;
&lt;p&gt;Additionally, byte[] needed to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9137&#34; data-gh-pr=&#34;9137&#34;&gt;fix several services,&lt;/a&gt;
 as the previous stub implementations had assumed that they would never be torn down.
With these changes, and the associated graphical fixes, &lt;code&gt;nx-hbloader&lt;/code&gt; and &lt;code&gt;nx-hbmenu&lt;/code&gt; now finally work as intended!
To use them, you can extract &lt;code&gt;hbl.nsp&lt;/code&gt; and &lt;code&gt;hbmenu.nro&lt;/code&gt; from your Atmosphere installation.
Place &lt;code&gt;hbmenu.nro&lt;/code&gt; in yuzu&amp;rsquo;s SD card directory, and then launch &lt;code&gt;hbl.nsp&lt;/code&gt;, and the homebrew menu will boot.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./hbmenu.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; They launch now (Homebrew menu and Sonic 1 2013)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Let’s talk about amiibos.
Amiibo data is stored both encrypted and as plain data.
To access the encrypted portion, a key dump is required, but not all games use the encrypted portion and are just fine with the plaintext available.
For those cases, german77 now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9113&#34; data-gh-pr=&#34;9113&#34;&gt;marks amiibos as read-only if no key dumps are available.&lt;/a&gt;

This won’t replace dumping your amiibo keys if a game needs it, but many games will be fine with just a basic level of read-only detection.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./amiibo2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/amiibo2_hu673f3184c019c07e20b3905f6904d0a3_2492816_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thank you Gidoly and german77 for the pics!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./amiibo3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/amiibo3_huc67195a9687146858b729bddf7575dab_2156306_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thank you Gidoly and german77 for the pics!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./amiibo1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/amiibo1_hu56affa5b5837bc78d3253b326b30462a_964278_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thank you Gidoly and german77 for the pics!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Thank you Gidoly and german77 for the pics!&lt;/p&gt;


&lt;h2 id=&#34;input-improvements&#34;&gt;Input improvements&lt;/h2&gt;
&lt;p&gt;yuzu performs vibration tests every time a game initializes a controller for vibration, but the problem (there’s always a problem) is that some controllers take longer than others to respond.
Previously, a fixed 15ms delay was implemented, because some controllers simply needed that much time to respond.
If the game performs successive vibration tests, the game is delayed until the controller responds, which results in a reduced framerate, for example, from 60 to 32 FPS.
All that performance being lost waiting on a bad quality controller is a tragedy.&lt;/p&gt;
&lt;p&gt;So, a better middle ground is needed. Thankfully, german77 came up with a much smarter solution.
Instead of repeating the test each time, it’s better to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9107&#34; data-gh-pr=&#34;9107&#34;&gt;cache it the first time and return that same result afterwards.&lt;/a&gt;

A nice, free, performance boost for those of us who use generic controllers.&lt;/p&gt;
&lt;p&gt;Newcomer &lt;a href=&#34;https://github.com/ZwipZwapZapony&#34;&gt;ZwipZwapZapony&lt;/a&gt; (love the name) &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9008&#34; data-gh-pr=&#34;9008&#34;&gt;fixed a copy-paste oopsie in how left and right controller colours are identified.&lt;/a&gt;

Thank you!&lt;/p&gt;
&lt;h2 id=&#34;audio-changes&#34;&gt;Audio changes&lt;/h2&gt;
&lt;p&gt;Have you ever noticed how in motherboard BIOS/UEFI settings, the &lt;code&gt;Auto&lt;/code&gt; option seems to do nothing, and instead simply reflects the first option available in the list?
Well, we cheated exactly like that for years. The &lt;code&gt;Auto&lt;/code&gt; audio backend option only selected &lt;code&gt;cubeb&lt;/code&gt; every time by default. The shame.
Maide found out that some audio devices incur a huge latency when using &lt;code&gt;cubeb&lt;/code&gt;, so he decided to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9039&#34; data-gh-pr=&#34;9039&#34;&gt;perform a latency test&lt;/a&gt;
 and select either &lt;code&gt;cubeb&lt;/code&gt; or &lt;code&gt;SDL&lt;/code&gt; based on the results.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; then &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9080&#34; data-gh-pr=&#34;9080&#34;&gt;addressed a regression&lt;/a&gt;
 caused by this change, avoiding a crash.&lt;/p&gt;
&lt;p&gt;New Switch firmware versions usually come with their fair share of new services and additions, so in an effort to avoid potential problems in future games, Maide &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9096&#34; data-gh-pr=&#34;9096&#34;&gt;implemented some new parameters&lt;/a&gt;
 that Nintendo added to their audio core with firmware 15.0.0.&lt;/p&gt;
&lt;h2 id=&#34;user-interface-improvements&#34;&gt;User interface improvements&lt;/h2&gt;
&lt;p&gt;Some users prefer displays closer to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Golden_ratio&#34;&gt;golden ratio&lt;/a&gt;, the glorious 16:10 aspect ratio.
While Switch games are not intended to be played outside the standard 16:9 aspect ratio, some users are fine with stretching the image to fill their whole display, even if it means some slight distortion.
This has been increasingly popular with the release of the Steam Deck, which uses a 16:10 display, sporting a 1280x800 resolution.
There’s also the option of the community coming up with different aspect ratio mods for each game, allowing for proper use of those nice extra pixels.
german77 took the time to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9047&#34; data-gh-pr=&#34;9047&#34;&gt;add this new option to the aspect ratio list,&lt;/a&gt;
 which you can find in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Aspect Ratio&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./aspectratio.png&#34; title=&#34; I&amp;#39;m personally not a fan of stretching, long live the black bars&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/aspectratio_hu897d613ee5e25ea00cdc7c50b4d11918_33658_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; I&amp;#39;m personally not a fan of stretching, long live the black bars&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; I&amp;#39;m personally not a fan of stretching, long live the black bars&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Docteh&#34;&gt;Docteh&lt;/a&gt;, Morph, and &lt;a href=&#34;https://github.com/lioncash&#34;&gt;lioncash&lt;/a&gt; (who diverted some time from the usual, making sure all PRs submitted to yuzu are sane) had their &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9076&#34; data-gh-pr=&#34;9076&#34;&gt;fair share&lt;/a&gt;
 of fixing &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9079&#34; data-gh-pr=&#34;9079&#34;&gt;spelling mistakes.&lt;/a&gt;

Happens to the best of us.&lt;/p&gt;
&lt;p&gt;In an effort to help reduce user confusion while we rework our compatibility reports, Docteh added a new option to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9091&#34; data-gh-pr=&#34;9091&#34;&gt;hide the compatibility rating column&lt;/a&gt;
 from the game list by default.
Anyone interested in reverting it back can find it in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; General &amp;gt; UI &amp;gt; Show Compatibility List&lt;/code&gt;.
Keep in mind, reports will not be accurate while we work to implement the new report system.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./compat.png&#34; title=&#34; We&amp;#39;re working to solve all those Not Tested reports&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/compat_hu93a0a4b5bed7d1d43b0f76014c5e629f_30643_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; We&amp;#39;re working to solve all those Not Tested reports&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; We&amp;#39;re working to solve all those Not Tested reports&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Not everyone prefers to have their games listed in English in the game list, many would rather have them in their native language, or at least another option from the official languages the Switch supports.
vonchenplus worked to solve this, and now yuzu &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9115&#34; data-gh-pr=&#34;9115&#34;&gt;prioritizes displaying the games in the user selected language.&lt;/a&gt;
&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/langbug_hue5b55727134c674acfd9ba92877441dc_100962_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Even if working online forces you to constantly use English, reading in your native language is always the best&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/langfix_hu89985859550801d08ecb12c6b111b36c_99088_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Even if working online forces you to constantly use English, reading in your native language is always the best&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Even if working online forces you to constantly use English, reading in your native language is always the best&lt;/p&gt;


&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;p&gt;This section will be short this month as most things are in progress!&lt;/p&gt;
&lt;h4 id=&#34;amd-wip&#34;&gt;AMD, WIP&lt;/h4&gt;
&lt;p&gt;As we said previously, we got confirmation from AMD that they are looking into the cause for the crashes at boot now affecting &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;, along with other previously reported fixes.&lt;/p&gt;
&lt;p&gt;Future drivers will be fun to test.&lt;/p&gt;
&lt;h4 id=&#34;nvidia-one-step-closer&#34;&gt;NVIDIA, one step closer&lt;/h4&gt;
&lt;p&gt;We’re making some slow progress in the matter of stability problems affecting Maxwell and Pascal cards.
It’s too early to promise anything, so we’ll keep you updated.
In the meantime, if you MUST run the latest drivers, use OpenGL.&lt;/p&gt;
&lt;p&gt;Hopefully the next mid-range cards won&amp;rsquo;t be the same cost as an entire PC.&lt;/p&gt;
&lt;h4 id=&#34;intel-arc-lets-go&#34;&gt;Intel Arc, let’s go!&lt;/h4&gt;
&lt;p&gt;With games now working on Vulkan thanks to byte[], we only need proud owners of Team Blue cards reporting issues on our GitHub.
Message to Intel: there are sales outside of Europe, China, and the USA. Please start shipping already so your writer can start testing…&lt;/p&gt;
&lt;p&gt;This goes for you too, GabeN.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;With all the regressions caused by the first part of &lt;code&gt;Project Y.F.C.&lt;/code&gt;, Blinkhawk has started providing internal testers with the first test builds of some of the changes Part 2 will include.
As with any first try, there are of course regressions, but some long-standing issues are already fixed in these builds, so expect more news in future articles.&lt;/p&gt;
&lt;p&gt;Not forgetting our file system rewrite, &lt;code&gt;Project Gaia&lt;/code&gt;, Morph implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9082&#34; data-gh-pr=&#34;9082&#34;&gt;support for the incoming save data path structure.&lt;/a&gt;

Work on &lt;code&gt;Gaia&lt;/code&gt; continues, some roadblocks were hit, slowing progress down, but Morph pushes on.&lt;/p&gt;
&lt;p&gt;Special thanks to Mysterious Writer B for their big help while your writer is half dead dealing with classes.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./byte.png&#34; title=&#34; He&amp;#39;s Vengeance. He&amp;#39;s the Night&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2022/byte_hu4fdc8c014ba453285cd368aaef52271b_297921_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; He&amp;#39;s Vengeance. He&amp;#39;s the Night&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; He&amp;#39;s Vengeance. He&amp;#39;s the Night&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;That’s all folks! Thank you for your time and see you next month!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report September 2022</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/</link>
      <pubDate>Tue, 18 Oct 2022 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/</guid>
      <description>&lt;p&gt;Hello yuz-ers! We have so much to talk about this month. From game fixes, input changes, and quality of life improvements, to new gameplay options available to everyone!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello yuz-ers! We have so much to talk about this month. From game fixes, input changes, and quality of life improvements, to new gameplay options available to everyone!&lt;/p&gt;
&lt;h2 id=&#34;project-london-open-source-online-local-wireless-emulation&#34;&gt;Project London: open-source, online Local Wireless emulation&lt;/h2&gt;
&lt;p&gt;As promised in the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/#future-projects&#34;&gt;previous progress report&lt;/a&gt;,
and explained in its &lt;a href=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/&#34;&gt;dedicated article&lt;/a&gt;, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8876&#34; data-gh-pr=&#34;8876&#34;&gt;LDN support is here and available to all users!&lt;/a&gt;

Enjoy pwning some noobs in your favourite games.
But before we explain the how, let&amp;rsquo;s cover some theory.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./comm.png&#34; title=&#34; Available multiplayer methods on the Nintendo Switch&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/comm_huff96b8f7a7fc024f356f04fe93630f03_69367_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Available multiplayer methods on the Nintendo Switch&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Available multiplayer methods on the Nintendo Switch&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The Nintendo Switch offers 4 methods for multiplayer gameplay:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Good, old, couch &lt;em&gt;local multiplayer&lt;/em&gt;. While this normally only refers to people in the same physical room, the community has been enjoying the benefits of remote access streaming, with services like &lt;a href=&#34;https://parsec.app/&#34;&gt;Parsec&lt;/a&gt;, to play online with the lowest possible latency.&lt;/li&gt;
&lt;li&gt;Local Area Network (LAN) multiplayer. This is when multiple Switches connect to the same local network. This option has been emulated and available in yuzu &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/#lan-party-time&#34;&gt;for quite a while now&lt;/a&gt;. It’s limited to very few games, and it doesn’t have good tolerance for lag.&lt;/li&gt;
&lt;li&gt;LDN multiplayer, more commonly known as Local Wireless, the star of this section. This is when one Switch hosts a session over the built-in Switch WiFi hardware while others connect to it as guests. The trick here is that nothing stops emulators from using a server infrastructure to host rooms so users from anywhere in the world, including locally, can join and smash each other. This method is far more supported by games than LAN.&lt;/li&gt;
&lt;li&gt;Nintendo Online. This is the paid Nintendo service to play online, which also includes other bonuses such as official emulators to play older titles. We have no plans to offer support for Nintendo Online in the near or far future.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Project London&lt;/code&gt; includes full support for LDN, with room hosting and joining, and revamps our LAN support to use the new LDN code in place.&lt;/p&gt;
&lt;p&gt;Now, let&amp;rsquo;s get to the fun part: how to use it!&lt;/p&gt;
&lt;p&gt;A user can launch the &lt;code&gt;Public Room Browser&lt;/code&gt; by selecting the &lt;code&gt;Multiplayer&lt;/code&gt; option in the Menu Bar and then selecting &lt;code&gt;Browse Public Game Lobby&lt;/code&gt;, or by clicking the status bar tip in the bottom right labeled &lt;code&gt;Not Connected. Click here to find a room!&lt;/code&gt;&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ldn.png&#34; title=&#34; The new Multiplayer submenu&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/ldn_hu7175ff7b2eb91374673bdfa695e80555_93209_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The new Multiplayer submenu&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The new Multiplayer submenu&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;From there, double-clicking a room will allow the user to join it. Keep in mind, the &lt;code&gt;Preferred Game&lt;/code&gt; is just a suggestion and there is no hard restriction on which games can be played in a room. Please keep this in mind when joining public lobbies and be courteous to your fellow yuz-ers! Any rooms that are user-hosted may enforce this by kicking players or locking their room.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./rooms.png&#34; title=&#34; A lock means it&amp;#39;s a password protected room&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/rooms_hue60721399f28e0fbba6e5f3ce5a390fc_65542_905x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; A lock means it&amp;#39;s a password protected room&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; A lock means it&amp;#39;s a password protected room&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Speaking of user-hosted rooms, the &lt;code&gt;Create Room&lt;/code&gt; option in the &lt;code&gt;Multiplayer&lt;/code&gt; menu allows users to host their own rooms, with custom player limits and optional password security.
Some ports need to be forwarded in the host’s router/modem configuration, so please &lt;a href=&#34;https://yuzu-mirror.github.io/help/feature/multiplayer/&#34;&gt;follow our guide here&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./create.png&#34; title=&#34; Feel free to host any game you want!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/create_hu54a1fac684774618b57eb35732721216_10220_609x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Feel free to host any game you want!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Feel free to host any game you want!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Once a player joins a room, they can chat with other members, see the game they are running, and very importantly, the game versions other players are using.
Most games tend to only work when all players run the same game update version, so remember to dump the latest from your Switch!&lt;/p&gt;
&lt;p&gt;It’s not mandatory to join a room before starting a game in yuzu, but it is recommended.
At the moment, only LAN supports connecting with real Switches. LDN is yuzu to yuzu only, but we’re working to include native Switch support for LDN sometime in the future.&lt;/p&gt;
&lt;p&gt;So far, very few games have issues with LDN. Only &lt;code&gt;Super Mario Maker 2&lt;/code&gt;, &lt;code&gt;Mario Golf: Super Rush&lt;/code&gt; and &lt;code&gt;DRAGON BALL FighterZ&lt;/code&gt; have been reported as incompatible.
Any other local wireless compatible game should work fine, but don’t be shy to report any issues should you discover them.&lt;/p&gt;
&lt;p&gt;One bit of info, &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; has a hardcoded 6 frames of delay when playing over LDN. This is supposedly to “help buffer” the latency expected from online and WiFi gameplay.
While the ideal solution is to play in local multiplayer with Parsec (no forced delay on local play), not everyone has good upload speeds to host, or is comfortable with giving remote access to their computer.&lt;/p&gt;
&lt;p&gt;An alternative is available: run the game at 120 FPS, reducing the delay to only 3 frames instead.
For this, all users in the room must do two things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install the 120 FPS mod &lt;a href=&#34;https://cdn.discordapp.com/attachments/402001453381713920/1018356262582354091/120.rar&#34;&gt;available here&lt;/a&gt;. Right click the game in yuzu’s game
list and select &lt;code&gt;Open Mod Data Location&lt;/code&gt;, then place &lt;em&gt;the folder&lt;/em&gt; of the compressed file in the location that yuzu opens.&lt;/li&gt;
&lt;li&gt;Set game speed to 200%. This can be set on a per game basis with custom configurations. Right click the game in yuzu’s list like before and select &lt;code&gt;Properties&lt;/code&gt; &amp;gt; &lt;code&gt;General&lt;/code&gt; tab &amp;gt; set the &lt;code&gt;Limit Speed Percent&lt;/code&gt; to a blue enabled value (this means it’s a custom value, ignoring the default one) &amp;gt; change it to 200%.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./200.png&#34; title=&#34; Reducing input lag by running things faster, life hacks&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/200_hudae14893eef76f918f7841cf613e59fc_215839_902x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Reducing input lag by running things faster, life hacks&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Reducing input lag by running things faster, life hacks&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Some GPU power is required to sustain 120 FPS, as such, our minimum hardware recommendations may not cut it (an RX 550 falls under 100 FPS in 1v1 fights), but modern low/mid-end hardware should be fine.
Testing also shows that AMD Windows drivers can only reach framerates higher than 60 if the display supports it.
We reported the issue to AMD, hopefully in the future this doesn’t force users to get high refresh rate monitors.&lt;/p&gt;
&lt;p&gt;And that’s it! Join rooms, both in yuzu and in game, and fight! Or trade those Pokémon, your call.
This endeavour was possible thanks to the &lt;a href=&#34;https://github.com/spacemeowx2/ldn_mitm&#34;&gt;ldn_mitm project&lt;/a&gt; who provided us a licence exemption, and the work done by &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;Tobi&lt;/a&gt; and &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;, along with the testers (your writer included) who never had so much fun crashing games in the name of progress.&lt;/p&gt;
&lt;p&gt;After the Mainline release, Linux users reported that LDN rooms refused to work on some Linux distributions.
The issue is in how the SSL package is distributed. &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt;, taking reference from a previous pull request from &lt;a href=&#34;https://github.com/Docteh&#34;&gt;Docteh&lt;/a&gt;, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8933&#34; data-gh-pr=&#34;8933&#34;&gt;fixed the issue&lt;/a&gt;
 so now all supported operating systems can enjoy LDN.&lt;/p&gt;
&lt;p&gt;Some users reported crashes when playing &lt;code&gt;Pokémon Sword/Shield&lt;/code&gt;.
While we implement the correction for it, make sure that a valid network device is selected in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; System &amp;gt; Network &amp;gt; Network Interface&lt;/code&gt;.
The crash seems to happen when &lt;code&gt;None&lt;/code&gt; is set as the network interface.&lt;/p&gt;
&lt;h2 id=&#34;graphic-changes&#34;&gt;Graphic changes&lt;/h2&gt;
&lt;p&gt;NVIDIA OpenGL users may have seen some strange graphical glitches in games like &lt;code&gt;Dragon Quest Builders&lt;/code&gt;, &lt;code&gt;SNACK WORLD: THE DUNGEON CRAWL&lt;/code&gt;, and &lt;code&gt;Pixel Game Maker Series Werewolf Princess Kaguya&lt;/code&gt; due to an oversight in yuzu&amp;rsquo;s handling of the performance-enhancing &lt;code&gt;vertex_buffer_unified_memory&lt;/code&gt; extension.
&lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8874&#34; data-gh-pr=&#34;8874&#34;&gt;swooped in with a fix,&lt;/a&gt;
 and these games now render as they should.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/dqbug_huef721249acbf2db39da2db79a1ff2a65_1524189_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Dragon Quest Builders&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/dqfix_hu8d02d1a6edae1c33455c4701644b42bd_1494905_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Dragon Quest Builders&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Dragon Quest Builders&lt;/p&gt;




&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/swbug_hud4ebf80b2ce7ca03d3ee3115f9191e21_944274_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;SNACK WORLD: THE DUNGEON CRAWL&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/swfix_hu46cc418325e7b3189b22cad67649576a_2284039_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;SNACK WORLD: THE DUNGEON CRAWL&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;SNACK WORLD: THE DUNGEON CRAWL&lt;/p&gt;




&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/wpbug_hu7f463b46cb3cc19e398fad21dedde735_140078_954x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pixel Game Maker Series Werewolf Princess Kaguya&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/wpfix_hu351ec4e02531791fde51bfda25c59166_158786_950x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pixel Game Maker Series Werewolf Princess Kaguya&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Pixel Game Maker Series Werewolf Princess Kaguya&lt;/p&gt;


&lt;p&gt;Users may have noticed an intriguing square moon in &lt;code&gt;Live a Live&lt;/code&gt;.
This is caused by the texture cache not correctly synchronizing ASTC textures that the game is using to all layers, so vonchenplus added &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8910&#34; data-gh-pr=&#34;8910&#34;&gt;a workaround to avoid filling the extra invalid layers with an error colour,&lt;/a&gt;
 which changes the moon back to the round shape we all love.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/lalbug_hua1ad5e98a8e435eee6637f11d72f15a7_1429085_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Not exactly a Red Moon, dood! (Live a Live)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/lalfix_hu67a5e6e0a6586bff5e33e48c63f90ff9_1431297_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Not exactly a Red Moon, dood! (Live a Live)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Not exactly a Red Moon, dood! (Live a Live)&lt;/p&gt;


&lt;p&gt;Some systems, like Steam, don&amp;rsquo;t like yuzu&amp;rsquo;s behaviour of spawning a new process to check for working Vulkan support. toastUnlimited updated the Vulkan checker with a configuration option to, well, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8930&#34; data-gh-pr=&#34;8930&#34;&gt;stop checking,&lt;/a&gt;
 allowing those systems to function the same as with older yuzu builds.&lt;/p&gt;
&lt;p&gt;After three months of regression solving and the usual nasty delays, &lt;code&gt;Project Y.F.C.&lt;/code&gt; Part 1 is finally merged to Mainline!
You can find more information about it, as well as what’s expected in the near future for Part 2
&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/#part-1-of-project-yfc&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One regression remains, for now.
It affects certain puzzles in the single player mode of &lt;code&gt;Splatoon 2&lt;/code&gt;.
While Part 2 is in development, users affected by this problem should stick to
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu-mainline/releases/tag/mainline-0-1190&#34;&gt;Mainline version 1190&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We mentioned last month about trying to push more aggressive &lt;code&gt;Staging Buffer&lt;/code&gt; values in order to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8987&#34; data-gh-pr=&#34;8987&#34;&gt;benefit GPU users that can enable Resizable BAR/Smart Access Memory&lt;/a&gt;
 (or ReBAR/SAM).
While the option did get merged briefly with Mainline 1189, users quickly reported both big performance gains and losses, with no correlation to which GPU/CPUs were in use.
This change seems to be very platform specific, and the average tilts towards performance losses, so &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/9027&#34; data-gh-pr=&#34;9027&#34;&gt;reverted it.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;It’s been a while since &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; dabbled in graphics work. &lt;code&gt;.hack//G.U. Last Recode&lt;/code&gt; was unable to boot due to excessive vsync event calls.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8992&#34; data-gh-pr=&#34;8992&#34;&gt;Limiting the event to only once per display&lt;/a&gt;
 allows this &lt;code&gt;.hack&lt;/code&gt; to finally boot and play.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./hack.png&#34; title=&#34; .hack//G.U. Last Recode&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/hack_hu20bfdc29d8a0eb7a7f5acaddafd90613_1862147_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; .hack//G.U. Last Recode&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; .hack//G.U. Last Recode&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;audio-changes&#34;&gt;Audio changes&lt;/h2&gt;
&lt;p&gt;The cleanup for &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; from last month continues this month with &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8842&#34; data-gh-pr=&#34;8842&#34;&gt;a new audio pull request&lt;/a&gt;
 from &lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt;.
This fixed the audio desynchronization issue that some users were having during cutscenes.
Previously, Maide&amp;rsquo;s audio implementation sometimes had issues with the game audio producing samples too quickly for the host audio backend (SDL or Cubeb) to be able to play in time.
Now, if the game starts producing too many samples, it will be temporarily paused until the audio backend catches up.&lt;/p&gt;
&lt;p&gt;Maide also implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8878&#34; data-gh-pr=&#34;8878&#34;&gt;a relatively large cleanup of the audio system&lt;/a&gt;
 and how it relates to pausing and shutdown.
Before  &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8878&#34; data-gh-pr=&#34;8878&#34;&gt;Pull Request 8842,&lt;/a&gt;
 the audio system had its own timer system for dealing with the backend that ran independently of yuzu&amp;rsquo;s timer system, &lt;code&gt;CoreTiming&lt;/code&gt;.
Now that the synchronization issues when doing this were fixed, Maide removed the custom timer system to now run everything through &lt;code&gt;CoreTiming&lt;/code&gt;, which correctly handles pausing and shutdown.
The scaffolding for the audio system to be aware of pausing and shutdown was therefore no longer needed, and could be deleted.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./xc3.png&#34; title=&#34; Xenoblade Chronicles 3&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/xc3_hu69b689d71cf26f302995cedb0f46f51b_4962705_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Xenoblade Chronicles 3&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Xenoblade Chronicles 3&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;These audio changes did, however, come with a minor regression.
In multi-core mode, timer callbacks are run on their own thread, which allows them to execute independently of the CPU cores.
However, because yuzu tries to be deterministic in single-core mode, every timing callback and every emulated processor instruction in this mode is run from a single host thread.
In single-core mode, this prevents the timer callbacks from being effectively paused, which causes the audio service to try to continuously pause the game to catch up.
Maide worked around this issue by simply &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8941&#34; data-gh-pr=&#34;8941&#34;&gt;not pausing if single-core mode is enabled.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;For once, Maide was not the only contributor to work on audio!
vonchenplus noticed that the new &lt;code&gt;HwOpus&lt;/code&gt; service, which is a service for optimized playback of Opus audio, didn&amp;rsquo;t implement any of the multi-stream functionality needed for &lt;code&gt;Dragon Quest X&lt;/code&gt; to boot.
He &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8915&#34; data-gh-pr=&#34;8915&#34;&gt;added one new function that the game needed,&lt;/a&gt;
 &lt;code&gt;GetWorkBufferSizeForMultiStreamEx&lt;/code&gt;,  and the game booted.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dqx.png&#34; title=&#34; Dragon Quest X&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/dqx_hu41d8fcfe0a1384c3f07b4f564e6a7756_1214289_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Dragon Quest X&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Dragon Quest X&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;core-emulation&#34;&gt;Core emulation&lt;/h2&gt;
&lt;p&gt;yuzu is slowly but surely improving its ability to run homebrew applications.
So when the team discovered that the &lt;a href=&#34;https://github.com/HarbourMasters/Shipwright&#34;&gt;Ship of Harkinian&lt;/a&gt; homebrew (a PC port of &lt;code&gt;The Legend of Zelda: Ocarina of Time&lt;/code&gt;)
did not work correctly in yuzu, we were intrigued and tracked it down to a single missing service implementation.
&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8855&#34; data-gh-pr=&#34;8855&#34;&gt;added support for the &lt;code&gt;pl:s service&lt;/code&gt;,&lt;/a&gt;
 which is used for loading fonts, and the game now boots and renders, with frame interpolation up to 60 fps working correctly.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./oot.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Pure nostalgia, right click and enable audio (Ocarina of Time, Ship of Harkinian)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;In the realm of our &amp;ldquo;other architecture&amp;rdquo; news, &lt;a href=&#34;https://github.com/liushuyu&#34;&gt;liushuyu&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8904&#34; data-gh-pr=&#34;8904&#34;&gt;modified yuzu&amp;rsquo;s CMake setup to be partly compatible with the ARM64 architecture.&lt;/a&gt;

This allows building the &lt;code&gt;yuzu-room&lt;/code&gt; LDN server application for ARM64.
Pi server, anyone?&lt;/p&gt;
&lt;p&gt;Stay tuned for future news regarding yuzu on ARM64&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;input-changes&#34;&gt;Input Changes&lt;/h2&gt;
&lt;p&gt;One of the longstanding issues with yuzu&amp;rsquo;s input emulation was motion controls not working after the controller reconnects.
Thanks to german77, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8847&#34; data-gh-pr=&#34;8847&#34;&gt;this has now been fixed.&lt;/a&gt;

This was happening because yuzu was only checking for motion controls when the controller first connected, but not on subsequent reconnections.
Ensuring that yuzu checked for motion controls on every reconnection resolved this issue.&lt;/p&gt;
&lt;p&gt;Over the years, yuzu&amp;rsquo;s input emulation had been missing support for emulating the popular &lt;code&gt;Pokéball Plus&lt;/code&gt; controller.
In his efforts to reverse engineer this, german77 found that most meaningful features for it were locked behind Nintendo Switch Online (NSO).
Although this made him lose interest in it, he &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8934&#34; data-gh-pr=&#34;8934&#34;&gt;partially implemented support&lt;/a&gt;
 for emulating this controller (including motion controls), thus opening it up for others to improve upon.
For now, you can select this in &lt;code&gt;Pokémon Let&#39;s Go, Pikachu/Eevee!&lt;/code&gt; and use it like any other controller, but loading data from it or writing data to it is NOT supported.&lt;/p&gt;
&lt;p&gt;Last month&amp;rsquo;s Amiibo emulation support work also saw &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8955&#34; data-gh-pr=&#34;8955&#34;&gt;major improvements and bug fixes.&lt;/a&gt;

With these changes, Amiibo keys are now a mandatory requirement to read/write any data.
This also fixed Amiibo support in games like &lt;code&gt;Shovel Knight&lt;/code&gt; and &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; among others.&lt;/p&gt;
&lt;p&gt;A minor &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8863&#34; data-gh-pr=&#34;8863&#34;&gt;bug within GameCube controller&lt;/a&gt;
 input mapping which led to GC triggers overwriting the &lt;code&gt;ZL/ZR&lt;/code&gt; buttons was fixed.
And to further complement this fix, german77 also made &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8864&#34; data-gh-pr=&#34;8864&#34;&gt;analog input buttons toggleable&lt;/a&gt;
 for extended usability.&lt;/p&gt;
&lt;p&gt;Accessibility is both very important and, sadly, very easy to ignore too.
For example, something simple: what if a user needs more time to map buttons individually?
In an effort to help with this particular case, the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8880&#34; data-gh-pr=&#34;8880&#34;&gt;button mapping timer duration&lt;/a&gt;
 has been increased from &lt;code&gt;2.5 seconds&lt;/code&gt; to &lt;code&gt;4 seconds&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI Changes&lt;/h2&gt;
&lt;p&gt;We also had a variety of UI improvements from multiple contributors this month.&lt;/p&gt;
&lt;p&gt;The old SD card icon has been &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8902&#34; data-gh-pr=&#34;8902&#34;&gt;replaced with a new colourful microSD Card icon&lt;/a&gt;
 by &lt;a href=&#34;https://github.com/Dev-draco&#34;&gt;Dev-draco&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sdicon.png&#34; title=&#34; Small details matter&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/sdicon_hu99d2a21b9008005112f4252ecb6589c1_66289_848x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Small details matter&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Small details matter&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Tachi107&#34;&gt;Tachi107&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8945&#34; data-gh-pr=&#34;8945&#34;&gt;fixed a few minor typos&lt;/a&gt;
 within the yuzu source code.&lt;/p&gt;
&lt;p&gt;german77 modified the ordering of the input profiles saved in &lt;code&gt;Emulation &amp;gt; Configure... &amp;gt; Controls&lt;/code&gt;. They are now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8948&#34; data-gh-pr=&#34;8948&#34;&gt;sorted by name.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;While the colourful theme has been the default for a while, some icons remained in a &amp;ldquo;Default&amp;rdquo; theme directory.
But as grabbing icons from other themes isn&amp;rsquo;t supported on linux, this was broken.
Docteh fixed this by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8906&#34; data-gh-pr=&#34;8906&#34;&gt;moving all the icons to the colourful theme.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;Debug&lt;/code&gt; configuration tab was getting crowded, Docteh &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8854&#34; data-gh-pr=&#34;8854&#34;&gt;made it scrollable.&lt;/a&gt;
&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./scrollbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/scrollbug_hue8d6377963aa9cdd4a850f945f0b7544_44404_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;While this change also helps Windows users, Linux users will benefit the most from it&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./scrollfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/scrollfix_hu21be59e2df39711675ccaea042170a85_45234_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;While this change also helps Windows users, Linux users will benefit the most from it&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;While this change also helps Windows users, Linux users will benefit the most from it&lt;/p&gt;


&lt;p&gt;Docteh also fixed the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8909&#34; data-gh-pr=&#34;8909&#34;&gt;broken help page hyperlink on the &lt;code&gt;TAS&lt;/code&gt; configuration window&lt;/a&gt;
.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./tas.png&#34; title=&#34; People seem to forget that blue underlined text indicates a hyperlink intended to be clicked&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/tas_hu7c6e3e866942815073ff422be603e4e5_15741_444x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; People seem to forget that blue underlined text indicates a hyperlink intended to be clicked&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; People seem to forget that blue underlined text indicates a hyperlink intended to be clicked&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;miscellaneous&#34;&gt;Miscellaneous&lt;/h2&gt;
&lt;p&gt;For a long time, any yuzu bug reports from Windows users had to be manually reproduced and investigated by the team.
Linux users had the option of providing stack traces, but there wasn&amp;rsquo;t an easy way for Windows users to provide similar debug info.&lt;/p&gt;
&lt;p&gt;To overcome this, toastUnlimited implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8682&#34; data-gh-pr=&#34;8682&#34;&gt;support to create Windows crash dumps within yuzu&lt;/a&gt;
 itself.
This allows any layman on Windows to easily obtain a crash dump without jumping through various developer intended hoops.
But since this feature has a big performance impact, this was added behind an option in the &lt;code&gt;Debug&lt;/code&gt; settings for users to access.
You can find it in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; General &amp;gt; Debug &amp;gt; Create Minidump After Crash&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./minidump.png&#34; title=&#34; Only use it if you want to debug a game or to pass the file to a developer, the performance loss is significant!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2022/minidump_hue6772e17a7e0f057b05a0c467ce5a5d9_36487_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Only use it if you want to debug a game or to pass the file to a developer, the performance loss is significant!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Only use it if you want to debug a game or to pass the file to a developer, the performance loss is significant!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Since the dumps use modern Windows SDK features, there’s a risk that this change can break compatibility with older Windows options.
yuzu only officially supports Windows versions 10 1803 and newer.
And Linux, of course. It&amp;rsquo;s faster than Windows.&lt;/p&gt;
&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;h4 id=&#34;amd-radeon-when-increasing-accuracy-produces-crashes&#34;&gt;AMD Radeon, when increasing accuracy produces crashes&lt;/h4&gt;
&lt;p&gt;Users started reporting crashes when booting up &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; on AMD Radeon GPUs running official AMD drivers (either the Windows driver, or the Linux amdvlk driver).
We’re investigating the amdvlk source code to find the reason, and already notified AMD with all the relevant information we have.&lt;/p&gt;
&lt;p&gt;The cause seems to be improvements in Macro JIT&amp;rsquo;s accuracy.
Testing has shown that even with older driver and yuzu versions, disabling the MacroJIT speedhack causes the official AMD Vulkan drivers to crash, so it sadly checks out that improving its accuracy gives the same result now.&lt;/p&gt;
&lt;p&gt;Affected users can try running &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-mainline/releases/tag/mainline-0-1188&#34;&gt;Mainline 1188&lt;/a&gt;, or just run the game using OpenGL.
The Mesa RADV driver is unaffected.&lt;/p&gt;
&lt;h4 id=&#34;nvidia-one-source-of-crashes-down-more-remain&#34;&gt;NVIDIA, one source of crashes down, more remain&lt;/h4&gt;
&lt;p&gt;We have merged the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/8849&#34;&gt;multithreaded ASTC CPU decoder&lt;/a&gt; mentioned last month, so we strongly recommend NVIDIA Maxwell and Pascal (GTX 745/750, 900, and 1000 series) users to disable ASTC decoding if you run the latest drivers.&lt;/p&gt;
&lt;p&gt;You can find the option in &lt;code&gt;Emulation &amp;gt; Configure... &amp;gt; Graphics &amp;gt; Accelerate ASTC Texture Decoding&lt;/code&gt;, enabling this setting uses the GPU to decode, while disabling it uses the CPU instead.
As a bonus, now this option can be a performance boost on systems with very weak integrated GPUs, like old laptops with MX series Geforce hardware, or any Intel iGPU, where the CPU would do a faster job dealing with ASTC decoding. Testing has shown that Geforce MX 500 and Radeon Vega 7+ tier GPUs are slightly faster using the GPU for decoding.
On affected NVIDIA hardware, the performance decrease while decoding ASTC textures is minimal. Avoiding a crash, for example, when opening the map in &lt;code&gt;The Legend of Zelda&lt;/code&gt; games is arguably far more important.&lt;/p&gt;
&lt;p&gt;Crashes caused by recent driver updates remain, but your writer continues to harass an NVIDIA driver developer daily (I only need to get into Intel to do the same to all three vendors now).
This leads us to recommend the 472/473 series of drivers for Maxwell and Pascal hardware to ensure the best performance and compatibility with yuzu. There&amp;rsquo;s nothing wrong with using the latest drivers, but until these crashes are resolved, expect instabilities and graphical glitches with them.
Turing, Ampere, and Ada hardware (1600, 2000, 3000, and 4000 series) exhibit some weird behaviour but are much more stable on the (at the time of writing) latest 520/522 series of drivers when compared to their older brothers.&lt;/p&gt;
&lt;p&gt;One wonders how long Maxwell and Pascal will continue to be supported by NVIDIA drivers.&lt;/p&gt;
&lt;h4 id=&#34;intel-arc-support&#34;&gt;Intel ARC support&lt;/h4&gt;
&lt;p&gt;No news yet on Vulkan support for these new &amp;ldquo;AV1 video decoder cards&amp;rdquo; from Intel that can also work as a GPU.
Low availability has made it difficult to get our hands on one, but it&amp;rsquo;s something we want to solve ASAP.&lt;/p&gt;
&lt;p&gt;OpenGL is &amp;ldquo;functional&amp;rdquo; right now, but Intel continues to be the worst vendor regarding OpenGL support on Windows, so the experience is pretty bad.
Linux Mesa drivers are reported to work correctly, and with good performance, in both OpenGL and Vulkan.&lt;/p&gt;
&lt;p&gt;Speaking of AV1, for now we&amp;rsquo;ve been using h.264 encoding for the videos embedded in our articles, as it is both widely supported and very lightweight in regards to hardware requirements.
Would you prefer if we switched to AV1 from now on? It can be a big battery drain on devices without dedicated hardware decoders, but it would allow for even lower bitrates while keeping a similar level of quality, something datacapped users have complained about in the past.
Let us know on Reddit, our &lt;a href=&#34;https://community.citra-emu.org/c/yuzu-news/15&#34;&gt;forums&lt;/a&gt;, or our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord server&lt;/a&gt; what you would prefer!&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;For once, we don’t have much to say in this section.
Or maybe I should say, we don’t want to start generating hype for new projects just yet.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; has started working on Part 2 of &lt;code&gt;Project Y.F.C.&lt;/code&gt;, as previously mentioned, and the rest of the GPU gang (Byte[], Maide, vonchenplus) is also busy with some top secret changes (for now, your writer has a reputation to uphold) to improve both rendering accuracy and performance.&lt;/p&gt;
&lt;p&gt;Having the first part of &lt;code&gt;Y.F.C.&lt;/code&gt; merged to Mainline opens the floodgates to many projects that were on hold until now. We will discuss these in more detail in the next progress report.&lt;/p&gt;
&lt;p&gt;Special thanks to Mysterious Writer B for their help with this progress report, and to CaptV0rt3x who came to aid at a moment’s notice.&lt;/p&gt;
&lt;p&gt;That’s all folks! As always, many thanks for your time. We hope to see you in the next article!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report August 2022</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/</link>
      <pubDate>Fri, 16 Sep 2022 10:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/</guid>
      <description>&lt;p&gt;Welcome back, yuz-ers! August was a month packed with progress. A plethora of graphical changes, kernel and file system improvements, and more work pumped into network emulation. Next slide, please!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Welcome back, yuz-ers! August was a month packed with progress. A plethora of graphical changes, kernel and file system improvements, and more work pumped into network emulation. Next slide, please!&lt;/p&gt;
&lt;h2 id=&#34;graphical-changes&#34;&gt;Graphical changes&lt;/h2&gt;
&lt;p&gt;This month included a number of notable fixes for July&amp;rsquo;s blockbuster release, &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;.
While &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; did technically work on release day in yuzu, it took us some time to work out the stability issues.&lt;/p&gt;
&lt;p&gt;The first of these, mentioned last month, was a fix for yuzu&amp;rsquo;s shader recompiler.
yuzu does not use a GLSL compiler to generate SPIR-V, the Vulkan shader language.
Instead, it generates SPIR-V directly, which is much faster, but has more potential for error.
In this case, the shader recompiler failed to declare some variables in the SPIR-V shaders, and left references to them as null, causing the shaders to crash the driver when compiling.
&lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; and &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8667&#34; data-gh-pr=&#34;8667&#34;&gt;quickly found and fixed the problem,&lt;/a&gt;
 allowing the game to run in Vulkan on release day.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./wotah.png&#34; title=&#34; Wotah! (Xenoblade Chronicles 3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/wotah_hu9b16d26ec86601a68294c90f0a6593ac_1771797_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Wotah! (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Wotah! (Xenoblade Chronicles 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The set of pipelines used by &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; is huge, with many pipeline caches clocking over 15000 entries after extended gameplay.
With all graphics backends, yuzu precompiles shaders before the game starts, and doesn&amp;rsquo;t allow starting it before compilation is finished.
With OpenGL on GLSL, compilation takes over a full minute to complete with a pipeline cache as large as the ones generated by &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;.
To make matters worse, you previously could not cancel out of the process while it was compiling.
If you tried, yuzu would freeze up and continue to wait for the compilation to finish before allowing you to close the game.
byte[] resolved this minor UX annoyance &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8678&#34; data-gh-pr=&#34;8678&#34;&gt;by having the shader compiler check for cancellation after each shader is compiled,&lt;/a&gt;
 allowing compilation to instantly be stopped at any time.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./muppet.png&#34; title=&#34; Name&amp;#39;s Kermit the Frog, pleased to meet you (Xenoblade Chronicles 3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/muppet_hu6740546b0f7f5758521004d648a5bab8_1803543_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Name&amp;#39;s Kermit the Frog, pleased to meet you (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Name&amp;#39;s Kermit the Frog, pleased to meet you (Xenoblade Chronicles 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;&amp;rsquo;s massive set of pipelines also causes problems for emulation.
Because yuzu tries to give you as stutter-free an experience as it can, it tries to load all known pipelines into memory before you even start playing.
This might be a reasonable proposition if a game had just a few thousand pipelines.
However, keeping Xenoblade&amp;rsquo;s 15000+ distinct pipelines all in memory simultaneously causes the memory usage in the GPU driver to skyrocket.
&lt;a href=&#34;https://github.com/cemu-project/Cemu&#34;&gt;Cemu&lt;/a&gt; users of old may remember facing a similar issue when using NVIDIA GPUs.&lt;/p&gt;
&lt;p&gt;To this end, byte[] looked for any issues in yuzu that might be causing the GPU driver to hold on to more memory than it needs to.
byte[] noticed that OpenGL tracks individual objects for shader source code in addition to just for compiled shaders.
Properly &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8684&#34; data-gh-pr=&#34;8684&#34;&gt;allowing these shader source code objects to be freed&lt;/a&gt;
 reclaims a substantial amount of wasted memory.
Users can expect much lower VRAM and RAM usage now while running OpenGL and &lt;a href=&#34;https://www.youtube.com/watch?v=i1ojUmdF42U&#34;&gt;suffering emotional damage&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ears.png&#34; title=&#34; That&amp;#39;s a big snuffin&amp;#39; difference (Xenoblade Chronicles 3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/ears_huef3a6b387ca035a070cadaca5bb717df_5364630_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; That&amp;#39;s a big snuffin&amp;#39; difference (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; That&amp;#39;s a big snuffin&amp;#39; difference (Xenoblade Chronicles 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;One advantage yuzu&amp;rsquo;s OpenGL backend has had for &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; for some time was stability.
It didn&amp;rsquo;t really crash. However, Vulkan was another story.
Even after the initial Vulkan shader fixes previously mentioned, the game would still randomly crash during cutscenes.
byte[] was able to reliably reproduce the issue and found that yuzu was receiving some invalid references in the GPU processing.
Whether or not this was something the game was legitimately doing, or just an emulation bug, he identified that yuzu could avoid the crash by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8700&#34; data-gh-pr=&#34;8700&#34;&gt;passing &lt;code&gt;VK_NULL_HANDLE&lt;/code&gt; for an image view,&lt;/a&gt;
 instead of trying to create an image view for a null image, which was guaranteed to crash.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./cooking.png&#34; title=&#34; Vulkan no longer cooks itself (Xenoblade Chronicles 3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/cooking_hu3a8c82acf712f3084aa1a310f20d8b15_2578239_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Vulkan no longer cooks itself (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Vulkan no longer cooks itself (Xenoblade Chronicles 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;AMD users on Windows were left in the dark about Vulkan support for &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; for a bit.
One of our testers, &lt;a href=&#34;https://community.citra-emu.org/u/GoldenX86&#34;&gt;your writer&lt;/a&gt;, obtained a log with Vulkan validation errors, and determined that the crash was due to trying to use some vertex formats that were not supported by the Windows driver.
However, they were supported by &lt;code&gt;RADV&lt;/code&gt;, the Linux Mesa driver.
byte[] additionally identified a case of the opposite, where a format was supported by the Windows driver but not RADV, and implemented a generic workaround that would &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8702&#34; data-gh-pr=&#34;8702&#34;&gt;substitute a compatible format for both cases,&lt;/a&gt;
 fixing multiple crashes at once.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./stretching.png&#34; title=&#34; Progressively getting fit (Xenoblade Chronicles 3)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/stretching_hu833de69a26967440b5f51f5cfef38cbb_2356017_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Progressively getting fit (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Progressively getting fit (Xenoblade Chronicles 3)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;A few GPU changes not related to Xenoblade also made it in this month.&lt;/p&gt;
&lt;p&gt;After years, since the beginning of our &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/&#34;&gt;Vulkan backend&lt;/a&gt;, yuzu finally added &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8735&#34; data-gh-pr=&#34;8735&#34;&gt;support for VSync in Vulkan&lt;/a&gt;
 by new contributor &lt;a href=&#34;https://github.com/djrobx&#34;&gt;djrobx&lt;/a&gt;.
As described by the pull request adding it, if the emulation and display are very close to precise sync, there can be fits of juddering when the newly generated frames don&amp;rsquo;t decisively fall as next to be displayed.
This change allows yuzu to completely synchronize frames with the monitor refresh rate, preventing any juddering.
Thank you very much!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vsync.png&#34; title=&#34; No more tearing, Vulkan edition&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/vsync_hu9bbe6b4c139d55474a75590909b4db45_18484_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; No more tearing, Vulkan edition&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; No more tearing, Vulkan edition&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/merryhime&#34;&gt;Merry&lt;/a&gt;, the author of &lt;a href=&#34;https://github.com/merryhime/dynarmic&#34;&gt;dynarmic&lt;/a&gt; (and a real life White Mage), implemented an &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8739&#34; data-gh-pr=&#34;8739&#34;&gt;optimization for the process of converting between tiled and untiled images&lt;/a&gt;
 for the GPU.
This doesn&amp;rsquo;t impact the performance of games very much, as they generally avoid converting between tiled and untiled images, but it significantly improves the performance of homebrew apps, which convert every frame to display to the console.&lt;/p&gt;
&lt;p&gt;On the topic of unusual techniques, &lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; implemented support for a legacy OpenGL format called &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8752&#34; data-gh-pr=&#34;8752&#34;&gt;rectangle textures.&lt;/a&gt;
&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/ractanglebug_huf3e0d0252e70b934214f6ab7afad0b08_21890_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Legacy features seem to be popular with some game studios&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/rectanglefix_hue0e67f9ecf4a3d5d1c66b25c993ceb1b_83348_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Legacy features seem to be popular with some game studios&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Legacy features seem to be popular with some game studios&lt;/p&gt;


&lt;p&gt;As a side effect of this change, a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8837&#34; data-gh-pr=&#34;8837&#34;&gt;pipeline cache purge&lt;/a&gt;
 had to be issued by &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You may be thinking, but aren&amp;rsquo;t all textures rectangles?
That is true, but the thing making rectangle textures distinct is that they are indexed in shaders with coordinates from 0 to their width/height &amp;ndash; texel coordinates, instead of 0 to 1 &amp;ndash; normalized coordinates.
This mode is not very useful, so it is a surprise to see it still used by games. This change fixed a lot of rendering issues in &lt;code&gt;Fast RMX&lt;/code&gt; and &lt;code&gt;The Touryst&lt;/code&gt; (two games using the same engine).&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/tourystbug_hube2e4c5ddeb9abdad0ebbe69c18c5c5b_310583_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more vacations in the Abyss (The Touryst)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/tourystfix_hu021a11d0ea4b10169d80ed9d54975626_2369783_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more vacations in the Abyss (The Touryst)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;No more vacations in the Abyss (The Touryst)&lt;/p&gt;


&lt;p&gt;In the case of &lt;code&gt;Fast RMX&lt;/code&gt;, disabling &lt;code&gt;DYNAMIC CAMERA EXPOSURE&lt;/code&gt; in its in-game graphic settings fixes an overbright rendering bug.
Testing shows that OpenGL seems to be more stable for this title.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rmx.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/rmx_hu18e17d1d3a95221cebf264da522b9dec_2651389_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;F-Zero for Switch when, Nintendo? (FAST RMX)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./settings.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/settings_hu8b1067c5db0f98e37c3ea88af8210962_138256_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;F-Zero for Switch when, Nintendo? (FAST RMX)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;F-Zero for Switch when, Nintendo? (FAST RMX)&lt;/p&gt;


&lt;p&gt;Also focusing on homebrew, vonchenplus implemented support for a few things needed to get the &lt;a href=&#34;https://www.retroarch.com/&#34;&gt;RetroArch&lt;/a&gt; homebrew working inside yuzu.
Yup, more &amp;ldquo;emulator in emulator&amp;rdquo; shenanigans.&lt;/p&gt;
&lt;p&gt;The first step is the &lt;code&gt;clkrst&lt;/code&gt; service, used to control clock speeds on the console, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8794&#34; data-gh-pr=&#34;8794&#34;&gt;which was stubbed&lt;/a&gt;
 to allow RetroArch to boot.
Emulation of clock speed is not very meaningful for yuzu, so it’s not a loss.
The second is a specialty behaviour by &lt;code&gt;switch-mesa&lt;/code&gt;, which uses a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8795&#34; data-gh-pr=&#34;8795&#34;&gt;different framebuffer crop&lt;/a&gt;
 and appears halfway down the screen without proper emulation.&lt;/p&gt;
&lt;p&gt;While preparing the &lt;code&gt;Project London&lt;/code&gt; changes for release, &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;Tobi&lt;/a&gt; found some issues with &lt;code&gt;Rocket League&lt;/code&gt; that were preventing it from working properly.
byte[] found that it could boot in single core, but the game had terrible rendering in Vulkan.
To do this, byte[] added &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8791&#34; data-gh-pr=&#34;8791&#34;&gt;support for the &lt;code&gt;R16G16B16X16&lt;/code&gt; format&lt;/a&gt;
 used by the game, fixing the rendering issues.
Still, more work is needed to make this game playable on yuzu.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/rocket_hub83c58b644658e2ab1a0ded776aedeb4_883677_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The better League (Rocket League)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/rocketfix_hu04d07afbaac9d0e8d6a82020147a9def_902531_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The better League (Rocket League)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The better League (Rocket League)&lt;/p&gt;


&lt;p&gt;Working on his Magnum Opus, byte[] also implemented a workaround for a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8074&#34; data-gh-pr=&#34;8074&#34;&gt;previous performance fix&lt;/a&gt;
 to &lt;code&gt;Super Mario Galaxy&lt;/code&gt; and &lt;code&gt;Super Mario Sunshine&lt;/code&gt;.
While the performance fix should have been regression-free, since it was a bug in the buffer cache, many games needed the &lt;em&gt;less&lt;/em&gt; accurate behaviour from before the change.
&lt;code&gt;Mario + Rabbids Kingdom Battle&lt;/code&gt;, &lt;code&gt;Splatoon 2&lt;/code&gt;, and &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; all had some extra flickering that was introduced after this pull request, so byte[] made the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8819&#34; data-gh-pr=&#34;8819&#34;&gt;feature, &lt;code&gt;pessimistic flushing&lt;/code&gt;, optional,&lt;/a&gt;
 and disabled by default, since most games were unaffected.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pessimistic.png&#34; title=&#34; Feel free to test it, but expect a performance loss&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/pessimistic_hu37b9bec963ed2d950324df482bc07efd_18657_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Feel free to test it, but expect a performance loss&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Feel free to test it, but expect a performance loss&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Finally on the list for GPU changes this month, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;, along with &lt;a href=&#34;https://github.com/bylaws&#34;&gt;bylaws&lt;/a&gt; from the &lt;a href=&#34;https://github.com/skyline-emu/skyline&#34;&gt;Skyline emulator&lt;/a&gt;, added &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8809&#34; data-gh-pr=&#34;8809&#34;&gt;emulation for the viewport swizzling extensions&lt;/a&gt;
 used by some games.
These were supported by NVIDIA GPUs with an extension, but not AMD or Intel GPUs, and so a few games would appear to render upside down or flipped.
Games like &lt;code&gt;Street of Rage 4&lt;/code&gt;, &lt;code&gt;Celeste&lt;/code&gt;, &lt;code&gt;Axiom Verge&lt;/code&gt;, and many others are now playable on AMD and Intel!&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/celestebug_hu4671c920dc7ec2f5045d38082e491579_6636398_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;A new meaning for inverse climbing (Celeste)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/celestefix_hud9b5d0638a3d145fb9181fe12c3bb540_6451837_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;A new meaning for inverse climbing (Celeste)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;A new meaning for inverse climbing (Celeste)&lt;/p&gt;




&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/axiombug_hu37af1c5615100fb3b9d579bb147c5582_71099_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;There should be a difficulty mode called upside-down (Axiom Verge)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/axiomfix_hu67a7eabb122ef7ef67a4896278828451_70688_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;There should be a difficulty mode called upside-down (Axiom Verge)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;There should be a difficulty mode called upside-down (Axiom Verge)&lt;/p&gt;


&lt;h2 id=&#34;cpu-kernel-and-file-system-emulation&#34;&gt;CPU, kernel, and file system emulation&lt;/h2&gt;
&lt;p&gt;We have some good news for users &lt;em&gt;still&lt;/em&gt; running out-of-support versions of Windows!
Thanks to &lt;a href=&#34;https://github.com/merryhime/dynarmic/issues/701&#34;&gt;an investigation&lt;/a&gt; done by &lt;a href=&#34;https://github.com/vladkosi&#34;&gt;vladkosi&lt;/a&gt;, Merry was able to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8745&#34; data-gh-pr=&#34;8745&#34;&gt;implement the required changes in fastmem&lt;/a&gt;
 to support Windows versions older than Windows 10 version 1803 again.&lt;/p&gt;
&lt;p&gt;While this is great news for the Windows 7 gang, it does not change our position regarding operating system version support: only Linux, Windows 10 version 1803, and newer are &lt;em&gt;officially&lt;/em&gt; supported.
Time will tell what happens to compatibility with older Windows versions after future changes to Vulkan and memory management are implemented, but for now, they work for a while longer.&lt;/p&gt;
&lt;p&gt;But the good news doesn&amp;rsquo;t end there. Here are some changes intended to help the modding community!&lt;/p&gt;
&lt;p&gt;In the past, inline comments added to &lt;code&gt;pchtxt&lt;/code&gt; mods weren’t allowed, as we parsed the text in a way that made them incompatible.
Morph now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8755&#34; data-gh-pr=&#34;8755&#34;&gt;delimits the hexadecimal value string,&lt;/a&gt;
 allowing modders to add comments.
For example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Before: here             to here
         v                 v
12345678 12345678 // comment
         ^      ^
After:  here  to here
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Our current file system emulation can be considered spaghetti code due to old guesses made when less information was available, and patchwork done by developers that are no longer contributing to the project.
There’s no way to sugar-coat it, this is the main reason Morph has been working so hard for over a year on &lt;code&gt;Project Gaia&lt;/code&gt;, a full rewrite of the current virtual file system implementation.&lt;/p&gt;
&lt;p&gt;Meanwhile, some further patchwork can be done to reduce the headaches developers and modders currently endure.
For example, &lt;code&gt;Build IDs&lt;/code&gt; are padded by a bunch of zeroes, and modders are more used to the short form without including the irrelevant zeroes at the beginning.
To remedy this, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8790&#34; data-gh-pr=&#34;8790&#34;&gt;parses the Build ID string using fmt&lt;/a&gt;
 to dynamically add the required zeroes when needed.&lt;/p&gt;
&lt;p&gt;Continuing to focus on improving RetroArch’s experience in yuzu, vonchenplus discovered that recursively calculating the size of the files when parsing the directories has a negative effect on performance, in this case perceived as “loading times” when booting a game with the emulator (inside an emulator).
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8804&#34; data-gh-pr=&#34;8804&#34;&gt;Simply ignoring this information&lt;/a&gt;
 is a good way to improve the user experience.
Note that this change doesn’t help in running native Switch games on yuzu, it only provides faster load times for RetroArch.&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;People have been asking for stronger audio volume in yuzu for a long time, and Maide delivers.
Now, if the user goes to &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Audio&lt;/code&gt;, they can &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8756&#34; data-gh-pr=&#34;8756&#34;&gt;set the volume up to 200%,&lt;/a&gt;
 really cranking it to 11!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./audio.png&#34; title=&#34; Don&amp;#39;t wake up your neighbours&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/audio_hu57ee97ab1623c08ae597527811b107fa_15103_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Don&amp;#39;t wake up your neighbours&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Don&amp;#39;t wake up your neighbours&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Something to keep in mind is that some games have their volume tuned up to the output they are using.
A game may be louder in handheld over docked, for example, so don’t stress your poor ears.&lt;/p&gt;
&lt;p&gt;Part of yuzu’s code is still based on &lt;a href=&#34;https://citra-emu.org/&#34;&gt;Citra&lt;/a&gt;, even some sections that are no longer relevant, or have become outdated over the years.
Cleaning up code is a boring but necessary part of any project, more so for open source ones, and yuzu is no exception.
One feature that was very useful in the early days is loading ELF binaries.
Instead of dealing with XCI and NSP dumps, back in the early days, devs dumped and extracted the whole file structure of the game, and loaded the ELF binary directly, in a similar way to how on Windows the user opens a .exe file to load a program.&lt;/p&gt;
&lt;p&gt;Some years down the line and not only is this feature &lt;a href=&#34;https://www.youtube.com/watch?v=6R3ouGNcACQ&#34;&gt;tarnished out of grace&lt;/a&gt;, but it also stopped working.
Since it’s not a priority at the moment, and it can lead to user confusion, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8701&#34; data-gh-pr=&#34;8701&#34;&gt;removed it from the File dropdown.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Asian Language Windows users noticed that the Size column in the game list and the Speed Percent setting displayed &lt;em&gt;very weird&lt;/em&gt; characters.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bad1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/bad1_hu79208407563cb82ad3331de27693caec_6276_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Alien numbers&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bad2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/bad2_hu0a1e44f83f25c9ac8dc3a1cdaa1de7eb_22796_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Alien numbers&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Alien numbers&lt;/p&gt;


&lt;p&gt;Of course this isn’t acceptable, so &lt;a href=&#34;https://github.com/Docteh&#34;&gt;Docteh&lt;/a&gt; implemented the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8715&#34; data-gh-pr=&#34;8715&#34;&gt;necessary changes&lt;/a&gt;
 to workaround this issue in Windows.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./digits.png&#34; title=&#34; Much better&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/digits_hu02a8c1e4bcbbe85c4cdc27c803125f08_48588_750x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Much better&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Much better&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Adding to the list of Asian-language-only UI bugs, if a user started yuzu, for example, in Chinese and then switched to English, the Filter bar at the bottom and the game list columns at the top would remain untranslated, refusing to switch.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8797&#34; data-gh-pr=&#34;8797&#34;&gt;Forcing Qt to retranslate&lt;/a&gt;
 these objects solves the issue, making Docteh happy.&lt;/p&gt;
&lt;p&gt;Docteh implemented &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8741&#34; data-gh-pr=&#34;8741&#34;&gt;a couple more UI fixes&lt;/a&gt;
 as well, cleaning up the About dialog and making the default Port number in the Direct Connect UI ignore translations.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/aboutbug_hu0345f5c995b7b9ad74d7d70a0c848a09_46549_625x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;yuzu About dialog changes&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/aboutfix_hu02fc52c7e6f03ce6ef7413599029fe36_46862_634x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;yuzu About dialog changes&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;yuzu About dialog changes&lt;/p&gt;


&lt;p&gt;Users complained that the Controller Profile drop down list&amp;rsquo;s character limit was too short, inhibiting their creativity.
german77 stepped up and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8783&#34; data-gh-pr=&#34;8783&#34;&gt;increased the character limit.&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;input-improvements&#34;&gt;Input improvements&lt;/h2&gt;
&lt;p&gt;UI navigation with a controller is a relatively recent addition to yuzu, so there is room for improvement.
For example, users reported that if the &amp;ldquo;Prompt for user on game boot&amp;rdquo; feature is enabled, controller inputs will be able to navigate the options and start the game, but it won’t be able to actually change the profile or cancel the boot process.
Newcomer &lt;a href=&#34;https://github.com/jonesyUK&#34;&gt;jonesyUK&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8716&#34; data-gh-pr=&#34;8716&#34;&gt;solves both issues&lt;/a&gt;
 with a bit of Qt magic.
Thank you!&lt;/p&gt;
&lt;p&gt;Some users prefer to depend on &lt;a href=&#34;https://github.com/Ryochan7/DS4Windows&#34;&gt;DS4Windows&lt;/a&gt; instead of yuzu’s native support for game controllers.
While there is a good reason for that, it’s a simple way to have a single app handle XInput emulation, it can also lead to some interesting issues german77 discovered.
For example, current versions of DS4Windows can’t handle two subsequent vibration commands, producing (depending on the person you ask) an uncomfortable, constant vibration.
To solve this brrrrrracing issue, german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8722&#34; data-gh-pr=&#34;8722&#34;&gt;added a small delay&lt;/a&gt;
 so the app doesn’t skip the stop signal.&lt;/p&gt;
&lt;p&gt;On a more colourful topic, and with the intention of fixing a bug with &lt;code&gt;Mario Party Superstars&lt;/code&gt;, german77 spent many hours cooking &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8724&#34; data-gh-pr=&#34;8724&#34;&gt;how to properly emulate controller colours,&lt;/a&gt;
 with a side dish of fixing battery level icons too!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./colour.png&#34; title=&#34; Art Attack!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/colour_huca6e1bc483f36eea0a1f3e0d0d2b97d9_46018_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Art Attack!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Art Attack!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Navigate to &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Controls &amp;gt; Advanced&lt;/code&gt; and go to town!&lt;/p&gt;
&lt;p&gt;And to close this section out, we have to own up to an oopsie on our side.
With the initial implementation of IR camera support, the output was saved to storage. Every single video frame as an individual image file…
This led to TONS of files being written to disk, making navigation with the file manager a pain, and eating a lot of free storage. Oops.
german77 acted quickly and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8805&#34; data-gh-pr=&#34;8805&#34;&gt;moved the output to a buffer.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;If any user suffered from this and can’t remove the files, open the Command Prompt or Terminal, navigate to the Pictures folder, and run &lt;code&gt;del IMG_00*.jpg&lt;/code&gt; to wipe them all out in a single blow.&lt;/p&gt;
&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;h4 id=&#34;intel-arc-joins-the-fun&#34;&gt;Intel ARC joins the fun&lt;/h4&gt;
&lt;p&gt;We received information that early adopters of A380 Intel GPUs had issues running their games using Vulkan.
Since this hardware is not globally available yet, it’s not easy for our developers and testers to get their hands on it, so please &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/issues&#34;&gt;post issues in our GitHub&lt;/a&gt; including &lt;a href=&#34;https://yuzu-mirror.github.io/help/reference/log-files/&#34;&gt;log files&lt;/a&gt;, or contact us on our &lt;a href=&#34;https://community.citra-emu.org/c/yuzu-support/14&#34;&gt;forums&lt;/a&gt; or our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord server&lt;/a&gt;.
We’ll ask for more information, if needed, to find the reason for this.
Hurray for the early adopter woes.&lt;/p&gt;
&lt;h4 id=&#34;amd-making-use-of-opengl&#34;&gt;AMD, making use of OpenGL&lt;/h4&gt;
&lt;p&gt;Users with AMD GPUs reported that specific points in &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt; always resulted in vertex explosions.
A workaround for this is to run the game with OpenGL and a 2X resolution multiplier, get past the area, save, and swap to Vulkan.&lt;/p&gt;
&lt;p&gt;Why the oddly specific 2X resolution multiplier? For the same reason our performance chart last month had no results for &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; on this new OpenGL driver, it leads to a driver related crash.
2X works around this crash and AMD has been properly alerted to this issue.
No news from them so far, but since we got access into their Vanguard beta testing program, we’ll tell you as soon as the fix is out in a public driver.
The game is not that much slower under OpenGL now, but shader stuttering will always be significantly better under Vulkan.&lt;/p&gt;
&lt;p&gt;We recommend more emulator developers to &lt;a href=&#34;https://www.amd.com/en/technologies/amd-vanguard-program&#34;&gt;apply to Vanguard&lt;/a&gt;, as the indirect approach of the built-in driver bug report tool is not ideal for the specific needs of console emulators.&lt;/p&gt;
&lt;h4 id=&#34;nvidia-making-us-go-compute-ourselves&#34;&gt;NVIDIA making us go compute ourselves&lt;/h4&gt;
&lt;p&gt;We confirmed that at least a big part of the crashes affecting Maxwell and Pascal GPUs by the current 516.XX series of drivers is caused by some driver change in compute shaders, which resonates with our compute shader based ASTC texture decoder.
As a solution, and to avoid this problem in the future as it isn’t the first time an NVIDIA driver update broke it, we’re considering &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8849&#34; data-gh-pr=&#34;8849&#34;&gt;switching to a multithreaded CPU decoder&lt;/a&gt;
 developed by Morph.&lt;/p&gt;
&lt;p&gt;The cause for the shadow flickering on KOEI games is still under investigation.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;The delays in merging &lt;code&gt;Project Y.F.C.&lt;/code&gt; don’t only affect Mainline users, they also impede progress in development.
In another example of Hell freezing over (no one expected AMD fixing OpenGL), NVIDIA of all people &lt;a href=&#34;https://github.com/NVIDIA/open-gpu-doc/blob/master/classes/3d/clb197.h&#34;&gt;open sourced some documentation&lt;/a&gt; (partially of course, this is NVIDIA we’re talking about, they’re so closed source they don’t even get fresh air). This includes proper names for Maxwell 3D registers, completely new registers, and even previously unknown values.
Maide has been &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8766&#34; data-gh-pr=&#34;8766&#34;&gt;checking, replacing, and cleaning a lot of code&lt;/a&gt;
 thanks to this new official information, but the merge for this change will have to wait.
No game fixes are expected out of this, but the clean-up and ease of understanding is very much worth it.&lt;/p&gt;
&lt;p&gt;An interesting experiment that will benefit all users in a few bandwidth-starved games like &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;, &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;, and &lt;code&gt;SHIN MEGAMI TENSEI V&lt;/code&gt;, among others, is increasing the size of Vulkan’s stream buffer size.
Testing shows a performance boost of 10-50% depending on the system, even without ReBAR support, which limits the buffer size to 256MB.
Having access to all available VRAM opens the possibility for even higher gains!&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/128mb_hu89551c5991c851b2a467c8f57e18aea4_5185881_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Look at the performance difference! (Xenoblade Chronicles 3)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/2048mb_hud35586cb054dc366c6cc08bd21ed03e6_5182032_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Look at the performance difference! (Xenoblade Chronicles 3)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Look at the performance difference! (Xenoblade Chronicles 3)&lt;/p&gt;


&lt;p&gt;After too much nagging from your writer, byte[] implemented a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8861&#34; data-gh-pr=&#34;8861&#34;&gt;draft to easily test the feature with a slider,&lt;/a&gt;
 but the final goal is to manage it dynamically, so don’t expect to see this feature as a UI option in an official release.&lt;/p&gt;
&lt;p&gt;Working on the finishing touches for &lt;code&gt;Project London&lt;/code&gt;, Tobi has not been passive at all:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8685&#34; data-gh-pr=&#34;8685&#34;&gt;Adding the ability to proxy socket packets,&lt;/a&gt;
 which includes custom rooms with local network support, including LAN games, not only LDN.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8731&#34; data-gh-pr=&#34;8731&#34;&gt;Stubbing and adding some required data types.&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8822&#34; data-gh-pr=&#34;8822&#34;&gt;Improvements to the in-progress room feature.&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ldn.png&#34; title=&#34; The most fun ever doing internal testing&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/ldn_hu5594f4f1617a2b19e143e59b13f02f75_740564_493x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The most fun ever doing internal testing&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The most fun ever doing internal testing&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Oh! How could we almost forget? &lt;code&gt;Project London&lt;/code&gt;, LDN support, is &lt;em&gt;finally&lt;/em&gt; out now! More information in &lt;a href=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/&#34;&gt;the dedicated article&lt;/a&gt; and &lt;a href=&#34;https://yuzu-mirror.github.io/help/feature/multiplayer/&#34;&gt;Multiplayer Guide&lt;/a&gt;.
We’ll recap the release in the next Progress Report.&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you so much for sticking with us, and I hope to see you all next time!&lt;/p&gt;
&lt;p&gt;Special thanks to Mysterious Writer B for your help on this article!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./byte.png&#34; title=&#34; The suspense bites me&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2022/byte_huc6f8aabfc4b8e37d4e793847b36a158d_74441_162x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The suspense bites me&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The suspense bites me&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>New Feature Release - Local Wireless Multiplayer</title>
      <link>https://yuzu-mirror.github.io/entry/ldn-is-here/</link>
      <pubDate>Sun, 11 Sep 2022 01:40:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/ldn-is-here/</guid>
      <description>&lt;p&gt;Hey there, yuz-ers!
The MOST awaited feature of yuzu, Local Wireless Multiplayer (LDN), is finally here!
So what are you waiting for?
Time to grab your friends and jump right in!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey there, yuz-ers!
The MOST awaited feature of yuzu, Local Wireless Multiplayer (LDN), is finally here!
So what are you waiting for?
Time to grab your friends and jump right in!&lt;/p&gt;
&lt;h2 id=&#34;what-is-this&#34;&gt;What is this?&lt;/h2&gt;
&lt;p&gt;The Nintendo Switch console supports various multiplayer options.
Among these, the following options are useful when you want to play multiplayer with other Switch consoles.

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./multi.png&#34; title=&#34; Table indicating yuzu&amp;#39;s supported Switch multiplayer modes&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/multi_hu869c27aee01372f02c54db3ba004767e_10375_603x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Table indicating yuzu&amp;#39;s supported Switch multiplayer modes&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Table indicating yuzu&amp;#39;s supported Switch multiplayer modes&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Switch_Conn.png&#34; title=&#34; Graphic demonstrating the key differences between the three wireless modes&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/Switch_Conn_huff96b8f7a7fc024f356f04fe93630f03_69367_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Graphic demonstrating the key differences between the three wireless modes&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Graphic demonstrating the key differences between the three wireless modes&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;article class=&#34;message has-text-weight-semibold&#34;&gt;&lt;div class=&#34;message-body&#34;&gt;&lt;p&gt;
The Switch&#39;s HorizonOS uses the LDN service for all Local Wireless communication. &lt;br&gt;
This is why Local Wireless Multiplayer can also be referred to as LDN Multiplayer.
&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;
&lt;p&gt;Thanks to the incredible efforts of our developers &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;FearlessTobi&lt;/a&gt; and &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;, Local Wireless Multiplayer in yuzu is no longer a dream!
Special thanks to &lt;a href=&#34;https://github.com/spacemeowx2/&#34;&gt;spacemeowx2&lt;/a&gt; and &lt;a href=&#34;https://github.com/spacemeowx2/ldn_mitm/graphs/contributors&#34;&gt;all the contributors&lt;/a&gt; of the &lt;a href=&#34;https://github.com/spacemeowx2/ldn_mitm&#34;&gt;ldn_mitm&lt;/a&gt; project.
Without their extensive reverse-engineering of the &lt;code&gt;LDN&lt;/code&gt; service, and the gracious &lt;a href=&#34;https://github.com/spacemeowx2/ldn_mitm#licensing&#34;&gt;license exemption&lt;/a&gt; for yuzu, this would not have been possible.&lt;/p&gt;
&lt;br&gt;
&lt;article class=&#34;message&#34;&gt;&lt;div class=&#34;message-header&#34;&gt;
&lt;p&gt;⚠️ Attention&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;message-body&#34;&gt;&lt;p style=&#34;color:white;&#34;&gt;
&lt;b&gt;Currently, Local Wireless Multiplayer (LDN) is only supported between instances of yuzu.&lt;br&gt;
Multiplayer between yuzu and a real Switch or between yuzu and other emulators is not supported!&lt;/b&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;
&lt;h2 id=&#34;where-can-you-get-it&#34;&gt;Where can you get it?&lt;/h2&gt;
&lt;p&gt;The Local Wireless Multiplayer feature is now available in the latest version of the Early Access release.
We will be working to polish this feature and make this available to the Mainline builds soon.&lt;/p&gt;
&lt;article class=&#34;message has-text-weight-semibold&#34;&gt;&lt;div class=&#34;message-body&#34;&gt;&lt;p&gt;
If you&#39;re using the yuzu installer, you&#39;ll automatically be updated to the latest build.&lt;br&gt;    
If you&#39;re &lt;b&gt;not&lt;/b&gt; using the yuzu installer, please download it from our &lt;a href= https://yuzu-mirror.github.io/downloads/&gt;Download&lt;/a&gt; page. &lt;br&gt;
&lt;br&gt;
We highly recommend using our installer to always stay up to date on both Mainline and Early Access builds.
&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;
&lt;h2 id=&#34;local-wireless-ldn-multiplayer&#34;&gt;Local Wireless (LDN) Multiplayer&lt;/h2&gt;
&lt;p&gt;yuzu&amp;rsquo;s Local Wireless multiplayer (LDN) differs a little bit when compared to the Nintendo Switch.
The Switch console uses the &lt;code&gt;LDN&lt;/code&gt; service to scan for other Switch consoles using Wi-Fi and connects all players.
Here, one player would act as the &lt;code&gt;host&lt;/code&gt; and all others would connect to it.&lt;/p&gt;
&lt;p&gt;yuzu, on the other hand, employs virtual rooms to allow players to create and join game lobbies within said rooms.
Since this emulates the Switch&amp;rsquo;s ability to do local wireless multiplayer, it does NOT rely on Nintendo’s servers and does NOT require a Nintendo Account.
While on a real Switch, you’d be limited to the people in your immediate vicinity, yuzu boasts a complex server/client infrastructure that forwards a game’s wireless communication across the internet.&lt;/p&gt;
&lt;p&gt;In order to connect with other players, players simply need to join the same room within yuzu’s Public Room Browser.
But, before opening the Public Room Browser, you will have to first configure your network interface in yuzu.&lt;/p&gt;
&lt;p&gt;You can find this setting under &lt;code&gt;System -&amp;gt; Network&lt;/code&gt; and you need to select your internet connection from the drop-down as shown below.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./network_interface.png&#34; title=&#34; yuzu&amp;#39;s Network Interface configuration&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/network_interface_hu41aaa099594271375a47d12cfb274570_11910_976x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; yuzu&amp;#39;s Network Interface configuration&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; yuzu&amp;#39;s Network Interface configuration&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Out of the box, we provide you with an assortment of public rooms hosted across the world by yuzu.
Creating and joining rooms is extremely easy in yuzu and can be done in just a few clicks.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./room_browser.png&#34; title=&#34; yuzu&amp;#39;s Public Room Browser&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/room_browser_hu11eff3d42fc80a17318dbb0419957603_77039_898x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; yuzu&amp;#39;s Public Room Browser&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; yuzu&amp;#39;s Public Room Browser&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;If you’re a &lt;a href=&#34;https://community.citra-emu.org/signup&#34;&gt;Verified User&lt;/a&gt;, you can create your very own public room for people to join.
These public rooms can be seen by anyone using the Public Room Browser, but you can also password protect them to restrict users&amp;rsquo; access.
Verified Users will have their forum nickname and profile picture populated in the chatroom.
&lt;br&gt;&lt;/p&gt;
&lt;article class=&#34;message&#34;&gt;&lt;div class=&#34;message-header&#34;&gt;
&lt;p&gt;⚠️ Reminder&lt;/p&gt;&lt;/div&gt;
&lt;div class=&#34;message-body&#34;&gt;&lt;p style=&#34;color:#eed202;&#34;&gt;
&lt;b&gt;When hosting a room, remember to port forward or your friends won’t be able to connect!&lt;/b&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;
&lt;p&gt;If you prefer not to sign up for our platform, you aren’t out of luck!
Unverified Users still have the ability to create unlisted rooms, directly connect to unlisted rooms, and can join any yuzu hosted room.&lt;/p&gt;
&lt;p&gt;Do note that Verified Users will have their privileges revoked for violating any yuzu policies while in the room chatroom.
Please respect the &lt;code&gt;Preferred Game&lt;/code&gt; listed in publicly hosted rooms, as even unrelated games will add to the bandwidth load.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./room_chat.png&#34; title=&#34; Public Room chat and moderation features&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/room_chat_huc504af3cabc8ae1facf6e05edf53552d_41876_809x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Public Room chat and moderation features&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Public Room chat and moderation features&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;article class=&#34;message has-text-weight-semibold&#34;&gt;&lt;div class=&#34;message-body&#34;&gt;&lt;p&gt;
You can use these rooms for LAN mode games as well — instead of ZeroTier or Hamachi.&lt;/b&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;
&lt;p&gt;Please visit &lt;a href=&#34;https://yuzu-mirror.github.io/help/feature/multiplayer/&#34;&gt;our multiplayer guide&lt;/a&gt; for further help with Hosting, Port Forwarding, Authentication, and Moderation of your publicly hosted rooms.&lt;/p&gt;
&lt;h2 id=&#34;development&#34;&gt;Development&lt;/h2&gt;
&lt;p&gt;FearlessTobi began development by leveraging the existing virtual rooms infrastructure from &lt;a href=&#34;https://citra-emu.org&#34;&gt;Citra&lt;/a&gt;.
Due to code similarities between yuzu and Citra, this tried-and-tested infrastructure easily became the foundation of this feature.&lt;/p&gt;
&lt;p&gt;Now that the virtual rooms were taken care of, Tobi moved onto the &lt;code&gt;LDN&lt;/code&gt; service and its protocols.
Using the research and code from the &lt;a href=&#34;https://github.com/spacemeowx2/ldn_mitm&#34;&gt;ldn_mitm&lt;/a&gt; project, he implemented the necessary changes for yuzu instances to communicate with each other over these virtual rooms.
During this process, Tobi put an extra emphasis on ensuring no personal data, such as IP addresses, was leaked to the other room members.&lt;/p&gt;
&lt;p&gt;As the feature slowly matured, Tobi began utilizing yuzu&amp;rsquo;s internal team of testers to verify the feature across several titles for compatibility and performance validation.&lt;/p&gt;
&lt;p&gt;With the multiple testing iterations, various bugs and glitches were found.
german77 relied on his own reverse-engineering and hardware tests to debug these issues, which then made it easy for the team to fix these various problems.
He also made several UI fixes to improve its usability and brought the codebase up to yuzu standards.&lt;/p&gt;
&lt;h2 id=&#34;compatibility&#34;&gt;Compatibility&lt;/h2&gt;
&lt;p&gt;Please note that as this is the initial release of the feature, some games may have some limitations.
We hope to slowly fix these over the course of the next few months.&lt;/p&gt;
&lt;p&gt;yuzu&amp;rsquo;s Local Wireless Multiplayer was tested by our team of Testers and Support staff across a small set of popular titles. Their compatibility findings are as follows:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./compat.png&#34; title=&#34; List of yuzu-tested multiplayer titles&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/compat_huf92e5188d926f34b5f7738d6648a4772_63075_730x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; List of yuzu-tested multiplayer titles&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; List of yuzu-tested multiplayer titles&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h2&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./acnh1.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./acnh1.jpg&#34; alt=&#34;Animal Crossing: New Horizons&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./acnh2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/acnh2_hu8658004eb70e3ee100c8f2e89ea467e1_7566808_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Animal Crossing: New Horizons&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Animal Crossing: New Horizons&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./splatoon2_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/splatoon2_1_hucc3954b5bd1d5e5a1773ef89f301f6d3_1652509_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Splatoon 2&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./splatoon2_3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/splatoon2_3_hu05b004da05f19c435ce8a907bd919a2d_3175440_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Splatoon 2&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./splatoon2_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/splatoon2_2_hu64baf9ece831394f0847f41b8bfd211c_2752489_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Splatoon 2&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Splatoon 2&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mk8d_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/mk8d_1_hue735e0fbd974e54c7096d3e34a7e428a_12185179_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mario Kart 8 Deluxe&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mk8d_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/mk8d_2_hub6d5a5c034e0fc9b975aa3e181120fa4_13216770_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mario Kart 8 Deluxe&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Mario Kart 8 Deluxe&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./arceustrade1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/arceustrade1_hu3910d9d70a0f87fad6b5d88cf3978de9_2183358_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon Legends: Arceus&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./arceustrade2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/arceustrade2_hu3910d9d70a0f87fad6b5d88cf3978de9_1833664_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon Legends: Arceus&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./arceustrade3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/arceustrade3_hu77fb7300e56ab38924c181c177ef6a2f_1347618_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon Legends: Arceus&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Pokémon Legends: Arceus&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./lm3_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/lm3_1_hua669f8d605631391353c8a49515939dc_3402001_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Luigi&amp;#39;s Mansion 3&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./lm3_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/lm3_2_hude23b105cffabfe0df4b71d37518cec0_3404512_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Luigi&amp;#39;s Mansion 3&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Luigi&amp;#39;s Mansion 3&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ssbu_ldn_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/ssbu_ldn_2_huf1ceb1dae74e0fdf7d7fe5777e8520ff_5333797_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Smash Bros. Ultimate&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ssbu_ldn_3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/ssbu_ldn_3_hu0b4b518219c7f472c12e15fc6fb37ddd_7253147_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Smash Bros. Ultimate&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ssbu_ldn_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/ssbu_ldn_1_hu5bd954edf72b37a7bcc8e76323e5ed9a_7892025_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Smash Bros. Ultimate&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Smash Bros. Ultimate&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./PLG_1.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/PLG_1_hu08be93e48dc9a537b7cfcb864f0dcb6b_1765792_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./PLG_2.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/PLG_2_hu7ea0e00104ef9010e0523b4b8386ece4_825191_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./PLG_3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/PLG_3_huc962c3fb60113b966e6aca473bdae0a9_1951329_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon Let&amp;#39;s Go: Pikachu/Eevee&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./PLG_4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/PLG_4_hud6e753102e729856b0ad23bdbbd3ad61_1969516_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon Let&amp;#39;s Go: Pikachu/Eevee&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Pokémon Let&amp;#39;s Go: Pikachu/Eevee&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./bdsp_1.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/bdsp_1_hufaade000003fcec1e377fa9af2e25342_14586510_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./bdsp_2.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/bdsp_2_hu0f80ec23f486f811a92d50517b2fff69_11041179_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bdsp_3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/bdsp_3_hu6001c4f4214abf11c18292727dbd142a_874879_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon Brilliant Diamond/Shining Pearl&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bdsp_4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/bdsp_4_hu5d54ccd90d782363b6fed77dc0c7a210_12882253_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon Brilliant Diamond/Shining Pearl&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Pokémon Brilliant Diamond/Shining Pearl&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Diablo3_LDN_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/Diablo3_LDN_1_hue9d535ca1e1c3243f0efa875b30436e2_1723115_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Diablo III : Eternal Collection&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Diablo3_LDN_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/Diablo3_LDN_2_hu23f5a4d4554a627f4c8d7eb64da8fb40_2039605_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Diablo III : Eternal Collection&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Diablo III : Eternal Collection&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./cowabunga.png&#34; title=&#34; Teenage Mutant Ninja Turtles: The Cowabunga Collection&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/cowabunga_hu2077788e857ed51cda07048d6d6e0baa_5292740_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Teenage Mutant Ninja Turtles: The Cowabunga Collection&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Teenage Mutant Ninja Turtles: The Cowabunga Collection&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./monster_hunter_ultimate.png&#34; title=&#34; Monster Hunter Generations Ultimate&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/monster_hunter_ultimate_hu6880063c5f25d3761b755aa2353ff75e_15124939_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Monster Hunter Generations Ultimate&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Monster Hunter Generations Ultimate&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./kirby_dream_buffet.png&#34; title=&#34; Kirby&amp;#39;s Dream Buffet&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/ldn-is-here/kirby_dream_buffet_hu4f26c6ef460b3a44ea8a239e5d7bdba9_5893554_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Kirby&amp;#39;s Dream Buffet&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Kirby&amp;#39;s Dream Buffet&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;fin&#34;&gt;Fin&lt;/h2&gt;
&lt;p&gt;As with any new update, we&amp;rsquo;ve tested the feature internally, but our efforts can&amp;rsquo;t compare to the community as a whole.
We could have easily missed an edge case or some weird bug or issue among the vast collection of games with Local Wireless.&lt;/p&gt;
&lt;p&gt;Test any and all games! Poke, prod, and play! Please break this release if you can! With your help, we can make yuzu the best it can be.
Please reach out to us on our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord&lt;/a&gt; and report any bugs you find, so that we can quickly address them.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s all we have for now, until next time! Happy emulating! &lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report July 2022</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/</link>
      <pubDate>Mon, 15 Aug 2022 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/</guid>
      <description>&lt;p&gt;Hello yuz-ers, what a month we&amp;rsquo;ve had! Great graphical changes, an amazing audio rewrite, preliminary work on LDN support, testing new OpenGL drivers, and plenty of fixes! Continue reading to find out more.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello yuz-ers, what a month we&amp;rsquo;ve had! Great graphical changes, an amazing audio rewrite, preliminary work on LDN support, testing new OpenGL drivers, and plenty of fixes! Continue reading to find out more.&lt;/p&gt;
&lt;h2 id=&#34;part-1-of-project-yfc&#34;&gt;Part 1 of Project Y.F.C.&lt;/h2&gt;
&lt;p&gt;Since we’ve been teasing you for months (and we will continue to do so) in previous articles, you know &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; has been working on &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8467&#34; data-gh-pr=&#34;8467&#34;&gt;a bunch  of miscellaneous GPU related fixes and performance improvements.&lt;/a&gt;

While we will have more information in a dedicated article in the near future, please enjoy the following brief overview.&lt;/p&gt;
&lt;p&gt;As the scope of the project grew, the team decided to split it in two parts, with the released first part focusing more on game fixes and improving accuracy.
While that doesn’t mean part 1 doesn’t already improve performance, part 2 will focus exclusively on it.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hades.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/hades_hu553015f1d31be7c428c7f3e0029817ed_1880483_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Becoming playable! (Hades &amp;amp; Mario Golf: Super Rush)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./golf.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/golf_hu1b2e51634300dbc5ef6679130f285912_3536365_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Becoming playable! (Hades &amp;amp; Mario Golf: Super Rush)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Becoming playable! (Hades &amp;amp; Mario Golf: Super Rush)&lt;/p&gt;


&lt;p&gt;This story started &lt;a href=&#34;https://www.youtube.com/watch?v=6IXecLOXWR4&#34;&gt;many moons ago&lt;/a&gt;.
The awesome devs working on &lt;a href=&#34;https://github.com/skyline-emu/skyline&#34;&gt;Skyline Emulator&lt;/a&gt; finished implementing their &lt;code&gt;NVDRV&lt;/code&gt; service (NVIDIA Driver service) and they offered it to us, as it is much more accurate than our old implementation.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/yokaibug_hu7699248f0aa2f7ec8a531f272b994029_243559_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;YO-KAI WATCH 4, before and after&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/yokaifix_hu508d7d4a163217ee0cd4b0823a75b47c_1895775_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;YO-KAI WATCH 4, before and after&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;YO-KAI WATCH 4, before and after&lt;/p&gt;


&lt;p&gt;The implemented changes in part 1 of Project Y.F.C. include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Full rework of the GPU driver, based on the reverse-engineering and code from Skyline Emulator with full permission from the respective team.&lt;/li&gt;
&lt;li&gt;Full rework of GPU memory management.&lt;/li&gt;
&lt;li&gt;Initial implementation of GPU Channels, fixing &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; “World of Light” mode, &lt;code&gt;Deltarune&lt;/code&gt;, and several other games.&lt;/li&gt;
&lt;li&gt;Bug fixes and performance improvements to the GPU DMA engine.&lt;/li&gt;
&lt;li&gt;Several fixes for Vulkan, the GPU Buffer Cache, and the Shader Decompiler, all of which affect multiple games.&lt;/li&gt;
&lt;li&gt;Reworked host frame presentation to be considerably smoother (improves &lt;code&gt;Xenoblade Chronicles&lt;/code&gt; games).&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./wol.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/wol_hud3553d01153c1265e8d1b665e5c94112_2609033_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The World of Light single-player mode is now playable! (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./wol2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/wol2_hu13375a4a4d27cfa2874dfea1f070ddc9_2937762_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The World of Light single-player mode is now playable! (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The World of Light single-player mode is now playable! (Super Smash Bros. Ultimate)&lt;/p&gt;


&lt;p&gt;A large list of critical changes like this, sadly, brings regressions with it.
We’re working to resolve these regressions, but Blinkhawk is busy with IRL things, so expect a delay to see these changes implemented into Mainline while we sort things out and pave the way for part 2.
(Remember: you can check the hovercard or the PR itself to see its merge status!)&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./witcher.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/witcher_hu4ae4f5e3e5045ffbaceb0240ec1a3253_4407778_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Not all games are in perfect shape... yet! (The Witcher 3: Wild Hunt)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./plaid.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/plaid_huc383c270b3ec45b7a90b8af20275c777_5795880_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Not all games are in perfect shape... yet! (The Witcher 3: Wild Hunt)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Not all games are in perfect shape... yet! (The Witcher 3: Wild Hunt)&lt;/p&gt;


&lt;h2 id=&#34;project-andio&#34;&gt;Project Andio&lt;/h2&gt;
&lt;p&gt;Not a name we&amp;rsquo;ve mentioned before, right? Well, it was a surprise for us as well!
&lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; is behind this wonderful gift: &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8545&#34; data-gh-pr=&#34;8545&#34;&gt;an almost complete rewrite of yuzu’s audio engine.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;The main driving force behind this project was to resolve the multi-year old issues that have accumulated thanks to our very old initial audio implementation.
yuzu was missing many playback features, such as audio effects. But the old code was too hard to maintain, making it impossible to keep up with the Switch&amp;rsquo;s updates over the years.&lt;/p&gt;
&lt;p&gt;Here is a before and after of &lt;code&gt;Metroid Dread&lt;/code&gt; while underwater. You can notice the effects missing in the first recording, as if Samus was just out in the open.&lt;/p&gt;




&lt;audio preload=&#34;auto&#34; controls&gt;
    
        &lt;source src=&#34;./audiobug.mp3&#34; type=&#34;audio/mpeg&#34;&gt;
        &lt;a href=&#34;./audiobug.mp3&#34;&gt;Download the audio instead&lt;/a&gt;
    
&lt;/audio&gt;





&lt;audio preload=&#34;auto&#34; controls&gt;
    
        &lt;source src=&#34;./audiofix.mp3&#34; type=&#34;audio/mpeg&#34;&gt;
        &lt;a href=&#34;./audiofix.mp3&#34;&gt;Download the audio instead&lt;/a&gt;
    
&lt;/audio&gt;

&lt;p&gt;Cleaner code allows developers to more easily stay up to date (the current implementation uses the changes introduced in firmware version 14.0.0), and should help introduce changes found by reverse engineering in the future.&lt;/p&gt;
&lt;p&gt;The list of fixes is so large, it’s practically countless.
While over 15 official issues were fixed, it’s impossible to know how many undocumented issues have been resolved.&lt;/p&gt;
&lt;p&gt;We plan to have a dedicated article for Andio in the near future where we will dig deeper into the changes introduced.&lt;/p&gt;
&lt;p&gt;All users can enjoy the benefits of Project Andio, available in both Mainline and Early Access!&lt;/p&gt;
&lt;h2 id=&#34;preliminary-work-on-project-london&#34;&gt;Preliminary work on Project London&lt;/h2&gt;
&lt;p&gt;Yes, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt;, it’s London.&lt;/p&gt;
&lt;p&gt;For those that didn’t catch on to the name, Project &lt;strong&gt;L&lt;/strong&gt;on&lt;strong&gt;d&lt;/strong&gt;o&lt;strong&gt;n&lt;/strong&gt; is our work to get LDN (Local Wireless) support into yuzu, including hosted rooms for online connectivity.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8541&#34; data-gh-pr=&#34;8541&#34;&gt;Such rooms, and their corresponding user interface,&lt;/a&gt;
 are what &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/8541&#34;&gt;Tobi&lt;/a&gt; has been working on.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./lobby.png&#34; title=&#34; Multiplayer rooms can be created, with chat functionality.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/lobby_hu3125b5f4232f90738dcf0a73557b5620_94194_820x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Multiplayer rooms can be created, with chat functionality.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Multiplayer rooms can be created, with chat functionality.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The implementation is based on &lt;a href=&#34;https://citra-emu.org/&#34;&gt;Citra&lt;/a&gt;, and while it’s already perfectly functional, it won’t be available for users until the network backend is ready.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./puyo.png&#34; title=&#34; How&amp;#39;s SEGA nowdays? (Puyo Puyo Tetris)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/puyo_hu1414f042b03477e6adac9237a1ea3c0a_909291_820x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; How&amp;#39;s SEGA nowdays? (Puyo Puyo Tetris)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; How&amp;#39;s SEGA nowdays? (Puyo Puyo Tetris)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Thankfully, as you can see above, internal testing has been positive under ideal conditions, so the “only” remaining work is tweaking and bug fixing.
If only it were that simple…&lt;/p&gt;
&lt;p&gt;An online service like this requires the transfer of network packets, so &lt;a href=&#34;http://enet.bespin.org/&#34;&gt;ENet&lt;/a&gt; is added as a dependency.&lt;/p&gt;
&lt;p&gt;Stay tuned for future improvements on this work in progress!&lt;/p&gt;
&lt;h2 id=&#34;core-timing-or-how-to-suffer-so-much-with-a-fix&#34;&gt;Core timing, or how to suffer so much with a fix&lt;/h2&gt;
&lt;p&gt;It has been an eventful month for a long-maligned corner of the yuzu codebase, generally referred to in hushed tones among developers as CoreTiming. CoreTiming may be the cause of many timing-related emulation issues in yuzu.&lt;/p&gt;
&lt;p&gt;While reviewing Project Andio, Blinkhawk noted that one of his longstanding open pull requests, which implemented a more precise version of CoreTiming, fixed some audio corruption regressions in emulated games, and even fixed some games that were previously having issues with freezing, such as &lt;code&gt;Mario Strikers: Battle League&lt;/code&gt;.
With the new audio code being almost ready to go at that point, the team decided to get this pull request rebased and merged so we could have a new audio system without any regressions.
The new CoreTiming implementation would use multiple host threads to wait for events, and should have been much better in theory.&lt;/p&gt;
&lt;p&gt;However, it didn&amp;rsquo;t fix everything.
Maide found that there were still some lingering issues with audio callbacks not looping as precisely as they needed to.
In yuzu, looping events previously used CoreTiming to reschedule themselves for an exact number of milliseconds after their execution, instead of when they were intended to be executed.
This caused significant drifting and issues with the new audio renderer.
The usual victims were the most affected, users running CPUs with only 4 threads.&lt;/p&gt;
&lt;p&gt;To fix this, Maide &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8561&#34; data-gh-pr=&#34;8561&#34;&gt;reworked the way looping events were handled.&lt;/a&gt;

Now, CoreTiming automatically computes the correct time to reschedule a looping event, making the implementation significantly more precise for those types of events.
With the change to looping events in, and noticing that the other changes Blinkhawk had added were causing serious regressions, the team opted to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8531&#34; data-gh-pr=&#34;8531&#34;&gt;remove the multi-threaded host CoreTiming implementation,&lt;/a&gt;
 and then &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8591&#34; data-gh-pr=&#34;8591&#34;&gt;most of Blinkhawk&amp;rsquo;s new implementation entirely,&lt;/a&gt;
 as it was still causing serious performance problems for a subset of users.&lt;/p&gt;
&lt;p&gt;But that wasn&amp;rsquo;t all that changed for timing this month.
Intel Alder Lake (Gen. 12) CPU users on Windows have long been reporting noticeable clock drift in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;, but it got a lot worse since the NVNFlinger rewrite a few months ago.
As previously reported, the resident bunnei rabbit mostly fixed this issue in &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8428&#34; data-gh-pr=&#34;8428&#34;&gt;a follow-up pull request&lt;/a&gt;
 which restored the (inaccurate) behaviour of the old implementation, and the clock drift issue improved significantly for those users.&lt;/p&gt;
&lt;p&gt;Maide, not content to just improve audio, discovered that &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8650&#34; data-gh-pr=&#34;8650&#34;&gt;the way yuzu&amp;rsquo;s NVNFlinger implementation was waiting on buffers would drift,&lt;/a&gt;
 due to the same problem that was previously fixed in CoreTiming!
Instead of reimplementing the fix here as well, he modified NVNFlinger to use a timing callback, which fixed the drifting issues in SSBU, and also resolved many longstanding issues with frametime inconsistency.
This also provides a significant performance boost in many games due to keeping the frametime presentation consistent, and allows &lt;code&gt;Fire Emblem Warriors: Three Hopes&lt;/code&gt; to be playable.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ftold.png&#34; title=&#34; Jumpy, visible stuttering&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/ftold_hua81e2c515a533b913e3b9beb4c56a2f2_18984_298x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Jumpy, visible stuttering&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Jumpy, visible stuttering&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ftnew.png&#34; title=&#34; Flat, smooth as silk&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/ftnew_hud2400d24186dbdc91813b26ca3839176_19423_298x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Flat, smooth as silk&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Flat, smooth as silk&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./few3h.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/few3h_hu2a9bd98e5ed99a709257f29fa00a941c_5227404_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Time to smash those attack buttons (Fire Emblem Warriors: Three Hopes)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./3hopes.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/3hopes_huf0f87ddc0e9ea7a8259be69fbb31664d_9313875_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Time to smash those attack buttons (Fire Emblem Warriors: Three Hopes)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Time to smash those attack buttons (Fire Emblem Warriors: Three Hopes)&lt;/p&gt;


&lt;p&gt;Finally, &lt;a href=&#34;https://github.com/BreadFish64&#34;&gt;BreadFish64&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8543&#34; data-gh-pr=&#34;8543&#34;&gt;implemented a way to read the exact TSC frequency of the host CPU.&lt;/a&gt;

The &lt;code&gt;TSC&lt;/code&gt; (timestamp counter) is a high precision timer measuring the number of base clock ticks performed by an Intel or AMD processor since boot.
CoreTiming uses this value to emulate the ARM physical count register, which performs a similar role as the &lt;code&gt;TSC&lt;/code&gt; for ARM devices, like the Switch.
Getting the exact &lt;code&gt;TSC&lt;/code&gt; frequency, as opposed to just estimating it, allows CoreTiming to avoid drifting due to mismatch between the host frequency, which depends on your CPU and the guest clock frequency, which is fixed to 19.2MHz.&lt;/p&gt;
&lt;p&gt;More precision and faster boot times are never a bad thing!&lt;/p&gt;
&lt;h2 id=&#34;kernel-changes&#34;&gt;Kernel changes&lt;/h2&gt;
&lt;p&gt;While using the new debugger on games and homebrew, &lt;a href=&#34;https://github.com/comex&#34;&gt;comex&lt;/a&gt; spotted an issue causing yuzu to miss breakpoints in code that had already been run, or hit breakpoints which had already been deleted.
&lt;a href=&#34;https://github.com/merryhime&#34;&gt;Merry&lt;/a&gt; investigated and discovered an inaccuracy in &lt;a href=&#34;https://github.com/merryhime/dynarmic&#34;&gt;Dynarmic&amp;rsquo;s&lt;/a&gt; caching of code blocks.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8571&#34; data-gh-pr=&#34;8571&#34;&gt;Fixing the cache clearing and calculating block hashes correctly&lt;/a&gt;
 fixes the issues with breakpoints being hit.&lt;/p&gt;
&lt;p&gt;comex also observed an issue with watchpoints, where resuming execution after breaking on a watchpoint would seemingly fail to resume with the correct state.
&lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; investigated the issue and found that it happened when Dynarmic failed to update the PC register inside watchpoint callbacks.
Merry fixed this issue again by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8569&#34; data-gh-pr=&#34;8569&#34;&gt;completely rewriting Dynarmic&amp;rsquo;s support for watchpoints,&lt;/a&gt;
 now breaking immediately when necessary and avoiding almost all of the performance penalty of enabling watchpoints. Nice!&lt;/p&gt;
&lt;p&gt;byte[] has also been hard at work fixing various kernel issues and inconsistencies throughout June, and this month is no exception.
This time around, while searching for the source of a mysterious freezing bug in &lt;code&gt;Super Mario Galaxy&lt;/code&gt;, he rewrote the entire scheduler and brought it in line with the current state of the art in reverse engineering of the Switch kernel.
This fixed issues in a number of games, but most notably fixed the freezing issues users had in &lt;code&gt;Mario Strikers: Battle League&lt;/code&gt; (once you use an &lt;a href=&#34;https://github.com/piplup55/switch-mods/blob/master/mario%20strike%20battle%20league/cutscene%20skip.7z?raw=true&#34;&gt;intro-skipping mod&lt;/a&gt;), and allowed &lt;code&gt;Mononoke Slashdown&lt;/code&gt; to boot for the first time.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./strikers.png&#34; title=&#34; Some graphical bugs are expected for now (Mario Strikers: Battle League)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/strikers_hu11462cc00946767b41fbf8fedf0cae7a_9350957_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Some graphical bugs are expected for now (Mario Strikers: Battle League)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Some graphical bugs are expected for now (Mario Strikers: Battle League)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mononoke.png&#34; title=&#34; Mononoke Slashdown&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/mononoke_hub24703ee76271d54d42213edce3ebe7c_1363543_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Mononoke Slashdown&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Mononoke Slashdown&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While preparing the new scheduler for release, byte[] also noticed an inefficiency in the way guest threads were being emulated. To fix it, he changed the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8532&#34; data-gh-pr=&#34;8532&#34;&gt;process of starting fibers&lt;/a&gt;
 to use support for C++ language features, and significantly simplified the implementation.&lt;/p&gt;
&lt;h2 id=&#34;gpu-changes&#34;&gt;GPU changes&lt;/h2&gt;
&lt;p&gt;Last month, &lt;a href=&#34;https://github.com/behunin&#34;&gt;Behunin&lt;/a&gt; contributed a new GPU queue implementation intended to improve the performance of submission handling from the emulated game.
Some time after this, freezing issues in &lt;code&gt;Fire Emblem: Three Houses&lt;/code&gt; started cropping up.
After a long trail of hunting, byte[] thought the issue had been found and fixed by pull requests &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/8483&#34;&gt;#8483&lt;/a&gt; and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/8538&#34;&gt;#8538&lt;/a&gt;, but more careful debugging revealed that the cause of the freeze was unfortunately from the new GPU queue implementation!
&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; stepped up and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8542&#34; data-gh-pr=&#34;8542&#34;&gt;reverted the use of the new queue implementation,&lt;/a&gt;
 finally fixing the issue, at least for now.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./feth.png&#34; title=&#34; Don&amp;#39;t ask (Fire Emblem: Three Houses)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/feth_huef8e9d78076a23ffe918e2775e859418_2065159_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Don&amp;#39;t ask (Fire Emblem: Three Houses)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Don&amp;#39;t ask (Fire Emblem: Three Houses)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;, one of the most anticipated Switch releases in a while, released, and to the dismay of the yuzu community, would crash on boot when using Vulkan.
Due to differences in time zones, Maide was our first developer to lay hands on the new game, with byte[] lagging behind.
Maide found that there were some Vulkan shaders that crashed the GPU driver when they were compiled. yuzu is different from most Vulkan programs, and it directly generates shaders in binary format to respond to the needs of the game&amp;rsquo;s shaders, which can cause problems when the way yuzu translates a shader is different from the way a GLSL compiler would translate it.
byte[] quickly helped Maide identify the sources of these shader compilation crashes and, together, fixed both &lt;code&gt;FSwizzleAdd&lt;/code&gt; and &lt;code&gt;ConvertDepthMode&lt;/code&gt;, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8667&#34; data-gh-pr=&#34;8667&#34;&gt;allowing users to run the game in Vulkan.&lt;/a&gt;
&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc31.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/xc31_hu1f38d650cefdc3f0c5fd81c50d62ee2a_2550775_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thank you Night for the amazing pics! (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc32.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/xc32_hu2542c0ec1bbb7c9949db9ad2ae887d74_2491462_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thank you Night for the amazing pics! (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc33.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/xc33_hu5b25b5d5660cdb132ee46f0088e9fe4a_2656943_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thank you Night for the amazing pics! (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc34.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/xc34_hu7d0f3d0a9d170e01f2b23be9e765d43f_2707690_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thank you Night for the amazing pics! (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/xc3_hu6d47ae15be31a6df0d7b93f43f8a45c0_2303265_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thank you Night for the amazing pics! (Xenoblade Chronicles 3)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Thank you Night for the amazing pics! (Xenoblade Chronicles 3)&lt;/p&gt;


&lt;p&gt;We’re aware that AMD Radeon GPUs running on Windows still experience crashes with Vulkan at boot. This is because those drivers lack support for the &lt;code&gt;VK_FORMAT_R16G16B16_SFLOAT&lt;/code&gt; texture format.
We implemented an alternative path emulating this format with a similar one to solve this issue.
We’ll cover it more deeply in the next progress report, along with several other bugfixes for this amazing game.&lt;/p&gt;
&lt;p&gt;Another of the various issues affecting this new release is an absurd level of memory usage when running in OpenGL.
yuzu, in the past, cleaned shader sources after dealing with the shader.
Now, for some reason, this game manages to skip that check.
In order to improve the ridiculous memory usage, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8684&#34; data-gh-pr=&#34;8684&#34;&gt;implemented&lt;/a&gt;
 &lt;code&gt;glDetachShader&lt;/code&gt;, a more “official” way to achieve the same result.
While this doesn’t solve the issue entirely, testing shows a 5GB reduction in RAM usage from just a single code line addition.&lt;/p&gt;
&lt;p&gt;Let’s stay on the subject of GPU emulation for a bit longer.
In a past Progress Report, we explained how &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/#vulkan-by-default&#34;&gt;implemented a status check system&lt;/a&gt; to ensure good Vulkan compatibility when opening yuzu for the first time.&lt;/p&gt;
&lt;p&gt;The original implementation worked by running a small Vulkan instance at boot, detecting if it crashed, and saving the result in the configuration file.
On the next boot after the crash, yuzu informs the user and locks itself to only offer OpenGL.
This required two boots to get the whole picture, and a manual intervention by the user was needed to re-enable Vulkan as an option, pressing a button in yuzu’s configuration.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8564&#34; data-gh-pr=&#34;8564&#34;&gt;This new approach&lt;/a&gt;
 uses a child process that is only tasked with starting the Vulkan loader.
If the child process crashes, the parent process marks the currently running instance of yuzu as not being Vulkan compatible.
This has the benefit of only having to run yuzu once to detect the current status.
If the user solves the issue (updating the drivers or any Vulkan layer application causing issues), only restarting yuzu is needed as nothing is changed in the configuration files now.&lt;/p&gt;
&lt;p&gt;This change helps users identify issues and stop potential crashes, but the general recommendations still apply: manually update your GPU drivers (never trust Windows Update), and keep any application that runs an overlay or records the screen updated to their latest version.&lt;/p&gt;
&lt;p&gt;Moving on to more specific game fixes not related to GOAT &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;, our resident Kirby clone, Morph, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8528&#34; data-gh-pr=&#34;8528&#34;&gt;implemented a texture format&lt;/a&gt;
 &lt;code&gt;MONSTER HUNTER RISE&lt;/code&gt; has been asking for: &lt;code&gt;ASTC_10x6_UNORM&lt;/code&gt;.
That’s right, another &lt;code&gt;ASTC&lt;/code&gt; format. Your GPU will hate you while decoding it.&lt;/p&gt;
&lt;p&gt;This doesn’t solve the rendering bugs we face with this game, but it makes things look a bit better!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mhr.png&#34; title=&#34; Rise ye Tarnished! Wait, wrong game (MONSTER HUNTER RISE)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/mhr_hu523de584624e16ec57cabea12cfabfd8_13543388_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Rise ye Tarnished! Wait, wrong game (MONSTER HUNTER RISE)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Rise ye Tarnished! Wait, wrong game (MONSTER HUNTER RISE)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;linux-flatpak-discover-and-appimage-fixes&#34;&gt;Linux Flatpak (Discover) and AppImage fixes&lt;/h2&gt;
&lt;p&gt;While Flatpak is not the recommended way for our users to enjoy their favourite Switch titles on Linux, due to lower performance and some missing desktop integration features, it is a great option for many Linux users who have Flatpak installed by default and want a low-friction way to get access to yuzu.
It has been the preferred choice by Steam Deck users since its release.
As the reports from users rolled in, the team fixed some notable Flatpak-exclusive regressions this month.&lt;/p&gt;
&lt;p&gt;But why were these issues Flatpak-exclusive, and not found in the regular Linux AppImage builds?
Flatpak enables extra checks in the C++ standard library, which are aimed to catch buffer overflow errors before they happen, intending to help with debugging.
Unfortunately, if a check fails, it causes yuzu to instantly crash, which makes it more difficult to debug the issue from yuzu&amp;rsquo;s log files alone.&lt;/p&gt;
&lt;p&gt;The switch to Vulkan by default caused games which used any CPU-based rendering to crash.
If a game wants to render an image to the screen from the CPU, instead of the GPU, it will first convert the image into an optimized layout that the Switch GPU understands, and then ask the GPU to render the optimized image.
To deal with this, yuzu undoes this layout conversion and uploads the data to the host GPU for presentation.
byte[] discovered that due to the size of the optimized layout and the unoptimized layout being different, a subspan used in unoptimizing the layout would overflow and cause the check to fail.
The fix was simple: just &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8611&#34; data-gh-pr=&#34;8611&#34;&gt;use the optimized size for the converted layer,&lt;/a&gt;
 since it would always be larger.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./wetbear.png&#34; title=&#34; Thanks Wetbear for the pic!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/wetbear_hu64246610b2b8e4fe9286df23c0424922_2639713_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Thanks Wetbear for the pic!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Thanks Wetbear for the pic!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;It wouldn&amp;rsquo;t be a proper yuzu pull request without a seemingly unrelated regression.
&lt;code&gt;Pokémon: Let&#39;s Go, Pikachu!/Eevee!&lt;/code&gt; had a strange performance regression caused by byte[]&amp;rsquo;s previous change, where the framerate when attempting to play with Pikachu or Eevee would drop to approximately 7 frames per second.
byte[] investigated it and found that using the larger size caused the process of re-optimizing a frame for the game to read back to be much slower, since it was now dealing with a much larger image.
He then fixed it by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8658&#34; data-gh-pr=&#34;8658&#34;&gt;using different sizes for the optimized and unoptimized images,&lt;/a&gt;
 finally putting these foolish performance issues to rest.&lt;/p&gt;
&lt;p&gt;Project Andio introduced a few new regressions in the Flatpak builds as well.
One of these was fixed in the pull request itself before it was merged.&lt;/p&gt;
&lt;p&gt;When decoding buffers which were input from the emulated game, it was possible for a span operation to overflow.
Maide fixed this by being more careful about handling the sample buffers when decoding input.
From user reports, there were still crashes, and Maide found an issue with &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8657&#34; data-gh-pr=&#34;8657&#34;&gt;the &lt;code&gt;DepopPrepare&lt;/code&gt; command, causing another overflowing span.&lt;/a&gt;

Fixing this finally allowed users to enjoy the Flatpak builds once more.
Flatpak Linux users rejoice!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./flathub.png&#34; title=&#34; Simple and convenient&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/flathub_hu93dad4de9ab9c1d1ea1e243b5eca0496_493724_982x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Simple and convenient&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Simple and convenient&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Flatpak isn&amp;rsquo;t the only one to get a piece of the cake, AppImage receives some love too!&lt;/p&gt;
&lt;p&gt;Vulkan detection is not only a Windows issue, it can also happen in &lt;a href=&#34;https://www.linuxfoundation.org/&#34;&gt;free land&lt;/a&gt;.
toastUnlimited found out that the &lt;code&gt;libQt5Multimedia&lt;/code&gt; library causes issues with Vulkan in AppImage builds.
Since the library is used, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8642&#34; data-gh-pr=&#34;8642&#34;&gt;excluding &lt;code&gt;libwayland-client&lt;/code&gt;&lt;/a&gt;
 is the workaround in place for now.
We’ll evaluate the user response we get from this change and consider keeping it or removing &lt;code&gt;libQt5Multimedia&lt;/code&gt; altogether.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Docteh&#34;&gt;Docteh&lt;/a&gt; started working on &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8625&#34; data-gh-pr=&#34;8625&#34;&gt;improving the environment variables&lt;/a&gt;
 used in our build process to give AppImages a proper title bar.
Once this work is finished, the title bar should look identical to Windows builds.&lt;/p&gt;
&lt;h2 id=&#34;input-improvements&#34;&gt;Input improvements&lt;/h2&gt;
&lt;p&gt;A unique feature of the Nintendo Switch is the capability to use infrared cameras installed in the right Joy-Con.
The main function of the cameras is to detect shapes and measure the distance to objects, but it can also be used to transmit a feed to a screen, letting you turn your Joy-Con into a heat-seeking monstrosity. &lt;a href=&#34;https://en.wikipedia.org/wiki/Fox_(code_word)&#34;&gt;Fox-2&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Interested in adding this awesome feature to yuzu, and providing full support for games like &lt;code&gt;Game Builder Garage&lt;/code&gt; or the &lt;code&gt;Nintendo Labo&lt;/code&gt; collection, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8636&#34; data-gh-pr=&#34;8636&#34;&gt;emulated the clustering processor&lt;/a&gt;
 required to let the games access the camera on the Joy-Cons or any camera the user wants to provide, even if it is a desktop capture obtained from OBS Studio.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ir.png&#34; title=&#34; While this looks like a homebrew app, it&amp;#39;s in fact the real IR interface Nintendo provides for its games&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/ir_huaac3600f1f56f00fca4184664fcb0c82_76718_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; While this looks like a homebrew app, it&amp;#39;s in fact the real IR interface Nintendo provides for its games&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; While this looks like a homebrew app, it&amp;#39;s in fact the real IR interface Nintendo provides for its games&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Users wanting to play with this setting can find it in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Controls &amp;gt; Advanced tab &amp;gt; Infrared Camera&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./camera.png&#34; title=&#34; What a sleek little menu&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/camera_hue3c4a4e01684251287742af58e76e685_59073_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; What a sleek little menu&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; What a sleek little menu&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This work doesn’t include the moment processor required by &lt;code&gt;1-2-Switch!&lt;/code&gt; just yet.&lt;/p&gt;
&lt;p&gt;Steam Deck users reported having issues when using external controllers, but not while using the integrated Deck controls.
toastUnlimited hopped onto the issue and found that the reason is the included prerelease &lt;a href=&#34;https://www.libsdl.org/&#34;&gt;SDL2&lt;/a&gt; version we’ve been using.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8607&#34; data-gh-pr=&#34;8607&#34;&gt;Reverting to a slightly older version&lt;/a&gt;
 solved the issue.&lt;/p&gt;
&lt;p&gt;A recent and very interesting community effort is to focus on adding online functionality to single player games, allowing for fun co-op opportunities not possible in the original game.
&lt;code&gt;Super Mario Odyssey&lt;/code&gt; recently received a &lt;a href=&#34;https://github.com/CraftyBoss/SuperMarioOdysseyOnline&#34;&gt;mod that allows for this online functionality&lt;/a&gt;, and the one thing keeping yuzu from supporting it was the on-screen keyboard lacking a way to input an IP address!
Luckily, Morph was on the case and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8633&#34; data-gh-pr=&#34;8633&#34;&gt;implemented the necessary symbols&lt;/a&gt;
 to input the required IPv4 addresses by the online mod.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smoo.png&#34; title=&#34; Up to 10 people at once! (Super Mario Odyssey)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/smoo_huc9331193ae607db33d607c719a5abf78_104460_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Up to 10 people at once! (Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Up to 10 people at once! (Super Mario Odyssey)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Link4565&#34;&gt;Link4565&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8598&#34; data-gh-pr=&#34;8598&#34;&gt;implemented some required fixes&lt;/a&gt;
 in yuzu’s network services to improve compatibility with this awesome mod.
Thank you very much!&lt;/p&gt;
&lt;p&gt;Have fun ruining Bowser’s wedding!&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;A small regression from the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/#project-kraken&#34;&gt;input rewrite&lt;/a&gt; revealed itself just now.
The WebApplet’s input bit was assumed incorrectly, causing user input to be completely ignored.
Thankfully, Morph &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8536&#34; data-gh-pr=&#34;8536&#34;&gt;found the reason&lt;/a&gt;
 and implemented the fix.&lt;/p&gt;
&lt;p&gt;Last month, Docteh &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/#ui-changes&#34;&gt;renamed&lt;/a&gt; the status bar’s DOCKED status (redundancy, yeah!).
For consistency, &lt;a href=&#34;https://github.com/goldenx86&#34;&gt;this dumb writer&lt;/a&gt; decided to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8610&#34; data-gh-pr=&#34;8610&#34;&gt;do the same for the Controls configuration window,&lt;/a&gt;
 for consistency.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dock.png&#34; title=&#34; Boring change, who is responsible for this?&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/dock_hu08b23143df39a653b5bd1af6aa474c0f_71817_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Boring change, who is responsible for this?&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Boring change, who is responsible for this?&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Sometimes something &amp;ldquo;functioning as designed&amp;rdquo; can look stalled from the user’s point of view due to how the UX (user experience) is presented, ask any new Linux user for example.
In this case, when loading an application, the shader progress bar at boot would appear stuck if a game was started with no previous pipeline cache or if a homebrew was booted.
Since this leads to confusion, byte[] decided that &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8622&#34; data-gh-pr=&#34;8622&#34;&gt;it’s better to reset the status bar&lt;/a&gt;
 than let it remain stuck until the program finishes loading.
As said before, the devil is in the details.&lt;/p&gt;
&lt;p&gt;One of the available configurable hotkey options in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; General &amp;gt; Hotkeys&lt;/code&gt; is &lt;code&gt;Audio Volume Up/Down&lt;/code&gt;.
Users have requested to tune the curve in how volume is changed so that it’s more sensitive at lower values.
Human hearing senses volume logarithmically instead of linearly, so it makes perfect sense.
german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8656&#34; data-gh-pr=&#34;8656&#34;&gt;added incremental steps&lt;/a&gt;
 the closer you are to 0% volume as a way to better copy how our flesh and bone bodies perceive the world.&lt;/p&gt;
&lt;h2 id=&#34;general-bugfixes-and-improvements&#34;&gt;General bugfixes and improvements&lt;/h2&gt;
&lt;p&gt;A beautiful feature of tightly integrated systems is their wonderful control over suspend and resume, and the Steam Deck is no exception.
If you&amp;rsquo;ve ever experienced issues with suspend and resume, you know what I mean.
Experienced developer &lt;a href=&#34;https://github.com/devsnek&#34;&gt;devsnek&lt;/a&gt; wants to help yuzu take advantage of this feature over the course of three &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8585&#34; data-gh-pr=&#34;8585&#34;&gt;different&lt;/a&gt;
 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8592&#34; data-gh-pr=&#34;8592&#34;&gt;pull requests.&lt;/a&gt;

This includes &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8581&#34; data-gh-pr=&#34;8581&#34;&gt;emulating the actual suspend/resume mechanic of the Switch,&lt;/a&gt;
 as some games make use of it as one of their gameplay features.
With these changes, users can suspend their games by simply pressing the power button of the Deck, exactly like on a Switch.&lt;/p&gt;
&lt;p&gt;For those of us living in remote places, suffering from terrible ISPs, or both (FML), we have fantastic news!
toastUnlimited reduced the size of each yuzu download by around 24MB by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8686&#34; data-gh-pr=&#34;8686&#34;&gt;only including what specifically belongs to yuzu&lt;/a&gt;
 in its source.
Those interested in building the bundled source that comes with the installer must now run &lt;code&gt;git submodule update --init --recursive&lt;/code&gt; in order to be able to compile the project.&lt;/p&gt;
&lt;h2 id=&#34;hardware-section&#34;&gt;Hardware section&lt;/h2&gt;
&lt;p&gt;This is a new section to communicate and discuss new relevant bugs, fixes, and findings related to specific hardware that can affect the user experience within yuzu.&lt;/p&gt;
&lt;h4 id=&#34;nvidia-missing-the-perfection-that-47212-was&#34;&gt;NVIDIA, missing the perfection that 472.12 was&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/#psa-for-amd-radeon-users-and-nvidia-tags-along&#34;&gt;We mentioned last month&lt;/a&gt; how the 516 series of drivers is detrimental to Maxwell and Pascal users, making Vulkan unstable.
We’re still debugging the issue, as it isn’t easy to catch, but a possible cause is suspected: GPU accelerated &lt;code&gt;ASTC&lt;/code&gt; texture decoding.
If you own a Maxwell or Pascal GPU, must remain on the latest driver update, and want to test if you can make Vulkan stable again, try disabling &lt;code&gt;Accelerate ASTC Texture Decoding&lt;/code&gt; in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics&lt;/code&gt;.
Please report your results on our &lt;a href=&#34;https://community.citra-emu.org/c/yuzu-support/14&#34;&gt;forums&lt;/a&gt; or &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another known issue caused by the 516 series of drivers is some funny flickering on trees in KOEI TECMO games like &lt;code&gt;Hyrule Warriors: Age of Calamity&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./aocbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./aoc.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Day time party! NVIDIA Vulkan Left: 516.94 &amp;amp; Right: 512.95 (Hyrule Warriors: Age of Calamity)&lt;/p&gt;


&lt;p&gt;These issues could either be regressions or undocumented behaviour changes, possibly caused after following the API specification more rigorously.&lt;/p&gt;
&lt;p&gt;There are also performance related issues affecting users with G-SYNC/FreeSync displays, causing low framerates (usually games get stuck at 24-30 FPS).
We have a few ways to bypass this issue:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Unfocus and refocus yuzu’s window each time you boot a game.&lt;/li&gt;
&lt;li&gt;In yuzu, disable &lt;code&gt;View &amp;gt; Single Window Mode&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Enable &lt;code&gt;Exclusive Fullscreen&lt;/code&gt; from &lt;code&gt;Emulation &amp;gt; Configure.. &amp;gt; Graphics &amp;gt; Fullscreen Mode&lt;/code&gt;. Then just play your games in fullscreen by pressing F11.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The root of the problem is caused by some bad combination of running a Qt window inside another window, and NVIDIA’s way of detecting the framerate of windowed applications.
Removing any of the two factors solves the low framerate while still taking advantage of Variable Refresh Rate.&lt;/p&gt;
&lt;h4 id=&#34;amd-opengl-25-years-in-the-making&#34;&gt;AMD OpenGL, 25 years in the making&lt;/h4&gt;
&lt;p&gt;Hell froze over, pigs learned to fly, and starting with the Windows driver version 22.7.1, AMD introduced a completely new OpenGL driver, making Radeon cards on Windows viable options to use both APIs, not just cool kid Vulkan.
Performance is close to 100% higher, or more in some titles, and many rendering bugs are fixed.
But why write about it, let the numbers do the talking:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./perf.png&#34; title=&#34; Thank you RodrigoTR!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/perf_hubbcafc88b9eb4d988aaf49af90e647b8_19658_706x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Thank you RodrigoTR!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Thank you RodrigoTR!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Wow! That&amp;rsquo;s a lot of numbers, let&amp;rsquo;s try to make it easier to digest:&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/xc2_hu762aa5cd87c55a3553e758974a1cf8dc_20004_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thanks toastUnlimited!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/botw_hud8302d4632dd168a138b4fbd1a777498_21666_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thanks toastUnlimited!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/smo_hu460e6fd7005df3bca3bb131c98ccd891_20811_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thanks toastUnlimited!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./psw.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/psw_hu061ce1f6bdb355e4b8e9781546a20a9b_19839_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thanks toastUnlimited!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pla.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/pla_hu5b74151c2b48ef1ff74e130361980226_20032_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thanks toastUnlimited!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./md.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/md_hucc9421ffacdc81e8c3d7ff401360aee4_19566_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thanks toastUnlimited!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mk8.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/mk8_hua0fb0dc58641dddafda589d40e62039c_20410_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thanks toastUnlimited!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Thanks toastUnlimited!&lt;/p&gt;


&lt;p&gt;We&amp;rsquo;re not experts in the benchmarking area, so hopefully the above graphs help.&lt;/p&gt;
&lt;p&gt;Above are results of an RX 6600 and a GTX 1660 SUPER running a few games in OpenGL and Vulkan.
22.6.1 represents the old infamous OpenGL driver, 22.7.1 is of course the new driver. Linux is represented by Mesa 22.1.3 running radeonsi with the amdgpu kernel module for OpenGL, and RADV for Vulkan. NVIDIA is running its latest (at the time of writing) Windows driver.
Remaining relevant hardware used is a 5600X and 16GB of RAM at 3600MHz. The RX 6600 was running at PCIe 4.0 8x with Smart Access Memory enabled, although that won’t make a difference, more on that later.
Operating systems used are Windows 11 and Manjaro Linux, both up to date and on their respective default stable branches.
yuzu is on Mainline 1112, with GPU accuracy set to normal to make GPU driver bottlenecks easier to measure, 1X resolution multiplier, and Default value for Anisotropic Filtering.&lt;/p&gt;
&lt;p&gt;A single regression under investigation and reported to AMD aside (&lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; crashes loading Abble’s Fountain, the measuring spot, could be caused by some driver thread crash), performance is now very close to Vulkan numbers, be it either from AMD or NVIDIA.&lt;/p&gt;
&lt;p&gt;It’s now perfectly valid for a Radeon user to switch to OpenGL if a specific game requires it, like for example with &lt;code&gt;Xenoblade Chronicles 3&lt;/code&gt;, or a Unity/Unreal Engine based game (&lt;code&gt;SHIN MEGAMI TENSEI V&lt;/code&gt;).
As a bonus, while not being very stable, the SPIR-V shader back-end can be used on games with “simple” shaders like &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; or &lt;code&gt;Super Mario Odyssey&lt;/code&gt;, making shader building much more tolerable when compared to GLSL, giving it a performance much closer to the Nvidia-only GLASM.&lt;/p&gt;
&lt;p&gt;Another lesson learned from this is that some games, like &lt;code&gt;Legend of Zelda: Breath of the Wild&lt;/code&gt;, just outright prefer NVIDIA&amp;rsquo;s mature OpenGL driver. Ara ara.&lt;/p&gt;
&lt;p&gt;Lastly, to end this Red Team section.
&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/#vulkan-is-the-future&#34;&gt;In the past&lt;/a&gt;, we reported a way to defeat RDNA2’s overcorrecting power manager in order to get decent framerates.
This method, while simple, has a downside: It’s an overclock.
Or at least counts as one.&lt;/p&gt;
&lt;p&gt;We found an alternative that should be more globally applicable.
The trick this time is to make the driver force high clocks on a more important section of the GPU when speaking about emulation performance in general: GPU VRAM.
All this while keeping the warranty in check.&lt;/p&gt;
&lt;p&gt;The process is simple, make the integrated video encoder work in the background while yuzu (or any other emulator) runs.
This is easily achieved from Radeon Software by going to &lt;code&gt;Settings &amp;gt; Record &amp;amp; Stream&lt;/code&gt; and enabling &lt;code&gt;Instant Replay&lt;/code&gt;.
Intel/Linux owners should be able to reach similar results by instead using the Xbox Game Bar or &lt;a href=&#34;https://obsproject.com/forum/resources/instant-replay.575/&#34;&gt;setting OBS to keep a buffer&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./instantreplay.png&#34; title=&#34; A driver toggle for power management would be so much simpler&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2022/instantreplay_hu7426388f49d367d9cd8b476a588b23cb_142540_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; A driver toggle for power management would be so much simpler&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; A driver toggle for power management would be so much simpler&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;After this, in yuzu enable Exclusive Fullscreen from &lt;code&gt;Emulation &amp;gt; Configure.. &amp;gt; Graphics &amp;gt; Fullscreen Mode&lt;/code&gt;.
Then just play your games in fullscreen by pressing F11.
This step can be avoided if you also enable &lt;code&gt;Record Desktop&lt;/code&gt;, but please keep in mind this will increase your power consumption even while idling.&lt;/p&gt;
&lt;p&gt;The performance gains are the same as with the previous overclocking method, up to 73% in GPU bottlenecked titles.&lt;/p&gt;
&lt;p&gt;RX 6500 XT and RX 6400 users, since you lack a video encoder in the first place, refer to our original method mentioned at the start, or ask for a refund.&lt;/p&gt;
&lt;h4 id=&#34;intel-killing-support-for-2-year-old-hardware&#34;&gt;Intel, killing support for 2 year old hardware&lt;/h4&gt;
&lt;p&gt;Intel &lt;a href=&#34;https://community.intel.com/t5/Graphics/Graphics-Driver-Support-Update-for-10th-Generation-and-Older/m-p/1403969/thread-id/108899&#34;&gt;recently announced&lt;/a&gt; that their Windows driver for Gen. 9, Gen. 9.5, and Gen. 11 GPUs (that is any CPU based on the 14nm Skylake architecture and all its many marketing renames, plus Ice Lake) is now in “legacy software support”, which in layman&amp;rsquo;s terms means they are officially dead.
While this doesn’t affect yuzu immediately, any new Vulkan features we add in the future could potentially break functionality in a similar way to what happened with old AMD GCN hardware last year.
This leaves integrated Intel GPU users with a single alternative, Linux, which offers support for even older hardware.
For example, an ancient HD Graphics 4400 &lt;em&gt;can&lt;/em&gt; run yuzu with the Mesa drivers.&lt;/p&gt;
&lt;p&gt;Users should consider learning how to use Linux if a hardware upgrade is not a viable option in the near future, Mesa has always offered better performance for Intel GPUs.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;Part 2 of &lt;code&gt;Project Y.F.C.&lt;/code&gt; is a bit delayed for now, real life issues as previously mentioned, but its feature list and expected progression is laid out.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Project London&lt;/code&gt; is progressing in a healthy fashion, we loved the internal testing done so far.&lt;/p&gt;
&lt;p&gt;And a possibility has just recently started to open for even better GPU performance in the (not so near) future.
&lt;code&gt;GPU fastmem&lt;/code&gt; is one of the features that &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo &lt;/a&gt; had to leave for later, before passing the torch and moving onto “greener sides”.&lt;/p&gt;
&lt;p&gt;The main roadblock holding &lt;code&gt;GPU fastmem&lt;/code&gt; back was driver support, which is now a mostly solved issue. We &lt;em&gt;only&lt;/em&gt; need to start talks with the AMD, Intel, and the AMD Linux kernel module developers to ask for some increased limits.
Once those obstacles are out of the way, yuzu should, for example, be able to take partial advantage of Resizable BAR/Smart Access Memory, helping reduce PCIe bottlenecks, and should help improve particle rendering to make GPU accuracy a less critical performance setting.
No pressure, Blinkhawk!&lt;/p&gt;
&lt;p&gt;That’s all folks! This one turned out to be longer than expected. Thank you for staying until the end, and we hope to see you again next month!
Thank you NazD for the summary pic!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>New Feature Release - Installer for Linux</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-linux-installer/</link>
      <pubDate>Thu, 11 Aug 2022 23:00:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-linux-installer/</guid>
      <description>&lt;p&gt;Hey there, yuz-ers!
Guess what? We&amp;rsquo;ve got some news to share.
We&amp;rsquo;re excited to announce that the yuzu installer now supports Linux!
Let&amp;rsquo;s jump right in!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey there, yuz-ers!
Guess what? We&amp;rsquo;ve got some news to share.
We&amp;rsquo;re excited to announce that the yuzu installer now supports Linux!
Let&amp;rsquo;s jump right in!&lt;/p&gt;
&lt;h2 id=&#34;whats-happening&#34;&gt;What&amp;rsquo;s happening?&lt;/h2&gt;
&lt;p&gt;As we mentioned, the yuzu installer is available for Linux.
The installer will distribute &lt;code&gt;AppImages&lt;/code&gt; of Mainline and Early Access builds for our Linux users.&lt;/p&gt;
&lt;p&gt;You can now download the new installer from our &lt;a href=&#34;https://yuzu-mirror.github.io/downloads/&#34;&gt;Downloads page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(Note: Early Access builds require a subscription to our &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;. We appreciate any and all support!)&lt;/p&gt;
&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;
&lt;p&gt;When we originally released our installer, our user base was predominantly composed of Windows users.
Although a weak excuse, that&amp;rsquo;s why the installer&amp;rsquo;s Linux compatibility wasn&amp;rsquo;t a priority for us then.&lt;/p&gt;
&lt;p&gt;But, over the years we&amp;rsquo;ve seen consistent growth in the number of our Linux users
and realized that we had to ensure that they reaped the benefits of the installer too. We&amp;rsquo;re so happy our Linux community continues to expand and support us.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./install.png&#34; title=&#34; It&amp;#39;s never a bad idea to pick both builds&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-linux-installer/install_hu5dcf227fba91978a12ac3beb2e9de572_63010_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; It&amp;#39;s never a bad idea to pick both builds&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; It&amp;#39;s never a bad idea to pick both builds&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Thanks to the efforts of &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt;, who implemented Linux compatibility for the installer,
we&amp;rsquo;re now able to address this long overdue feature request.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./download.png&#34; title=&#34; Remember, we update daily!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-linux-installer/download_hub6fa30b43e7cb4a31c8ce470d3023c04_45543_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Remember, we update daily!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Remember, we update daily!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;fin&#34;&gt;Fin&lt;/h2&gt;
&lt;p&gt;As with any new update, we&amp;rsquo;ve tested the installer internally, but our efforts can&amp;rsquo;t compare to the community as a whole.
We could have easily missed an edge case or some weird bug or issue.
So, please reach out to us on our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord&lt;/a&gt; and report any bugs you find, so that we can quickly address them.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s all we have for now, until next time! Happy emulating!&lt;/p&gt;
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report June 2022</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/</link>
      <pubDate>Sun, 10 Jul 2022 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/</guid>
      <description>&lt;p&gt;Dear yuz-ers, we had fantastic progress during June! Driver bugs are being squashed, there are kernel and CPU improvements, UI and input changes, and more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Dear yuz-ers, we had fantastic progress during June! Driver bugs are being squashed, there are kernel and CPU improvements, UI and input changes, and more!&lt;/p&gt;
&lt;h2 id=&#34;psa-for-amd-radeon-users-and-nvidia-tags-along&#34;&gt;PSA for AMD Radeon users (and NVIDIA tags along)&lt;/h2&gt;
&lt;p&gt;Let’s begin with a driver bug we &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/#graphical-changes-driver-issues-and-the-nostalgia-bliss-that-is-the-good-old-64&#34;&gt;mentioned last month&lt;/a&gt;.
The Vulkan extension &lt;code&gt;VK_KHR_push_descriptor&lt;/code&gt; finally arrived for AMD hardware with driver version 22.5.2 for Windows, but it wasn’t stable. Radeon users would tell you that any game would crash in Vulkan after updating.
To mitigate this, &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; implemented an extension block for the specific Vulkan driver version AMD reports for 22.5.2 (and its equivalent Linux AMDVLK package), 2.0.226.&lt;/p&gt;
&lt;p&gt;Skip forward a month and the new 22.6.1 driver is released with &lt;code&gt;VK_KHR_push_descriptor&lt;/code&gt; fixed!
But, and there is a but, the new driver reports the same Vulkan version, 2.0.226, which forces our devs into a dilemma.
Since the extension block can only work with what the GPU driver reports, the Vulkan driver version in this case, we can either keep the block and ensure compatibility with older broken drivers, or remove the block and force users to update to the current (at the time of writing) 22.6.1 driver.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8518&#34; data-gh-pr=&#34;8518&#34;&gt;We opted to do the latter,&lt;/a&gt;
 as it keeps the codebase cleaner, and there is some evidence that suggests this may fix input lag issues found when using FreeSync displays.&lt;/p&gt;
&lt;p&gt;To be specific, AMD Radeon users with cards still supported by AMD (Polaris and newer) must update to the latest video driver, 22.6.1 or newer, in order to get proper Vulkan support.
Users with older cards out of support (GCN 1 to GCN 3) don’t have to worry, that hardware already can’t update to newer drivers (custom drivers can’t update Vulkan to add new extensions either), and yuzu will use the slower code path that works without requiring support for &lt;code&gt;VK_KHR_push_descriptor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Okay, that covers Radeon users. Let’s talk about the greener side.
With the release of the 516.XX NVIDIA driver series, there seems to be a performance boost for Turing and Ampere GPUs running under Vulkan (that’s 3000, 2000, and 1600 series cards).
Great, but it has a price.&lt;/p&gt;
&lt;p&gt;Maxwell and Pascal users (1000, 900, 750, and 745 series cards) will experience device loss crashes some minutes into running games in Vulkan.
A device loss basically means the driver pulling the plug for some reason.
Until we find the cause of this issue and either implement a fix or report it to NVIDIA, Maxwell and Pascal users should stick to 512.XX drivers.&lt;/p&gt;
&lt;p&gt;It’s always boring to start an article with a bunch of warnings, but this is one of the few tools we have available to reach as many affected users as possible.&lt;/p&gt;
&lt;h2 id=&#34;graphical-changes&#34;&gt;Graphical changes&lt;/h2&gt;
&lt;p&gt;We should be covering the release of the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8467&#34; data-gh-pr=&#34;8467&#34;&gt;first part of &lt;code&gt;Project Y.F.C.&lt;/code&gt;&lt;/a&gt;
 here, but due to schedule issues it was moved to the next report.
We&amp;rsquo;re sorry for the inconvenience and we&amp;rsquo;ll make sure to cover it in the next article.
The good news is that besides yuzu Fried Chicken, there have been other fun GPU improvements to report.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/behunin&#34;&gt;Behunin&lt;/a&gt; is back with a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8413&#34; data-gh-pr=&#34;8413&#34;&gt;very interesting optimization for our &lt;code&gt;gpu_thread&lt;/code&gt;,&lt;/a&gt;
 &lt;a href=&#34;https://github.com/rigtorp/MPMCQueue&#34;&gt;“a bounded multi-producer multi-consumer concurrent queue”&lt;/a&gt;.
This delivers a small 1 or 2 FPS performance boost, but more importantly, better recovery times after load related stuttering spikes.&lt;/p&gt;
&lt;p&gt;The beloved &lt;code&gt;The Elder Scrolls V: Skyrim&lt;/code&gt;, once considered the benchmark for open world gaming, until better games came out that is, can now boot!
&lt;a href=&#34;https://github.com/skyline-emu/skyline&#34;&gt;Skyline emulator&lt;/a&gt; developer &lt;a href=&#34;https://github.com/bylaws&#34;&gt;bylaws&lt;/a&gt; found the reason this classic refused to boot until now: &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8414&#34; data-gh-pr=&#34;8414&#34;&gt;the assumed behaviour of the first value&lt;/a&gt;
 of the GPU related &lt;a href=&#34;https://en.wikipedia.org/wiki/Semaphore_(programming)&#34;&gt;semaphore&lt;/a&gt; was wrong, it should perform a release instead of returning a constant zero.
Now, thanks to this great find by bylaws, the Dovahkiin can finally wake up in that cart.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./skyrim.png&#34; title=&#34; Yes, we&amp;#39;re finally awake (The Elder Scrolls V: Skyrim)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/skyrim_hu5352b2bd96b5b488ecde8fabe24a48e0_2840093_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Yes, we&amp;#39;re finally awake (The Elder Scrolls V: Skyrim)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Yes, we&amp;#39;re finally awake (The Elder Scrolls V: Skyrim)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;You can see we have some rendering issues to solve.&lt;/p&gt;
&lt;p&gt;One of our recent important rendering changes was the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/#graphical-changes-and-optimizations&#34;&gt;NVFlinger rewrite&lt;/a&gt;, who would have guessed that coding an implementation closer to the Switch would result in a smoother gaming experience?&lt;/p&gt;
&lt;p&gt;However, after its release, user reports mentioned timing and frame pacing issues in games like &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.
Match time would pass increasingly slower, around a second longer per minute on Ryzen systems, and exacerbated with Intel Alder Lake CPUs (12th gen).&lt;/p&gt;
&lt;p&gt;The solution &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; arrived to, contrary to what one would think, is to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8428&#34; data-gh-pr=&#34;8428&#34;&gt;implement a &lt;em&gt;less accurate&lt;/em&gt; behaviour.&lt;/a&gt;

yuzu is multithreaded, and very heavily so (even if it doesn’t show up in CPU % usage graphs), and a 100% accurate implementation of NVFlinger would not be sensitive enough for the emulator’s requirements.&lt;/p&gt;
&lt;p&gt;Weird CPU architectures aside, while the issue is solved, Intel Alder Lake users are recommended to run the latest BIOS and chipset driver versions. Check your motherboard/laptop support sites for these updates.&lt;/p&gt;
&lt;p&gt;While still on the topic of NVFlinger goodies, we present a highly requested feature!
Veteran users will remember that during its single threaded days, yuzu would allow control over game speed.
With the arrival of multicore, known at the time as &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-prometheus/&#34;&gt;Project Prometheus&lt;/a&gt;, this feature was only available in single core mode, to the chagrin of many people. How time flies!&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8508&#34; data-gh-pr=&#34;8508&#34;&gt;yuzu now has control over the frame time calculation,&lt;/a&gt;
 allowing a new method to unlimit the framerate regardless of the CPU emulation mode!
You can find the option in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; General &amp;gt; Limit Speed Percent&lt;/code&gt;.
Needless to say, if you want to make a game run faster, the game should allow it, and you must have the hardware performance to reach the new target speed.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./speed.png&#34; title=&#34; No visual change compared to previous versions, but completely new functionality&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/speed_hu8d70aea3dec927e0d3a183edff1ca53a_21188_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; No visual change compared to previous versions, but completely new functionality&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; No visual change compared to previous versions, but completely new functionality&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;debugger&#34;&gt;Debugger&lt;/h2&gt;
&lt;p&gt;Now, we&amp;rsquo;re going to dive into a bit of developer paradise here.&lt;/p&gt;
&lt;p&gt;A few months ago, yuzu developer &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; found himself trying to debug some game issues in yuzu involving &lt;a href=&#34;https://www.youtube.com/watch?v=-z99PKe7kOA&#34;&gt;a certain Welsh cat&lt;/a&gt;, among others.
Unfortunately, he soon ran into more trouble, as it was exceedingly difficult to view the internal states of games and watch or modify their behaviour without needing to extensively hack up yuzu.&lt;/p&gt;
&lt;p&gt;The source of the pain was not having any way to use a debugger with the emulated games.&lt;/p&gt;
&lt;p&gt;Originally, yuzu inherited a &lt;code&gt;GDB-compatible debugger interface&lt;/code&gt; from &lt;a href=&#34;https://citra-emu.org&#34;&gt;Citra&lt;/a&gt;, but it was lacking many important features.
And even that had to be deprecated during &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-prometheus/&#34;&gt;Project Prometheus&lt;/a&gt; (multicore emulation) because of its inherent shortcomings.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It only worked with single core mode&lt;/li&gt;
&lt;li&gt;It was &lt;em&gt;slow&lt;/em&gt; - it could sometimes take 30+ minutes to boot a game, particularly if you had any logging scripts&lt;/li&gt;
&lt;li&gt;It had some significant code quality issues&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After being removed during the Prometheus rewrite, yuzu did not have &lt;em&gt;&lt;strong&gt;any&lt;/strong&gt;&lt;/em&gt; debugger interface for a long time.&lt;/p&gt;
&lt;h3 id=&#34;wait-what-is-gdb-again&#34;&gt;Wait, what is GDB again?&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p style=&#34;color:cyan;&#34;&gt;The GNU Debugger (GDB) is a portable debugger that runs on many Unix-like systems and works for many programming languages, including Ada, C, C++, Objective-C, Free Pascal, Fortran, Go, and partially others.&lt;/p&gt;
&lt;p&gt;&amp;ndash; &lt;a href=&#34;https://en.wikipedia.org/wiki/GNU_Debugger&#34;&gt;&lt;em&gt;Wikipedia&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With GDB, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Step through code on an instruction-by-instruction basis&lt;/li&gt;
&lt;li&gt;Modify memory and registers on-the-fly&lt;/li&gt;
&lt;li&gt;Even completely replace sections of running code dynamically&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thus, you can see how extremely useful having a &lt;code&gt;GDB-compatible debugger interface&lt;/code&gt; is, for developers and mod creators alike, as you can now debug games, homebrew, and game mods without having to fiddle with the console every single time.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gdb1.png&#34; title=&#34; A 32-bit example, in this case Super Mario Galaxy&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/gdb1_hu89d5ef38f8c23b467d91e540df40ebba_417683_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; A 32-bit example, in this case Super Mario Galaxy&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; A 32-bit example, in this case Super Mario Galaxy&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h3 id=&#34;challenges&#34;&gt;Challenges&lt;/h3&gt;
&lt;p&gt;After the old debugger interface had been deprecated, a few members of the community forked it and continued to patch and maintain it.
A few notable ones are &lt;a href=&#34;https://github.com/Hedges/yuzu&#34;&gt;Hedges&lt;/a&gt; and &lt;a href=&#34;https://github.com/astrelsky/yuzu&#34;&gt;astrelsky&lt;/a&gt;.
It was thanks to these forks that byte[] was able to add &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/8000&#34;&gt;initial support for the Wii Hagi emulator&lt;/a&gt; in yuzu.&lt;/p&gt;
&lt;p&gt;However, he was soon faced with a much more annoying problem.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/8148&#34;&gt;Recent changes to yuzu&amp;rsquo;s CPU emulation&lt;/a&gt; were causing Super Mario Galaxy to &lt;a href=&#34;https://en.wikipedia.org/wiki/Deadlock&#34;&gt;deadlock&lt;/a&gt;.
This issue only happened in multicore mode, right after the end of the first video cutscene. He was out of ideas and needed a functional debugger to continue investigating the issue.&lt;/p&gt;
&lt;p&gt;Since the old debugger interface didn&amp;rsquo;t support multicore mode, byte[] had to start from scratch.
Motivated by his drive to figure out the issue, byte[] began working towards a new GDB-compatible debugger interface for yuzu and he had very specific goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It should work&lt;/li&gt;
&lt;li&gt;It should quickly get out of the way, so he could focus more on the root cause&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As the saying goes, &amp;ldquo;the first step is always the hardest&amp;rdquo;.
And for byte[], indeed it was; his biggest challenge: &amp;ldquo;Not knowing where to start&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;byte[] had the networking code written and working, but did not initially understand how to tie it with the threading code. After some healthy brainstorming sessions with other devs, he eventually figured out solutions for the challenges he was facing.&lt;/p&gt;
&lt;h3 id=&#34;changes&#34;&gt;Changes&lt;/h3&gt;
&lt;p&gt;Since he was starting from scratch, byte[] took the opportunity to make some sorely needed improvements to the interface.&lt;/p&gt;
&lt;p&gt;The old debugger interface was based on &amp;ldquo;stepping&amp;rdquo; the emulated CPU core. &lt;code&gt;Stepping&lt;/code&gt; here means executing one instruction of the emulated program at a time.&lt;/p&gt;
&lt;p&gt;This posed a number of problems because almost all games have multiple threads, and if you are stepping and a thread asks to wait, then another thread can start running in its place in the same CPU core, with all the state changed. This breaks continuity and can even crash the debugger.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8394&#34; data-gh-pr=&#34;8394&#34;&gt;The new debugger interface&lt;/a&gt;
 overcomes this by performing debug stepping on threads instead of stepping the emulated CPU core. In yuzu&amp;rsquo;s context, when a thread is stepped, the debugger will ask the thread to step, then the Dynarmic interface will detect this condition and tell Dynarmic to step it, and when the thread has been scheduled again, it will mark that the thread stepped and notify the debugger again.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gdb2.png&#34; title=&#34; Super Mario Odyssey, in gibberish form&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/gdb2_hu881e36d07d8d1637c29563b58620d48d_121505_938x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Super Mario Odyssey, in gibberish form&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Super Mario Odyssey, in gibberish form&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h3 id=&#34;what-are-the-benefits&#34;&gt;What are the benefits?&lt;/h3&gt;
&lt;p&gt;Apart from this, we have a few more notable quality-of-life (QoL) additions.
The debugger interface is now thread-stable, edge cases in stepping and pausing are now handled, and it has tons of useful debugging features, like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support for both 32-bit and 64-bit code&lt;/li&gt;
&lt;li&gt;Ability to modify any memory and registers at any time&lt;/li&gt;
&lt;li&gt;Readout of guest thread names&lt;/li&gt;
&lt;li&gt;Support for unlimited numbers of instruction breakpoints&lt;/li&gt;
&lt;li&gt;Support for up to 4 memory watchpoints&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;When talking about user interface and experience, you can always count on &lt;a href=&#34;https://github.com/Docteh&#34;&gt;Docteh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/#general-bugfixes-and-ui-changes&#34;&gt;In a repeat of what Morph fixed back in February&lt;/a&gt;, Docteh found out that after a crash, the yuzu main window may reopen in some kind of borderless fullscreen… &lt;em&gt;thing&lt;/em&gt;.
The culprit was &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8400&#34; data-gh-pr=&#34;8400&#34;&gt;the &lt;code&gt;UILayout\geometry&lt;/code&gt; value in yuzu’s qt-config.ini file.&lt;/a&gt;

A slap in the face and the issue should be gone for good. Ouch.&lt;/p&gt;
&lt;p&gt;With the intention of helping new users adapt to yuzu, Docteh &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8405&#34; data-gh-pr=&#34;8405&#34;&gt;renamed the status bar&lt;/a&gt;
 &lt;code&gt;DOCK&lt;/code&gt; text (which used to only change colour to reflect its status) to &lt;code&gt;DOCKED/HANDHELD&lt;/code&gt;.
Now the current emulated status is clearer, and users won’t confuse it when using dark or light themes.
Making things easier to understand must never be underestimated. Car makers should try it someday.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./dockbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/dockbug_hu80643cd51cad0f4c1bf57e7967bf0065_1865_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The devil is in the details&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./dockfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/dockfix_hu45af5b43c13e176b2b54bf3f99776ffd_2225_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The devil is in the details&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The devil is in the details&lt;/p&gt;


&lt;p&gt;Translation bugs always manage to slip by.
The first time yuzu is opened, it will display a big folder with a plus icon, asking the user to add the location of their game dumps.
The text of this message failed to re-translate if the user changed the interface language from &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; General &amp;gt; UI &amp;gt; Interface Language&lt;/code&gt;.
Solving this &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8449&#34; data-gh-pr=&#34;8449&#34;&gt;took a couple of changes in how the window handles re-translation.&lt;/a&gt;
&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./addbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/addbug_hud2a2efa4f5c891ba26d5b0a2d9321050_27408_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Good way to learn another language!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./addfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/addfix_hu4636cbb4c5d1ba72c28f38b2c3d0ac79_24909_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Good way to learn another language!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Good way to learn another language!&lt;/p&gt;


&lt;p&gt;Docteh is also sneaking &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8427&#34; data-gh-pr=&#34;8427&#34;&gt;some preliminary work for migrating to Qt6&lt;/a&gt;
 in the future.
The &lt;code&gt;QDesktopWidget&lt;/code&gt; class is &lt;a href=&#34;https://doc.qt.io/qt-5/qdesktopwidget.html&#34;&gt;now officially deprecated&lt;/a&gt;, so &lt;code&gt;QScreen&lt;/code&gt; takes its place.&lt;/p&gt;
&lt;p&gt;Additionally, some classes affecting the Web Applet were also deprecated, so &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8477&#34; data-gh-pr=&#34;8477&#34;&gt;some tweaks were in order to ensure future compatibility.&lt;/a&gt;

Hopefully Qt6 will mean the return of the Web Applet by default?&lt;/p&gt;
&lt;p&gt;Once we’re ready to migrate, this should provide better dynamic DPI scaling, allowing 4K display users to finally understand what is going on in the control settings window, for example.&lt;/p&gt;
&lt;h2 id=&#34;input-improvements&#34;&gt;Input improvements&lt;/h2&gt;
&lt;p&gt;Input is &lt;a href=&#34;https://github.com/german77&#34;&gt;german77’s&lt;/a&gt; speciality, a “diamond in the rough” that is being polished one PR at a time, for eternity….&lt;/p&gt;
&lt;p&gt;Continuing the work with &lt;code&gt;Ring Fit Adventure&lt;/code&gt;, german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8487&#34; data-gh-pr=&#34;8487&#34;&gt;stubbed the &lt;code&gt;PerformSystemButtonPressingIfInFocus&lt;/code&gt; service&lt;/a&gt;
, solving an SVC (Supervisor Call) crash which occurred when pressing ZL or ZR.&lt;/p&gt;
&lt;p&gt;With the official Switch update for the firmware version 13.2.0, Nintendo implemented a new &lt;code&gt;GetVibrationDeviceInfo&lt;/code&gt;.
While german77 worked on implementing those changes, one game in particular refused to work, &lt;code&gt;de Blob&lt;/code&gt;.
When this game sends a controller disconnect signal, it uses a &lt;code&gt;-1&lt;/code&gt; value, which is invalid as only unsigned values are accepted on the Switch.
Maybe it’s an emulation issue somewhere, or this game just loves to do this and the Switch just accepts invalid values. Regardless, our solution is to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8492&#34; data-gh-pr=&#34;8492&#34;&gt;replicate this peculiar behaviour.&lt;/a&gt;

The end result is &lt;code&gt;de Blob&lt;/code&gt; now gets in-game!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./deblob2.png&#34; title=&#34; de Blob 2&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/deblob2_hu50cd847777931ce576a197f60a8340df_1512288_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; de Blob 2&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; de Blob 2&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;kernel-and-cpu-changes&#34;&gt;Kernel and CPU changes&lt;/h2&gt;
&lt;p&gt;Possibly the most silent part of yuzu’s code, but also the most critical.
Kernel emulation is the engine block that keeps all parts working together in harmony, so you can expect that changing even a small part of it can have ripple effects anywhere.
One must tread carefully, heh, thread carefully.
Sorry, not sorry.&lt;/p&gt;
&lt;p&gt;Anyway, byte[] has been particularly busy this month in this delicate area, screwdriver in hand and not fearing anything.
Several changes include getting up to date with the latest reverse engineering findings, but there’s more.&lt;/p&gt;
&lt;p&gt;To help with pause and resume functionality, he has &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8457&#34; data-gh-pr=&#34;8457&#34;&gt;implemented KProcess suspension,&lt;/a&gt;
 “the kernel mechanism intended for this” as the pull request explains.
Clean pause and resume is always a blessing when you have to leave the PC to do something else.&lt;/p&gt;
&lt;p&gt;While working on &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8388&#34; data-gh-pr=&#34;8388&#34;&gt;simplifying guest pauses&lt;/a&gt;
 for single core and multicore emulation, byte[] discovered that if asynchronous GPU emulation and multicore CPU emulation were disabled (something we strongly recommend against, but it’s a valid option for CPU thread starved users, or FX users), a race condition would happen when initializing the CPU and GPU threads.
Several single threads still are multiple threads.
Hammer in hand, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8476&#34; data-gh-pr=&#34;8476&#34;&gt;implemented some barriers&lt;/a&gt;
 to fix this specific crash.&lt;/p&gt;
&lt;p&gt;Pause is the word of the week, and this time, it could make a specific game crash.
The old StallCPU behaviour would wait for all thread execution to stop.
It was slow, but safe.
&lt;code&gt;Fire Emblem: Three Houses&lt;/code&gt; would get into a GPU thread race condition with the new method.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8483&#34; data-gh-pr=&#34;8483&#34;&gt;Telling the kernel to wait for all threads to stop on pause&lt;/a&gt;
 avoids the crash.&lt;/p&gt;
&lt;p&gt;If, for some reason, yuzu would jump to an invalid address, emulation would hang and the log would get spammed with infinite amounts of &lt;code&gt;Unmapped Reads&lt;/code&gt;.
Fixing this required work on both Dynarmic and yuzu, resulting in &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8490&#34; data-gh-pr=&#34;8490&#34;&gt;stopping ReadCode callbacks to unmapped addresses.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/shadowninja108/exlaunch&#34;&gt;exlaunch&lt;/a&gt; is a framework for injecting C or C++ code into Switch applications and modules.
exlaunch can work on unpatched units, allowing developers to “go to town” with it.
yuzu didn’t support it, but &lt;a href=&#34;https://github.com/comex&#34;&gt;comex&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8504&#34; data-gh-pr=&#34;8504&#34;&gt;implemented the required functionality&lt;/a&gt;
 to have it up and running.
Thank you!&lt;/p&gt;
&lt;p&gt;Newcomer &lt;a href=&#34;https://github.com/DCNick3&#34;&gt;DCNick3&lt;/a&gt; joins the fray!
For their first brawl, they &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8473&#34; data-gh-pr=&#34;8473&#34;&gt;implemented the &lt;code&gt;ExitProcess&lt;/code&gt; SVC,&lt;/a&gt;
 which allows homebrew apps to gracefully exit on close.&lt;/p&gt;
&lt;h2 id=&#34;issues-with-third-party-antiviruses&#34;&gt;Issues with third-party antiviruses&lt;/h2&gt;
&lt;p&gt;Users have recently reported crashes starting with Mainline version 1075 and newer.
The cause seems to be third-party antiviruses, more specifically ESET/ NOD32.
A &lt;a href=&#34;https://help.eset.com/ees/8/en-US/idh_hips_main.html&#34;&gt;HIPS&lt;/a&gt; false positive is issued, sandboxing yuzu and blocking its access to the system page file.
Basically, if fastmem is unable to secure 4GB of page file to work (or 6GB if the extended memory option is enabled), the emulator will crash.&lt;/p&gt;
&lt;p&gt;Three options are available to solve this for now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The user can disable fastmem from yuzu’s settings, the setting is in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; General &amp;gt; Debug&lt;/code&gt;, from there, enable the option labeled as &lt;code&gt;Enable CPU Debugging&lt;/code&gt; at the bottom, and from the CPU tab, disable both &lt;code&gt;Enable Host MMU Emulation&lt;/code&gt; options near the bottom. This will produce a performance loss that can reach up to 30% on some games.&lt;/li&gt;
&lt;li&gt;Add a HIPS exception to both yuzu folders, &lt;code&gt;%appdata%\yuzu&lt;/code&gt; and &lt;code&gt;%localappdata%\yuzu&lt;/code&gt;. User reports show mixed results with this approach.&lt;/li&gt;
&lt;li&gt;Outright uninstall ESET and use Windows Defender instead.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./fastmem1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/fastmem1_hu5bb7061befbfda8019af1f450f35aebb_30173_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Here are image examples on how to reach the required options&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./fastmem2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2022/fastmem2_hu7ec8ad1b0bffc68567e26485de3e2907_34238_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Here are image examples on how to reach the required options&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Here are image examples on how to reach the required options&lt;/p&gt;


&lt;h2 id=&#34;future-changes&#34;&gt;Future changes&lt;/h2&gt;
&lt;p&gt;toastUnlimited has been working on &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8455&#34; data-gh-pr=&#34;8455&#34;&gt;making yuzu compatible to be compiled with&lt;/a&gt;
 &lt;a href=&#34;https://clang.llvm.org/&#34;&gt;LLVM Clang&lt;/a&gt; under &lt;a href=&#34;https://www.mingw-w64.org/&#34;&gt;MinGW-w64&lt;/a&gt;.
There are multiple reasons to consider this approach:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The default compiler we use for Windows builds, MSVC, is currently unstable on its latest 2022 version, forcing us to revert to version 2019, and making yuzu lose some compiler optimizations in the process, losing a bit of performance.&lt;/li&gt;
&lt;li&gt;GCC 12, the default Linux compiler yuzu uses, has optimization errors and problems with some warnings, making it unviable at the moment.&lt;/li&gt;
&lt;li&gt;Clang allows for aggressive optimizations that should provide good performance boosts. One example is &lt;a href=&#34;https://polly.llvm.org/&#34;&gt;Polly&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Along with GCC, LLVM makes it much easier to produce code optimized for the SSE4.2 instruction set. That’s right Core 2 Duo users, you’re next in line for the chopping block.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main reason we haven’t switched to this new system by default is &lt;code&gt;Project Gaia&lt;/code&gt;, or, well, the lack of Gaias currently.
Some of its changes are mandatory to get Clang builds up and running on Windows.
While this pull request is completed, its full implementation will be on hold until Gaia is out, which isn’t far away now.&lt;/p&gt;
&lt;p&gt;Get a kettle, boil some &lt;a href=&#34;https://www.youtube.com/watch?v=XE6DT9y7L-w&#34;&gt;wotah&lt;/a&gt;, and make yourself a cuppa tea, because &lt;code&gt;Project London&lt;/code&gt; has bloody began.&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you for staying until the end. See you next month!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report May 2022</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/</link>
      <pubDate>Sun, 12 Jun 2022 17:50:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/</guid>
      <description>&lt;p&gt;Greetings yuz-ers. This time around, we&amp;rsquo;re covering small and incremental improvements to yuzu. Rest assured, we also have some major rewrites and improvements in the works, and we&amp;rsquo;ll touch on those near the end. Roll the tape!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Greetings yuz-ers. This time around, we&amp;rsquo;re covering small and incremental improvements to yuzu. Rest assured, we also have some major rewrites and improvements in the works, and we&amp;rsquo;ll touch on those near the end. Roll the tape!&lt;/p&gt;
&lt;h2 id=&#34;end-of-support-for-eol-windows-versions&#34;&gt;End of support for EOL Windows versions&lt;/h2&gt;
&lt;p&gt;Let’s first address the elephant in the room, shall we?&lt;/p&gt;
&lt;p&gt;While working on dynarmic and kernel emulation, including improving the compatibility of 4 thread CPU systems, we made changes to &lt;a href=&#34;https://github.com/merryhime/dynarmic&#34;&gt;dynarmic&lt;/a&gt; and &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-fastmem/&#34;&gt;fastmem&lt;/a&gt; that broke support for Windows 10 revision 1803 and older, including Windows 7 and Windows 8/8.1.&lt;/p&gt;
&lt;p&gt;While fastmem was only ever designed to work with newer operating systems, the changes to dynarmic breaking support for older Windows versions was purely accidental.
That being said, it is yet another sign of the times, and that a pre-Windows 10 experience in yuzu will continue to become more subpar.
Due to our focus on improving accuracy, stability and performance, it doesn&amp;rsquo;t make much sense to divert time and resources onto maintaining old and out of support operating systems.
From Mainline version 991 and onward, only Windows 10 revision 1809 and newer, Windows 11, and Linux, will be the officially supported operating systems.&lt;/p&gt;
&lt;p&gt;This decision is reinforced by the lack of GPU driver support on EOL systems (which affects Vulkan support going forward), inconsistencies in the maximum path length (critical for file system emulation improvements), as well as worse memory handling on a kernel level, which is required to properly emulate the Switch and its subsystems.&lt;/p&gt;
&lt;p&gt;Not forcing the developers to divert their time into supporting dated platforms (which they no longer use), means that they can instead focus on improving the core emulation components.&lt;/p&gt;
&lt;p&gt;Finally, projects like &lt;a href=&#34;https://www.reddit.com/r/emulation/comments/utbpmm/dolphin_has_dropped_support_for_windows_7_and_8/&#34;&gt;Dolphin&lt;/a&gt; have already followed the same path, and for the same exact reasons.&lt;/p&gt;
&lt;p&gt;A 13 years old Windows is old enough to drive in some places.&lt;/p&gt;
&lt;p&gt;For those that still prefer to not upgrade, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-mainline/releases/download/mainline-0-990/yuzu-windows-msvc-20220419-a5e7c5330.zip&#34;&gt;Mainline 990&lt;/a&gt; and older will work just fine.&lt;/p&gt;
&lt;h2 id=&#34;vulkan-by-default&#34;&gt;Vulkan by default&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/#vulkan-is-the-future&#34;&gt;As previously discussed&lt;/a&gt;, we have to circumvent issues like OEM-locked drivers (so common on Intel hardware, &lt;a href=&#34;https://www.intel.com/content/www/us/en/support/articles/000056629/graphics.html&#34;&gt;it has its own official procedure&lt;/a&gt;) and broken third party software limitations (outdated screen recorders are a common cause of broken rendering) in order to provide a smooth experience with Vulkan as the default API.&lt;/p&gt;
&lt;p&gt;The two main causes for Vulkan related crashes when trying to boot a game or opening yuzu’s configuration are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Broken Vulkan layers on HUD and screen recording software could cause issues when yuzu and drivers add support for new Vulkan extensions. Keeping software up to date is the only way to prevent this issue from happening.&lt;/li&gt;
&lt;li&gt;Outdated GPU drivers that lack the required features to run Vulkan. This is usually caused by relying on Windows Update to provide the drivers instead of manually installing the latest version, or Intel laptop vendors providing locked custom (meaning nerfed) drivers that are never updated. If possible, always install the latest GPU driver manually, don&amp;rsquo;t rely on Windows Update.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thankfully, we have a new system that can workaround those issues that are outside of our control.
yuzu will now perform a Vulkan check at boot.&lt;/p&gt;
&lt;p&gt;If the check passes, yay!, you can use Vulkan or OpenGL and select which API to use, or in Vulkan’s case, which device to run yuzu with, as always from the Graphics section in configuration.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ok.png&#34; title=&#34; Check passes, Vulkan works!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/ok_hu060632948ee766e2c6b683b8f6abc1f0_27406_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Check passes, Vulkan works!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Check passes, Vulkan works!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;If this check fails, a warning will be displayed the next time you launch yuzu. If this happens, you will only be able to use OpenGL as the graphics API. You will still have the option to pick the shader backend (GLSL, GLASM, SPIR-V) that best suits your needs.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./error.png&#34; title=&#34; Oh oh..&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/error_hu52c71340793d0651a178fa8b24ae732a_11156_502x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Oh oh..&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Oh oh..&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;For those that happen to land in this situation, a button labeled &amp;ldquo;Check for Working Vulkan&amp;rdquo; at the bottom of the Graphics settings window will show up, allowing to retest Vulkan support.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./button.png&#34; title=&#34; Once you manage to solve the issue, click on the button at the bottom!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/button_hu078d2922eb11e223c8543036866385ed_30252_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Once you manage to solve the issue, click on the button at the bottom!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Once you manage to solve the issue, click on the button at the bottom!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt;, gone is OpenGL as the default graphics API.
Out with the old, in with the new. &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8393&#34; data-gh-pr=&#34;8393&#34;&gt;Long live King Vulkan.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Going forward, Vulkan will be the top priority for our developers, but they will still continue to support OpenGL.
OpenGL users are recommended to use the GLSL shader backend, as GLASM and SPIR-V will receive limited support from now on.&lt;/p&gt;
&lt;h2 id=&#34;graphical-changes-driver-issues-and-the-nostalgia-bliss-that-is-the-good-old-64&#34;&gt;Graphical changes, driver issues, and the nostalgia bliss that is the good old 64&lt;/h2&gt;
&lt;p&gt;This past month, &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; continued the wave of improvements for &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt;.
This time, he noticed a bug in the DMAcopy (&lt;a href=&#34;https://en.wikipedia.org/wiki/Direct_memory_access&#34;&gt;direct memory access&lt;/a&gt;) of the Nintendo Switch’s GPU.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;DMACopy&lt;/code&gt; is a mechanism that many games use to send texture data to the GPU, it handles the format conversion from &amp;ldquo;pitch&amp;rdquo; (pixels on a line by line basis) to &amp;ldquo;tiled&amp;rdquo; (gridded) images.
This process works by writing the pitch image data into GPU memory accessible by the DMA engine. Next, a DMAcopy is requested through the DMA engine driver, converting the image data into a separate buffer accessible by the GPU. This buffer will then be used as the texture on the final draw.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8313&#34; data-gh-pr=&#34;8313&#34;&gt;After fixing &lt;code&gt;bytes_per_pixel&lt;/code&gt;,&lt;/a&gt;
 &lt;code&gt;Super Mario Galaxy&lt;/code&gt; now has proper lens flare.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/dmabug_hu66a4afef5972719d1ed7eab961798f6c_1554411_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;RTX On? (Super Mario Galaxy)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/dmafix_hu0da96a8e5ab8b25bfe6509f334eae667_1544381_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;RTX On? (Super Mario Galaxy)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;RTX On? (Super Mario Galaxy)&lt;/p&gt;


&lt;p&gt;byte[] also improved the way OpenGL interprets face flips depth, &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/#saving-princess-peach-yet-again&#34;&gt;replacing the previously reported fix&lt;/a&gt;.
The face flips used by Super Mario 3D All-Stars and the Nintendo 64 emulation are an uncommon configuration on the GPU.
The previous implementation had bad rendering in OpenGL, a complete black screen.&lt;/p&gt;
&lt;p&gt;While this wasn&amp;rsquo;t an issue while using Vulkan (performance aside), now &lt;code&gt;Super Mario 64&lt;/code&gt; and &lt;code&gt;Super Mario Galaxy&lt;/code&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8314&#34; data-gh-pr=&#34;8314&#34;&gt;are playable in both graphics APIs.&lt;/a&gt;

Fermi GPU users rejoyce.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sm64.png&#34; title=&#34; It&amp;#39;s-a Mario, now running fast in OpenGL! (Super Mario 64)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/sm64_hu64a80edddeca83606cb90a9eb338897b_323109_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; It&amp;#39;s-a Mario, now running fast in OpenGL! (Super Mario 64)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; It&amp;#39;s-a Mario, now running fast in OpenGL! (Super Mario 64)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;One of the important parts of yuzu&amp;rsquo;s graphical emulation is the need to translate small sets of GPU instructions, called &lt;code&gt;macros&lt;/code&gt;.
yuzu uses a Just-in-Time (JIT) compiler to execute these macros in a performant way. It provides a performance boost of about 10% over interpretation in most cases.&lt;/p&gt;
&lt;p&gt;byte[] found that due to emulation inaccuracies, sometimes a macro could try to access a parameter that was too far outside the bounds of what it was supposed to be accessing. This could crash the emulator without a single trace as to why in some cases.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8319&#34; data-gh-pr=&#34;8319&#34;&gt;One less reason for annoying crashes.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Additionally, byte[] added the option to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8320&#34; data-gh-pr=&#34;8320&#34;&gt;dump all macros&lt;/a&gt;
 used by a game for debugging purposes.&lt;/p&gt;
&lt;p&gt;But why are macros important enough to merit their own dump mechanism?&lt;/p&gt;
&lt;p&gt;Turns out, the &lt;code&gt;Nintendo 64&lt;/code&gt; emulator (&lt;em&gt;totally not outside Nintendo&amp;rsquo;s Terms of Service&lt;/em&gt;), included with the &lt;code&gt;Nintendo Switch Online&lt;/code&gt; (NSO) subscription, reassigns the same macros multiple times, each time with different code. yuzu incorrectly appended the new code to the end of the macro in this case, instead of replacing the existing code.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8328&#34; data-gh-pr=&#34;8328&#34;&gt;Properly clearing that code&lt;/a&gt;
 on upload address assignments allows the NSO Nintendo 64 emulator to be playable.
Time to re-enjoy those classics!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./n64.png&#34; title=&#34; We need more games with the atmosphere of The Legend of Zelda: Majora&amp;#39;s Mask&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/n64_hu3e5d7017f416b7c90161ad71f2fb778d_1921077_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; We need more games with the atmosphere of The Legend of Zelda: Majora&amp;#39;s Mask&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; We need more games with the atmosphere of The Legend of Zelda: Majora&amp;#39;s Mask&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Future graphical fixes for the NSO Nintendo 64 emulator will be part of &lt;code&gt;Project Y.F.C.&lt;/code&gt;.
AMD and Intel users are free to run Vulkan without concerns, but NVIDIA users are recommended to use OpenGL.&lt;/p&gt;
&lt;p&gt;Polaris AMD Radeon users (RX 400 and RX 500 series) reported that drivers 22.3.2 and newer caused crashes on multiple games, most notably &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; and &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.amd.com/en/support/kb/release-notes/rn-rad-win-vulkan&#34;&gt;Driver patch notes mentioned&lt;/a&gt; implementing the &lt;code&gt;VK_KHR_workgroup_memory_explicit_layout&lt;/code&gt; Vulkan extension.
The quick conclusion would be that AMD released a broken extension on the new drivers, which wouldn&amp;rsquo;t be the first time, but that wasn’t the case.
The issue only affects Polaris GPUs, and the extension is available to newer architectures too, like Vega or RDNA2 (we don’t talk about &lt;del&gt;Bruno&lt;/del&gt; RDNA1).&lt;/p&gt;
&lt;p&gt;After a few debugging sessions we found out that yuzu’s implementation of VK_KHR_workgroup_memory_explicit_layout assumes that all compatible GPUs support 16-bit integer operations.
While this was the case for all compatible GPUs previous to AMDs implementation of the extension, the Polaris architecture is notorious for its lack of the more recently popular 16-bit precision support (shows its age, you could say, Polaris is 6 years old by now), and as expected, forcing a GPU to do something it doesn’t support will result in a crash, hurray.&lt;/p&gt;
&lt;p&gt;toastUnlimited &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8369&#34; data-gh-pr=&#34;8369&#34;&gt;disabled the extension&lt;/a&gt;
 on Polaris GPUs while we wait for our dedicated GPU devs to have the time to implement a proper fix.
We plan to allow the extension to work with old-school 32-bit precision in the future.&lt;/p&gt;
&lt;p&gt;While still on the subject of AMD Windows Vulkan drivers, we have to talk about another extension issue.
Since driver version 22.5.2, support was added for &lt;code&gt;VK_KHR_push_descriptor&lt;/code&gt;, an old extension that has been working in every other driver for the past 5 years, be it Intel, NVIDIA or Mesa.&lt;/p&gt;
&lt;p&gt;While we don&amp;rsquo;t yet know the root cause of the issue, only AMD&amp;rsquo;s Windows drivers crash when calling VK_KHR_push_descriptor.
As this extension is critical to the entire rendering process, any AMD GPU would crash on any game.&lt;/p&gt;
&lt;p&gt;It seems that this time around, AMD may have simply released a broken implementation of the extension.
This extension previously worked with yuzu&amp;rsquo;s Vulkan implementation without issue.
If that’s the case, it’s AMD’s turn to solve the issue.
In the meantime, toastUnlimited &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8379&#34; data-gh-pr=&#34;8379&#34;&gt;blocked the extension&lt;/a&gt;
 on the affected AMD Vulkan driver versions.&lt;/p&gt;
&lt;p&gt;Elsewhere on the GPU emulation front, &lt;a href=&#34;https://github.com/asLody&#34;&gt;asLody&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8311&#34; data-gh-pr=&#34;8311&#34;&gt;implemented stencil fixes when two faces are disabled.&lt;/a&gt;

This should improve rendering for some games that natively use OpenGL.&lt;/p&gt;
&lt;h2 id=&#34;hle-improvements&#34;&gt;HLE Improvements&lt;/h2&gt;
&lt;p&gt;Moving onto the subject of HLE emulation, a &lt;em&gt;very dear&lt;/em&gt; section for &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt;.
The dev team has been working hard at improving the accuracy and performance of yuzu&amp;rsquo;s kernel emulation.&lt;/p&gt;
&lt;p&gt;This time around, a big change was made with how games and the emulated OS can &amp;ldquo;lock resources&amp;rdquo;.
This improves emulation performance with literally every game, and to a varying degree, on any CPU.
Let&amp;rsquo;s dive in.&lt;/p&gt;
&lt;p&gt;In software engineering, a &lt;a href=&#34;https://en.wikipedia.org/wiki/Spinlock&#34;&gt;spinlock&lt;/a&gt; is a lock that causes a thread trying to acquire it to simply wait in a loop
(&amp;ldquo;spin&amp;rdquo;) while repeatedly checking whether the lock is available.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./spinlock.png&#34; title=&#34; Example of a spinlock, simple but gets the job done&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/spinlock_hu08da9b70050cc353010c81ce0708e7fd_9334_895x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Example of a spinlock, simple but gets the job done&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Example of a spinlock, simple but gets the job done&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;There exists another synchronization primitive with a similar function, &lt;a href=&#34;https://en.wikipedia.org/wiki/Mutual_exclusion&#34;&gt;the mutex&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The word &amp;ldquo;mutex&amp;rdquo; stands for an object providing &lt;code&gt;MUTual EXclusion&lt;/code&gt; between threads.
A mutex ensures that only one thread has access to a critical section or data by using operations like a lock and unlock.
A critical section is a shared resource that many threads want to access.
While there is no issue if multiple threads want to read the same critical section, no new thread can modify the section until the previous thread finishes its own writing.
Under this scenario, the first thread locks the section, and will remain that way until the lock is released.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mutex.png&#34; title=&#34; Example of a mutex&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/mutex_hub85333b2121adf9723216f8d2bad2b7c_8845_895x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Example of a mutex&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Example of a mutex&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;In theory, when a thread tries to lock a mutex and it does not succeed (for example because the mutex is already locked), it will be paused.
The operating system will then take the opportunity to schedule an available and ready thread to run in its place.
The paused thread will continue to sleep until it is able to acquire the mutex.
This may happen once the current thread holding the mutex lock releases it.&lt;/p&gt;
&lt;p&gt;Consequently, threads &amp;ldquo;spinning&amp;rdquo; to acquire the lock will waste (perhaps precious) system resources.
While the Switch&amp;rsquo;s own operating system uses spinlocks, this drain on resources can be problematic when emulating on lower-end hardware.
Using the host operating system (Windows or Linux) mutex allows yuzu to continue emulation tasks on other available threads.&lt;/p&gt;
&lt;p&gt;Helpfully, most modern operating systems use hybrid mutexes and hybrid spinlocks.
The spinlock approach would work fine on systems with threads to spare.
However, for emulation, we need many threads (for UI, audio, GPU emulation, logging, etc.), so this approach is not quite ideal, especially on CPUs with low core/thread counts.&lt;/p&gt;
&lt;p&gt;Thus &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8172&#34; data-gh-pr=&#34;8172&#34;&gt;by moving from spinlocks to mutexes,&lt;/a&gt;
 we were able to improve how yuzu runs on systems with low core counts.
Our testing results showed that yuzu is now much more usable on 4 thread systems, solving stability issues on 4 cores/4 threads CPUs (most notably in &lt;code&gt;Pokémon Sword/Shield&lt;/code&gt;), and substantially improving performance on (previously completely non-viable) 2 cores/4 threads CPUs.&lt;/p&gt;
&lt;p&gt;The best news for the low-end gang!&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;Pivoting towards user interface improvements, &lt;a href=&#34;https://github.com/Docteh&#34;&gt;Docteh&lt;/a&gt;, who is becoming a regular here, has been very helpful with some translation holes we had for a while.&lt;/p&gt;
&lt;p&gt;For example, the Custom RTC setting had several issues if the Windows system locale was set in certain languages, making it either display incorrectly (for example lacking the AM/PM indicator), or completely unusable.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8291&#34; data-gh-pr=&#34;8291&#34;&gt;Fixing the display format&lt;/a&gt;
 allows Custom RTC to show up correctly in any language now.&lt;/p&gt;
&lt;p&gt;The Network tab in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; System&lt;/code&gt; could remain untranslated after changing languages. This was a simple case of forgetting to include the tab in the translations, so Docteh &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8293&#34; data-gh-pr=&#34;8293&#34;&gt;fixed the oopsie&lt;/a&gt;
 and the lone Network tab now displays as it should.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/netbug_hu61c98d18f810b65ecdf8680a43f1bccb_7099_550x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Netto-kun. Now I want a Battle Network Legacy Collection, c&amp;#39;mon CAPCOM!&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/netfix_hu228f2822ed3d7adfcacc05441424ecc6_5901_550x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Netto-kun. Now I want a Battle Network Legacy Collection, c&amp;#39;mon CAPCOM!&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Netto-kun. Now I want a Battle Network Legacy Collection, c&amp;#39;mon CAPCOM!&lt;/p&gt;


&lt;p&gt;For a while now, the layout of yuzu&amp;rsquo;s About dialog, particularly on Linux, has had some issues.
While we&amp;rsquo;ve attempted to fix it in the past, these attempts would have an adverse effect on the Windows builds, and vice versa.
Via qtcreator, Docteh &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8339&#34; data-gh-pr=&#34;8339&#34;&gt;fixed the About dialog UI file,&lt;/a&gt;
 and removed an old warning caused by the original .png image.
Thanks Docteh for taking the time to properly address the issue once and for all!&lt;/p&gt;
&lt;h2 id=&#34;controller-changes&#34;&gt;Controller changes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; is the undisputed king of this section again. He continues the endless quest of providing the best user input experience possible.&lt;/p&gt;
&lt;p&gt;german77 noticed that motion continued reporting data even when disabled, causing &lt;code&gt;Pokémon Let’s Go, Eevee/Pikachu!&lt;/code&gt; to spam &lt;code&gt;StopSixAxisSensor&lt;/code&gt; errors in the logs.
While working on this, he also noticed a missing parameter, &lt;code&gt;delta_time&lt;/code&gt;.
Its proper implementation allows yuzu to have an &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8308&#34; data-gh-pr=&#34;8308&#34;&gt;accurate motion refresh rate,&lt;/a&gt;
 equal to the Switch.&lt;/p&gt;
&lt;p&gt;In an all-in-one pull request, german77 made &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8368&#34; data-gh-pr=&#34;8368&#34;&gt;several input changes,&lt;/a&gt;
 including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add proper error handling for several &lt;a href=&#34;https://en.wikipedia.org/wiki/Human_interface_device&#34;&gt;HID&lt;/a&gt; functions&lt;/li&gt;
&lt;li&gt;Improve previous implementations to match more closely to native hardware.&lt;/li&gt;
&lt;li&gt;Implement functions needed by &lt;code&gt;Nintendo Switch Sports&lt;/code&gt;, &lt;code&gt;EnableSixAxisSensorUnalteredPassthrough&lt;/code&gt;, &lt;code&gt;IsSixAxisSensorUnalteredPassthroughEnabled&lt;/code&gt;, &lt;code&gt;LoadSixAxisSensorCalibrationParameter&lt;/code&gt;, &lt;code&gt;GetSixAxisSensorIcInformation&lt;/code&gt;, &lt;code&gt;ResetIsSixAxisSensorDeviceNewlyAssigned&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While we&amp;rsquo;ve made some great progress here, &lt;code&gt;Nintendo Switch Sports&lt;/code&gt; will be unplayable on yuzu until we rework our audio and make some much needed GPU fixes too.
While audio and perfect rendering may not seem critical to playability, games often are quite unstable if these are not accurate.
Rest assured, we&amp;rsquo;re working on these and will have more to share soon!&lt;/p&gt;
&lt;p&gt;Changing game genres, &lt;code&gt;Arcaea&lt;/code&gt; was reported as having issues with touch-release emulation.
Turns out this game checks for the reported touch position on release, and some input drivers lose their position data after release.
Additionally, multi-touch was found to not work properly on touch screens.&lt;/p&gt;
&lt;p&gt;After performing basically &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8372&#34; data-gh-pr=&#34;8372&#34;&gt;a mini-rewrite of the touch emulation,&lt;/a&gt;
 german77 fixed both issues.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./arcaea.png&#34; title=&#34; Osu! but better? (Arcaea)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/arcaea_hu4cd4b38ff79f8f13cad9c27532d9a8a3_644868_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Osu! but better? (Arcaea)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Osu! but better? (Arcaea)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;One of the hurdles when working with a near endless amount of different controllers is the different quality of implementations they have.
Since yuzu used to wait for the controller to respond after sending a vibration signal, slow controllers could stall the whole emulator, causing severe stuttering.
To counter this, german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8374&#34; data-gh-pr=&#34;8374&#34;&gt;moved vibration to a queue in a separate thread,&lt;/a&gt;
 allowing yuzu to move along with emulation, letting your controller make its best effort.
This is just another example of how emulation can often be improved by moving blocking operations to asynchronous background threads to improve overall usability.
In fact, yuzu uses dozens of threads for emulation, which is all the more reason why eliminating spinlocks really helps things to run as smooth as butter!&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;While &lt;code&gt;Project Y.F.C.&lt;/code&gt; was slightly stalled due to some NVFlinger regressions, these have since been resolved and will be covered in the next progress report!
Under &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;blinkhawk&lt;/a&gt;&amp;rsquo;s lead, &lt;code&gt;Project Y.F.C.&lt;/code&gt; is making great progress and is on track to release soon.
As a reminder, &lt;code&gt;Project Y.F.C.&lt;/code&gt; is an overhaul of various parts of our GPU emulation, fixing many inaccuracies and improving both performance and compatibility.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; is up to something. (Hint: if you check the previous progress reports, you&amp;rsquo;ll notice a common theme with their pull requests)&lt;/p&gt;
&lt;p&gt;And toastUnlimited is working on getting MinGW Clang builds for Windows, which could potentially be faster than the MSVC builds we’re using now. This work is tied with the release of &lt;code&gt;Project Gaia&lt;/code&gt;, so it will take a bit.&lt;/p&gt;
&lt;h2 id=&#34;bonus-track&#34;&gt;Bonus track&lt;/h2&gt;
&lt;p&gt;As an extra bonus, gidoly, one of our team members recently got his hands on a Ryzen 5800X3D, giving us the chance to compare it to a regular 5800X fixed at 4.5GHz so only the extra cache should be relevant.&lt;/p&gt;
&lt;p&gt;Here are the results!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./chart.png&#34; title=&#34; Still the best upgrade path for a Zen1 user&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2022/chart_hu8907aa0ad023796d4a11d95038aaec00_34457_1007x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Still the best upgrade path for a Zen1 user&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Still the best upgrade path for a Zen1 user&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While the 5800X is manually forced to a 4.5GHz frequency, the 5800X3D naturally tops out at a 4.45GHz clock speed, the results are respectable, but nothing amazing.
Pokémon Brilliant Diamond certainly loves the extra cache, while Metroid Dread is punished by its extra latency.&lt;/p&gt;
&lt;p&gt;That’s all folks! As always, thank you for your support, and we hope that you enjoyed this summary of our recent progress.
See you next month! Until then, keep on emulating, and let us know what we can do to make yuzu the best possible emulation experience!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report April 2022</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/</link>
      <pubDate>Wed, 11 May 2022 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/</guid>
      <description>&lt;p&gt;Hello yuz-ers, the month of April has been amazing! We&amp;rsquo;ll discuss CPU and Kernel performance improvements, several GPU emulation changes, UI tweaks, and more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello yuz-ers, the month of April has been amazing! We&amp;rsquo;ll discuss CPU and Kernel performance improvements, several GPU emulation changes, UI tweaks, and more!&lt;/p&gt;
&lt;h2 id=&#34;saving-princess-peach-yet-again&#34;&gt;Saving Princess Peach yet again&lt;/h2&gt;
&lt;p&gt;Continuing his work to better support the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/#the-vulkan-emulator&#34;&gt;official&lt;/a&gt; GameCube/Wii and Nintendo 64 emulators (codenamed &lt;code&gt;Hagi&lt;/code&gt; and &lt;code&gt;Hovercraft&lt;/code&gt; respectively), &lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt; has introduced several new PRs to further improve the compatibility of the titles included within &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;byte[] first implemented support for GLSL in &lt;code&gt;Super Mario Sunshine&lt;/code&gt;, as not everyone can run Vulkan.
This is achieved by adding &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8133&#34; data-gh-pr=&#34;8133&#34;&gt;support for indirect addressing&lt;/a&gt;
 in OpenGL.&lt;/p&gt;
&lt;p&gt;This change doesn’t include support for GLASM at the moment, since our developers aren&amp;rsquo;t too fond of having to deal with NVIDIA assembly shader code.
Imagine being asked to fix an issue in a car engine, and the only given tools for the job are a rock and a stick.&lt;/p&gt;
&lt;p&gt;However, that was only half the battle. Proper OpenGL support for &lt;code&gt;Super Mario Sunshine&lt;/code&gt; and &lt;code&gt;Super Mario Galaxy&lt;/code&gt; required solving an old limitation we had with the aging API: broken Z scale inversion.&lt;/p&gt;
&lt;p&gt;Most Switch games use either OpenGL, the popular free graphics API, or NVN, the proprietary NVIDIA API exclusive to the console.
Arguably, NVN is much closer to OpenGL than Vulkan in how it operates.&lt;/p&gt;
&lt;p&gt;The Tegra X1 GPU on the Switch is flexible enough to allow the coordinate system to be changed at the discretion of the game developer. While most games will behave closer to what OpenGL expects, with the Z-axis facing away from the camera, &lt;code&gt;Hagi&lt;/code&gt; and &lt;code&gt;Hovercraft&lt;/code&gt; emulated games (which render using Vulkan and is exclusive to a tiny handful of titles on the Switch) have the coordinates inverted and the Z-axis facing into the camera, the way Vulkan games would expect to natively render.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./coords.png&#34; title=&#34; byte[]&amp;#39;s Z-axis diagram&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/coords_hu011e3b6002ce5d6c4d9c9cfa80e7bb0c_488229_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; byte[]&amp;#39;s Z-axis diagram&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; byte[]&amp;#39;s Z-axis diagram&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This was not an issue if you wanted to play &lt;code&gt;Super Mario Galaxy&lt;/code&gt; or &lt;code&gt;Super Mario Sunshine&lt;/code&gt; in yuzu with yuzu&amp;rsquo;s Vulkan backend, as the behaviour matched with what the game expected.
But if you tried to play using OpenGL instead, yuzu would not correctly interpret that the faces were flipped due to the Z scale inversion, and thus rendered only the back faces of objects.&lt;/p&gt;
&lt;p&gt;The solution is very simple, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8149&#34; data-gh-pr=&#34;8149&#34;&gt;flip the front faces&lt;/a&gt;
 when the Z-axis is inverted.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/zbug_hu24bebf020b8a793382dd1c5eee278d8e_579994_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Welcome to the Shadow Realm Resort (Super Mario Sunshine)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/zfix_hu1bc895e5123ba9e90b2491b15f0d19a6_826174_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Welcome to the Shadow Realm Resort (Super Mario Sunshine)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Welcome to the Shadow Realm Resort (Super Mario Sunshine)&lt;/p&gt;


&lt;p&gt;Next in line, you may have noticed that &lt;code&gt;Super Mario Sunshine&lt;/code&gt; rendered with a black bar at the bottom.
This is because the Wii and GC games natively use an aspect ratio different to the usual 16:9 we’re used to.
Instead, the games render at a 5:3 aspect ratio.
&lt;code&gt;Super Mario Galaxy&lt;/code&gt; informs the system to explicitly crop the screen to its native resolution of 1920x1012, but &lt;code&gt;Super Mario Sunshine&lt;/code&gt; does not, so yuzu previously did not attempt to crop the game, resulting in a conspicuous black bar at the bottom of the render.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./crop.png&#34; title=&#34; Diagram of the cropping process&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/crop_huf26066373aa26fcf1f1a5877845077e7_892449_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Diagram of the cropping process&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Diagram of the cropping process&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While the game proportions in &lt;code&gt;Super Mario Sunshine&lt;/code&gt;, arguably, appear more correct with the black bar, that’s not how Nintendo intended the game to be played. For accuracy’s sake, byte[] interprets the game&amp;rsquo;s implicit crop request, which stretches the image to match the native 1920x1080 resolution of the Switch, both &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8150&#34; data-gh-pr=&#34;8150&#34;&gt;for Vulkan&lt;/a&gt;
 and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8152&#34; data-gh-pr=&#34;8152&#34;&gt;for OpenGL&lt;/a&gt;
.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/cropbug_hudc081bf1a5cf3a4b44a38a8af8a2ae92_866650_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Do not adjust your set (Super Mario Sunshine)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/cropfix_huadedc02863de5ac48affc3bd387b6b9d_919840_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Do not adjust your set (Super Mario Sunshine)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Do not adjust your set (Super Mario Sunshine)&lt;/p&gt;


&lt;p&gt;In the previous report, we mentioned how S8D24 &amp;lt; &amp;gt; ABGR8 texture conversions allow &lt;code&gt;Super Mario Galaxy&lt;/code&gt; star bits to behave correctly.
Well, it’s &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8161&#34; data-gh-pr=&#34;8161&#34;&gt;OpenGL’s turn&lt;/a&gt;
 to join the fun.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./s8d24.png&#34; title=&#34; S8D24 to ABGR8 texture conversion diagram&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/s8d24_hu2cf31ebff3d166158da98fdd2b0d6137_352507_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; S8D24 to ABGR8 texture conversion diagram&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; S8D24 to ABGR8 texture conversion diagram&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;We mentioned last month how &lt;code&gt;Super Mario 64&lt;/code&gt; had special requirements to start running on yuzu.
Most games compile their code &lt;code&gt;ahead-of-time&lt;/code&gt; (&lt;a href=&#34;https://www.youtube.com/watch?v=DeYTBDQnQZw&#34;&gt;AOT&lt;/a&gt;), that is, before being shipped to you. The Operating System’s job is to execute that precompiled binary code, and then you&amp;rsquo;re playing games.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Super Mario 64&lt;/code&gt;, on the other hand, runs &lt;code&gt;just-in-time&lt;/code&gt; (JIT), to make it easier to develop the &lt;code&gt;Hovercraft&lt;/code&gt; emulator, and to allow reusing the same &lt;code&gt;Hovercraft&lt;/code&gt; binary for different games.
The &lt;code&gt;Hovercraft&lt;/code&gt; emulator loads a native Nintendo 64 ROM of Super Mario 64, and then its JIT compiler takes the ROM and translates the original &lt;a href=&#34;https://en.wikipedia.org/wiki/MIPS_architecture&#34;&gt;MIPS&lt;/a&gt; (the architecture of the Nintendo 64’s CPU) instructions into &lt;a href=&#34;https://en.wikipedia.org/wiki/AArch64&#34;&gt;AArch64&lt;/a&gt; (the Switch’s CPU architecture) instructions on the fly.
Only then will the operating system execute the game code.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./jitsrv.png&#34; title=&#34; Ahead-of-time versus Just-in-time compilation diagram&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/jitsrv_hu121ead1ae3493f3cb1a4ed8f8f9ae1fb_446756_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Ahead-of-time versus Just-in-time compilation diagram&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Ahead-of-time versus Just-in-time compilation diagram&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This is similar to how yuzu translates AArch64 instructions into AMD64 instructions with the assistance of &lt;a href=&#34;https://github.com/merryhime/dynarmic&#34;&gt;Dynarmic&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The JIT service, which is required to use JIT compilation on retail titles, is a functionality that yuzu didn’t have implemented, simply because no other game had ever needed it.
Additionally, there were some obstacles to implementing it in a direct way, since it requires calling custom code supplied by the game, something which was never needed by any previous service implementation.
So, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8164&#34; data-gh-pr=&#34;8164&#34;&gt;some preliminary stubs aside&lt;/a&gt;
, byte[] &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8199&#34; data-gh-pr=&#34;8199&#34;&gt;implemented the HLE JIT service&lt;/a&gt;
 to allow the &lt;code&gt;Hovercraft&lt;/code&gt; emulator to function and &lt;code&gt;Super Mario 64&lt;/code&gt; to boot.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8261&#34; data-gh-pr=&#34;8261&#34;&gt;In a separate PR&lt;/a&gt;
, byte[] adds documentation of how the JIT service interface operates.
This should help other open source projects, if needed.&lt;/p&gt;
&lt;p&gt;Of course, this wasn’t enough to get &lt;code&gt;Super Mario 64&lt;/code&gt; playable, as there were rendering issues to solve as well.&lt;/p&gt;
&lt;p&gt;It’s never that simple… but let&amp;rsquo;s try to explain it simply.
Nintendo Switch games bundle their own individual GPU driver with each game.
This is done to increase compatibility, you don&amp;rsquo;t need to update every console in the world if a driver version has an issue.&lt;/p&gt;
&lt;p&gt;For unknown reasons, either the &lt;code&gt;Hovercraft&lt;/code&gt; emulator or the bundled GPU driver reports Vertex Buffers that are simply too large, especially when compared to what the game actually uses.
Whether it&amp;rsquo;s an issue in the included emulator or just a driver bug, we can&amp;rsquo;t know for certain, but we do need to work around this problem.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vb.png&#34; title=&#34; Erroneous Vertex Buffer size diagram&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/vb_hubfccfabcd42e2b30ae544ea5d39da01d_322414_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Erroneous Vertex Buffer size diagram&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Erroneous Vertex Buffer size diagram&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;So, instead of using the insane reported buffer size, byte[] says NO! and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8205&#34; data-gh-pr=&#34;8205&#34;&gt;uses the backing memory size&lt;/a&gt;
 instead.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sm64.png&#34; title=&#34; It&amp;#39;s-a him! (Super Mario 64)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/sm64_hua15ba76a00c50f932f525a23ef382dc2_811090_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; It&amp;#39;s-a him! (Super Mario 64)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; It&amp;#39;s-a him! (Super Mario 64)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Performance on Vulkan is not stellar for now, but you can finally enjoy all 3 of the &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt; games with both APIs.&lt;/p&gt;
&lt;p&gt;Lastly, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; implemented a fix to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8135&#34; data-gh-pr=&#34;8135&#34;&gt;keep the web applet open in the foreground&lt;/a&gt;
, as the &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt; games require it or else they would crash a few minutes into gameplay.&lt;/p&gt;
&lt;h2 id=&#34;general-graphical-fixes&#34;&gt;General graphical fixes&lt;/h2&gt;
&lt;p&gt;Following up on last month&amp;rsquo;s NVFlinger rewrite, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; continued to track issues and bug reports.
He fixed the reported issues and further cleaned up the code to improve code quality.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8137&#34; data-gh-pr=&#34;8137&#34;&gt;See the code changes for the NVFlinger rewrite here&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; and &lt;code&gt;Hyrule Warriors: Age of Calamity&lt;/code&gt; would experience interesting issues which were caused by the new &lt;code&gt;GPU Garbage Collector&lt;/code&gt; introduced as part of &lt;code&gt;Project Y.F.C.&lt;/code&gt;.
We talked about those changes back in &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/#other-graphical-fixes&#34;&gt;January&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As you can see on the top bar below, &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; would use exorbitant amounts of VRAM in OpenGL (top bar).
The bottom bar shows the result after the fixes were implemented.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./xc2bug.png&#34; title=&#34; Not the best way to test your whole VRAM (Xenoblade Chronicles 2)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/xc2bug_hu7a84c3271db9d1bac0f1b9601a9cf3f2_122361_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Not the best way to test your whole VRAM (Xenoblade Chronicles 2)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Not the best way to test your whole VRAM (Xenoblade Chronicles 2)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Age of Calamity&lt;/code&gt; would display &lt;em&gt;interesting&lt;/em&gt; graphics at random intervals:&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/aocbug_hu942eef340fec1890ea1d25bfc881f2d4_4114328_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This is why you don&amp;#39;t blast Caramelldansen too hard (Hyrule Warriors: Age of Calamity)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/aocfix_huad5f052a726c12217f09553d9e7a7821_5511877_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This is why you don&amp;#39;t blast Caramelldansen too hard (Hyrule Warriors: Age of Calamity)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;This is why you don&amp;#39;t blast Caramelldansen too hard (Hyrule Warriors: Age of Calamity)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8128&#34; data-gh-pr=&#34;8128&#34;&gt;fixed the regressions&lt;/a&gt;
 and both games are back in business.&lt;/p&gt;
&lt;p&gt;Often times in emulation, when you fix one issue, another pops up.
The cropping fix byte[] implemented for &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt; had the lovely unintended side effect of breaking  rendering for homebrew apps in Vulkan.
Thankfully, Morph added the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8267&#34; data-gh-pr=&#34;8267&#34;&gt;magic line to the code&lt;/a&gt;
 that solves this regression.&lt;/p&gt;
&lt;h2 id=&#34;skyline-framework-part-3&#34;&gt;Skyline framework: Part 3&lt;/h2&gt;
&lt;p&gt;There has been important progress in getting the &lt;a href=&#34;https://github.com/skyline-dev/skyline&#34;&gt;Skyline&lt;/a&gt; modding framework working.
&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/#skyline-framework-part-1&#34;&gt;Here are&lt;/a&gt; the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/#skyline-framework-part-2&#34;&gt;two links&lt;/a&gt; if you missed our previous progress reports on the subject.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tech-ticks&#34;&gt;tech-ticks&lt;/a&gt; has been quite busy &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8171&#34; data-gh-pr=&#34;8171&#34;&gt;working on the finishing touches&lt;/a&gt;
.
The latest changes include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Better &lt;code&gt;LayeredExeFs&lt;/code&gt; support, which results in easier mod distribution and self-updating capabilities.&lt;/li&gt;
&lt;li&gt;Support for the &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; socket option, which allows the Skyline TCP logger to operate.&lt;/li&gt;
&lt;li&gt;Implementation of &lt;a href=&#34;https://en.wikipedia.org/wiki/Domain_Name_System&#34;&gt;DNS&lt;/a&gt; address resolution, which is required by plugins that use HTTPS requests.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We must mention that while Skyline kernel support is basically finished, bugs in yuzu’s codebase prevent proper operation of the modding framework.
For example, due to underlying emulation issues, &lt;a href=&#34;https://github.com/Raytwo/ARCropolis&#34;&gt;ARCropolis&lt;/a&gt; won’t work until &lt;code&gt;Project Gaia&lt;/code&gt; is finished, and some of the changes previously mentioned need some fine tuning from our part to function properly.&lt;/p&gt;
&lt;p&gt;There’s yet more work to do, but we’re a lot closer. We can see the finish line!&lt;/p&gt;
&lt;h2 id=&#34;ui-improvements&#34;&gt;UI improvements&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/merryhime&#34;&gt;Merry&lt;/a&gt;, the core developer of &lt;code&gt;Dynarmic&lt;/code&gt;, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8140&#34; data-gh-pr=&#34;8140&#34;&gt;made some changes to the add-ons game properties window&lt;/a&gt;
, improving column widths.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./addonbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/addonbug_hu7b89f2732e4eb8c168587ce59f398091_200930_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Low resolution users will like this&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./addonfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/addonfix_hu0dc15269830fe03b0a329c7f4c3acba8_178327_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Low resolution users will like this&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Low resolution users will like this&lt;/p&gt;


&lt;p&gt;The hotkeys configuration window &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8141&#34; data-gh-pr=&#34;8141&#34;&gt;also got some love&lt;/a&gt;
, changing the minimum column width.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hotkeybug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/hotkeybug_hufd8486e0770079540cc29a11365945b0_37784_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s also great for GNOME users&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hotkeyfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/hotkeyfix_hu60621202df59d675bec4b212e571e580_37829_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s also great for GNOME users&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;It&amp;#39;s also great for GNOME users&lt;/p&gt;


&lt;p&gt;Both changes are extremely beneficial for bloated or size unoptimized desktop environments, like GNOME Shell.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Tachi107&#34;&gt;Tachi107&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8142&#34; data-gh-pr=&#34;8142&#34;&gt;fixed some embarrassing typos in our logging&lt;/a&gt;
, and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8225&#34; data-gh-pr=&#34;8225&#34;&gt;updated the About yuzu window&lt;/a&gt;
 to properly mention our new licence, &lt;code&gt;GPLv3.0+&lt;/code&gt;.
The &lt;code&gt;+&lt;/code&gt; is there because we want to leave the door open for newer revisions.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./about.png&#34; title=&#34; Screenshot of the yuzu About box&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/about_hue145afe29afd72898e44ad72926e772a_19715_623x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Screenshot of the yuzu About box&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Screenshot of the yuzu About box&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Not stopping there, Taichi &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8283&#34; data-gh-pr=&#34;8283&#34;&gt;performed some cleanup and made improvements to Flatpak builds&lt;/a&gt;
, including using proper app ID, fixing some typos, and adding a launch parameter to make yuzu use the dedicated GPU by default on Linux instead of the integrated GPU.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Docteh&#34;&gt;Docteh&lt;/a&gt; has also helped considerably in improving yuzu’s UI.&lt;/p&gt;
&lt;p&gt;With a bit of manual thinkering, they managed to bypass some Qt limitations in order to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8190&#34; data-gh-pr=&#34;8190&#34;&gt;display more readable hyperlinks&lt;/a&gt;
 in our dark themes.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hyperlinkbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/hyperlinkbug_huff390c1cab454e61cd3719e2f7130746_7606_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;People seem to have forgotten what hyperlinks are for, just click them!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hyperlinkfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/hyperlinkfix_hu0a40698ab9183e4b67b34324ac9d8765_7607_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;People seem to have forgotten what hyperlinks are for, just click them!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;People seem to have forgotten what hyperlinks are for, just click them!&lt;/p&gt;


&lt;p&gt;Thanks to a report from GillianMC in our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord server&lt;/a&gt;, Docteh found out that some quirks in the Qt API caused the compatibility status of listed games to not be translated.
The cause lies in QObject, you can find the specific details in the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8204&#34; data-gh-pr=&#34;8204&#34;&gt;pull request’s description&lt;/a&gt;
. Now the status is properly reported in the corresponding language.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./compatbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/compatbug_hu80e649c842cedd702797503bf4104132_12890_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Example in Spanish&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./compatfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/compatfix_hu638e0a2d2260d7b5ba1326acd1de0462_12914_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Example in Spanish&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Example in Spanish&lt;/p&gt;


&lt;p&gt;Similarly, D-Pad directions also didn’t translate properly. The same suspect, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8224&#34; data-gh-pr=&#34;8224&#34;&gt;once again&lt;/a&gt;
.
Someone, please send a warrant asking for the detention of Carmen Sandiego.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hatbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/hatbug_huc1536013c1c98686bb7fb1f0260820a4_3808_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Example in French&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hatfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/hatfix_hu90cfb4dac4ffa1e9aaf53f198b9c4b9c_3889_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Example in French&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Example in French&lt;/p&gt;


&lt;h2 id=&#34;kernel-and-cpu-emulation-changes&#34;&gt;Kernel and CPU emulation changes&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s begin with two changes that happened in March.&lt;/p&gt;
&lt;p&gt;Our resident bunnei rabbit continued his work on rewriting yuzu&amp;rsquo;s kernel memory management to make it
accurate to the latest system updates. This time, he tackled and revamped &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7974&#34; data-gh-pr=&#34;7974&#34;&gt;how the kernel code memory is mapped and unmapped&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;Code memory support, in the context of the Switch, allows games and apps to load and unload smaller parts of their code on the fly.
Thanks to these changes, &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; no longer causes memory access issues while loading/unloading NROs, making the game stable for long play sessions.&lt;/p&gt;
&lt;p&gt;bunnei also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8013&#34; data-gh-pr=&#34;8013&#34;&gt;migrated slab heaps for the guest (Switch) kernel objects&lt;/a&gt;
 from host heap memory to emulated guest memory.
With this change, yuzu&amp;rsquo;s memory layout is now more closely matching the console.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A slab represents a contiguous piece of memory. A heap is a general term used for any memory that is
allocated dynamically and randomly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The slab heap is the space used to store guest kernel objects.
By moving these away from the host (PC) heap memory (RAM) to emulated guest (Switch) memory, we can ensure
that the kernel objects never go beyond the system limits and cause memory leaks on the host (PC).&lt;/p&gt;
&lt;p&gt;Thread local storage (TLS), the mechanism by which each thread in a given multithreaded process allocates storage for
thread-specific data, was also rewritten making it accurate to the latest HorizonOS behaviour.&lt;/p&gt;
&lt;p&gt;With these changes, we have now completely fixed the kernel memory object leaks that affected a few games, but went largely unnoticed, due to the previous implementation allowing unlimited allocations.&lt;/p&gt;
&lt;p&gt;Back to the list of April changes, bunnei also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8122&#34; data-gh-pr=&#34;8122&#34;&gt;reimplemented how yuzu handled thread allocation&lt;/a&gt;
 for HLE service interfaces.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Services are system processes running in the background which wait for incoming requests.
The Switch&amp;rsquo;s HorizonOS has various services that perform various tasks e.g Audio, Bluetooth, etc.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Previously, we used to allocate one host thread per HLE service interface because -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;some service routines need to potentially wait a long time for completion, like network or filesystem access, and&lt;/li&gt;
&lt;li&gt;we don&amp;rsquo;t support guest thread rescheduling from host threads.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;A thread which is blocked will have to wait until the action that blocked it, such as I/O or simply sleeping for some amount of time, completes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The issue with this approach was that since it&amp;rsquo;s the host (Windows or Linux) that schedules the service threads, yuzu could create weird behaviour particularly on systems with hardware limitations due to the spawning one thread per service and the sheer number of service implementations we emulate.&lt;/p&gt;
&lt;p&gt;With the rewrite, yuzu now has a single &amp;ldquo;default service thread&amp;rdquo; that is used for 99% of the service methods that are non-blocking.
For the services that are time-sensitive and for those that need blocking, we still allow thread creation (e.g. Audio, BSD, FileSystem, nvdrv)&lt;/p&gt;
&lt;p&gt;This brings down the service thread count from double digits to single digits, thus improving stability and consistency - especially on systems with less cores.
Users with 4 thread CPUs (either 2 cores + HT/SMT, or 4 cores) should see performance and stability improvements in most games.&lt;/p&gt;
&lt;p&gt;Another battle for proper shutdown behaviour is fought and won.
yuzu currently does not emulate multi-process capabilities of the HorizonOS kernel, because it is not required to emulate any games. However, the multi-process APIs that are used by games still need to be managed in the way they expect.
All HorizonOS services have a port (for both client and server) that is used as a channel of communication between the game process and service process.
A session is opened for each communication interface for them both and they are managed by their respective kernel objects.
When the game closes the client port, the service closes the server port, and everything is shut down.&lt;/p&gt;
&lt;p&gt;The issue with our previous implementation was that yuzu wasn&amp;rsquo;t properly tracking all the &lt;code&gt;KServerPort&lt;/code&gt; and &lt;code&gt;KServerSession&lt;/code&gt; objects for each service.
And because of this, the services weren&amp;rsquo;t properly getting closed, which in turn was causing further issues.&lt;/p&gt;
&lt;p&gt;This originally worked fine, but was regressed when we migrated guest kernel objects to emulated guest memory, as we mentioned previously.
bunnei figured out the issue and quickly &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8165&#34; data-gh-pr=&#34;8165&#34;&gt;reimplemented how we track these kernel objects&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;By having a single place where we can register/unregister open ports and sessions, we can now keep better track of these kernel objects.
And by ensuring that they are closed when we tear down all services and kernel, we get much better emulation shutdown behaviour.&lt;/p&gt;
&lt;h2 id=&#34;input-changes-and-general-bugfixes&#34;&gt;Input changes and general bugfixes&lt;/h2&gt;
&lt;p&gt;If the user sets a very high DPI value for their mouse while using mouse panning, the cursor may be able to escape the rendering window.
&lt;a href=&#34;https://github.com/IamSanjid&#34;&gt;IamSanjid&lt;/a&gt; implemented the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8170&#34; data-gh-pr=&#34;8170&#34;&gt;required fixes&lt;/a&gt;
, including better centering timings to solve this issue. Thanks!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; has several fixes ready for us.&lt;/p&gt;
&lt;p&gt;Let’s begin with an interesting one.
yuzu’s screenshot capture feature allows an easy way to save moments at the resolution the scaler is currently set at.
The hotkey for screenshot capture could be spammed, leading yuzu to a crash if several requests for screenshots were sent. This could be worsened if the rendering resolution was set to a high value.
To solve this, yuzu now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8192&#34; data-gh-pr=&#34;8192&#34;&gt;ignores new requests while a capture is being processed&lt;/a&gt;
, and prints a warning in the log.&lt;/p&gt;
&lt;p&gt;There’s always room for improvements in emulation, as nothing is ever truly complete. This time, german77 focuses on inaccuracies found in our input emulation.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8222&#34; data-gh-pr=&#34;8222&#34;&gt;&lt;code&gt;IsSixAxisSensorFusionEnabled&lt;/code&gt; is implemented&lt;/a&gt;
 by reverse engineering all Sixaxis functions, and it was verified by comparing with unit test homebrew results done on the Switch.
This should potentially improve motion accuracy.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://en.wikipedia.org/wiki/Human_interface_device&#34;&gt;HID&lt;/a&gt; service in charge of handling input commands, among other things, used to operate by copying its assigned shared memory and reporting back the changes.
This leads to mismatches or delays in the input process, and can potentially make games read completely incorrect data.&lt;/p&gt;
&lt;p&gt;Obviously this isn&amp;rsquo;t ideal, so german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8229&#34; data-gh-pr=&#34;8229&#34;&gt;gets rid of the memory duplication&lt;/a&gt;
 and uses the ever magical &lt;a href=&#34;https://en.wikipedia.org/wiki/Pointer_(computer_programming)&#34;&gt;* pointers&lt;/a&gt; to access the shared memory directly instead.
This can fix bugs affecting countless games, with the biggest example being the &lt;code&gt;Pokémon: Let’s Go&lt;/code&gt; games having a hard time detecting controllers.&lt;/p&gt;
&lt;p&gt;Hotkey presses will now be &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8249&#34; data-gh-pr=&#34;8249&#34;&gt;triggered by using a queue&lt;/a&gt;
. This has the benefit of not having to wait for the UI to respond, reducing their delay.&lt;/p&gt;
&lt;p&gt;Analog sticks &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8272&#34; data-gh-pr=&#34;8272&#34;&gt;got some love&lt;/a&gt;
, with a couple of important changes in their mapping:&lt;/p&gt;
&lt;p&gt;The default maximum range is now set to 95%, to ensure that games get to use the whole range. This change, for example, avoids characters walking when the stick is at certain angles in games like &lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt;.
The minimum range was lowered from 50% to 25%, providing greater precision, particularly for people trying to play racing games with a matching wheel.
Auto-center correction is stronger now, avoiding drifting without having to rely on stronger dead-zone values.
Individual axis values can be manually deleted now if buttons were mapped manually.&lt;/p&gt;
&lt;p&gt;Previously, only Player 1 could automatically reconnect a controller by pressing a button. Other players only could do so when using a keyboard.
german77’s pull requests aims to solve that, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8277&#34; data-gh-pr=&#34;8277&#34;&gt;allowing any of the remaining 7 players to reconnect their controller&lt;/a&gt;
. No privileges for those higher in the hierarchy anymore.&lt;/p&gt;
&lt;p&gt;This change is under testing at the time of writing, as it could potentially cause regressions. Be sure to use the status hovercard to check back in a few days!&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Project Y.F.C.&lt;/code&gt; is not far away from releasing its first part of two planned.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Project Gaia&lt;/code&gt; continues to progress slowly but surely, now causing some previously broken games to finally boot for the first time.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./gaia1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/gaia1_hu35d1be56a961cc79c1a88247157dfff6_1164824_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Minecraft and Mortal Kombat 11 are now booting!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./gaia2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2022/gaia2_hu2cb5fe3a1ec835efa71da23f08cb2df0_1479341_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Minecraft and Mortal Kombat 11 are now booting!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Minecraft and Mortal Kombat 11 are now booting!&lt;/p&gt;


&lt;p&gt;That’s all folks! We&amp;rsquo;re still playing catch up with some kernel and CPU optimization changes, so expect a more extensive section next time.
Thank you for the company, see you next month!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report March 2022</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/</link>
      <pubDate>Sun, 10 Apr 2022 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/</guid>
      <description>&lt;p&gt;Hi yuz-ers, glad to have you back.
This month, we discuss an emulator inside an emulator, parts of Project Y.F.C. being added, graphical fixes for old and new titles, and more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hi yuz-ers, glad to have you back.
This month, we discuss an emulator inside an emulator, parts of Project Y.F.C. being added, graphical fixes for old and new titles, and more!&lt;/p&gt;
&lt;h2 id=&#34;psa-for-nvidia-users-part-4&#34;&gt;PSA for NVIDIA users: Part 4&lt;/h2&gt;
&lt;p&gt;Yes, there is more. This time we have a blessing and a curse.&lt;/p&gt;
&lt;p&gt;While the latest 5XX.XX series drivers fixed tessellation issues affecting &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt; and improved performance in Vulkan, they also introduced a crash when blitting MSAA images, meaning that running games like &lt;code&gt;Monster Hunter Rise&lt;/code&gt;, &lt;code&gt;Rune Factory 5&lt;/code&gt;, &lt;code&gt;Sonic Colors Ultimate&lt;/code&gt;, and several others at resolutions different than native would result in a crash.&lt;/p&gt;
&lt;p&gt;Thankfully, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8076&#34; data-gh-pr=&#34;8076&#34;&gt;works around the issue by using 3D helpers&lt;/a&gt;
 like what&amp;rsquo;s been done for AMD and Intel drivers.&lt;/p&gt;
&lt;p&gt;Now, to be fair, blitting MSAA images is against the Vulkan specification, so NVIDIA is in the right to no longer allow it.
It’s just a bummer to have that sudden change in behaviour with something that was previously allowed and working.
Proper documentation would help a lot here.&lt;/p&gt;
&lt;p&gt;Tagging along, a PSA for AMD users too: the latest drivers, 22.3.2 and later, which add support for the &lt;code&gt;VK_KHR_workgroup_memory_explicit_layout&lt;/code&gt; extension, break fishing in &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; and can possibly make other games crash.
Revert to 22.3.1 if you find such a regression.&lt;/p&gt;
&lt;h2 id=&#34;the-vulkan-emulator&#34;&gt;The Vulkan emulator&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/liamwhite&#34;&gt;byte[]&lt;/a&gt;, a newcomer to yuzu but in no way a novice at the art, arrived with a very interesting &lt;code&gt;Pull Request&lt;/code&gt;, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8000&#34; data-gh-pr=&#34;8000&#34;&gt;implementing &lt;code&gt;Wii Hagi&lt;/code&gt; emulator support&lt;/a&gt;
 into yuzu.&lt;/p&gt;
&lt;p&gt;This &lt;em&gt;official Nintendo emulator&lt;/em&gt; (totally not outside their own ToS, they swear) is what allows the titles contained inside &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt; to work.
This means getting &lt;code&gt;Super Mario Galaxy&lt;/code&gt; and &lt;code&gt;Super Mario Sunshine&lt;/code&gt; playable, with &lt;code&gt;Super Mario 64&lt;/code&gt; support coming at a later date, as this game needs a complete JIT service implementation.&lt;/p&gt;
&lt;p&gt;byte[] didn’t stop there, several other changes were also implemented.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8024&#34; data-gh-pr=&#34;8024&#34;&gt;Implementing SPIR-V shader support for register-addressed const buffer accesses&lt;/a&gt;
, which also includes the &lt;code&gt;LDC.IS&lt;/code&gt; access mode (the variant of an instruction), allows Mario to retain his body in this dimension in &lt;code&gt;Super Mario Sunshine&lt;/code&gt; and &lt;code&gt;Super Mario Galaxy&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/invisbug_hu763db60562e7431d741e474cb33831e9_842277_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Sunshine&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/invisfix_hu210fc3c316e6d949e9270c97007878f2_870067_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Sunshine&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Sunshine&lt;/p&gt;


&lt;p&gt; &lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/smgbug_hu4a6d78110a25f2935f94ec83dc45a735_1922116_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Galaxy&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/smgfix_huda84b0cf2b9bed47f69dbb5af34972dc_2044525_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Galaxy&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Galaxy&lt;/p&gt;


&lt;p&gt;&lt;code&gt;Super Mario Galaxy&lt;/code&gt; uses a combination of the depth buffer and stencil buffer to “see” the objects behind the star pointer used to shoot star bits.
That’s right, a texture determines game physics.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8030&#34; data-gh-pr=&#34;8030&#34;&gt;Properly handling that S8D24 &amp;lt; &amp;gt; ABGR8 texture conversion&lt;/a&gt;
 solves incorrect collisions with the poor star bits.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8036&#34; data-gh-pr=&#34;8036&#34;&gt;A later fix solves issues with NVIDIA drivers&lt;/a&gt;
.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./texturebug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./texturefix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;No star bits for you until you finish your homework (Super Mario Galaxy)&lt;/p&gt;


&lt;p&gt;A shader miscompilation (a bad assumption on yuzu’s part, oops) caused interesting black holes in Sunshine.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8038&#34; data-gh-pr=&#34;8038&#34;&gt;Fixing the oopsie&lt;/a&gt;
 provides Delfino Plaza with the intended “shading”, and most likely silently solves issues in other games too.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/miscompbug_hu15e9df6f48c7a686988c35c3f8e205bc_1237789_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Sunshine&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/miscompfix_huafc7823c970b9f867d0385abf4669780_1696186_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Sunshine&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Sunshine&lt;/p&gt;


&lt;p&gt;And finally, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8074&#34; data-gh-pr=&#34;8074&#34;&gt;fixing a bottleneck in the buffer cache&lt;/a&gt;
 eliminates slowdowns and helps improve performance by up to approximately 4.5x in Galaxy.
Again, this could have a positive impact on other games, but don’t expect it to be similarly significant.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/merryhime&#34;&gt;Merry&lt;/a&gt; updated &lt;a href=&#34;https://github.com/merryhime/dynarmic&#34;&gt;dynarmic&lt;/a&gt; to the latest version to provide better support for &lt;code&gt;Super Mario Galaxy&lt;/code&gt;, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8054&#34; data-gh-pr=&#34;8054&#34;&gt;adding support for accelerated SHA256 CPU instructions&lt;/a&gt;
, among other changes.
This avoids softlocking Galaxy at the final level.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./creditbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./creditfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;This toad sure likes to talk a lot (Super Mario Galaxy)&lt;/p&gt;


&lt;h2 id=&#34;poyo&#34;&gt;POYO!&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Kirby and the Forgotten Land&lt;/code&gt; turned out to be one of the best platformers in recent times, and also quite a challenge for our devs.&lt;/p&gt;
&lt;p&gt;epicboy got the ball rolling by solving geometry pop-ins that were very noticeable throughout gameplay.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./popbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./popfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;That tree just pops! (Kirby and the Forgotten Land)&lt;/p&gt;


&lt;p&gt;This was achieved by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8023&#34; data-gh-pr=&#34;8023&#34;&gt;improving the accuracy of the constant buffer uploads&lt;/a&gt;
. This change also had the added benefit of fixing rendering issues in &lt;code&gt;Monster Hunter Rise&lt;/code&gt;, making it playable.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rise.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/rise_hu1218022d5259f5a47fc6447c95800f12_6708297_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Such pretty locations (MONSTER HUNTER RISE)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rise2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/rise2_hu8321bf6be2d8083b0a41a0fda15681df_3352427_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Such pretty locations (MONSTER HUNTER RISE)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./rise3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/rise3_hud5b6e0053a9bde22fcf6b64c9372f703_3423188_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Such pretty locations (MONSTER HUNTER RISE)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Such pretty locations (MONSTER HUNTER RISE)&lt;/p&gt;




&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/risebug_hud606da8061d2701b4aae3dc715205d4c_860387_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From Monster to Monster Hunter (MONSTER HUNTER RISE)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/risefix_hud606da8061d2701b4aae3dc715205d4c_945776_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From Monster to Monster Hunter (MONSTER HUNTER RISE)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;From Monster to Monster Hunter (MONSTER HUNTER RISE)&lt;/p&gt;


&lt;p&gt;Another issue that we were quickly made aware of is that NVIDIA hardware would consume VRAM like crazy, to the point of filling up even high-end hardware in minutes.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./kirbyvram.png&#34; title=&#34; PC requirements: RTX 3090? Not on our watch!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/kirbyvram_hud7eeda6704823645461d58ef32a64ebd_3129_481x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; PC requirements: RTX 3090? Not on our watch!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; PC requirements: RTX 3090? Not on our watch!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8093&#34; data-gh-pr=&#34;8093&#34;&gt;Unmapping pre-existing rasterizer memory before the memory range was mapped&lt;/a&gt;
 solves the issue and allows NVIDIA users to not need RTX 3090 levels of hardware to have a good experience.&lt;/p&gt;
&lt;p&gt;However, epicboy issues a PSA that this pull request may introduce regressions that are being investigated, and that VRAM consumption is further improved by using the Disable Dynamic Resolution mod &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Switch-Mods&#34;&gt;available on our site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;epicboy also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8116&#34; data-gh-pr=&#34;8116&#34;&gt;fixed an svc break crash that would occur if the game was run with Asynchronous GPU Emulation enabled&lt;/a&gt;
, an option that should always remain enabled.&lt;/p&gt;
&lt;p&gt;And finally, an off-by-one error in the stream buffer was responsible for causing vertex explosions.
The solution is to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8127&#34; data-gh-pr=&#34;8127&#34;&gt;simplify the implementation of stream buffers&lt;/a&gt;
.
As the new implementation can only feed a single upload request at a time, this may provide a small performance loss in some cases, but it’s sure to fix several other games in the process.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/poyobug_hu9750d6444b724c56cf9088a84ca862ea_2819821_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;A look inside Kirby&amp;#39;s powers? (Kirby and the Forgotten Land)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/poyofix_huc74b3803554f4c3f4a532fbbdf073f6e_10646570_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;A look inside Kirby&amp;#39;s powers? (Kirby and the Forgotten Land)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;A look inside Kirby&amp;#39;s powers? (Kirby and the Forgotten Land)&lt;/p&gt;


&lt;p&gt;AMD Radeon users may experience more stuttering than usual when running this game, depending on the specific GPU they have.
This is because the available Windows AMD drivers don&amp;rsquo;t offer support for the &lt;code&gt;VK_EXT_vertex_input_dynamic_state&lt;/code&gt; extension, which helps reduce the shader count by 3 times the original amount.
The Mesa RADV support for the extension is broken in RDNA2 hardware, as reported last month, so it remains blacklisted along with the Intel Windows support.
NVIDIA hardware and older AMD GPUs on Linux offer proper support and enjoy the significantly reduced shader count, and the associated reduced stuttering when building their cache.
CPU thread count will be critical here, at least until AMD adds official support for the extension.&lt;/p&gt;
&lt;h2 id=&#34;graphical-changes-and-optimizations&#34;&gt;Graphical changes and optimizations&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; has the highlight of this month with the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8050&#34; data-gh-pr=&#34;8050&#34;&gt;rewrite of the &lt;code&gt;NVFlinger&lt;/code&gt; implementation&lt;/a&gt;
, a part of &lt;code&gt;Project Y.F.C.&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NVFlinger&lt;/code&gt; is the service in charge of presenting to the display, so any improvement in this area will bring more stable frametimes, perceived as less stuttering even when the frame rate count stays at a solid 60 FPS.&lt;/p&gt;
&lt;p&gt;Our original implementation was basically guess work done back in 2018, and it was lacking in &lt;em&gt;several&lt;/em&gt; areas.
For example, yuzu would block threads until the last frame was ready to be presented.
This obviously leads to undesired stuttering unrelated to system performance.&lt;/p&gt;
&lt;p&gt;The new implementation is on par with the Nintendo Switch, based on the &lt;a href=&#34;https://source.android.com/&#34;&gt;Android Open Source Project&lt;/a&gt;.
This means yuzu changes its licence from GPLv2+ to GPLv3+ to accommodate the Apache 2.0 licence AOSP uses.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./abzubug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./abzufix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;ABZU&lt;/p&gt;


&lt;p&gt;Games like &lt;code&gt;ABZU&lt;/code&gt; and &lt;code&gt;DRAGON BALL FighterZ&lt;/code&gt; improve considerably, but other games like &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; require fixes that are still in testing in &lt;code&gt;Project Y.F.C.&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./dbzbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./dbzfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;DRAGON BALL FighterZ&lt;/p&gt;


&lt;p&gt;Enjoy the smooth as butter gameplay!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/asLody&#34;&gt;asLody&lt;/a&gt; has been working on optimizing the &lt;code&gt;LOP3-LUT&lt;/code&gt; shader instruction with the objective of improving performance and helping with getting &lt;code&gt;Hades&lt;/code&gt; to work.
Sadly, this first implementation caused some issues.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/degasus&#34;&gt;degasus&lt;/a&gt;, which you may know from &lt;em&gt;a certain&lt;/em&gt; &lt;a href=&#34;https://dolphin-emu.org/?nocr=true&#34;&gt;Dolphin emulator&lt;/a&gt;, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7989&#34; data-gh-pr=&#34;7989&#34;&gt;managed to implement a patch&lt;/a&gt;
, which later turned into its own pull request, that solved the issues and achieved the same level of optimization.&lt;/p&gt;
&lt;p&gt;This is not enough to get &lt;code&gt;Hades&lt;/code&gt; running. &lt;code&gt;Project Y.F.C.&lt;/code&gt; will take care of that in the near future, but it’s a small global performance boost that mostly benefits low-end GPUs.
It also provides easier to read code when performing maintenance.&lt;/p&gt;
&lt;p&gt;We documented our problems with video decoding on Linux Flatpak builds in previous progress reports.
A check was added to avoid crashes, but in the process, Windows builds got stuck on CPU decoding!
Users with low thread CPUs could immediately tell the difference during video playback.&lt;/p&gt;
&lt;p&gt;By simply &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8066&#34; data-gh-pr=&#34;8066&#34;&gt;disabling this check on Windows&lt;/a&gt;
, Windows builds can again enjoy the extra performance gained from decoding via GPU.
If video playback feels smoother, you now know the reason! Thanks epicboy!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; started work on improving yuzu’s Vulkan error handling.&lt;/p&gt;
&lt;p&gt;This is a very common issue caused mostly by very outdated GPU drivers installed by Windows Update, or custom slower drivers provided by laptop manufacturers that are used to lie on battery life metrics or keep up with cheapened cooling solutions.
This most commonly affects Intel GPUs, but Vega based Radeon GPUs can also suffer from it occasionally.&lt;/p&gt;
&lt;p&gt;Another popular reason for this issue, as mentioned in &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/#ui-changes&#34;&gt;previous reports&lt;/a&gt;, is outdated Vulkan injectors breaking support altogether.
Software like OBS Studio, OBS Streamlabs, Bandicam, Action!, Overwolf, GShade, iCUE, MSI Afterburner, or &lt;em&gt;anything&lt;/em&gt; with an overlay that injects into Vulkan can completely break rendering if it is outdated, or the developers don’t keep up with recent Vulkan releases.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7986&#34; data-gh-pr=&#34;7986&#34;&gt;toast’s fixes solve 2 different scenarios&lt;/a&gt;
.
Changing the behaviour of how yuzu handles both GPU instance creation and rendering instance creation helps avoid direct-to-desktop crashes caused by outdated drivers or broken Vulkan injectors.&lt;/p&gt;
&lt;p&gt;There’s more work to do, but this lets us get closer to offering Vulkan as the default graphics API in the future.&lt;/p&gt;
&lt;p&gt;epicboy found out that &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8106&#34; data-gh-pr=&#34;8106&#34;&gt;avoiding a doubly locked mutex&lt;/a&gt;
 fixes a crash when using Extreme GPU accuracy on the OpenGL backend, making it a safe option for those aiming for the most possible accurate rendering.
This option is only accessible from &lt;code&gt;Emulation &amp;gt; Configure... &amp;gt; Graphics &amp;gt; Advanced&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;He also includes an &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8068&#34; data-gh-pr=&#34;8068&#34;&gt;optimization focused on eliminating &lt;code&gt;if(false) {…}&lt;/code&gt; branches in the shader code&lt;/a&gt;
.
This has the added benefit of reducing shader build times ever so slightly. Hey, less shader stuttering is less shader stuttering!&lt;/p&gt;
&lt;h2 id=&#34;not-all-changes-benefit-everybody&#34;&gt;Not all changes benefit everybody&lt;/h2&gt;
&lt;p&gt;In an effort to reduce RAM use in yuzu, Merry tested &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8016&#34; data-gh-pr=&#34;8016&#34;&gt;reducing the size of the code caches&lt;/a&gt;
 in dynarmic.
During internal testing, the change proved to be perfectly fine, a small reduction of memory use with no side effects.&lt;/p&gt;
&lt;p&gt;Once the result went live, users started to complain, reports of sudden stuttering affecting &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; were in all communication channels.&lt;/p&gt;
&lt;p&gt;Dynarmic has to emulate whatever instruction a CPU lacks, and that takes more cache space.
Older hardware, for example Skylake based CPUs (gen. 10 and older) or early first and second generation Ryzen CPUs, would not only have smaller caches, but would also lack support for some instructions more modern CPUs provide.&lt;/p&gt;
&lt;p&gt;Once the cache runs out, a recompilation happens.
This results in impressive lag spikes experienced during Smash battles a few seconds into the match.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8070&#34; data-gh-pr=&#34;8070&#34;&gt;Reverting the change&lt;/a&gt;
 was all that was needed to solve the issue. Happy Smashing!&lt;/p&gt;
&lt;h2 id=&#34;general-bugfixes&#34;&gt;General bugfixes&lt;/h2&gt;
&lt;p&gt;Recent Nintendo Switch firmware updates changed the behaviour of the inline on-screen keyboard.
&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8041&#34; data-gh-pr=&#34;8041&#34;&gt;updated yuzu’s emulated equivalent&lt;/a&gt;
 to match the new versions, allowing games from the &lt;code&gt;Monster Hunter&lt;/code&gt; series to be playable without having to transfer a save file after character creation was finished.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./osk.png&#34; title=&#34; The hardest part of starting any new game, character naming... (MONSTER HUNTER RISE)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/osk_hub08388841b4d7ada59b895ed87374468_256835_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The hardest part of starting any new game, character naming... (MONSTER HUNTER RISE)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The hardest part of starting any new game, character naming... (MONSTER HUNTER RISE)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Morph also worked on &lt;code&gt;MiiEdit&lt;/code&gt;, the applet for Mii creation that &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; started working on last month.
Morph’s changes &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8031&#34; data-gh-pr=&#34;8031&#34;&gt;add support for games requiring older firmware versions&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;Our holy war against crashes at shutdown continues to rage on.
Merry &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7999&#34; data-gh-pr=&#34;7999&#34;&gt;fixed a deadlock on exit that was hidden in the logging thread&lt;/a&gt;
.
It’s like the Hydra, you cut off one head and two new heads appear.&lt;/p&gt;
&lt;p&gt;toastUnlimited has been having fun working on improving yuzu-cmd.&lt;/p&gt;
&lt;p&gt;Adding the &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--config&lt;/code&gt; argument will allow the user to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8025&#34; data-gh-pr=&#34;8025&#34;&gt;specify a custom location for a configuration file&lt;/a&gt;
.
This can be useful for game specific settings.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8026&#34; data-gh-pr=&#34;8026&#34;&gt;Extended memory layout support was added&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;SDL2 has a limitation in that it doesn’t automatically resize the “rendering canvas” when you enter in fullscreen mode.
yuzu previously used the resolution of the native game, so either 1280x720 in undocked mode and 1920x1080 in docked mode.
With this change, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8027&#34; data-gh-pr=&#34;8027&#34;&gt;the resolution of the desktop will be used instead&lt;/a&gt;
, allowing proper exclusive fullscreen support, and letting the scaling filters display as they should.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/v1993&#34;&gt;v1993&lt;/a&gt; applied some changes to the sockets (LAN and LDN) service, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8028&#34; data-gh-pr=&#34;8028&#34;&gt;allowing inexact address length values&lt;/a&gt;
.
This prevents crashes on &lt;code&gt;Minecraft&lt;/code&gt; v1.12.1, as the game passes zero as the value for the address length.&lt;/p&gt;
&lt;p&gt;toastUnlimited gave us a simple, but really important, quality of life change, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8035&#34; data-gh-pr=&#34;8035&#34;&gt;disabling the &lt;code&gt;Web Applet&lt;/code&gt; by default&lt;/a&gt;
.
This was necessary due to many games having issues with it. The &lt;code&gt;Web Applet&lt;/code&gt; is responsible for blocking controller input, and not many users are interested in the tutorials the service is mostly used for, so it’s a sacrifice worth the small loss.
For anyone interested, the Web Applet can be re-enabled from &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; General &amp;gt; Debug &amp;gt; Disable Web Applet&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And continuing on the topic of quality of life changes, yuzu will now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8107&#34; data-gh-pr=&#34;8107&#34;&gt;save the fullscreen status&lt;/a&gt;
 for future boots.
Close or stop a game while in fullscreen and the emulator will automatically maximize for you when you start the next one!&lt;/p&gt;
&lt;p&gt;german77 couldn’t let a month pass without contributing a pull request!
He’s fighting to make &lt;code&gt;Flip Wars&lt;/code&gt; compatible.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8120&#34; data-gh-pr=&#34;8120&#34;&gt;Correctly adding a Signal event on &lt;code&gt;AcquireNpadStyleSetUpdateEventHandle&lt;/code&gt;&lt;/a&gt;
 makes the game playable.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./flip1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/flip1_hucd64bd324f9cb8fd56d94b5de118b0bf_769360_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Flip Wars&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./flip2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/flip2_hu50d37d954a8dcd6e79d683d3f2da44af_2128867_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Flip Wars&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Flip Wars&lt;/p&gt;


&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;Merry is testing &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/8089&#34; data-gh-pr=&#34;8089&#34;&gt;adding a &lt;code&gt;Paranoid&lt;/code&gt; CPU accuracy&lt;/a&gt;
, an option not for the faint of heart!
It would disable most optimizations (but not fastmem) with the main purpose of aiding in CPU optimization debugging, but we all know it will be used for extra comfort if there is CPU performance to spare.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Project Gaia&lt;/code&gt; is experiencing some minor delays caused by new additions Nintendo made in recent firmware updates.&lt;/p&gt;
&lt;p&gt;And regarding &lt;code&gt;Project Y.F.C.&lt;/code&gt;, we’re measuring performance increases, as well as getting games to render for the first time:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./hades.png&#34; title=&#34; It&amp;#39;s one hell of a game! (Hades)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2022/hades_hu751a721e2f4c16eaae789b68aa59514d_6378114_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; It&amp;#39;s one hell of a game! (Hades)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; It&amp;#39;s one hell of a game! (Hades)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=b9434BoGkNQ&#34;&gt;That’s all folks!&lt;/a&gt; Thank you for staying with us, and see you next month!&lt;/p&gt;
&lt;p&gt;We will include relevant kernel changes in the next report.&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report February 2022</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/</link>
      <pubDate>Tue, 15 Mar 2022 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/</guid>
      <description>&lt;p&gt;Glad to have you here, yuz-ers! This month, we&amp;rsquo;re proud to showcase a ton of kernel changes that finally fix long standing bugs, massive performance improvements, UI and input changes, and more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Glad to have you here, yuz-ers! This month, we&amp;rsquo;re proud to showcase a ton of kernel changes that finally fix long standing bugs, massive performance improvements, UI and input changes, and more!&lt;/p&gt;
&lt;p&gt;But first, we present to you: a heavily requested feature. Not for yuzu, but for our articles.&lt;/p&gt;
&lt;p&gt;While we try to only discuss changes that are currently available in Mainline builds, due to time constraints or delays, we sometimes list pull requests that will be in Early Access for a few extra days after the release of a progress report.&lt;/p&gt;
&lt;p&gt;To allow for accurate status reports, &lt;a href=&#34;https://github.com/liushuyu&#34;&gt;liushuyu&lt;/a&gt; implemented hovercards that we writers can then add to links for pull requests.
If you place the mouse over the dotted hyperlink, you will be able to see the current status, title, number, and merge date of a PR. Try it &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7969&#34; data-gh-pr=&#34;7969&#34;&gt;here!&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;The different possible statuses are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Red: Pull request closed, it won’t be part of any build&lt;/li&gt;
&lt;li&gt;Purple: Merged to master, it already is on Mainline, or will be in 24 hours at most (if our buildbot doesn’t die in the process!)&lt;/li&gt;
&lt;li&gt;Green: Pull request open, not yet added to Mainline unless it has the &lt;code&gt;mainline-merge&lt;/code&gt; tag, check the pull request link to confirm&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./merge.png&#34; title=&#34; There are a few more, but these 3 are the most important&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/merge_hu81935222040418684ec4c29d151e6ed8_1270_125x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; There are a few more, but these 3 are the most important&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; There are a few more, but these 3 are the most important&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;You can come back to the articles at any time from now on to see if a feature has been merged to Mainline already, as these cards will update dynamically accordingly.
Keep in mind that this is not an immediate process.
A merged pull request will be added to Mainline in the next autobuild, so it may take up to 24 hours to see a status change on this site.&lt;/p&gt;
&lt;p&gt;With that out of the way, let’s get started!&lt;/p&gt;
&lt;h2 id=&#34;graphical-fixes-and-how-to-increase-performance&#34;&gt;Graphical fixes, and how to increase performance&lt;/h2&gt;
&lt;p&gt;Due to problems with the RADV drivers on Linux, using the Vulkan API would crash yuzu when run on AMD&amp;rsquo;s RDNA2 graphics cards.
Most notably, this problem affected the Steam Deck, as reported by users who tried testing yuzu on their devices.&lt;/p&gt;
&lt;p&gt;It was determined that the crash happened because of &lt;code&gt;VK_EXT_vertex_input_dynamic_state&lt;/code&gt;, a Vulkan extension used to minimize the number of pipeline objects needed during the shader compilation process.
These structures are massive, and sometimes, a game may want to change only a small portion of the contents held in them, such as the vertex input state.
Using this extension allows the API to dynamically change these members in the structure with a simple function call, eliminating the need to create a whole new object, thus, reducing the amount of resources used by the operation.&lt;/p&gt;
&lt;p&gt;While this bug is being resolved upstream, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; pushed a PR to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7953&#34; data-gh-pr=&#34;7953&#34;&gt;blacklist the extension&lt;/a&gt;
 on RDNA2 devices running RADV drivers, so yuzu does not outright crash.&lt;/p&gt;
&lt;p&gt;But there was still one more driver with problems for us out there.&lt;/p&gt;
&lt;p&gt;Mesa&amp;rsquo;s ANV driver on Linux does not support the texture format &lt;code&gt;VK_FORMAT_B5G6R5_UNORM_PACK16&lt;/code&gt;, and this caused yuzu to crash when running a game that made use of it, such as &lt;code&gt;Bowser&#39;s Fury&lt;/code&gt;.
To bypass this problem, &lt;a href=&#34;https://github.com/voidanix&#34;&gt;voidanix&lt;/a&gt; implemented a solution that emulates &lt;code&gt;BGR565&lt;/code&gt; textures by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7913&#34; data-gh-pr=&#34;7913&#34;&gt;swizzling the RGB565 format&lt;/a&gt;
 instead.&lt;/p&gt;
&lt;p&gt;In a similar vein, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; implemented a &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7948&#34; data-gh-pr=&#34;7948&#34;&gt;missing vertex format&lt;/a&gt;
, used by the title &lt;code&gt;パワプロクンポケットR&lt;/code&gt; (Power Pro Kun Pocket R).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/asLody&#34;&gt;asLody&lt;/a&gt; also implemented a missing &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7939&#34; data-gh-pr=&#34;7939&#34;&gt;framebuffer format&lt;/a&gt;
, this time used by &lt;code&gt;Yo-kai Watch 4&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ykw4.png&#34; title=&#34; The original name is technically 妖怪ウォッチ4 ぼくらは同じ空を見上げている (Youkai Wotchi Bokura wa Onaji Sora wo Miageteiru)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/ykw4_hu687f3e679a861732c6db5baff0f9fd2a_889030_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The original name is technically 妖怪ウォッチ4 ぼくらは同じ空を見上げている (Youkai Wotchi Bokura wa Onaji Sora wo Miageteiru)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The original name is technically 妖怪ウォッチ4 ぼくらは同じ空を見上げている (Youkai Wotchi Bokura wa Onaji Sora wo Miageteiru)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Another fix by this developer was &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7930&#34; data-gh-pr=&#34;7930&#34;&gt;adding missing semaphore operations&lt;/a&gt;
 for &lt;code&gt;MaxwellDMA&lt;/code&gt;, used  by &lt;code&gt;Legend of Zelda: Breath of the Wild&lt;/code&gt; and &lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;kernel-changes-and-how-to-tame-smash&#34;&gt;Kernel changes, and how to tame Smash&lt;/h2&gt;
&lt;p&gt;Continuing with the ongoing work on the kernel, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; has &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7956&#34; data-gh-pr=&#34;7956&#34;&gt;revamped the kernel memory manager&lt;/a&gt;
 to make it more compatible with the latest system updates.&lt;/p&gt;
&lt;p&gt;One neat setting that came along with these changes is the ability for yuzu to support different memory layouts, such as the &amp;ldquo;6 GB extended memory layout&amp;rdquo;, used in developer units (a feature requested by the modding community).&lt;/p&gt;
&lt;p&gt;Some mods can utilize more RAM than the Switch can provide, mainly high resolution texture replacements.
To solve this issue, bunnei &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7932&#34; data-gh-pr=&#34;7932&#34;&gt;added a toggle to enable the extended 6GB memory layout&lt;/a&gt;
 that real developer kits would have available.
Those extra 2GB will allow heavy mods to work without issues.
You can find the setting in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; General &amp;gt; Extended memory layout (6GB DRAM)&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./6gb.png&#34; title=&#34; Mod away!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/6gb_hu216ad3ff93f856274df4c4bc00b0494d_21287_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Mod away!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Mod away!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Don’t expect it to make a difference in emulation performance, games will not care if the emulated console has more than 4GB, they only care about having enough free memory for their operations.&lt;/p&gt;
&lt;p&gt;bunnei has also been improving the accuracy of the page table management by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7835&#34; data-gh-pr=&#34;7835&#34;&gt;migrating locks to using emulated guest locks&lt;/a&gt;
 and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7919&#34; data-gh-pr=&#34;7919&#34;&gt;improving the mapping and unmapping of physical memory&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;As always, the biggest motivator behind this work is increasing the accuracy of our implementation, while also fixing any bugs that may have been hiding there these past years.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/merryhime/dynarmic&#34;&gt;Dynarmic&lt;/a&gt;, our ARM JIT recompiler, also got a number of new optimizations and bugfixes this month.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; corrected the fencing logic for the serialization of memory store/load operations in Dynarmic&amp;rsquo;s &lt;code&gt;x64&lt;/code&gt; code emitter, and subsequently &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7827&#34; data-gh-pr=&#34;7827&#34;&gt;updated the submodule&lt;/a&gt;
 to bring these changes into yuzu&amp;rsquo;s codebase.
This fixed the freezes that affected &lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;While investigating the stability issues of &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;, bunnei and &lt;a href=&#34;https://github.com/merryhime&#34;&gt;Merry&lt;/a&gt; found that the problem was caused by an error in the &lt;code&gt;SpaceRemaining&lt;/code&gt; function, used to calculate the remaining space available for JITed code in a cache block.&lt;/p&gt;
&lt;p&gt;Dynarmic splits these code blocks in two regions, named &lt;code&gt;near&lt;/code&gt; and &lt;code&gt;far&lt;/code&gt;.
This scheme aims to minimize L1 CPU cache misses by keeping &amp;ldquo;hot&amp;rdquo; code in &lt;code&gt;near&lt;/code&gt; readily available for execution, while &amp;ldquo;cold&amp;rdquo; code is pushed into the &lt;code&gt;far&lt;/code&gt; region.
Due to a bug in the way the remaining space was being computed, the &lt;code&gt;near&lt;/code&gt; region would overflow into the &lt;code&gt;far&lt;/code&gt; region, overwriting &amp;ldquo;cold&amp;rdquo; code with &amp;ldquo;hot&amp;rdquo; code.
The CPU would then attempt to run the &amp;ldquo;cold&amp;rdquo; code that was previously there, and crash horribly on the try.&lt;/p&gt;
&lt;p&gt;Ultimately (no pun intended), this translated as crashes after a few matches in &lt;code&gt;SSBU&lt;/code&gt;, since that was the time it took to run out of space and overflow the cache.
By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7955&#34; data-gh-pr=&#34;7955&#34;&gt;correcting the comparisons&lt;/a&gt;
 used to compute this value, the devs were finally able to mitigate one of the longest-standing problems surrounding this title.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smash.png&#34; title=&#34; We did so many CPU fights to test these changes... (Super Smash Bros. Ultimate)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/smash_hu33dedfc804962c1d3954a4b503d0d770_4222381_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; We did so many CPU fights to test these changes... (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; We did so many CPU fights to test these changes... (Super Smash Bros. Ultimate)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Merry has also been busy &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7959&#34; data-gh-pr=&#34;7959&#34;&gt;implementing support for a new CPU optimization&lt;/a&gt;
, which makes the emulation of ARM exclusive access instructions through the use of &lt;code&gt;cmpxchg&lt;/code&gt; (compare and exchange) instruction of the &lt;code&gt;x64&lt;/code&gt; architecture.&lt;/p&gt;
&lt;p&gt;The ARM instruction set contains instructions that can exclude access to a memory address, so that only some instructions — a pair, in this case: one for reading values, and another for writing them — can operate safely in a multicore environment, without the interference of instructions from other threads, who may also want to access the same value in memory.&lt;/p&gt;
&lt;p&gt;It achieves this by marking the address &amp;ldquo;for exclusive access&amp;rdquo; after reading the value in memory, so that an &amp;ldquo;exclusive&amp;rdquo; store instruction only writes into this address if it is marked with this flag.
A &amp;ldquo;normal&amp;rdquo; store instruction, on the other hand, was designed to always clear this flag after writing.
Thus, the exclusive instructions can use this information to know when the value in the memory address was altered by a non-exclusive instruction, and restart the whole job again, until the operation succeeds.&lt;/p&gt;
&lt;p&gt;ARM is able to control this behaviour through a piece of hardware called the &lt;code&gt;Exclusive Monitor&lt;/code&gt;.
But emulating these instructions accurately on the &lt;code&gt;x64&lt;/code&gt; architecture can be very difficult, given the complex nature of testing and debugging in a multithreaded environment.
Thus, their previous implementation was rather conservative and inefficient, to ensure concurrency.&lt;/p&gt;
&lt;p&gt;It is possible, however, to approximate the original behaviour through the use of &lt;code&gt;cmpxchg&lt;/code&gt;, which compares the value in the memory address with a reference, and if they match, it writes a new value into it.
Thus, one can use the value in a memory address as the reference, and later write another value into the same address if, and only if, the stored value matches the reference.
Relying on the semantics of this instruction, exclusive memory reads and writes can be inlined into the JITed code and speed up their execution.&lt;/p&gt;
&lt;p&gt;Titles that make extensive use of these exclusive instructions, such as &lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt;, should see a slight increase in performance.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gnv.png&#34; title=&#34; Some Nvidia numbers&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/gnv_hu031b920913cda4a15e9e505b14a4a745_18511_600x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Some Nvidia numbers&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Some Nvidia numbers&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gamd.png&#34; title=&#34; Some AMD numbers&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/gamd_hu5bd339f16121d2108953bd3b0271a5ca_18611_600x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Some AMD numbers&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Some AMD numbers&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;general-bugfixes-and-ui-changes&#34;&gt;General bugfixes and UI changes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; did some work on the UI to spice things up.&lt;/p&gt;
&lt;p&gt;He &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7859&#34; data-gh-pr=&#34;7859&#34;&gt;improved SDL battery level detection&lt;/a&gt;
, realigned some of the UI elements in the control settings, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7839&#34; data-gh-pr=&#34;7839&#34;&gt;and gave us new, prettier battery symbols!&lt;/a&gt;
&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/batteryold_hu1b447a384d095bffc43d3390e3981dbe_16709_563x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Cute and simple!&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/batterynew_huc99b7214778d6d76dacce74353a323fe_17108_563x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Cute and simple!&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Cute and simple!&lt;/p&gt;


&lt;p&gt;german77 also &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7861&#34; data-gh-pr=&#34;7861&#34;&gt;added new hotkeys&lt;/a&gt;
 by popular request.
Joining the fray are Docked/Undocked (for controllers), Window Adapting Filter, GPU accuracy (switches between normal and high), and mute/unmute audio.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./hotkeys.png&#34; title=&#34; Once you master the hotkey-jutsu, no one will be able to stop you&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/hotkeys_huc1381fca4fd8c43a8516c1b256e6e6f8_30152_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Once you master the hotkey-jutsu, no one will be able to stop you&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Once you master the hotkey-jutsu, no one will be able to stop you&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Another highly requested fix was &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7867&#34; data-gh-pr=&#34;7867&#34;&gt;improving Amiibo support&lt;/a&gt;
.
Our old code wasn’t very accurate, leading to several games failing.
While there is room for improvement, this new implementation is far more accurate and should allow stable use of Amiibo dumps in most games now.&lt;/p&gt;
&lt;p&gt;We also want to announce that native support for NFC scanning of physical Amiibos is being worked on! We&amp;rsquo;ll have more information to share as progress is made.&lt;/p&gt;
&lt;p&gt;Morph fixed a weird issue that’s been appearing lately.
Under some circumstances, after reopening yuzu, the window would be a maximized borderless&amp;hellip; &lt;em&gt;thing&lt;/em&gt;.
As it turns out, for some reason the configuration file was not resetting the frameless flag after closing yuzu.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7849&#34; data-gh-pr=&#34;7849&#34;&gt;Forcing a removal of the flag&lt;/a&gt;
 at each boot solves the issue.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; added a very useful feature to modders and anyone interested in the internals of their games.
Previously, yuzu dumped the base &lt;code&gt;exeFS&lt;/code&gt;, which only includes data from the base game, missing any new addition from updates or DLCs.
Instead, by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7899&#34; data-gh-pr=&#34;7899&#34;&gt;dumping the patched &lt;code&gt;exeFS&lt;/code&gt;&lt;/a&gt;
, like &lt;a href=&#34;https://github.com/EliEron&#34;&gt;EliEron&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/4341&#34; data-gh-pr=&#34;4341&#34;&gt;suggested in the past&lt;/a&gt;
, users will have access to update files!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; found out that &lt;code&gt;Splatoon 2&lt;/code&gt; crashes when accessing the inventory in the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/#lan-party-time&#34;&gt;LAN lobby&lt;/a&gt;.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7887&#34; data-gh-pr=&#34;7887&#34;&gt;Stubbing the &lt;code&gt;IsUsbFullKeyControllerEnabled&lt;/code&gt; function&lt;/a&gt;
 is all that was needed.
Splat your friends with impunity!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./splat.png&#34; title=&#34; With all that ink evaporating into the atmosphere, rain must be fantastic&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/splat_hu896e4077958fe533550673b66c087324_1927747_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; With all that ink evaporating into the atmosphere, rain must be fantastic&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; With all that ink evaporating into the atmosphere, rain must be fantastic&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;For retro gaming fans, both toastUnlimited and german77 have fixes for the SNES and NES emulators included with the Nintendo Switch Online service (yes, you can dump and play those offline too).
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7878&#34; data-gh-pr=&#34;7878&#34;&gt;Stubbing&lt;code&gt;mnpp:app&lt;/code&gt;&lt;/a&gt;
 solves crashes, and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7877&#34; data-gh-pr=&#34;7877&#34;&gt;updating the process revision&lt;/a&gt;
 of our audio emulation allows the official emulators to work properly on yuzu.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nes.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/nes_hu20193fa9101533b62712b42e963af3d5_336412_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Our team members are big Earthbound fans&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./snes.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/snes_hu51783114a5a6ec7c1424706cbcbf0294_370523_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Our team members are big Earthbound fans&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./snes2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/snes2_hub0cad61f3fb342b7f38217e06536e2fe_365080_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Our team members are big Earthbound fans&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./snes3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/snes3_hude0d62fd26080349fd830f29239c08ad_431990_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Our team members are big Earthbound fans&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Our team members are big Earthbound fans&lt;/p&gt;


&lt;h2 id=&#34;input-improvements&#34;&gt;Input improvements&lt;/h2&gt;
&lt;p&gt;As it happens each month, german77 dominates this section.&lt;/p&gt;
&lt;p&gt;As a way to test how strong the current rumble setting is, you can now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7842&#34; data-gh-pr=&#34;7842&#34;&gt;force the controller to vibrate&lt;/a&gt;
 by pressing any button while the Configure Vibration window is open.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./rumble.png&#34; title=&#34; Joy-Con goes BRRRR&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/rumble_hu98406571c687dd5d809a40dddaa0e281_24212_421x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Joy-Con goes BRRRR&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Joy-Con goes BRRRR&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Gamepads have drift, not only in the exaggerated fashion Joy-Cons are known for, but every gamepad has a certain degree of drifting to it.
To hide this, consoles auto-center their sticks.&lt;/p&gt;
&lt;p&gt;On yuzu, one of the limitations of &lt;a href=&#34;https://www.libsdl.org/&#34;&gt;SDL&lt;/a&gt; is that it will only read the factory calibration on a Nintendo official controller, skipping any user calibration profile that may be available.
We counter this by auto-centering at boot, but sticks can still go anywhere they like, so german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7860&#34; data-gh-pr=&#34;7860&#34;&gt;adds an option to manually center each axis&lt;/a&gt;
 as an additional option.
Just right click any direction of a stick in our controller settings.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./center.png&#34; title=&#34; Just one right click away&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/center_hu6f1668d6259bb6aafd0e6765bc48fac0_5597_198x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Just one right click away&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Just one right click away&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Support was added to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7900&#34; data-gh-pr=&#34;7900&#34;&gt;allow mapping the Enter key&lt;/a&gt;
, which previously just restarted the mapping process.&lt;/p&gt;
&lt;p&gt;toastUnlimited &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7851&#34; data-gh-pr=&#34;7851&#34;&gt;added support for motion inputs&lt;/a&gt;
 to &lt;code&gt;yuzu-cmd&lt;/code&gt;, our terminal version of the executable.
Terminal warriors can now enjoy some Just Dance too.&lt;/p&gt;
&lt;h2 id=&#34;improving-emulation-to-not-use-emulation&#34;&gt;Improving emulation to not use emulation&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/xerpi&#34;&gt;xerpi&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7866&#34; data-gh-pr=&#34;7866&#34;&gt;implemented the 32 bit version&lt;/a&gt;
 of the &lt;code&gt;OutputDebugString&lt;/code&gt;, &lt;code&gt;CreateCodeMemory&lt;/code&gt;, and &lt;code&gt;ControlCodeMemory&lt;/code&gt; supervisor calls. Thanks!&lt;/p&gt;
&lt;p&gt;xerpi’s help has a bigger objective in mind than just helping some little-known Switch emulator.
They’re developing &lt;a href=&#34;https://github.com/xerpi/vita2hos&#34;&gt;vita2hos&lt;/a&gt;, a translation layer to run &lt;code&gt;PlayStation Vita&lt;/code&gt; apps and games natively on the Nintendo Switch!
The road ahead is long, since most Switch debug tools are 64-bit only, and the Vita is firmly a 32-bit console, so several rewrites and changes are in order to get the project going.&lt;/p&gt;
&lt;p&gt;yuzu lacks some functionality to offer full 32-bit execution mode support, so the PR was opened to help improve that area, since xerpi is using Switch emulators to assist and ease development.
We can’t wait to see how this project grows!&lt;/p&gt;
&lt;h2 id=&#34;vulkan-is-the-future&#34;&gt;Vulkan is the future&lt;/h2&gt;
&lt;p&gt;With the work on &lt;code&gt;Project Y.F.C&lt;/code&gt; and other changes scheduled, we’re slowly aiming for enabling Vulkan by default, and keeping OpenGL in long term support.
This section will not list changes in yuzu, but settings users can tweak to improve their Vulkan performance in yuzu and other emulators.&lt;/p&gt;
&lt;p&gt;One of the main issues with performance on Vulkan is the aggressive frequency management current GPUs will do to save power.
Since the actual 3D load produced by Nintendo Switch games will be very low for even a modern low-end GPU, clock speeds tend to stay on the power saving side of their spectrum.&lt;/p&gt;
&lt;p&gt;An easy way to considerably improve performance is to force the GPU to run at higher &lt;em&gt;sustained clock speeds&lt;/em&gt;. The highest value the GPU can reach is usually irrelevant here as most GPUs will be faster than a Switch’s Tegra X1, but the sustained clock speed is what will keep framerates high and stuttering to a minimum.&lt;/p&gt;
&lt;p&gt;NVIDIA users have a simple single setting in the &lt;code&gt;NVIDIA Control Panel&lt;/code&gt;, &lt;code&gt;Prefer maximum performance&lt;/code&gt;.
You can find this toggle in &lt;code&gt;3D Settings &amp;gt; Manage 3D settings &amp;gt; Program Settings tab&lt;/code&gt; click on &lt;code&gt;Add&lt;/code&gt; and select yuzu from the available options, then scroll down to &lt;code&gt;Power management mode&lt;/code&gt; and set it to &lt;code&gt;Prefer maximum performance&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./nvidia.png&#34; title=&#34; Ol&amp;#39; Reliable UI&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/nvidia_hu6b0eed30b9ba250597f7629c8b64362a_24617_558x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Ol&amp;#39; Reliable UI&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Ol&amp;#39; Reliable UI&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;On the AMD side, this requires a bit of manual work, and may only be compatible with RDNA based GPUs. Only relatively recent Radeon drivers added the option to tune both minimum and maximum GPU frequencies on the included &lt;code&gt;Radeon WattMan&lt;/code&gt;.
This can disable the warranty of your Radeon product.&lt;/p&gt;
&lt;p&gt;What needs to be done, in a similar way to NVIDIA, is to add yuzu as a profile on the &lt;code&gt;Gaming&lt;/code&gt; tab, click on &lt;code&gt;Tune Game Performance&lt;/code&gt; and set Tuning Control to &lt;code&gt;Custom&lt;/code&gt;.
Enable GPU Tuning and you will be able to tweak the &lt;code&gt;Min. Frequency (%)&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./radeon1.png&#34; title=&#34; While this can be set globally on Radeon Software, we recommend to use per-application profiles&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/radeon1_hud8c20c2b4efad20ba2bfe7295c17ad33_13187_589x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; While this can be set globally on Radeon Software, we recommend to use per-application profiles&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; While this can be set globally on Radeon Software, we recommend to use per-application profiles&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./radeon2.png&#34; title=&#34; Besides the GPU, increasing the memory clock speeds will always help in emulation, especially at high resolutions&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/radeon2_hu6913ef785bab1f828df9d9c127d9f89c_105716_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Besides the GPU, increasing the memory clock speeds will always help in emulation, especially at high resolutions&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Besides the GPU, increasing the memory clock speeds will always help in emulation, especially at high resolutions&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Using a humble (and worse than mediocre) RX 6500 XT as an example, we can see &lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt; increase its framerate up to 73% &lt;em&gt;for free&lt;/em&gt;, managing to surpass an RX 570 at ease, simply by raising the minimum clock speed from 500MHz to 2875MHz (a 475% increase, as the next graph shows).&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./radgraph.png&#34; title=&#34; Too much power-saving can also be a bad thing&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/radgraph_hu353aca7cbf77bdf26fdbb07389ca9d78_16566_600x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Too much power-saving can also be a bad thing&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Too much power-saving can also be a bad thing&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The performance gains here can be massive, but one can start to see diminishing returns past a certain point.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Project Y.F.C.&lt;/code&gt; continues to mature as more previously broken games start to become playable.
Blinkhawk informs us that he&amp;rsquo;s currently changing focus to performance.
We can&amp;rsquo;t wait to tell you more!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./yfc.png&#34; title=&#34; Fire Emblem Warriors&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/yfc_hu6b99ab594d9d152a4798ebba40080821_6869428_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Fire Emblem Warriors&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Fire Emblem Warriors&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Morph has a message regarding the progress of &lt;code&gt;Project Gaia&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gaia.png&#34; title=&#34; Poyo!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/gaia_hu446802e97ee1ad72696fbfe674b36bad_56301_163x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Poyo!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Poyo!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;And german77 has been playing with &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7964&#34; data-gh-pr=&#34;7964&#34;&gt;implementing a Mii editor applet&lt;/a&gt;
.
Current support is pretty barebones, but anyone interested is free to build the pull request and try it.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mii.png&#34; title=&#34; Sweet home Alabama?&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2022/mii_huae9adc6e4926b6aff660b843f63dbbb8_931976_882x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Sweet home Alabama?&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Sweet home Alabama?&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;That’s all folks! We thank you for your time, and we hope to see you next month. &lt;a href=&#34;https://www.youtube.com/watch?v=DsqfwQwPTH8&#34;&gt;Glory to Mankind&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report January 2022</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/</link>
      <pubDate>Fri, 11 Feb 2022 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/</guid>
      <description>&lt;p&gt;What a month we&amp;rsquo;ve had, yuz-ers. This time, we offer you a plethora of kernel changes, input fixes and new additions, yet more NVIDIA driver fixes, user interface changes, and more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;What a month we&amp;rsquo;ve had, yuz-ers. This time, we offer you a plethora of kernel changes, input fixes and new additions, yet more NVIDIA driver fixes, user interface changes, and more!&lt;/p&gt;
&lt;h2 id=&#34;psa-for-nvidia-users-part-3&#34;&gt;PSA for NVIDIA users: Part 3&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=g02QU-xPV1I&#34;&gt;It’s not over yet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2021/#paint-me-like-one-of-your-french-bits&#34;&gt;As you know&lt;/a&gt;, regular NVIDIA desktop and laptop GPUs don&amp;rsquo;t support decoding ASTC textures, so yuzu makes use of the compute capabilities of the GPU to parallelize the process. However, the recent release of the 511.XX drivers introduced an issue that affected our compute shader based accelerated ASTC texture decoding.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/astcbug_hudf65613a09f11d2219b4a6c8b47f7a85_2671847_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Crispy (Super Mario Odyssey)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/astcfix_hu5ebb00d6587d2862a15b803306246453_2335349_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Crispy (Super Mario Odyssey)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Crispy (Super Mario Odyssey)&lt;/p&gt;


&lt;p&gt;After some investigation, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; found that the reason for the bug is an over-optimization introduced by the new drivers (an optimization for one scenario results in issues for another).
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7724&#34; data-gh-pr=&#34;7724&#34;&gt;A small change in behaviour solves the issue&lt;/a&gt;
.
You can find more technical information in the pull request.&lt;/p&gt;
&lt;p&gt;Users playing &lt;code&gt;Hyrule Warriors: Age of Calamity&lt;/code&gt; or &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt; should stick to the 47X.XX series of drivers, as any version newer than that will have several rendering issues.
Don&amp;rsquo;t fret, we’re investigating the cause!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./aoc.png&#34; title=&#34; Abstract art generator (Hyrule Warriors: Age of Calamity)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/aoc_hu285d905a43d99b7853d806f0371def18_3399220_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Abstract art generator (Hyrule Warriors: Age of Calamity)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Abstract art generator (Hyrule Warriors: Age of Calamity)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;On the flip side, version 511.65 includes support for the recently released Vulkan 1.3, and improves performance considerably when using said API.
Some games show an increase in performance of up to 24%!&lt;/p&gt;
&lt;h2 id=&#34;a-new-legend&#34;&gt;A new Legend&lt;/h2&gt;
&lt;p&gt;Finally, after over two decades, the Pokémon franchise diverges from its tired formula and implements a big change to gameplay in the recently released &lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;All this at the cost of graphical fidelity. But hey, there are worse looking games&amp;hellip; &lt;a href=&#34;https://www.youtube.com/watch?v=-vak7MUaa5E&#34;&gt;on the GameCube&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Apart from the disappointing graphics, this game&amp;rsquo;s release exposed several issues with yuzu, and has even helped us fix long standing issues that affected many more games.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; fixed a deadlock found in the code used to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7787&#34; data-gh-pr=&#34;7787&#34;&gt;migrate threads among the cores&lt;/a&gt;
, which caused some noteworthy softlocks present in &lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The problem can be summarised as follows: One thread (thread &lt;code&gt;A&lt;/code&gt;) would be waiting for another one (thread &lt;code&gt;B&lt;/code&gt;) to release a lock, and conversely, thread &lt;code&gt;B&lt;/code&gt; would be waiting for thread &lt;code&gt;A&lt;/code&gt; to release another lock, resulting in a deadlock.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ending.png&#34; title=&#34; Best gameplay change in decades (Pokémon Legends: Arceus)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/ending_hue759304625ed183865854849b108fcb4_8093810_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Best gameplay change in decades (Pokémon Legends: Arceus)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Best gameplay change in decades (Pokémon Legends: Arceus)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Moving on from kernel issues, epicboy implemented various GPU changes.&lt;/p&gt;
&lt;p&gt;He found that &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7788&#34; data-gh-pr=&#34;7788&#34;&gt;reducing the amount of buffer allocations&lt;/a&gt;
 at the start, rather than only at the end, prevented the game from crashing in certain locations.&lt;/p&gt;
&lt;p&gt;Some Vulkan drivers, especially Intel Windows ones, can’t process 64-bit atomic operations (operations that can run independently of any other processes).
epicboy &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7800&#34; data-gh-pr=&#34;7800&#34;&gt;adds support in yuzu for unsigned 2x32-bit atomic operations&lt;/a&gt;
, as that’s the fallback option such drivers use.
With this change, the game boots with Intel GPUs running Vulkan.&lt;/p&gt;
&lt;p&gt;AMD had a longstanding issue with &lt;code&gt;Transform Feedback&lt;/code&gt; in both their official Windows and Linux drivers, causing rendering issues in countless games.
While this was recently solved in the Linux AMDVLK drivers, AMD Windows drivers still need to be told which &lt;code&gt;Execution Mode&lt;/code&gt; will be in use next.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7799&#34; data-gh-pr=&#34;7799&#34;&gt;Explicitly stating to use Xfb&lt;/a&gt;
 &lt;code&gt;Execution Mode&lt;/code&gt; before starting to use Transform Feedback solves all issues related to it on AMD Windows Vulkan drivers, not only benefiting &lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt;, but also games like &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt;, &lt;code&gt;Xenoblade Chronicles Definitive Edition&lt;/code&gt;, &lt;code&gt;Hellblade: Senua&#39;s Sacrifice&lt;/code&gt;, &lt;code&gt;Donkey Kong Country: Tropical Freeze&lt;/code&gt;, &lt;code&gt;POKKÉN TOURNAMENT DX&lt;/code&gt;, and many many others.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/tfbug1_hue9411cc7536af469208c80598dd07414_2665205_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon Legends: Arceus&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/tffix1_hu5ccb1c396bb47f7dfeb4331e193154c5_2658050_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon Legends: Arceus&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Pokémon Legends: Arceus&lt;/p&gt;


&lt;p&gt; &lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/tfbug2_hu8459351e855ab12288bc64f92f8fa0d2_2477937_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Xenoblade Chronicles Definitive Edition&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/tffix2_hu953dd607e7a3f40d06370c7d8bd36d42_2348352_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Xenoblade Chronicles Definitive Edition&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Xenoblade Chronicles Definitive Edition&lt;/p&gt;


&lt;p&gt; &lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/tfbug3_hudd945f1e85c25d99e224f37b02618517_2520067_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Donkey Kong Country: Tropical Freeze&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/tffix3_huadf4532e3d1e7bac4ebcc8672cc2e74d_2516873_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Donkey Kong Country: Tropical Freeze&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Donkey Kong Country: Tropical Freeze&lt;/p&gt;


&lt;p&gt;&lt;code&gt;Pokémon Legends: Arceus&lt;/code&gt; is affected by vertex explosions, exhibiting what looks like textures stretching at random.
The bad news is that this is a problem with the &lt;code&gt;Buffer Cache&lt;/code&gt;, and fixing it will take considerable time.&lt;/p&gt;
&lt;p&gt;The good news is that &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;, with some help from epicboy, managed to implement a temporary workaround to avoid this problem while a permanent solution starts taking shape.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7805&#34; data-gh-pr=&#34;7805&#34;&gt;Flushing the buffer before writing&lt;/a&gt;
 saves us from polygon hell, at a minimal performance cost.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/vebug_hu08cbe94a54aa7bc4ea86b34ea205d334_3250704_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Imagine how it looks from space (Pokémon Legends: Arceus)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/vefix_hubda5e64cad132bfdb67f9294d44f50f9_3604160_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Imagine how it looks from space (Pokémon Legends: Arceus)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Imagine how it looks from space (Pokémon Legends: Arceus)&lt;/p&gt;


&lt;p&gt;Mark this the day we start to plan yet another Buffer Cache Rewrite.&lt;/p&gt;
&lt;p&gt;As a start, Arceus showed a considerably higher VRAM use than normal, causing 2GB GPU users to crash during cutscenes.
Blinkhawk’s solution is to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7812&#34; data-gh-pr=&#34;7812&#34;&gt;expand the specific direction the buffer cache is increasing&lt;/a&gt;
, instead of the previous method of doubling the size.
This allows 2GB users to play regularly, and 4GB users to be able to scale to 2x without fear of crashes.&lt;/p&gt;
&lt;p&gt;Now for some general recommendations:&lt;/p&gt;
&lt;p&gt;Having a save from previous Switch Pokémon games will unlock special clothing options after the tutorial.&lt;/p&gt;
&lt;p&gt;We measured a slim performance improvement on the (currently) latest 22.2.1 AMD Windows drivers and, as mentioned, a 24% boost with the 511.65 NVIDIA Windows driver.
Chad Vulkan 1.3 lending a hand.&lt;/p&gt;
&lt;p&gt;Regarding GPU accuracy, while &lt;code&gt;Normal&lt;/code&gt; produces the highest performance, &lt;code&gt;High&lt;/code&gt; allows for proper particle rendering, so if you want the extra accuracy and have the performance to spare, stick to &lt;code&gt;High&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Effects, particles, and certain attacks seem to render incorrectly at resolutions over native 1x. While we’re investigating the reason for this, it seems to also happen on the Switch itself, so it could just be the nature of these shaders (feels reminiscent of the ghosting in the &lt;a href=&#34;https://www.reddit.com/r/Citra/comments/ft28sw/is_there_any_way_to_fix_ghosting_on_pokemon_ultra/&#34;&gt;3DS Pokémon games&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./particles.png&#34; title=&#34; Thanks Serfrost! (Pokémon Legends: Arceus)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/particles_hu238c6c6141706592182685d1eeada71d_178531_364x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Thanks Serfrost! (Pokémon Legends: Arceus)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Thanks Serfrost! (Pokémon Legends: Arceus)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;yuzu’s default setting is to run games in OpenGL using GLASM, commonly known as assembly shaders.
These settings will cause weird shadow acne on characters, and the solution is to either use GLSL instead of GLASM, or what we recommend, switch to Vulkan altogether.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/glasmbug_hu5f1c9cf786614a02a448d0b135beb60d_6252815_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Broken shadows? Zero! (Pokémon Legends: Arceus)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/glasmfix_hu2cab055210f523a42c9ed86fd9d34951_6991844_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Broken shadows? Zero! (Pokémon Legends: Arceus)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Broken shadows? Zero! (Pokémon Legends: Arceus)&lt;/p&gt;


&lt;p&gt;Users of Radeon GPUs older than the 400 series running Windows will experience crashes due to outdated and out of support drivers.
Not even modified drivers seem to help, so the only solution is to use Linux with its still supported, and quite faster, Mesa drivers.&lt;/p&gt;
&lt;p&gt;Finally, excessive mod use or high values of &lt;code&gt;Anisotropic Filtering&lt;/code&gt; can cause vertex explosions with some GPU configurations. We’re still investigating the cause for this.&lt;/p&gt;
&lt;h2 id=&#34;other-graphical-fixes&#34;&gt;Other graphical fixes&lt;/h2&gt;
&lt;p&gt;Blinkhawk made some &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7720&#34; data-gh-pr=&#34;7720&#34;&gt;changes to the Garbage Collector&lt;/a&gt;
 (&lt;code&gt;GC&lt;/code&gt;), which encompasses a number of bug fixes, improving the algorithm to make it clean memory in a smarter fashion, and also making it more efficient for iGPUs.&lt;/p&gt;
&lt;p&gt;The value of the &lt;code&gt;minimal&lt;/code&gt;, &lt;code&gt;expected&lt;/code&gt;, and &lt;code&gt;critical&lt;/code&gt; thresholds were rebalanced, so that it does not act as aggressively on GPUs with more memory, while it still performs the job within an acceptable margin for low-memory graphics cards.
Additionally, yuzu now queries the size of the GPU memory instead of estimating it, allowing the &lt;code&gt;GC&lt;/code&gt; to make better decisions when cleaning it.
These changes seek to benefit both low-end and high-end GPUs the most, without affecting either negatively.&lt;/p&gt;
&lt;p&gt;Special consideration was put on ASTC textures, which are notoriously heavy on the memory.
The &lt;code&gt;GC&lt;/code&gt; would clean them too early, causing graphical corruptions on titles that make use of these resources.
For this reason, the conditions to determine when to clean ASTC textures were made less strict, which should mitigate the problem in most scenarios.&lt;/p&gt;
&lt;p&gt;Although these changes were originally part of the &lt;code&gt;YFC&lt;/code&gt; project, Blinkhawk decided to implement these changes now, in order to alleviate the problems related to the previous &lt;code&gt;GC&lt;/code&gt; implementation.
There is still a lot to come from this project, so please stay tuned for more information in future updates.&lt;/p&gt;
&lt;p&gt;Keep in mind, special case titles like &lt;code&gt;ASTRAL CHAIN&lt;/code&gt; will still require 3GB of VRAM or more to properly emulate.&lt;/p&gt;
&lt;p&gt;On another hand, some titles, such as the &lt;code&gt;Super Mario 64&lt;/code&gt; port (homebrew), would experience freezes in some GPU models (especially iGPUs).&lt;/p&gt;
&lt;p&gt;Blinkhawk investigated the problem, and noticed it lay within our Vulkan Scheduler, a class that abstracts the command buffer so it can perform OpenGL-like operations in a Vulkan environment.&lt;/p&gt;
&lt;p&gt;As the scheduler manages the order in which it must queue GPU commands before sending them to the device, it is vital that the fencing logic used to determine this is timed correctly.&lt;/p&gt;
&lt;p&gt;Previously, the scheduler would only queue command chunks whose type offsets were different from zero.
The problem arose because there exists a specific valid type of command whose offset is actually zero.
Not taking into consideration this case hindered the fencing logic of the scheduler, preventing it from performing its work properly.&lt;/p&gt;
&lt;p&gt;Thankfully, the solution did not require any difficult change, and Blinkhawk was able to mitigate these freezes by &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7814&#34; data-gh-pr=&#34;7814&#34;&gt;submitting a simple patch&lt;/a&gt;
 that addresses this specific problem.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mario.png&#34; title=&#34; It&amp;#39;s-a him! (Super Mario 64 homebrew)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/mario_hu186cf830aabf9bca7817f7545aa9f7c6_1339705_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; It&amp;#39;s-a him! (Super Mario 64 homebrew)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; It&amp;#39;s-a him! (Super Mario 64 homebrew)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;kernel-changes&#34;&gt;Kernel changes&lt;/h2&gt;
&lt;p&gt;The code for Memory Management — one of the functions of the kernel — was originally written back in early 2020, based on the information available at the time.
Since then, there have been numerous updates to the Nintendo Switch&amp;rsquo;s operating system, as well as new documentation obtained through reverse engineering.&lt;/p&gt;
&lt;p&gt;For this reason, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; has been going through each and every part of the code used to manage the memory, focusing on improving both the stability and the accuracy of the kernel.&lt;/p&gt;
&lt;p&gt;These changes involved brushing up the memory &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7684&#34; data-gh-pr=&#34;7684&#34;&gt;attribute definitions&lt;/a&gt;
 and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7698&#34; data-gh-pr=&#34;7698&#34;&gt;permissions&lt;/a&gt;
, so they match the behaviour of the latest &lt;code&gt;HorizonOS&lt;/code&gt; more closely.
Most of the code used to map and unmap memory was &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7762&#34; data-gh-pr=&#34;7762&#34;&gt;tidied up&lt;/a&gt;
, and various functions were renamed to match the official naming.
Similarly, the code used to allocate and clear the heap memory was &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7701&#34; data-gh-pr=&#34;7701&#34;&gt;reviewed&lt;/a&gt;
 in this way.&lt;/p&gt;
&lt;p&gt;This new implementation should perform better, and also make the code easier to read and navigate.&lt;/p&gt;
&lt;p&gt;While investigating the long-standing crashes pertaining to &lt;code&gt;Pokémon Sword/Shield&lt;/code&gt;, bunnei found they were related to race conditions.&lt;/p&gt;
&lt;p&gt;The first would happen when opening a new session to a service: that is, yuzu would create a &lt;code&gt;host thread&lt;/code&gt; (a non-emulated thread), where service session requests can be dispatched to asynchronously.
When this session was closed, the &lt;code&gt;host thread&lt;/code&gt; for the closing session was being removed from the tracking list at the same time as a new one was added, which caused the race condition.&lt;/p&gt;
&lt;p&gt;Services are requested by games when they want to send certain audio to play to the speakers, request certain graphics to be loaded into memory, etc.
&lt;code&gt;Pokémon Sword/Shield&lt;/code&gt;, in particular, opens and closes LDN service sessions very frequently, which is why it is one of the most affected titles.&lt;/p&gt;
&lt;p&gt;By &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7711&#34; data-gh-pr=&#34;7711&#34;&gt;introducing a worker thread to manage the service list&lt;/a&gt;
, now only one thread will be able to create or destroy service sessions, preventing the crash from happening.&lt;/p&gt;
&lt;p&gt;Following this lead, bunnei revisited the code used to exit threads, and found that another race condition occurred, where thread references were being destroyed while they were still selectable for scheduling, resulting in a crash.&lt;/p&gt;
&lt;p&gt;The solution was to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7712&#34; data-gh-pr=&#34;7712&#34;&gt;reimplement the thread termination code more accurately&lt;/a&gt;
, so that it matches that of the HorizonOS.
yuzu now waits for the thread to be unscheduled from all cores before closing it, so that it is destroyed only when it is no longer running.&lt;/p&gt;
&lt;p&gt;Another long-standing problem with &lt;code&gt;Pokémon Sword/Shield&lt;/code&gt; was related to the code used for the High-Level Emulation (&lt;code&gt;HLE&lt;/code&gt;) Service Thread Management.&lt;/p&gt;
&lt;p&gt;When a game requests certain services, instead of emulating the internal logic of the Nintendo Switch&amp;rsquo;s OS (which would be Low-Level Emulation, &lt;code&gt;LLE&lt;/code&gt;), yuzu runs an implementation written by the developers that performs the same job on the user&amp;rsquo;s computer.&lt;/p&gt;
&lt;p&gt;These &lt;code&gt;HLE&lt;/code&gt; services need to be able to interact with the emulated kernel, in order to grab locks and triggers for rescheduling, etc.
yuzu achieves this by making use of &lt;code&gt;dummy threads&lt;/code&gt;, which are created as an emulated &lt;code&gt;KThread&lt;/code&gt; entity.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;dummy thread&lt;/code&gt; is created for every &lt;code&gt;host thread&lt;/code&gt; of a service interface running in the user&amp;rsquo;s computer, so that whenever the kernel needs to interact with a &lt;code&gt;host thread&lt;/code&gt;, it can do so through these &lt;code&gt;dummy threads&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Previously, these &lt;code&gt;dummy threads&lt;/code&gt; were not being released when their main thread was destroyed, and hence, they would accumulate over time.
Since the kernel imposes a limit on the amount of threads a process can make, yuzu was eventually unable to create more threads to open service interfaces in long gaming sessions.
Furthermore, these dummy threads could inadvertently be scheduled on the emulated cores, which resulted in a crash, as they are not real threads meant to be run.&lt;/p&gt;
&lt;p&gt;After investigating these problems, bunnei &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7737&#34; data-gh-pr=&#34;7737&#34;&gt;implemented various fixes and checks&lt;/a&gt;
 to correct this faulty behaviour, and prevent resource leaks and crashes.&lt;/p&gt;
&lt;p&gt;Next, bunnei &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7765&#34; data-gh-pr=&#34;7765&#34;&gt;fixed the KThread counter increment/decrement&lt;/a&gt;
 operations, as the old implementation was incorrect, and could occasionally underflow.
This is the aforementioned counter used to keep track of all the &lt;code&gt;KThread&lt;/code&gt;s in a process, ensuring the limits imposed by the kernel are not breached.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; also took a look at the kernel, and added a new shut-down method to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7670&#34; data-gh-pr=&#34;7670&#34;&gt;properly synchronise threads&lt;/a&gt;
 before their destruction.
This change fixes a hang that could occur when stopping emulation in yuzu.&lt;/p&gt;
&lt;h2 id=&#34;ui-improvements&#34;&gt;UI improvements&lt;/h2&gt;
&lt;p&gt;In a series of minor changes, a number of contributors decided to improve and correct some elements displayed on our interface, and the way the user can interact with them.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; noticed that some items, such as the &lt;code&gt;Stop&lt;/code&gt; and &lt;code&gt;Start&lt;/code&gt; buttons, were not being disabled from interaction once the emulation process stopped, and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7662&#34; data-gh-pr=&#34;7662&#34;&gt;promptly fixed this erroneous behaviour&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;He also went ahead and implemented the graphical elements needed to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7735&#34; data-gh-pr=&#34;7735&#34;&gt;report the battery levels&lt;/a&gt;
 of UDP controllers.
While this code has been in yuzu&amp;rsquo;s source for some time already, preparing the appropriate front-end graphics and the subsequent implementation into the UI had been pending tasks for a long time.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./battery.png&#34; title=&#34; Pretty useful for Joy-Cons!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/battery_hu19ac21f35d052cb3c35318f0bb445daa_72409_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Pretty useful for Joy-Cons!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Pretty useful for Joy-Cons!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7768&#34; data-gh-pr=&#34;7768&#34;&gt;updating the AMD FidelityFX Super Resolution&lt;/a&gt;
 (&lt;code&gt;FSR&lt;/code&gt;) dependency to the latest version, &lt;a href=&#34;https://github.com/Moonlacer&#34;&gt;Moonlacer&lt;/a&gt; changed the text string to replace the brackets around the &lt;code&gt;Vulkan Only&lt;/code&gt; message with parenthesis, for consistency with all the other text in our interface.&lt;/p&gt;
&lt;p&gt;In a similar vein, &lt;a href=&#34;https://github.com/gidoly&#34;&gt;gidoly&lt;/a&gt; corrected a series of spelling mistakes in the strings describing the name of commercial gamepads, namely the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7713&#34; data-gh-pr=&#34;7713&#34;&gt;PlayStation&lt;/a&gt;
 and &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7715&#34; data-gh-pr=&#34;7715&#34;&gt;Xbox&lt;/a&gt;
 controllers.&lt;/p&gt;
&lt;p&gt;Based on a Patreon poll conducted in our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;discord server&lt;/a&gt;, gidoly also made the necessary changes to make the &lt;code&gt;Dark Colorful&lt;/code&gt; theme the &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7719&#34; data-gh-pr=&#34;7719&#34;&gt;default theme&lt;/a&gt;
 used when running yuzu for the first time on Windows.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/v1993&#34;&gt;v1993&lt;/a&gt; also made changes, so that now using the Colourful theme &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7755&#34; data-gh-pr=&#34;7755&#34;&gt;allows Qt to use the system-wide colours in *NIX systems&lt;/a&gt;
, instead of forcing dark ones.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./theme.png&#34; title=&#34; Default by popular demand&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/theme_hu455c78d7642c595a8ede7fbd70c1eb0f_119512_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Default by popular demand&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Default by popular demand&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Naturally, users can still change the theme through the configuration settings, if so desired.&lt;/p&gt;
&lt;h2 id=&#34;input-changes&#34;&gt;Input changes&lt;/h2&gt;
&lt;p&gt;german77 has been &lt;em&gt;especially&lt;/em&gt; busy this month, so there’s quite a bit to cover in this section.&lt;/p&gt;
&lt;p&gt;Users reported that the game &lt;code&gt;パワプロクンポケットR&lt;/code&gt;, and other games of the Power Pocket saga, crashed when in-game.
This is caused by the &lt;code&gt;SetNpadAnalogStickUseCenterClamp&lt;/code&gt; service being able to initialize the &lt;code&gt;applet_resource&lt;/code&gt; subsystem even if it wasn’t initialized before.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7726&#34; data-gh-pr=&#34;7726&#34;&gt;Emulating this behaviour solves the issue and makes some game modes playable&lt;/a&gt;
.
However, some game modes still show that yuzu lacks support for some vertex formats, causing crashes.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./power.png&#34; title=&#34; パワプロクンポケットR&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/power_hu28a1a280088c1b4955c7f1e94fe7e71f_4506448_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; パワプロクンポケットR&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; パワプロクンポケットR&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;yuzu will now &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7663&#34; data-gh-pr=&#34;7663&#34;&gt;only display the currently supported controller types in the applet&lt;/a&gt;
, depending on what each game reports as compatible.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Fullkey&lt;/code&gt; is the codename used by Nintendo to refer to a generic type of controller that reports itself as a Pro Controller if you connect an “unsupported” gamepad. This can refer to the GameCube, NES, SNES, N64 and Sega Genesis controllers.
In case of problems, the console falls back to reporting a Pro Controller for those types of controllers. german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7664&#34; data-gh-pr=&#34;7664&#34;&gt;added this functionality to yuzu as well&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;Support was added to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7680&#34; data-gh-pr=&#34;7680&#34;&gt;allow devices with only an accelerometer present to act as motion devices&lt;/a&gt;
.
While this means broader support, lacking a gyroscope means very poor results in motion, as some axis movements won’t be registered.&lt;/p&gt;
&lt;p&gt;With the help of v1993, german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7682&#34; data-gh-pr=&#34;7682&#34;&gt;fixed the mapping of UDP controllers&lt;/a&gt;
 (any device connected using the cemuhook protocol).
Motion now correctly automaps and manual mapping won’t reset the device in the input list.&lt;/p&gt;
&lt;p&gt;In a separate PR, by request of v1993, german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7807&#34; data-gh-pr=&#34;7807&#34;&gt;added support for the Home and Touch buttons on UDP connections&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;Some motion devices can input very precise values, if the threshold is too high, the motion values will be ignored.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7700&#34; data-gh-pr=&#34;7700&#34;&gt;Reducing the threshold for gyro data&lt;/a&gt;
 fixes this issue.&lt;/p&gt;
&lt;p&gt;While playing &lt;code&gt;Mario Tennis Aces&lt;/code&gt; in swing mode, motion could suddenly stop working.
This was because the update rate interval for motion data was set too high.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7707&#34; data-gh-pr=&#34;7707&#34;&gt;Decreasing the motion update rate to 10ms restores functionality&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;Also related to motion emulation, the quality and sensitivity of the device can also affect gameplay. As a way to compensate, german77 introduced &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7770&#34; data-gh-pr=&#34;7770&#34;&gt;an option to configure the gyro threshold&lt;/a&gt;
, you can find it if you have a motion capable controller (in the example, dual Joy-Cons). Configured in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Controls &amp;gt; right click Motion &amp;gt; Set gyro threshold&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./gyro.png&#34; title=&#34; Right clicking!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/gyro_hu9e2d01b6327797438032cb079ee6990b_86538_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Right clicking!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Right clicking!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Accessing 2-player mode in &lt;code&gt;Pokémon: Let’s Go Eevee &amp;amp; Pikachu&lt;/code&gt; requires performing a shake motion.
The emulated shake on the keyboard was too weak to be registered by the game, so &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7710&#34; data-gh-pr=&#34;7710&#34;&gt;increasing its “force”&lt;/a&gt;
 shakes things up to allow local multiplayer.&lt;/p&gt;
&lt;p&gt;One of the features missing with the release of &lt;code&gt;Project Kraken&lt;/code&gt;, the input rewrite, was mouse motion support.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7725&#34; data-gh-pr=&#34;7725&#34;&gt;German77 reintroduced support for it&lt;/a&gt;
, now using the mouse wheel as input for the Z-axis.
Also, mouse buttons get their proper names when being mapped.&lt;/p&gt;
&lt;p&gt;Another feature that somehow missed the memo &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7760&#34; data-gh-pr=&#34;7760&#34;&gt;was stick modifiers for keyboard input&lt;/a&gt;
, holding a mapped key to move an analog stick with a reduced limit.
For example, with default keyboard mappings, if you hold shift, the left analog stick will move only up to 50% of its range, allowing keyboard users to walk.&lt;/p&gt;
&lt;p&gt;We recently introduced controller UI navigation.
While comfortable, some users run external programs to translate controller input into keyboard and mouse input.
For them, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7769&#34; data-gh-pr=&#34;7769&#34;&gt;a toggle to disable controller navigation was added&lt;/a&gt;
 in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Controls &amp;gt; Advanced &amp;gt; Controller Navigation&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./nav.png&#34; title=&#34; Couch gamers will love this&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/nav_hubdef533d76849c9507c07cd6617e9095_43673_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Couch gamers will love this&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Couch gamers will love this&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;By default, yuzu assumes that non-Nintendo Switch controllers, for example the Xbox controllers, will use rumble motors. These are cheaper and use an exponential amplitude curve for their rumble, making this kind of method incompatible for emulating HD Rumble.
The DS5 on the PlayStation 5, instead, uses more expensive linear actuators (and needs a linear amplitude curve), like the Pro Controller and Joy-Cons.
&lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7784&#34; data-gh-pr=&#34;7784&#34;&gt;With this change&lt;/a&gt;
, german77 extended support to include the official PlayStation 5 controller, the DS5, which is capable of the required precision for HD Rumble.&lt;/p&gt;
&lt;h2 id=&#34;general-changes-and-bugfixes&#34;&gt;General changes and bugfixes&lt;/h2&gt;
&lt;p&gt;TAS scripts can sometimes have errors in them, resulting in yuzu encountering a crash.
german77 provides the necessary code to &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7687&#34; data-gh-pr=&#34;7687&#34;&gt;add error handling to TAS scripts&lt;/a&gt;
, preventing these crashes.&lt;/p&gt;
&lt;p&gt;Windows has a nasty, hidden limitation that is the maximum open-file limit a program can use.
Some game mods can contain many, &lt;em&gt;many&lt;/em&gt; files, going over the previous 4096 limit. Therefore, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7690&#34; data-gh-pr=&#34;7690&#34;&gt;doubled the limit to 8192&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;v1993 has been working on code cleaning using &lt;a href=&#34;https://pvs-studio.com/en/pvs-studio/&#34;&gt;PVS-Studio&lt;/a&gt;, and the results have been great.
So far, errors were found and fixed in &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7727&#34; data-gh-pr=&#34;7727&#34;&gt;four&lt;/a&gt;
 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7728&#34; data-gh-pr=&#34;7728&#34;&gt;separate&lt;/a&gt;
 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7729&#34; data-gh-pr=&#34;7729&#34;&gt;input&lt;/a&gt;
 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7730&#34; data-gh-pr=&#34;7730&#34;&gt;related areas&lt;/a&gt;
, &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7731&#34; data-gh-pr=&#34;7731&#34;&gt;the shader recompiler&lt;/a&gt;
, and even &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7732&#34; data-gh-pr=&#34;7732&#34;&gt;kernel emulation&lt;/a&gt;
!&lt;/p&gt;
&lt;p&gt;Thanks v1993! Nothing beats cleaner code, especially if it solves out-of-bounds issues.&lt;/p&gt;
&lt;p&gt;Morph &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7752&#34; data-gh-pr=&#34;7752&#34;&gt;stubbed the &lt;code&gt;SetCpuOverclockEnabled&lt;/code&gt; service&lt;/a&gt;
 (you don’t need to overclock the host CPU on the fly when emulating).
This allows &lt;code&gt;Gravity Rider Zero&lt;/code&gt; to boot, but nothing is yet displayed on screen due to missing texture format support.&lt;/p&gt;
&lt;p&gt;And finally, german77 &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7821&#34; data-gh-pr=&#34;7821&#34;&gt;implemented the 32-bit variant of the supervisor call (SVC) &lt;code&gt;SynchronizePreemptionState&lt;/code&gt;&lt;/a&gt;
, making &lt;code&gt;Espgaluda II&lt;/code&gt; playable.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./esp.png&#34; title=&#34; Espgaluda II&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/esp_hu807f01420b12b349f31a2d824c4df8e8_7082439_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Espgaluda II&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Espgaluda II&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Meanwhile, &lt;a href=&#34;https://github.com/liushuyu&#34;&gt;liushuyu&lt;/a&gt; updated the dynarmic external submodule, providing &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7679&#34; data-gh-pr=&#34;7679&#34;&gt;optimizations and also fixing compile errors&lt;/a&gt;
 caused by an update of another external, the &lt;code&gt;fmt&lt;/code&gt; library — used to format text in yuzu&amp;rsquo;s log and interface.&lt;/p&gt;
&lt;p&gt;german77 also added new &lt;a class=&#34;gh-hover&#34; href=&#34;https://github.com/yuzu-emu/yuzu/pull/7716&#34; data-gh-pr=&#34;7716&#34;&gt;hotkeys that allow users to manipulate the volume&lt;/a&gt;
 of the application directly with the gamepad, a feature that will surely come in handy to the people who enjoy yuzu from the comfort of their couch.&lt;/p&gt;
&lt;p&gt;By default, &lt;code&gt;Home + D-Pad Right&lt;/code&gt; will mute the application, while &lt;code&gt;Home + D-Pad Down&lt;/code&gt; will lower the volume, and  &lt;code&gt;Home + D-Pad Up&lt;/code&gt; will increase it.
Users are free to change these mappings through the configuration menu &lt;code&gt;Emulation &amp;gt; Configure &amp;gt; Hotkeys&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./hotkeys.png&#34; title=&#34; The more the merrier!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/hotkeys_hu90a897c1e033556b5bbd5e07875412fe_28289_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The more the merrier!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The more the merrier!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While working on this change, german77 noticed the equation used to transform from percentage values to &amp;ldquo;loudness&amp;rdquo; (i.e. output power) was too aggressive below the 70% mark, making the volume extremely soft in this range.
Thus, he decided to modify the formula, so that the transformation is smoother throughout the full range of percentage values.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./volume.png&#34; title=&#34; Old is in red and new is in green. Look at those curves!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/volume_hu5c2133228265d08d6961cc1f720f03fa_21366_571x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Old is in red and new is in green. Look at those curves!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Old is in red and new is in green. Look at those curves!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;future-changes&#34;&gt;Future changes&lt;/h2&gt;
&lt;p&gt;Progress continues smoothly on our projects in development.
For example, german77 is having fun with some heavily requested features.
Blinkhawk managed to complete one of the top secret projects &lt;a href=&#34;https://github.com/reinuseslisp&#34;&gt;Rodrigo&lt;/a&gt; left unfinished before &lt;em&gt;turning green&lt;/em&gt;, &lt;code&gt;Host Conditional Rendering&lt;/code&gt;. Expect to hear more of it in future &lt;code&gt;Project Y.F.C.&lt;/code&gt; news.&lt;/p&gt;
&lt;p&gt;Now for a small leak of some recent internal testing: &lt;code&gt;Marvel Ultimate Alliance 3: The Black Order&lt;/code&gt; jumped from 19 to 51 FPS, and your enemy&amp;rsquo;s ink in &lt;code&gt;Splatoon 2&lt;/code&gt; works correctly, both changes improving Vulkan.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/1_hu37bdc1eef8bafd8bd832c968be96a89c_1985759_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;More than double the performance, for only a few liters of developer tears (Marvel Ultimate Alliance 3: The Black Order)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2022/2_hu3e5381ca2978dfb89c944da3c85c9c1b_2022126_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;More than double the performance, for only a few liters of developer tears (Marvel Ultimate Alliance 3: The Black Order)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;More than double the performance, for only a few liters of developer tears (Marvel Ultimate Alliance 3: The Black Order)&lt;/p&gt;


&lt;p&gt;That’s all folks! It’s always a pleasure to have you here, hope we see you again next month!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy.min.css&#34; integrity=&#34;sha512-HbPh+j4V7pXprvQMt2dtmK/zCEsUeZWYXRln4sOwmoyHPQAPqy/k9lIquKUyKNpNbDGAY06UdiDHcEkBc72yCQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34; /&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.2/umd/popper.min.js&#34; integrity=&#34;sha512-aDciVjp+txtxTJWsp8aRwttA0vR2sJMk/73ZT7ExuEHv7I5E6iyyobpFOlEFkq59mWW8ToYGuVZFnwhwIUisKA==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/tippy.js/6.3.7/tippy-bundle.umd.min.js&#34; integrity=&#34;sha512-gbruucq/Opx9jlHfqqZeAg2LNK3Y4BbpXHKDhRC88/tARL/izPOE4Zt2w6X9Sn1UeWaGbL38zW7nkL2jdn5JIw==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js&#34; integrity=&#34;sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==&#34; crossorigin=&#34;anonymous&#34; referrerpolicy=&#34;no-referrer&#34;&gt;&lt;/script&gt;
&lt;div id=&#34;gh-template&#34; style=&#34;display: none;&#34;&gt;
    &lt;span&gt;
        &lt;svg class=&#34;gh-hover-icon&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.177 3.073L9.573.677A.25.25 0 0110 .854v4.792a.25.25 0 01-.427.177L7.177 3.427a.25.25 0 010-.354zM3.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122v5.256a2.251 2.251 0 11-1.5 0V5.372A2.25 2.25 0 011.5 3.25zM11 2.5h-1V4h1a1 1 0 011 1v5.628a2.251 2.251 0 101.5 0V5A2.5 2.5 0 0011 2.5zm1 10.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0zM3.75 12a.75.75 0 100 1.5.75.75 0 000-1.5z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;
    &lt;/span&gt;
    &lt;span&gt;
        &lt;a class=&#34;gh-hover-title&#34; href=&#34;&#34;&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&amp;nbsp;&lt;span class=&#34;gh-hover-number&#34;&gt;&lt;/span&gt;
    &lt;/span&gt;
    &lt;p class=&#34;gh-hover-date&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;style&gt;
    .gh-hover-icon.open { filter: invert(56%) sepia(47%) saturate(665%) hue-rotate(77deg) brightness(99%) contrast(83%); }
    .gh-hover-icon.closed { filter: invert(50%) sepia(95%) saturate(3977%) hue-rotate(336deg) brightness(95%) contrast(90%); }
    .gh-hover-icon.merged { filter: invert(47%) sepia(17%) saturate(4072%) hue-rotate(228deg) brightness(95%) contrast(89%); }
    .gh-hover { border-bottom: dotted; }
&lt;/style&gt;
&lt;script&gt;
    tippy(&#39;.gh-hover&#39;, {
        content: &#39;Loading...&#39;,
        onShow(instance) {
            showHovercard(instance, &#39;yuzu&#39;);
        },
        allowHTML: true,
        followCursor: &#39;horizontal&#39;,
        interactive: true,
    });
&lt;/script&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report December 2021</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/</link>
      <pubDate>Tue, 11 Jan 2022 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/</guid>
      <description>&lt;p&gt;Yuz-ers! Welcome to the last progress report of 2021, released in 2022 because we still haven’t figured out how to travel back in time.
December brought us improved kernel emulation, fixes for driver issues, improvements to input, rendering, overall stability, and more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Yuz-ers! Welcome to the last progress report of 2021, released in 2022 because we still haven’t figured out how to travel back in time.
December brought us improved kernel emulation, fixes for driver issues, improvements to input, rendering, overall stability, and more!&lt;/p&gt;
&lt;p&gt;We keep trying with the time machine, but we’re running out of bananas to microwave and trash to fuel the Mr. Fusion. Okay, let&amp;rsquo;s get started!&lt;/p&gt;
&lt;h2 id=&#34;psa-for-nvidia-users-part-2&#34;&gt;PSA for NVIDIA users: Part 2&lt;/h2&gt;
&lt;p&gt;As mentioned &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/#psa-for-nvidia-users&#34;&gt;two months ago&lt;/a&gt;, NVIDIA users have been experiencing issues when using GLSL due
to the changes introduced by NVIDIA dropping support for Kepler cards in the 49X series of drivers.&lt;/p&gt;
&lt;p&gt;We’re happy to announce that we have a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7629&#34;&gt;set of workarounds&lt;/a&gt; implemented by &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; that solve all
known issues.
These are already available for both Mainline and &lt;a href=&#34;https://yuzu-mirror.github.io/help/early-access/&#34;&gt;Early Access&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The root of the problem in NVIDIA’s drivers seems to be in negation of integer and floating point values, and bitwise conversions of input values.&lt;/p&gt;
&lt;p&gt;On previous drivers, you could assign a value to a variable named &lt;code&gt;x&lt;/code&gt;, then assign &lt;code&gt;-x&lt;/code&gt; as the value to a new variable named &lt;code&gt;y&lt;/code&gt;.
&lt;code&gt;y&lt;/code&gt; would be equal to &lt;code&gt;-1 * x&lt;/code&gt;.
New drivers ignore this negation entirely, resulting in random spontaneous fires, security breaches, too many dogs causing a
&lt;a href=&#34;https://www.youtube.com/watch?v=Jw0c9z8EllE&#34;&gt;Howl&lt;/a&gt;, and total chaos.&lt;/p&gt;
&lt;p&gt;The workaround is to simply subtract the value from 0.
In our example, &lt;code&gt;y&lt;/code&gt; would get the value of &lt;code&gt;0 - x&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The bitwise conversion issue is more complex, but we talked about it in the past.
Back in August,
&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/#another-terrible-implementation-and-other-graphical-fixes&#34;&gt;we mentioned how Intel had issues in Vulkan&lt;/a&gt;
affecting Mario’s legendary moustache.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GetAttribute&lt;/code&gt; returns a float value, so a conversion is needed when working with integer values.&lt;/p&gt;
&lt;p&gt;The same issue that affected Intel GPUs now happens here on the “greener” side, but inverted.
When using &lt;code&gt;instance_id&lt;/code&gt;, old drivers accepted a float to unsigned integer conversion without issue, and you could do this conversion multiple times without losing the
correct value.
The current drivers, on the other hand, can sometimes return zero.&lt;/p&gt;
&lt;p&gt;Interpreting the value directly as unsigned integers now solves this issue in both GLSL and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7630&#34;&gt;GLASM&lt;/a&gt;.
Since this counts as an optimization, we now apply it to all APIs.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/nvidiabug_hud66e200cd80562f5de0acee35839dc17_3609464_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Back to the early days (Fire Emblem: Three Houses)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/nvidiafix_hu0cc7b0cd1a9da1378bcda1d19ba9ff8f_6923169_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Back to the early days (Fire Emblem: Three Houses)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Back to the early days (Fire Emblem: Three Houses)&lt;/p&gt;


&lt;p&gt;Please report if you find any issues, as there could be more broken games due to yet unknown driver bugs.
On a similar note, more fixes should be coming to Vulkan too, if needed.
One such issue solved itself, most likely NVIDIA fixed it on the latest drivers.&lt;/p&gt;
&lt;h2 id=&#34;other-graphical-fixes&#34;&gt;Other graphical fixes&lt;/h2&gt;
&lt;p&gt;Whenever a game played multiple videos at the same time, some of them would glitch and flicker.
This happened because yuzu was limited to decoding a single video stream at a time.
Having multiple videos running at the same time would cause the decoder to receive frames that were sent from different video sources, confusing the interpolation algorithm
and causing the aforementioned problems.
To prevent this issue from happening, &lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; implemented a temporary solution that gives each video stream their own video decoder,
sending the correct frame data only to the correct decoder.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./mdbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./mdfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;It still flickers, but that&amp;#39;s the Chozo&amp;#39;s fault (Metroid Dread)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; added the missing formats &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7544&#34;&gt;R16G16_UINT&lt;/a&gt; and
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7549&#34;&gt;ASTC_2D_8X5_UNORM&lt;/a&gt; to the Vulkan API, fixing the missing graphics on &lt;code&gt;Immortals Fenyx Rising&lt;/code&gt; and  making
&lt;code&gt;LEGO® CITY UNDERCOVER&lt;/code&gt; playable, respectively.
(Please note that &lt;code&gt;Immortals Fenyx Rising&lt;/code&gt; gets in game but has broken graphics at the moment).&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./lcu.png&#34; title=&#34; I brick you not (LEGO® CITY UNDERCOVER)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/lcu_hu1baa69bdf53d70595418c558d802ecbe_8667839_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; I brick you not (LEGO® CITY UNDERCOVER)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; I brick you not (LEGO® CITY UNDERCOVER)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7495&#34;&gt;fixed a bug in the texture cache&lt;/a&gt; that was conveniently ignored by the AMD driver,
but would cause Nvidia GPUs to crash when using the Vulkan API.
This crash happened when blitting textures with different format types, something that points to a problem in the texture cache that will be addressed in a future PR.&lt;/p&gt;
&lt;p&gt;Blinkhawk also updated the Vulkan headers to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7599&#34;&gt;fix an extension and implemented logical operations&lt;/a&gt;.
Both the extension and these logical operations are used by Vulkan to describe and process data, in order to compose the frames that will later be sent to the screen.
This PR fixes the sand and shadow graphical problems in &lt;code&gt;The Legend of Zelda: Skyward Sword&lt;/code&gt;, and also the shadow problems as seen in &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/xc2bug_hudee1ed8ad58b86647f3ada00ad06edad_9649199_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;When you invert the polarity of your HDR display (Xenoblade Chronicles 2)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/xc2fix_hudb5fa66ab71679ad674314889d246aed_8261190_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;When you invert the polarity of your HDR display (Xenoblade Chronicles 2)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;When you invert the polarity of your HDR display (Xenoblade Chronicles 2)&lt;/p&gt;


&lt;p&gt;epicboy took a look at the issues that affected games that made heavy use of sparse GPU memory, and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7658&#34;&gt;made the changes necessary&lt;/a&gt;
to mitigate the problem.&lt;/p&gt;
&lt;p&gt;Sparse memory is a technique to store data non-contiguously, which is a fancy way to say that data is broken down into small blocks and only the relevant bits are loaded
into memory.
There was a bug in the code used to map this data into the memory, as the offsets needed to get the right address weren&amp;rsquo;t being included in the calculations.
For the sake of precaution, he also added an extra guard that prevents modifying the memory address 0, as it is used as a placeholder to signal addresses that haven&amp;rsquo;t
been loaded in yet.&lt;/p&gt;
&lt;p&gt;These changes are meant to address (no pun intended) issues related to the GPU memory management, and hopefully alleviate some stability complications related to it.
Notably, the crashes on titles developed with the &lt;code&gt;UE4&lt;/code&gt; engine &lt;em&gt;(cough, True Goddess Reincarnation V or some such, cough)&lt;/em&gt;.
The devs are still investigating any other oddities surrounding this game, so stay tuned for more updates.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ue4.png&#34; title=&#34; These changes mitigate memory-related problems but are not guaranteed to “fix” them completely (SHIN MEGAMI TENSEI V)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/ue4_hu276b5f16c7985a6ad6600f19e944a306_5452660_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; These changes mitigate memory-related problems but are not guaranteed to “fix” them completely (SHIN MEGAMI TENSEI V)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; These changes mitigate memory-related problems but are not guaranteed to “fix” them completely (SHIN MEGAMI TENSEI V)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Users reported crashes when playing &lt;code&gt;Sonic Colors Ultimate&lt;/code&gt; on AMD and Intel GPUs on Vulkan after the resolution scaler was introduced.
epicboy quickly jumped in to intervene and save the Blue Hedgehog.&lt;/p&gt;
&lt;p&gt;On the AMD side, Sonic suffers from ImageView issues, causing an invalid pointer dereference when the &lt;code&gt;slot_images&lt;/code&gt; container of the texture cache is resized.
This can happen even at native resolution.
epicboy found that &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7622&#34;&gt;keeping a reference of the container&lt;/a&gt; resolves the issue.&lt;/p&gt;
&lt;p&gt;Intel’s turn now.
The Intel Vulkan Windows driver strongly follows the specification when dealing with image blits.
Khronos defines that &lt;a href=&#34;https://en.wikipedia.org/wiki/Multisample_anti-aliasing&#34;&gt;MSAA&lt;/a&gt; blits are not allowed, and while most drivers let this pass, Intel is being a good boy and
crashes when trying to rescale MSAA textures.
Leaving aside that using traditional antialiasing on a mobile device like the Switch is a &lt;em&gt;crime against humanity&lt;/em&gt; (you don’t waste extremely limited bandwidth on
traditional antialiasing), the issue is solved by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7624&#34;&gt;rendering directly into the scaled image&lt;/a&gt; when rescaling by using the 3D pipeline.
The performance cost is higher (integrated GPUs like most Intel ones also hate traditional antialiasing), but it’s a price to pay to avoid crashing or losing the scaling.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sc.png&#34; title=&#34; Colourful (Sonic Colors: Ultimate)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/sc_hu7e9294a128774e6216ec410e19c556d1_1784953_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Colourful (Sonic Colors: Ultimate)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Colourful (Sonic Colors: Ultimate)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The texture cache has to handle several weird situations when dealing with rendering.
One aspect of the process is &lt;code&gt;overlaps&lt;/code&gt;, when different textures compete for the same video memory space.
A bug in the texture cache&amp;rsquo;s logic was found when an overlap occurs over relatively big distances in GPU memory. An overflow could happen leading to a wrongly massive texture
trying to be rendered, causing VRAM to fill up instantly, and leading yuzu to a crash.
This issue was common in &lt;code&gt;BRAVELY DEFAULT II&lt;/code&gt;.
Thanks to epicboy, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7659&#34;&gt;users no longer have to suffer this sudden crash&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bd1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/bd1_hue0fa06c15da68cca0afe4208efb32d9c_8630954_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;BRAVELY DEFAULT II&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bd2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/bd2_hu837d7b01d4578b78fafc6cc2aea32001_5566436_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;BRAVELY DEFAULT II&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;BRAVELY DEFAULT II&lt;/p&gt;


&lt;h2 id=&#34;skyline-framework-part-2&#34;&gt;Skyline framework: Part 2&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/itsmeft24&#34;&gt;itsmeft24&lt;/a&gt; submitted a patch to
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7519&#34;&gt;implement the &lt;code&gt;ProcessMemory&lt;/code&gt; and &lt;code&gt;CodeMemory&lt;/code&gt; kernel SVCs&lt;/a&gt; (Supervisor Calls), which are some of the changes needed to support
the &lt;a href=&#34;https://github.com/skyline-dev/skyline&#34;&gt;Skyline&lt;/a&gt; framework for modding.&lt;/p&gt;
&lt;p&gt;Part of the ongoing work includes adding support in yuzu for all tiers of &lt;code&gt;subsdk&lt;/code&gt;.
Games can use &lt;code&gt;subsdk&lt;/code&gt; tiers from 0 to 8, with 9 being free.
Skyline uses &lt;code&gt;subsdk9&lt;/code&gt; to operate, so &lt;a href=&#34;https://github.com/jam1garner&#34;&gt;jam1garner&lt;/a&gt; included support for the remaining
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7523&#34;&gt;two missing tiers in yuzu, 8 and 9&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are still a couple of things that need to be implemented before it&amp;rsquo;s ready, but things are certainly getting closer to being completed.&lt;/p&gt;
&lt;p&gt;You can check the current progress &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/issues/7392&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;input-changes&#34;&gt;Input changes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; has several fixes for us and some important new additions.&lt;/p&gt;
&lt;p&gt;Let’s kick things off with a great new feature for handheld PC users, couch players, and anyone not wanting to reach all the way to their keyboard while playing:
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7633&#34;&gt;support for gamepad hotkeys&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./hotkeys.png&#34; title=&#34; You can customize them&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/hotkeys_huf8e076afbba21822963e0b618b915cbb_28313_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; You can customize them&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; You can customize them&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;With this, users can customize button macros. For example: access or exit fullscreen, unlock the framerate, pause/continue emulation, capture a screenshot
(by default conveniently mapped to the capture button of the Nintendo controllers), close yuzu, and more!


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./gamepad1.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./gamepad2.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Sorry about the bad quality&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;When certain games start, some internal testing is done to ensure that things are where they should be and respond with an acceptable delay. One of those tests involves rumble.
Games prod the controllers with a low frequency rumble test, but sometimes, some games never stop and the controller continues to vibrate, depleting battery and making you
doubt what the original intention of the developer was.
german77 &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7593&#34;&gt;forces the rumble amplitude to zero after the test&lt;/a&gt;, stopping unwanted vibrations for these affected games.&lt;/p&gt;
&lt;p&gt;VR games may use the gyroscope sensor on the Switch itself (not the controllers) to feed motion data.
Previously, yuzu would only give partial data to the game, causing erratic movement of the game’s camera.
german77 added &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7481&#34;&gt;all missing data, including the gyro sensor&lt;/a&gt;, to solve this issue.&lt;/p&gt;
&lt;p&gt;german77 also added support for the &lt;code&gt;SetNpadJoyAssignmentMode&lt;/code&gt; series of services, removing some spam from the logs.
This change &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7521&#34;&gt;also adds support for&lt;/a&gt; dual Joy-Con pairs with a single Joy-Con connected, which is something that some
games seem to do.&lt;/p&gt;
&lt;p&gt;After the release of &lt;code&gt;Project Kraken&lt;/code&gt;, &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021#projekt-kraken&#34;&gt;the input rewrite&lt;/a&gt;, analog triggers were accidentally broken.
A simple bug slipped by, causing them to only work when the joysticks were moved.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7583&#34;&gt;Two lines of code were changed&lt;/a&gt;, and the issue was made no more.&lt;/p&gt;
&lt;p&gt;german77 has also been working on making &lt;code&gt;Ring Fit Adventure&lt;/code&gt; playable.
While working on implementing support for the pressure ring accessory that the game requires, german77 also ended up making some global improvements.&lt;/p&gt;
&lt;p&gt;One change that ended up benefiting all games is &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7503&#34;&gt;controller type validation&lt;/a&gt;, which ensures that the emulator can only
accept controller types that the game supports, while discarding and disconnecting anything else.&lt;/p&gt;
&lt;p&gt;A bug in the controller type validation code caused &lt;code&gt;Captain Toad: Treasure Tracker&lt;/code&gt; to constantly spam the controller applet when trying to launch two-player mode.
Well, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7647&#34;&gt;not any more&lt;/a&gt;! Again thanks to german77.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./toad.png&#34; title=&#34; Co-op treasure hunting, what else could you ask for? (Captain Toad: Treasure Tracker)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/toad_hu25f04a881e9cd6e0454a26e407be63ee_1042881_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Co-op treasure hunting, what else could you ask for? (Captain Toad: Treasure Tracker)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Co-op treasure hunting, what else could you ask for? (Captain Toad: Treasure Tracker)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;flatpak-fixes&#34;&gt;Flatpak fixes&lt;/h2&gt;
&lt;p&gt;Following up from our previous mention &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/#graphical-fixes&#34;&gt;last month&lt;/a&gt;, &lt;a href=&#34;https://github.com/liushuyu&#34;&gt;liushuyu&lt;/a&gt;
continues to fight against the weirdness of &lt;a href=&#34;https://flatpak.org/&#34;&gt;Flatpak&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7565&#34;&gt;NVDEC requirements are now more flexible&lt;/a&gt;, the CUDA libraries are no longer mandatory, without actually affecting CUDA
decoding support.
Also, &lt;a href=&#34;https://ffmpeg.org/&#34;&gt;FFmpeg&lt;/a&gt; requirements have been raised to version 4.3 and higher.
This should enable native Vulkan video support later on when there is driver support for it.&lt;/p&gt;
&lt;p&gt;With this, decoding crashes are solved when running Flatpak builds of yuzu.&lt;/p&gt;
&lt;p&gt;liushuyu also solved an issue affecting the prevent sleep functionality on Flatpak.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7614&#34;&gt;Implementing XDP’s Inhibit API solves the issue&lt;/a&gt;, preventing the display from turning off at the worst moment while playing.&lt;/p&gt;
&lt;p&gt;Additionally, Flatpak builds are compiled with asserts enabled, meaning that the emulator will be stopped when an assertion fails or an out-of-bound access inside a
vector is encountered.
&lt;a href=&#34;https://appimage.org/&#34;&gt;Appimage&lt;/a&gt; and regular Mainline/Early Access builds are shipped with asserts disabled.&lt;/p&gt;
&lt;p&gt;While this usually isn’t an issue, Flatpak users reported crashes in &lt;code&gt;Pokémon Sword &amp;amp; Shield&lt;/code&gt; when trying to set their uniform number.
As it turns out, the on-screen keyboard (OSK) was performing an out-of-bounds access when calling the number pad.
Morph &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7579&#34;&gt;pointed the OSK to the proper array&lt;/a&gt; and the crashing stopped.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./numpad.png&#34; title=&#34; Thank you RodrigoTR for the pic! (Pokémon Sword)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/numpad_hu5a05f092c5ebe87f0493993927016761_728620_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Thank you RodrigoTR for the pic! (Pokémon Sword)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Thank you RodrigoTR for the pic! (Pokémon Sword)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;general-changes-and-bugfixes&#34;&gt;General changes and bugfixes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; continues to work on the kernel rewrite, toiling away to increase the accuracy of our implementation.&lt;/p&gt;
&lt;p&gt;This time, by simplifying a number of functions and polishing the tracking of resources, he introduced more changes to
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7462&#34;&gt;improve the threading and scheduling kernel routines&lt;/a&gt;.
These changes increase yuzu&amp;rsquo;s parity with recent updates to the Nintendo Switch OS, and also fix a number of race conditions and crashes, such as the ones experienced in
&lt;code&gt;Pokémon Sword &amp;amp; Shield&lt;/code&gt; and &lt;code&gt;Dead or Alive Xtreme 3 Scarlet&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;bunnei also implemented &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7621&#34;&gt;SetMemoryPermission&lt;/a&gt;, and updated the implementation of
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7635&#34;&gt;SetHeapSize&lt;/a&gt;, which are SVCs used by the kernel to manage the memory resources.&lt;/p&gt;
&lt;p&gt;Previously, &lt;code&gt;SetHeapSize&lt;/code&gt; only supported setting the heap size and expanding it, which was good enough for most games.
But since some titles (such as &lt;code&gt;Donkey Kong Tropical Freeze&lt;/code&gt;) may shrink this size, the implementation was updated to allow games to change the heap as needed, making it
more accurate.&lt;/p&gt;
&lt;p&gt;Both these changes were validated with hardware tests, ensuring that they behave as expected.&lt;/p&gt;
&lt;p&gt;While working on these changes, bunnei &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7616&#34;&gt;found a bug in the service used to retrieve information of the currently executing process&lt;/a&gt;.
Correcting this behaviour allowed &lt;code&gt;The Witcher 3: Wild Hunt&lt;/code&gt; to boot, although there are still plenty of graphical issues to fix on this title.&lt;/p&gt;
&lt;p&gt;Blinkhawk also made a number of &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7497&#34;&gt;changes to the building process&lt;/a&gt; to enforce more link time optimizations, and improve the
time needed to generate the &lt;code&gt;PDB&lt;/code&gt; (&lt;a href=&#34;https://llvm.org/docs/PDB/index.html&#34;&gt;Program Database&lt;/a&gt;) file, which contains debug information.
If this mumbo-jumbo sounds confusing, the gist of it is that the process of building yuzu should produce more efficient code and smaller binaries now.
But feel free to skip the following few paragraphs if you&amp;rsquo;re not interested in the specifics.&lt;/p&gt;
&lt;p&gt;Roughly speaking, compiler optimizations work on a &amp;ldquo;local&amp;rdquo; level per object.
This optimization step will &lt;a href=&#34;https://en.wikipedia.org/wiki/Inline_expansion&#34;&gt;inline&lt;/a&gt; some functions, merge loops, put calling and called functions close in memory for
better caching, etc.
But if a function defined in another file is called within the file, the compiler can&amp;rsquo;t perform these optimizations, as it doesn&amp;rsquo;t know what this external function does,
or how to optimize it.&lt;/p&gt;
&lt;p&gt;Link time optimizations, on the other hand, take into consideration all the functions in the project.
The linker, thus, is able to perform the same optimizations as the compiler, but more efficiently, as it is aware of the contents of all the functions defined in the project.
This comes at a price, since the process needs more memory and takes more time to finish, but it guarantees that the released binaries perform better.&lt;/p&gt;
&lt;p&gt;Along with this work, we considered enforcing &lt;a href=&#34;https://en.wikipedia.org/wiki/SSE4#SSE4.2&#34;&gt;SSE4.2&lt;/a&gt; support, improving performance but making yuzu incompatible with 12 year
old CPUs like the Core 2 Duo and Phenom II or older.
While the performance results were positive, we are still debating whether we should reduce CPU compatibility or not.&lt;/p&gt;
&lt;p&gt;When you open yuzu, the emulator has to take some time to measure the &lt;a href=&#34;https://en.wikipedia.org/wiki/Time_Stamp_Counter&#34;&gt;RDTSC frequency&lt;/a&gt;, a way to measure the clock
speed of the CPU.
Due to a bit of bloat in the previous implementation, 3 full seconds were needed to complete the operation.
Morph &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7494&#34;&gt;rewrote the whole function&lt;/a&gt; and now only 0.2 seconds (200 milliseconds) are needed to get results as accurate as
before, considerably reducing the boot times of the emulator itself.&lt;/p&gt;
&lt;p&gt;As previously stated, german77 continues to work towards making &lt;code&gt;Ring Fit Adventure&lt;/code&gt; playable.
He has &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7524&#34;&gt;stubbed the&lt;/a&gt; &lt;code&gt;SetNpadCaptureButtonAssignment&lt;/code&gt;, &lt;code&gt;ClearNpadCaptureButtonAssignment&lt;/code&gt;, &lt;code&gt;ListAlarmSettings&lt;/code&gt;, and
&lt;code&gt;Initialize&lt;/code&gt; services, and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7525&#34;&gt;added support&lt;/a&gt; for the &lt;code&gt;notif:a&lt;/code&gt; service.&lt;/p&gt;
&lt;p&gt;With all his changes, the current Early Access build (at the time of writing this article) can boot and play the first stage of the game!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./ringfit.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Ring Fit Adventure&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Tatsh&#34;&gt;Tatsh&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7609&#34;&gt;added NSP and XCI file association to Linux&lt;/a&gt;.
Thanks!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Tachi107&#34;&gt;Tachi107&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7527&#34;&gt;updated cubeb&lt;/a&gt; and removed now deprecated functions.
Cleaner is always better, thanks!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/heinermann&#34;&gt;heinermann&lt;/a&gt; fixed a crash that would occur when the
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7506&#34;&gt;emulation was paused and the window was out of focus&lt;/a&gt;.
Thank you!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jbeich&#34;&gt;jbeich&lt;/a&gt; changed the building configuration so that
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7602&#34;&gt;VA-API, one of the video decoding APIs of Linux, is enabled on Unix systems&lt;/a&gt;, allowing the users who want to build targeting
BSD or other Unix-based systems to use hardware acceleration for video decoding.&lt;/p&gt;
&lt;p&gt;This is just one of several PRs jbeich wrote to help yuzu work on BSD systems, thank you for your contributions!&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;The favourites row in yuzu’s game list was always expanded, even if the user collapsed it.
epicboy &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7570&#34;&gt;added a persistent setting&lt;/a&gt; to remember the user preference between launches.&lt;/p&gt;
&lt;p&gt;One of the most common issues users face is lack of Vulkan support on their PC. Not lack of hardware support, but instead missing software support caused by outdated GPU
drivers or poorly coded/outdated Vulkan injections.&lt;/p&gt;
&lt;p&gt;Our old error popup didn’t reflect this so &lt;a href=&#34;https://github.com/goldenx86&#34;&gt;your writer&lt;/a&gt;, with his total lack of coding skills,
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7532&#34;&gt;decided to improve it&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vidbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/vidbug_huad2dc04c5688fee435710544c1893140_9377_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vidfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/vidfix_huf4508ffade787b447737cacb712cd479_9392_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;


&lt;p&gt;This is a complex issue and the main reason Vulkan is not yuzu&amp;rsquo;s default API.
Users of old laptops with AMD and Intel integrated GPUs tend to use the driver shipped by either the laptop vendor or Windows Update.
In both cases, those drivers are most likely years old (yuzu can run on AMD GPUs from 2012) and either lack Vulkan support at all, or only support a portion of what’s
needed to run yuzu.
Also, since laptops, by default, connect the display directly to the integrated GPU, that’s the first Vulkan driver that will be seen, so it’s critical to have the latest
GPU driver installed &lt;em&gt;even if&lt;/em&gt; your laptop has a dedicated NVIDIA GPU running the latest driver.&lt;/p&gt;
&lt;p&gt;While telling AMD users to &lt;a href=&#34;https://www.amd.com/en/support&#34;&gt;manually download and install updated drivers&lt;/a&gt; is a viable option and works as it should, in its
&lt;em&gt;infinite wisdom&lt;/em&gt;, Intel decided to block manual installation of its own official drivers if a custom laptop vendor driver is in use (those modified drivers are usually
created to cheat on battery life metrics and/or to save money on cooling).&lt;/p&gt;
&lt;p&gt;The only alternative in those cases is to &lt;a href=&#34;https://www.intel.com/content/www/us/en/download/19344/intel-graphics-windows-dch-drivers.html&#34;&gt;manually download the ZIP version&lt;/a&gt;
of the driver &amp;gt; unpack it &amp;gt; Launch the Device Manager &amp;gt; right-click the correct GPU in Display Adapters &amp;gt; select &lt;code&gt;Update Driver Software…&lt;/code&gt; &amp;gt; select
&lt;code&gt;Browse my computer for driver software&lt;/code&gt; &amp;gt; select &lt;code&gt;Let me pick from a list of device drivers on my computer&lt;/code&gt; &amp;gt; select &lt;code&gt;Have Disk…&lt;/code&gt; &amp;gt; then finally browse to the folder where
the driver was unpacked and select the &lt;code&gt;iigd_dch.inf&lt;/code&gt; file.
What a very intuitive and user-friendly way to update a GPU driver&amp;hellip; great job Intel.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a &lt;a href=&#34;https://www.youtube.com/watch?v=BZG50Nm5sOM&amp;amp;t=72s&#34;&gt;video tutorial&lt;/a&gt; for those that prefer visual aid over our rambling. Just make sure to use the &lt;code&gt;iigd_dch.inf&lt;/code&gt;
file instead of the one shown in the slightly outdated video.
Other mentioned optimizations on the video no longer apply.&lt;/p&gt;
&lt;p&gt;With this &lt;em&gt;easy job&lt;/em&gt; done, the Intel GPU gets full Vulkan support, runs at its intended performance, and has access to all the new features, fixes, and performance
improvements that the driver developers worked on.
The driver is also allowed to auto-update on new official releases.&lt;/p&gt;
&lt;p&gt;Known software that uses broken Vulkan injectors are outdated screen recorders like Bandicam, Action!, and even OBS.
We strongly recommend using an up-to-date OBS, the native encoders from the GPU vendor (Radeon ReLive and Geforce Experience), or the integrated Xbox Game Bar on Windows.
Overwolf and GShade are also known to break Vulkan support, so we &lt;strong&gt;strongly&lt;/strong&gt; recommend avoiding them.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Project Gaia&lt;/code&gt; is progressing smoothly. Heads up, SSD users will notice improvements once it is released.&lt;/p&gt;
&lt;p&gt;Blinkhawk informs us that &lt;code&gt;Project Y.F.C.&lt;/code&gt; will be released in smaller chunks in order to push more progressive updates instead of delaying for a big release
that would require more testing time. We want to get these updates in your hands as soon as possible!
We continue to plan to add several GPU features that have been pending. Here&amp;rsquo;s a screenshot as an example:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./golf.png&#34; title=&#34; Mario Golf: Super Rush&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2021/golf_hu3cfa4b7bc14fa63dd01c119ef743cfa4_2468529_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Mario Golf: Super Rush&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Mario Golf: Super Rush&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;That’s all folks! Thank you for your attention, and we hope to see you next month!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report November 2021</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/</link>
      <pubDate>Fri, 10 Dec 2021 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/</guid>
      <description>&lt;p&gt;Hello yuz-ers! Welcome to November’s progress report. This month, we present to you a full input rewrite, UI navigation with controllers, kernel changes resulting in
improved stability, and more.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello yuz-ers! Welcome to November’s progress report. This month, we present to you a full input rewrite, UI navigation with controllers, kernel changes resulting in
improved stability, and more.&lt;/p&gt;
&lt;h2 id=&#34;project-kraken&#34;&gt;Project Kraken&lt;/h2&gt;
&lt;p&gt;Oh boy, what a treat &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; has for us.
As we mentioned in the previous progress report, &lt;code&gt;Project Kraken&lt;/code&gt;, our latest input rewrite, is now available to all users.&lt;/p&gt;
&lt;p&gt;But what does it mean?
Well, Kraken has multiple goals — first of all is accuracy.
Behaving closer to how the Nintendo Switch operates is our goal.
Secondly, simplifying and removing old redundant code makes maintenance and scalability a lot easier.
And most importantly, making all input event-based instead of polling-based.
This means that instead of asking the controller what it did at regular intervals, the controller itself will report its actions the moment the user inputs an action. This
applies to buttons, triggers, sticks, motion — the whole deal.
The end result is reduced input lag.&lt;/p&gt;
&lt;p&gt;But those aren&amp;rsquo;t the only improvements, Kraken also includes many bug fixes and new additions.
Users can now invert or turn any button into a toggle (press again to release) in any emulated controller.
Previously this was only possible on a limited variety of controllers.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./toggle.png&#34; title=&#34; Did someone say they wanted to beat Dark Souls with a driving wheel?&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/toggle_huc90921255a540ddc320a7f3adf4ad51a_5653_286x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Did someone say they wanted to beat Dark Souls with a driving wheel?&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Did someone say they wanted to beat Dark Souls with a driving wheel?&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Buttons are named instead of numbered on non-SDL input controllers, assisting with identification.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./button.png&#34; title=&#34; SDL input, like native Nintendo controllers or Xbox controllers, will have numbered buttons rather than named&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/button_hu9e24fc9a4b352c5f305fc5685ee3b258_4098_186x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; SDL input, like native Nintendo controllers or Xbox controllers, will have numbered buttons rather than named&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; SDL input, like native Nintendo controllers or Xbox controllers, will have numbered buttons rather than named&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While we recommend using controllers without third party drivers, full &lt;a href=&#34;https://cemuhook.sshnuke.net/&#34;&gt;UDP Cemuhook support&lt;/a&gt; is available at
&lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Controls &amp;gt; Advanced &amp;gt; Enabled UDP controllers&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Previously, Cemuhook was only used for UDP motion, but now even Android apps can connect to yuzu.
Cemuhook provides a guide on how to set up UDP devices &lt;a href=&#34;https://cemuhook.sshnuke.net/padudpserver.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./udp.png&#34; title=&#34; There must be someone trying to play with a phone as a Joy-Con somewhere&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/udp_hu1c22d217213be72d2bd3f2ac69e61c0f_62790_900x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; There must be someone trying to play with a phone as a Joy-Con somewhere&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; There must be someone trying to play with a phone as a Joy-Con somewhere&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Keyboard and mouse emulation is improved, allowing games that natively support USB mouse and keyboard inputs to function correctly.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./km.png&#34; title=&#34; Useful in games like Animal Crossing: New Horizons that accept an actual keyboard on the Switch&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/km_hu547cca3f5a07780db74a7e825dd8c0d0_6396_458x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Useful in games like Animal Crossing: New Horizons that accept an actual keyboard on the Switch&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Useful in games like Animal Crossing: New Horizons that accept an actual keyboard on the Switch&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Additionally, there are hundreds of bugfixes in the backend. To list a few:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dual Joy-Cons will now correctly reconnect instead of reverting to “any” input after a yuzu reboot.&lt;/li&gt;
&lt;li&gt;Analog triggers are properly mapped (this includes Gamecube controllers).&lt;/li&gt;
&lt;li&gt;Configuration parameters are shared on all emulated controller types.&lt;/li&gt;
&lt;li&gt;Battery level is now informed when available.&lt;/li&gt;
&lt;li&gt;Pressing a button will automatically reconnect the first player.&lt;/li&gt;
&lt;li&gt;Rumble on the right side is fixed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For those interested, the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7255&#34;&gt;pull request&lt;/a&gt; description includes all the technical information on how Kraken now operates, including
the internal changes to every subsystem.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7472&#34;&gt;Subsequent&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7476&#34;&gt;pull requests&lt;/a&gt; by &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; and german77
provided further fixes and cleanups.
For example, in the past yuzu would determine automatically if the controller applet needed to pop-up, removing an annoyance in single player games.
Kraken shipped with a bug causing the controllers to remain in configure mode, awaiting an applet that never came up.
german77 &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7465&#34;&gt;corrected this behavior&lt;/a&gt; to enable the controllers in such cases.&lt;/p&gt;
&lt;h2 id=&#34;other-input-changes&#34;&gt;Other input changes&lt;/h2&gt;
&lt;p&gt;A highly requested feature is &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7452&#34;&gt;controller navigation over UI elements&lt;/a&gt;, and that’s exactly what german77 delivered.
Currently there is support for the game list and profile selector (if the user created several profiles).
The feature is in its baby steps, so expect some rough edges. For example, when in the controller applet or when trying to hold the stick. We are currently working on refining it.&lt;/p&gt;
&lt;p&gt;Here’s an example on the GPD Win 3:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./ui.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Steam Deck hype train, here we go!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;When asking for the character’s name in &lt;code&gt;Famicom Detective Club: The Missing Heir&lt;/code&gt;, the game generated an error in Chinese and then crashed.
The issue is rooted in a bad behaviour in how text is handled with the On-Screen Keyboard (OSK). There’s no need to ask for user confirmation on text that has been already
confirmed.
The resulting error message was corrupted due to using the wrong character encoding.
Morph &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7303&#34;&gt;addressed both issues&lt;/a&gt;, and the game can be played now.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./detective.png&#34; title=&#34; Elementary, my dear yuzu (Famicom Detective Club: The Missing Heir)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/detective_hu1550ae48722f81a68f9659066103ad28_3985119_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Elementary, my dear yuzu (Famicom Detective Club: The Missing Heir)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Elementary, my dear yuzu (Famicom Detective Club: The Missing Heir)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;german77 got tired of having to constantly modify the code when testing different types of unsupported controllers, so he added a
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7451&#34;&gt;toggle to allow&lt;/a&gt; them.
We don’t recommend enabling this setting for normal gameplay, but if anyone wants to try it out, the option is in
&lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; General &amp;gt; Debug &amp;gt; Enable all Controller Types&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;graphical-fixes&#34;&gt;Graphical fixes&lt;/h2&gt;
&lt;p&gt;One of the missing video formats was &lt;code&gt;VP8&lt;/code&gt;. We didn’t implement it until now because there were very few known games that used it.
There are at least 3 known games using &lt;code&gt;VP8&lt;/code&gt; at the moment: &lt;code&gt;TY the Tasmanian Tiger HD&lt;/code&gt;, &lt;code&gt;Diablo II: Resurrected&lt;/code&gt;, and &lt;code&gt;Pokémon Brilliant Diamond/Shining Pearl&lt;/code&gt;. Thus,
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7326&#34;&gt;epicboy&lt;/a&gt; attacked his keyboard and implemented &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7326&#34;&gt;VP8 support&lt;/a&gt; into yuzu. However, there are known issues with Pokémon &lt;code&gt;VP8&lt;/code&gt; decoding that we’re working to address.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./vp8.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Cue the fanfare (Pokémon Shining Pearl)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Textures can be divided on colour or depth formats, but everything changed when the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/&#34;&gt;TCR&lt;/a&gt; attacked.&lt;/p&gt;
&lt;p&gt;In OpenGL, a conversion method was missing for copying “incompatible” texture formats, like colour &amp;lt;-&amp;gt; depth format copies. epicboy
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7349&#34;&gt;worked around this limitation&lt;/a&gt; by using the same method implemented in BGR &amp;lt;-&amp;gt; RGB conversions that we&amp;rsquo;ve mentioned in the past.&lt;/p&gt;
&lt;p&gt;Countless glitches were fixed, two notable examples being the shadows in &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt; and the cutscenes in &lt;code&gt;Bayonetta 2&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./bayobug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./bayofix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;You can now focus on... gameplay (Bayonetta 2)&lt;/p&gt;


&lt;p&gt; &lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./lm3bug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./lm3fix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;No more ghost shadows (Luigi&amp;#39;s Mansion 3)&lt;/p&gt;


&lt;p&gt;With the release of &lt;code&gt;Pokémon Brilliant Diamond/Shining Pearl&lt;/code&gt;, a &lt;a href=&#34;https://unity.com/&#34;&gt;Unity&lt;/a&gt; engine game, and &lt;code&gt;SHIN MEGAMI TENSEI V&lt;/code&gt;, an
&lt;a href=&#34;https://www.unrealengine.com/&#34;&gt;Unreal Engine 4&lt;/a&gt; game, we realized how much work needs to be done to solve stability and rendering issues affecting both engines.
Since we don’t have that many GPU developers available (especially in finals months), we can only focus on one thing at a time, so first, Unity.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/#graphical-fixes&#34;&gt;Blit detection&lt;/a&gt; suffered some regressions with the introduction of the resolution scaler,
&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/&#34;&gt;Project ART&lt;/a&gt;.
&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7368&#34;&gt;fixed them and added texture format&lt;/a&gt; &lt;code&gt;D24S8&lt;/code&gt; to &lt;code&gt;RGBA8&lt;/code&gt; conversions to Vulkan,
fixing several crashes affecting both APIs in this new Pokémon remake.&lt;/p&gt;
&lt;p&gt;Morph later included &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7395&#34;&gt;some more fixes&lt;/a&gt; for this pull request.&lt;/p&gt;
&lt;p&gt;Another issue affecting &lt;code&gt;Pokémon Brilliant Diamond/Shining Pearl&lt;/code&gt; is an interesting corruption that can happen in battles and in reflections after some
time, or with certain attacks that cover the whole screen. By replacing the old “format deduction algorithm” and instead utilizing &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7396&#34;&gt;full depth conversions&lt;/a&gt;, Blinkhawk fixed this colourful bug.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bdspbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/bdspbug_hu64dfc2fd9b2343f7a6d318f280a498c6_6074641_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;What a trip, almost like a Disney song (Pokémon Brilliant Diamond)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bdspfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/bdspfix_huc67ba51899a717eb1c9f41ef7702439b_4464556_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;What a trip, almost like a Disney song (Pokémon Brilliant Diamond)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;What a trip, almost like a Disney song (Pokémon Brilliant Diamond)&lt;/p&gt;


&lt;p&gt;One of the (many) missing texture formats is &lt;code&gt;S8_UINT&lt;/code&gt;, an 8-bit stencil texture. Morph used a homebrew unit test to verify he was making progress. &lt;code&gt;Baldur’s Gate 1 and 2&lt;/code&gt; and &lt;code&gt;Citizens of Space&lt;/code&gt; make use of &lt;code&gt;S8_UINT&lt;/code&gt;, but as
both games need other formats that are still missing and other fixes, they weren&amp;rsquo;t very helpful in testing.&lt;/p&gt;
&lt;p&gt;While &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7357&#34;&gt;there is support for S8_UINT in both OpenGL and Vulkan&lt;/a&gt; now, NVIDIA is the only vendor to specify support for the format in Vulkan, meaning that any
affected game running on an AMD or Intel GPU will need to stick to OpenGL to get proper rendering.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./s8uintbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/s8uintbug_hu8f3eb7ce0e35849d67c7c7cb88e14aa8_164433_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Testing homebrew&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./s8uintfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/s8uintfix_huacbe66144aabfff542deb1ab0dd39b85_233678_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Testing homebrew&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Testing homebrew&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; found a bug where image creation would include width size restrictions that wouldn’t apply to later updates and downloads,
causing OpenGL to spam errors.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7294&#34;&gt;Properly handling those cases&lt;/a&gt; allows the driver to calm down.
Proper and cleaner code can also mean less driver overhead.&lt;/p&gt;
&lt;p&gt;Continuing with the implementation of unsupported formats, vonchenplus added &lt;code&gt;R5G6B5_UNORM_PACK16&lt;/code&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7291&#34;&gt;textures to Vulkan&lt;/a&gt; and
&lt;code&gt;S8_UINT_D24_UNORM&lt;/code&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7466&#34;&gt;globally&lt;/a&gt;.
Again, just like &lt;code&gt;S8_UINT&lt;/code&gt;, AMD and Intel hardware lack Vulkan support for &lt;code&gt;S8_UINT_D24_UNORM&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;vonchenplus also &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7375&#34;&gt;converted all uses of legacy attributes&lt;/a&gt; within shaders into generic attributes, since they were not
supported by some graphics drivers, improving compatibility.&lt;/p&gt;
&lt;p&gt;These four changes improve &lt;code&gt;DRAGON QUEST BUILDERS&lt;/code&gt;, but more work is required to make the game playable. If you&amp;rsquo;re interested in testing this game, use Vulkan, or
disable Asynchronous GPU Emulation when using OpenGL. Beware, crashes may occur.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dqb.png&#34; title=&#34; Missing graphics make the game not an optimal experience for now (DRAGON QUEST BUILDERS)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/dqb_hu56aa2691c8d31eda2ecf845ffe423c18_1224431_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Missing graphics make the game not an optimal experience for now (DRAGON QUEST BUILDERS)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Missing graphics make the game not an optimal experience for now (DRAGON QUEST BUILDERS)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Let&amp;rsquo;s go back to the topic of fixing issues introduced by the resolution scaler. Users reported that taking screenshots at the 1x resolution multiplier resulted in saved images with a size higher than the rendering resolution of the game.
A mix up resulted in the screenshot being saved at the window size instead of the game’s framebuffer size.
epicboy &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7389&#34;&gt;fixed the logic&lt;/a&gt; and we’re back to proper screenshot resolutions.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/liushuyu&#34;&gt;liushuyu&lt;/a&gt;, our fantastic Web Admin, &lt;a href=&#34;https://github.com/flathub/org.yuzu_emu.yuzu/issues/200&#34;&gt;received reports&lt;/a&gt;
&lt;a href=&#34;https://github.com/flathub/org.yuzu_emu.yuzu/issues/218&#34;&gt;of systems with multiple GPUs&lt;/a&gt; experiencing crashes while running the Flatpak version of yuzu on Linux.
It seems like the bundled version of &lt;a href=&#34;https://www.mesa3d.org/&#34;&gt;mesa&lt;/a&gt; and &lt;a href=&#34;https://ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt; will not work on systems with different GPU vendors.
This is caused by Flatpak&amp;rsquo;s built-in ffmpeg lacking support for NVDEC and VDPAU on NVIDIA hardware, and having broken codec detection.
Just your average GNOME, who manages both Flatpak and FlatHub.&lt;/p&gt;
&lt;p&gt;liushuyu submitted &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7431&#34;&gt;two&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7467&#34;&gt;separate&lt;/a&gt; pull requests addressing this problem, but more
edge cases continue to appear, so the battle isn’t over yet.&lt;/p&gt;
&lt;p&gt;While we continue to work towards winning this war on Flatpak issues, please stick to using our &lt;a href=&#34;https://yuzu-mirror.github.io/downloads/#linux&#34;&gt;AppImages&lt;/a&gt;, or
&lt;a href=&#34;https://yuzu-mirror.github.io/wiki/building-for-linux/&#34;&gt;manually building yuzu&lt;/a&gt;.
If you prefer to manually build yuzu, make sure that your ffmpeg library is capable of decoding &lt;code&gt;VP8&lt;/code&gt;, &lt;code&gt;VP9&lt;/code&gt;, and &lt;code&gt;H.264&lt;/code&gt; on hardware.
It seems like the only way to solve this problem will be to just ship our own ffmpeg instead of Flatpak’s default version.&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/MightyCreak&#34;&gt;MightyCreak&lt;/a&gt; has been working on changes in behaviour to the default light theme.
Previously, yuzu would ignore the system wide theme, sticking to a light palette even if the system switched to a dark one.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7330&#34;&gt;Renaming the Light theme to Default, and allowing it to match the behaviour of the system theme&lt;/a&gt;, makes for a more streamlined user experience.
At the moment, this behaviour only works correctly on Linux, Windows’ Qt doesn’t yet support system wide themes.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7342&#34;&gt;Yours truly (GoldenX86)&lt;/a&gt; decided that the previous missing keys error screen wasn’t clear enough and fixed it right up, short and sweet.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./keysbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/keysbug_hub005b95bd911c6ba69466ecb49be0711_7832_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;For some reason, people seem to forget what hyperlinks are for&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./keysfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/keysfix_hu6e5749f0893dd4b18faf415bc03346a0_7434_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;For some reason, people seem to forget what hyperlinks are for&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;For some reason, people seem to forget what hyperlinks are for&lt;/p&gt;


&lt;p&gt;While working on the resolution scaler and its included filters, Blinkhawk named FSR &lt;code&gt;AMD&#39;S FIDELITYFX SR&lt;/code&gt; on the bottom status bar.
As this was a bit too long, Morph &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7369&#34;&gt;renamed it&lt;/a&gt; to simply &lt;code&gt;FSR&lt;/code&gt;.
Small change, but more pleasing to the eyes.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./fsrbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/fsrbug_hu4824e490d033b1e9e95c932c7efd2a22_1623_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Better, don&amp;#39;t you agree?&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./fsrfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/fsrfix_hu011497e26baca6110672f979d71c8403_1295_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Better, don&amp;#39;t you agree?&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Better, don&amp;#39;t you agree?&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/Kewlan&#34;&gt;Kewlan&lt;/a&gt; implemented a very nice addition for high refresh rate users.
With the introduction of the FPS unlimiter that players can toggle by pressing &lt;code&gt;Ctrl + U&lt;/code&gt; while in-game, a cap was introduced in the configuration to allow setting a
multiplier of the native framerate as the upper limit.&lt;/p&gt;
&lt;p&gt;For example, if a game runs at 30FPS, and the user wants to limit it to 120FPS to better match the maximum refresh rate of their display, a 4x multiplier would be
needed. A 2x multiplier if the game runs at 60FPS natively.&lt;/p&gt;
&lt;p&gt;The problem with this approach is that as shown in the example, different games will run at different framerates natively, so a global value isn&amp;rsquo;t ideal.
Kewlan &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7404&#34;&gt;added support for framerate caps in the custom configuration&lt;/a&gt; and users can access it by right clicking a game in yuzu’s list and selecting properties. This way, the user can set their preferred cap on a per-game basis.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./cap1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/cap1_huf6a94776f23c8ba3ff3e03baa9cc9eec_8034_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;If you buy a new display, remember to manually increase the refresh rate!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./cap2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/cap2_hu9556e9b41f5102647f4661eaaa76d700_6736_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;If you buy a new display, remember to manually increase the refresh rate!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;If you buy a new display, remember to manually increase the refresh rate!&lt;/p&gt;


&lt;p&gt;If the user wants a value that isn’t a multiple of the native framerate of the game, they can use software like
&lt;a href=&#34;https://www.guru3d.com/files-details/msi-afterburner-beta-download.html&#34;&gt;MSI Afterburner&lt;/a&gt; to specify a custom limit.&lt;/p&gt;
&lt;p&gt;There has been some extensive work to improve hotkeys.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/v1993&#34;&gt;v1993&lt;/a&gt; received a report that yuzu’s window will flicker if the user holds the &lt;code&gt;Esc&lt;/code&gt; key when trying to exit fullscreen.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7353&#34;&gt;That won’t happen any more&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;german77 discovered that holding a hotkey would constantly spam the input. This was unintended, so he ensured &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7355&#34;&gt;this behaviour was no more&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/heinermann&#34;&gt;heinermann&lt;/a&gt; modified &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7419&#34;&gt;the Menu bar as follows:&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;Emulation&lt;/code&gt;, the &lt;code&gt;Start&lt;/code&gt; button has been removed and &lt;code&gt;Continue&lt;/code&gt; will now say &lt;code&gt;Pause&lt;/code&gt; when applicable and vice versa. &lt;code&gt;Restart&lt;/code&gt; will no longer cause a crash.
In &lt;code&gt;File&lt;/code&gt;, the &lt;code&gt;Load Amiibo...&lt;/code&gt; hotkey was fixed. We still have issues with several games when using this function, so consider it in a beta state.
&lt;code&gt;TAS&lt;/code&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7406&#34;&gt;received its own submenu&lt;/a&gt; in &lt;code&gt;Tools &amp;gt; TAS&lt;/code&gt;. And in exciting news, Exiting the emulator will now work while in fullscreen!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./tasbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/tasbug_hu9d0ec7df002e646b9cc5c52554cbb94c_20453_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./tasfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2021/tasfix_hu506132873de2e7dc761b2cd92468cce9_13786_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;


&lt;h2 id=&#34;kernel-fixes&#34;&gt;Kernel fixes&lt;/h2&gt;
&lt;p&gt;Morph fixed &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7278&#34;&gt;a compilation warning&lt;/a&gt; in the kernel &lt;code&gt;SVC::WaitSynchronization&lt;/code&gt;, where the parameter &lt;code&gt;num_handles&lt;/code&gt; was wrongly
declared as an unsigned integer when it was actually a signed integer.&lt;/p&gt;
&lt;p&gt;heinermann discovered a bug in the kernel that crashed yuzu upon exiting.&lt;/p&gt;
&lt;p&gt;This happened because dummy threads in the kernel weren&amp;rsquo;t getting destroyed properly. When yuzu was exited during emulation or after stopping emulation, these threads stayed alive even though the kernel got destroyed, thus causing yuzu to crash.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7359&#34;&gt;By making the kernel own these threads&lt;/a&gt;, we ensure they get destroyed when the kernel gets destroyed, mitigating the crash.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/OatmealDome&#34;&gt;OatmealDome&lt;/a&gt; fixed a bug that caused some homebrew to not boot. The fix was to
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7320&#34;&gt;pass default threadinfo when the kernel creates a thread&lt;/a&gt;, allowing homebrew to boot.&lt;/p&gt;
&lt;h2 id=&#34;skyline-framework-part-1&#34;&gt;Skyline framework, Part 1&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/itsmeft24&#34;&gt;itsmeft24&lt;/a&gt;, &lt;a href=&#34;https://github.com/jam1garner&#34;&gt;jam1garner&lt;/a&gt;, and Morph started working on adding support for the
&lt;a href=&#34;https://github.com/skyline-dev/skyline&#34;&gt;Skyline&lt;/a&gt; modding framework.
This will allow for more intricate code mods, such as using &lt;a href=&#34;https://github.com/Raytwo/ARCropolis&#34;&gt;ARCropolis&lt;/a&gt;, a mod loader for Smash Ultimate made by
&lt;a href=&#34;https://github.com/Raytwo&#34;&gt;Raytwo&lt;/a&gt; and &lt;a href=&#34;https://github.com/blu-dev&#34;&gt;blujay&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All these PRs &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7393&#34;&gt;[1]&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7394&#34;&gt;[2]&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7407&#34;&gt;[3]&lt;/a&gt; are part of the
on-going effort to implement support for the modding framework in yuzu.&lt;/p&gt;
&lt;p&gt;There are more juicy additions, but they didn&amp;rsquo;t make it in time to be mentioned in this article, we will continue to expand on Skyline&amp;rsquo;s progress in December&amp;rsquo;s report.
See the current progress &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/issues/7392&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;general-changes-and-bugfixes&#34;&gt;General changes and bugfixes&lt;/h2&gt;
&lt;p&gt;Not much to talk about in this section this time, mostly just service stubs and implementations.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; takes the spotlight &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7283&#34;&gt;with&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7285&#34;&gt;4&lt;/a&gt;
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7287&#34;&gt;stubs&lt;/a&gt; to make the new 2.0.0 update playable. Thank you, german77 and Morph.&lt;/p&gt;
&lt;p&gt;german77 also provides &lt;code&gt;Just Dance 2022&lt;/code&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7293&#34;&gt;with its own stub&lt;/a&gt; for the &lt;code&gt;EndFreeCommunication&lt;/code&gt; service.&lt;/p&gt;
&lt;p&gt;And finally, Morph &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7482&#34;&gt;implements the&lt;/a&gt; &lt;code&gt;GetCompletionEvent&lt;/code&gt; service for &lt;code&gt;Super Bomberman R Online&lt;/code&gt;.
However, as the game requires online services, it won’t be playable for now.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Project Gaia&lt;/code&gt; continues to progress and is receiving optimizations as we speak. We&amp;rsquo;re not that far away from starting internal testing on it.&lt;/p&gt;
&lt;p&gt;That’s all folks! As always, thank you so much for your attention, and we’ll see you next time!&lt;/p&gt;
&lt;p&gt;Special thanks to RodrigoTR and PacoA for their provided media.&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report October 2021</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/</link>
      <pubDate>Sat, 13 Nov 2021 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/</guid>
      <description>&lt;p&gt;Hey there, yuz-ers! We&amp;rsquo;ve had quite an exciting month. Our most anticipated and highly requested feature, Resolution Scaling, is finally out! But we didn&amp;rsquo;t rest on our laurels, a host of other fixes were pushed this month and we can&amp;rsquo;t wait to tell you all about them!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey there, yuz-ers! We&amp;rsquo;ve had quite an exciting month. Our most anticipated and highly requested feature, Resolution Scaling, is finally out! But we didn&amp;rsquo;t rest on our laurels, a host of other fixes were pushed this month and we can&amp;rsquo;t wait to tell you all about them!&lt;/p&gt;
&lt;h2 id=&#34;psa-for-nvidia-users&#34;&gt;PSA for NVIDIA users&lt;/h2&gt;
&lt;p&gt;Before delving further, we want to remind NVIDIA users that there are issues with the latest graphics drivers, specifically the 49X releases.&lt;/p&gt;
&lt;p&gt;Past the last 472.XX drivers, NVIDIA removed support for Windows versions prior to 10 and the Kepler series of GPUs (mostly 600 and 700 series cards).
Additionally, OpenGL GLSL and Vulkan rendering were affected, with GLSL becoming virtually unusable and Vulkan exhibiting minor glitches.&lt;/p&gt;
&lt;p&gt;While NVIDIA works to resolve the issues, and we work on alternatives to mitigate the problems, we&amp;rsquo;ve configured
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7243&#34;&gt;NVIDIA GPUs on affected drivers to only use GLASM when OpenGL is selected&lt;/a&gt;. This seems to workaround most of the GLSL errors we&amp;rsquo;ve been seeing on these latest drives.
Thanks to &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; for the quick update.&lt;/p&gt;
&lt;p&gt;GLSL will still be available for version 472.XX and older drivers.
If someone wishes to use GLSL on recent 49X series drivers, turn on &lt;code&gt;Enable Graphics Debugging&lt;/code&gt; in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; General &amp;gt; Debug&lt;/code&gt;.
Keep in mind this will reduce performance, as it is only intended for debugging.&lt;/p&gt;
&lt;p&gt;With the PSA out of the way, let&amp;rsquo;s get into the good stuff!&lt;/p&gt;
&lt;h2 id=&#34;project-art&#34;&gt;Project A.R.T.&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Advanced Rendering Techniques&lt;/code&gt; or was it &lt;code&gt;Aristotle’s Rescaling Technology&lt;/code&gt;? I think there&amp;rsquo;s another name I’m forgetting. Maybe &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7219&#34;&gt;the Pull Request&lt;/a&gt; will have more information for those curious.&lt;/p&gt;
&lt;p&gt;Anyway, &lt;code&gt;Project A.R.T.&lt;/code&gt; is out in the wild! &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;, &lt;a href=&#34;https://github.com/breadfish64&#34;&gt;BreadFish&lt;/a&gt;, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt;, and
&lt;a href=&#34;https://github.com/reinuseslisp&#34;&gt;Rodrigo&lt;/a&gt; are to thank for this incredible release.&lt;/p&gt;
&lt;p&gt;As explained in its dedicated article &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/&#34;&gt;here&lt;/a&gt;, this is a complete rewrite of our old resolution scaling implementation from 2019.
Before we jump into the end-user benefits, let&amp;rsquo;s first cover some terminology.
The correct terms for the scaling process are &lt;code&gt;Upsampling&lt;/code&gt; and &lt;code&gt;Supersampling&lt;/code&gt;, which can also be more commonly called &lt;code&gt;Downsampling&lt;/code&gt;.
In layman&amp;rsquo;s terms, downsampling means taking a big frame and reducing its size to fit a smaller display. Downsampling is rendering the game at a higher resolution than your
display’s native one.&lt;/p&gt;
&lt;p&gt;In contrast, &lt;code&gt;upsampling&lt;/code&gt; means taking a smaller frame and stretching it to fit a bigger display.
It results in a lower quality image, but users with low-end GPUs, particularly users of integrated graphics, may prefer to have better framerates over image quality.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./art.png&#34; title=&#34;A work of art (read left to right)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/art_hueb3062cf06dcf4b492f3133692bbe1d6_20679_638x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;A work of art (read left to right)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;A work of art (read left to right)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;There seems to be a lot of confusion about this. Remember, improving the visual quality of the game is downsampling, not upsampling.
Games look their best when they have a 1:1 ratio between rendering and display resolution, or when downsampling.&lt;/p&gt;
&lt;p&gt;With that out of the way, let’s get started.
All new options can be found in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics&lt;/code&gt;&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./options.png&#34; title=&#34;yuzu Graphics configuration window &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/options_hub6d5c511f5ac338e7fd38dff1f912762_23502_1019x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;yuzu Graphics configuration window &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;yuzu Graphics configuration window &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Starting with &lt;code&gt;Resolution&lt;/code&gt;, this option is the Scaling Multiplier being used. It will double the width and height of whatever resolution the game is rendering at.
At the moment, we offer two upsampling multipliers: &lt;code&gt;0.5X&lt;/code&gt; and &lt;code&gt;0.75X&lt;/code&gt;, and five downsampling multipliers: &lt;code&gt;2X&lt;/code&gt;, &lt;code&gt;3X&lt;/code&gt;, &lt;code&gt;4X&lt;/code&gt;, &lt;code&gt;5X&lt;/code&gt;, and &lt;code&gt;6X&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s an example, &lt;code&gt;Super Mario Odyssey&lt;/code&gt; displays a 1920x1080 frame in docked mode but actually renders at 1600x900, and at 1280x720 in undocked mode.
Applying a 2X resolution to Super Mario Odyssey gives us a rendering resolution of 3200x1800 in docked mode and 2560x1440 in undocked mode.
3X would give us 4800x2700 and 3840x2160 respectively, 0.5X would be 800x450 and 640x360, and so on.
Keep in mind that games can reduce graphical details in undocked mode, not only their resolution.&lt;/p&gt;
&lt;p&gt;With high resolutions comes increased texture sizes. This has a significant impact on both video memory (VRAM) and other available graphical resources, like memory bandwidth.
The user must consider the available VRAM and the performance of the GPU they are using when deciding which resolution multiplier to use.
For integrated GPU users, RAM overclocking becomes critical, as faster RAM means faster “VRAM” for your iGPU.&lt;/p&gt;
&lt;p&gt;If the GPU runs out of VRAM faster than the emulator or graphics driver can manage resources, yuzu will close, so follow our recommended values in the picture below.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vram.png&#34; title=&#34;We recommend 2GB and lower users to use 1X on graphic intensive games&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/vram_hu0f7f47f68d20f95d5554461536b87a08_15821_813x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;We recommend 2GB and lower users to use 1X on graphic intensive games&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;We recommend 2GB and lower users to use 1X on graphic intensive games&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Small, low-end GPUs (like our recommended GT 1030, RX 550, or any integrated GPU) will see considerable performance benefits when upsampling as the reduction in 3D load and the
lower VRAM utilization will provide higher framerates.&lt;/p&gt;
&lt;p&gt;People with current mid to high-end GPUs can benefit from the surplus of computational capabilities and available VRAM.
Actual performance will be determined by each specific game, but it’s safe to assume that good hardware can use a 2X or 3X multiplier with little issue most of the time.
We personally don’t recommend going higher than 3X as not even the best consumer hardware available at this moment can provide a perfect experience when rendering at very high
resolutions, but the options are there to experiment with.&lt;/p&gt;
&lt;p&gt;Light or very well optimized games like &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; and &lt;code&gt;Metroid Dread&lt;/code&gt; can make for great experiences on 4K or 8K displays.
On the other hand, particular games like &lt;code&gt;Astral Chain&lt;/code&gt; should not be downsampled, as they already use 3840x2160 textures.
Trying high resolution multipliers with games like this will result in your GPU&amp;rsquo;s VRAM not being very happy.&lt;/p&gt;
&lt;p&gt;We strongly recommend using Vulkan for downsampling as VRAM use will be considerably lower as compared to OpenGL.&lt;/p&gt;
&lt;p&gt;Let’s move on to the second option, &lt;code&gt;Window Adapting Filter&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When using a display with a different native resolution than your rendering resolution, you need some way of deciding which pixels will be shown in the final image. Filters are used for that!&lt;/p&gt;
&lt;p&gt;Currently, yuzu offers 6 filtering options, each recommended for different scenarios, and with different performance costs. We plan to expand this section in the future,
adding sliders to let users customize the filters to their own tastes.
And yes, on GPU limited scenarios, the filter in use can affect framerate.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./filters.png&#34; title=&#34;Tested on Mario Kart 8 Deluxe, filtering ain&amp;#39;t free!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/filters_huf9c323c0cf5eb15346b55786288d2947_15704_602x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Tested on Mario Kart 8 Deluxe, filtering ain&amp;#39;t free!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Tested on Mario Kart 8 Deluxe, filtering ain&amp;#39;t free!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While an integrated GPU will suffer the performance cost, even a low-end dedicated card will handle the increased computational load with ease.&lt;/p&gt;
&lt;p&gt;Here are some recommendations and comparisons of all current options against the default bilinear filter.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Nearest Neighbor&lt;/code&gt; is ideal for pixel art style games like &lt;code&gt;UNDERTALE&lt;/code&gt; or &lt;code&gt;OCTOPATH TRAVELER&lt;/code&gt;, it can also provide the best results when the game’s rendering resolution
matches the window or display’s resolution. It and &lt;code&gt;Bilinear&lt;/code&gt; have the lowest performance cost of all the options.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/otbilinear_hucd9d11b2b2fe7cd284b1ce20b994dd42_1539618_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;OCTOPATH TRAVELER (Bilinear Vs. Nearest Neighbour)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/otnearest_hu94544779c866e2119187fbd8aee4c885_1614091_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;OCTOPATH TRAVELER (Bilinear Vs. Nearest Neighbour)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;OCTOPATH TRAVELER (Bilinear Vs. Nearest Neighbour)&lt;/p&gt;


&lt;p&gt;&lt;code&gt;Bilinear&lt;/code&gt; is our combat tested default option. It&amp;rsquo;s very good for downsampling and like &lt;code&gt;Nearest Neighbor&lt;/code&gt;, it has almost no performance cost. It’s a great all-rounder.
If you have a 1080p display, we recommend &lt;code&gt;Bilinear&lt;/code&gt; with a 2X resolution multiplier.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Bicubic&lt;/code&gt; can produce better downsampling results than &lt;code&gt;Bilinear&lt;/code&gt;, but at a slightly higher performance cost. We recommend it for 2X or 3X multipliers on 1080p displays.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/botwbilinear_huad67af673bfe25941e438dd0e7ef5933_1382345_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild (Bilinear Vs. Bicubic)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/botwbicubic_hu53573981f313c71bcfd36673143eb881_1239711_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild (Bilinear Vs. Bicubic)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda: Breath of the Wild (Bilinear Vs. Bicubic)&lt;/p&gt;


&lt;p&gt;&lt;code&gt;Gaussian&lt;/code&gt; is intended for extreme cases, like when the user wants to test a very high multiplier. It also has a high performance cost.
When very high values are used, the image can, ironically, start to become pixelated again. The gaussian blur produced by this filter will help provide a more pleasant image.
Recommended for 4X to 6X multipliers on 1080p displays.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/dreadbilinear_hu84b71936d0cc0e909a566a8e5d9525ff_917436_720x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Metroid Dread (Bilinear Vs. Gaussian)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/dreadgaussian_huafae6c885c8ec8de4fa5e2547565563b_829533_720x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Metroid Dread (Bilinear Vs. Gaussian)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Metroid Dread (Bilinear Vs. Gaussian)&lt;/p&gt;


&lt;p&gt;&lt;code&gt;Scaleforce&lt;/code&gt; was invented by BreadFish. It is a great downsampling filter for 3D games and a fine upsampling filter for 2D games, while also only requiring a moderate performance
cost. A true jack of all trades.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/otbilinear_hucd9d11b2b2fe7cd284b1ce20b994dd42_1539618_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;OCTOPATH TRAVELER (Bilinear Vs. Scaleforce)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/otscaleforce_hu7357fe75a9a451639ceb9e68201c3181_1559024_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;OCTOPATH TRAVELER (Bilinear Vs. Scaleforce)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;OCTOPATH TRAVELER (Bilinear Vs. Scaleforce)&lt;/p&gt;


&lt;p&gt;&lt;code&gt;AMD Fidelity FX™ Super Resolution&lt;/code&gt;, or FSR for short, is &lt;a href=&#34;https://github.com/GPUOpen-Effects/FidelityFX-FSR&#34;&gt;in AMD’s own words&lt;/a&gt; “&amp;hellip;an open source, high-quality solution
for producing high resolution frames from lower resolution inputs.”&lt;/p&gt;
&lt;p&gt;This means that it is particularly useful for low-end users trying to restore some of the missing details lost when upsampling a game to gain performance.
It is NOT recommended for downsampling, as the output resolution is used as part of the process. A perfect pick for people forced to run 0.5X or 0.75X multipliers for performance reasons.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/smo1xbilinear_hu7ec165b64df65c7ccd99ffde914f6eca_3540520_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (1X Bilinear Vs. 0.75X FSR)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/smo075xfsr_hu21a730d6822a81e5ef7aa54a1e355131_3658527_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (1X Bilinear Vs. 0.75X FSR)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey (1X Bilinear Vs. 0.75X FSR)&lt;/p&gt;


&lt;p&gt;If the user tries FSR while downsampling, they &lt;em&gt;&lt;strong&gt;will be reducing image quality&lt;/strong&gt;&lt;/em&gt; and will end up only seeing the sharpening aspect of the filter, negating any advantage of
increasing the rendering resolution while incurring the full performance cost of it.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/zlabilinearbad_hu662f8740bad7c8488dec4c46cca87f54_2045562_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Link&amp;#39;s Awakening (2X Bilinear Vs. 2X FSR on a 1080p display)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/zlafsrbad_hu5b2718a9fb856aec59ac8f43941c790a_752358_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Link&amp;#39;s Awakening (2X Bilinear Vs. 2X FSR on a 1080p display)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda: Link&amp;#39;s Awakening (2X Bilinear Vs. 2X FSR on a 1080p display)&lt;/p&gt;


&lt;p&gt;So, in short, if the rendering resolution is &lt;em&gt;higher&lt;/em&gt; than the display’s resolution, FSR should be avoided.
If the rendering resolution is &lt;em&gt;equal or lower&lt;/em&gt; than the display’s resolution, FSR is an excellent shader-based filtering option, but with the highest performance cost on the
list.&lt;/p&gt;
&lt;p&gt;As a way to cheat around this limitation, AMD and NVIDIA Windows users can fake higher display resolutions with the use of
&lt;a href=&#34;https://www.amd.com/en/support/kb/faq/dh2-010&#34;&gt;Virtual Super Resolution&lt;/a&gt; and &lt;a href=&#34;https://www.nvidia.com/en-us/geforce/technologies/dsr/technology/&#34;&gt;Dynamic Super Resolution&lt;/a&gt;
respectively.
This way, for example, a 1080p display can fake a 2160p (4K) maximum resolution, giving FSR a lot more information to play with.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/zlabilineargood_hub2b74858f536bbc2b3a962e9ba8182d7_2047005_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Link&amp;#39;s Awakening (2X Bilinear Vs. 2X FSR on a 4K display)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/zlafsrgood_hu641e1924be04b784e5db81d80bcfd41f_2151116_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Link&amp;#39;s Awakening (2X Bilinear Vs. 2X FSR on a 4K display)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda: Link&amp;#39;s Awakening (2X Bilinear Vs. 2X FSR on a 4K display)&lt;/p&gt;


&lt;p&gt;Finally our current last option, &lt;code&gt;Anti-Aliasing Method&lt;/code&gt;.
Pixels are almost squares and squares aren&amp;rsquo;t great for displaying curves. Anti-aliasing methods are used to smooth out this undesired effect.
At the moment we only offer &lt;a href=&#34;https://en.wikipedia.org/wiki/Fast_approximate_anti-aliasing&#34;&gt;FXAA&lt;/a&gt;, which can help reduce the excessive sharpening shown when using FSR.
In the near future, we plan to add more options like &lt;a href=&#34;https://en.wikipedia.org/wiki/Morphological_antialiasing&#34;&gt;MLAA/SMAA&lt;/a&gt;&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/lm3fsr_hu5b5cd213d00e9435b55eba944b77109a_3852406_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Luigi&amp;#39;s Mansion 3 (FSR Vs. FSR &amp;#43; FXAA, both on a 4K display)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/lm3fxaa_hu3751a06a230238c6665965c89b97fdf8_3845415_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Luigi&amp;#39;s Mansion 3 (FSR Vs. FSR &amp;#43; FXAA, both on a 4K display)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Luigi&amp;#39;s Mansion 3 (FSR Vs. FSR &amp;#43; FXAA, both on a 4K display)&lt;/p&gt;


&lt;p&gt;Both the filters and anti-aliasing options can be changed while in-game using the buttons on the bottom left of yuzu’s window.
Changing the resolution multiplier in-game is not possible at the moment.&lt;/p&gt;
&lt;p&gt;As an additional note, &lt;code&gt;A.R.T.&lt;/code&gt; also reimplements our &lt;code&gt;Anisotropic Filtering&lt;/code&gt;!
This option can be accessed from the Advanced tab in the graphics settings.
In the past we recommended skipping this option as not all games are particularly fond of forcing values higher than they specified, but this new implementation is smarter,
avoiding previous drawbacks.&lt;/p&gt;
&lt;p&gt;At a low performance cost, it will increase the quality of textures at oblique angles, particularly ground textures, most noticeable in first and third person view games.
It should now be safe to set at 16x and forget about it.&lt;/p&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/pksw1x_hu2859533cfba6cbef6f8d7dc87a7baeed_385531_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon Sword (default Vs. 16X Anisotropic Filtering)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/pksw16x_huaa283a2fe7c2191c207a0c0dc5b4ae08_444160_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon Sword (default Vs. 16X Anisotropic Filtering)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Pokémon Sword (default Vs. 16X Anisotropic Filtering)&lt;/p&gt;


&lt;p&gt;One last note, AMD users should ensure that &lt;a href=&#34;https://www.youtube.com/watch?v=wTh_O9BZlGc&#34;&gt;Radeon Image Sharpening&lt;/a&gt; is disabled before using the scaler, as it can affect the
quality of some filters, especially FSR which includes its own sharpening already.&lt;/p&gt;
&lt;p&gt;At the time of writing this article, &lt;code&gt;Resolution Scaling&lt;/code&gt; remains in &lt;a href=&#34;https://yuzu-mirror.github.io/help/early-access/&#34;&gt;Early Access&lt;/a&gt; for testing and regression finding, but be sure that it won’t take long to be merged into &lt;a href=&#34;https://yuzu-mirror.github.io/downloads/&#34;&gt;Mainline&lt;/a&gt;.
Check the progress in the pull request previously listed, code review is usually the main reason for delays on merging.&lt;/p&gt;
&lt;h2 id=&#34;graphical-and-general-bugfixes&#34;&gt;Graphical and general bugfixes&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Metroid Dread&lt;/code&gt; has been a very important release both for the series and for the console, giving us the first main entry for the series in years.&lt;/p&gt;
&lt;p&gt;This game is heavily optimized and well polished all around, part of that is thanks to using very clever tricks to render.
Dread doesn’t shy away from using pre-rendered videos for backgrounds, displays, manuals, and the intro menu.
Such videos were using an &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7138&#34;&gt;unsupported frame format, &lt;code&gt;RGBX8&lt;/code&gt;&lt;/a&gt;, which epicboy implemented.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;dreadbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/dreadbug_hu41932d7cf9e06156bc410a0f1e01b345_24431_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;There&amp;#39;s no need to introduce more dread into this game (Metroid Dread)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;dreadfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/dreadfix_huecf99986d5ce3a98467a2b7522ee0a0e_740275_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;There&amp;#39;s no need to introduce more dread into this game (Metroid Dread)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;There&amp;#39;s no need to introduce more dread into this game (Metroid Dread)&lt;/p&gt;


&lt;p&gt;While this solves the rendering of a single video on screen, some areas of the game can play multiple streams simultaneously, causing glitches on screen.
yuzu’s decoding needs to be improved to handle those cases, something we’re still working on.&lt;/p&gt;
&lt;p&gt;While Blinkhawk was working on &lt;code&gt;Project A.R.T&lt;/code&gt;, he also &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7127&#34;&gt;doubled the counter of cached pages in the rasterizer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;yuzu uses these counters to keep track of the number of GPU objects stored in a cache within a CPU page.
Previously, this counter would account for pages whose addresses were up to a size of 38 bits.
Some games, however, can use memory addresses of up to 39 bits.&lt;/p&gt;
&lt;p&gt;By doubling the counter, the rasterizer can effectively keep track of these addresses now, allowing certain games that did not work with the old counter to boot, such as
&lt;code&gt;Final Fantasy X&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ffx.png&#34; title=&#34;Listen to my story, the story of the worst laugh ever recorded (FINAL FANTASY X/X-2 HD Remaster)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/ffx_huc2dfe4202400edcc6b9719c08ac72dd1_3956005_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Listen to my story, the story of the worst laugh ever recorded (FINAL FANTASY X/X-2 HD Remaster)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Listen to my story, the story of the worst laugh ever recorded (FINAL FANTASY X/X-2 HD Remaster)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;epicboy investigated the graphical issues present in &lt;code&gt;Mario Party Superstars&lt;/code&gt;.
Following the lead from this initial research, Blinkhawk found the problem and submitted a patch that
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7262&#34;&gt;improves the performance of the backtracking algorithm&lt;/a&gt; used by the shader cache to find the handlers of a bindless texture.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;mpsbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/mpsbug_hu41932d7cf9e06156bc410a0f1e01b345_71127_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Old school minigames are the best (Mario Party Superstars)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;mpsfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/mpsfix_hu979ec8f77601462edb52d27bc9c94b36_1527421_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Old school minigames are the best (Mario Party Superstars)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Old school minigames are the best (Mario Party Superstars)&lt;/p&gt;


&lt;p&gt;yuzu’s window can be freely resized, but users may want some presets to return things to accurate 16:9 proportions.
In the past we offered 720p and 1080p options, but now epicboy &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7158&#34;&gt;adds a 900p option&lt;/a&gt;, useful for both people with 1080p displays
wanting some free space on their screen, and for getting a 1:1 ratio on 3D games that render natively at 1600x900.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./size.png&#34; title=&#34;A simple way to make good use of nearest neighbour&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/size_hu7f5dfde15abcae25d09f5db6bb75ae4a_8297_451x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;A simple way to make good use of nearest neighbour&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;A simple way to make good use of nearest neighbour&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Blinkhawk has been investigating an issue affecting &lt;code&gt;Catherine: Full Body&lt;/code&gt;, &lt;code&gt;Hyrule Warriors: Definitive Edition&lt;/code&gt;, and an unknown number of other games.&lt;/p&gt;
&lt;p&gt;NVN, the graphics API most Nintendo Switch games use, will skip &lt;a href=&#34;https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkFence.html&#34;&gt;fences&lt;/a&gt; (ways to
synchronize rendering)  if a certain amount of time has passed. This is a sensical design choice on native hardware, where a long wait could mean a
&lt;a href=&#34;https://en.wikipedia.org/wiki/Timeout_Detection_and_Recovery&#34;&gt;TDR&lt;/a&gt; from a malfunctioning game or faulty hardware.
In the emulator, on the other hand, long wait times can be caused by shaders being built, textures being downloaded or uploaded, background processes hogging the system, etc.&lt;/p&gt;
&lt;p&gt;If those delays are not taken into consideration, games can experience graphical glitches and bad frame pacing. The solution is
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7187&#34;&gt;forcing the GPU to wait&lt;/a&gt; until the system responds with all tasks finished.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;catbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/catbug_hu8c8e3e87e97014237239944bb96feed8_2552044_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Almost a Nice Boat protagonist (Catherine: Full Body)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;catfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/catfix_hu8bad7bf72712b31cb909f3c6080f5a8e_3363730_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Almost a Nice Boat protagonist (Catherine: Full Body)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Almost a Nice Boat protagonist (Catherine: Full Body)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; is back with more fixes! This time a couple of stubs helping in-game stability or rendering.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7184&#34;&gt;Stubbing &lt;code&gt;IHOSBinderDriver::TransactParcel&lt;/code&gt; and &lt;code&gt;GetBufferHistory&lt;/code&gt;&lt;/a&gt; help to boot &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt;, which is notorious for
refusing to load at random.
While this helps mitigate the issues, they are not fully solved. It seems the small delay introduced by shader building can affect the stability of this game too. We
need to investigate this issue further.&lt;/p&gt;
&lt;p&gt;It’s time to add some love to &lt;code&gt;yuzu-cmd&lt;/code&gt; again, our command line alternative to the default Qt-based yuzu.
toastUnlimited added the option to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7148&#34;&gt;select the network interface to use&lt;/a&gt;, providing LAN support to terminal-loving users.&lt;/p&gt;
&lt;p&gt;Some videos in &lt;code&gt;Touhou Genso Wanderer -Lotus Labyrinth R-&lt;/code&gt; and &lt;code&gt;Tsukihime -A piece of blue glass moon-&lt;/code&gt; would render completely black.
&lt;a href=&#34;https://github.com/v1993&#34;&gt;v1993&lt;/a&gt; figured out the cause of the problem, which happened because the height of the video frame that needed to be decoded was smaller than the
surface where it was supposed to be drawn upon.
In order to avoid writing outside of bounds, there is a check that ensures these two dimensions are equal, or it will not draw the frame.
v1993 changed this check to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7152&#34;&gt;allow the surface to be higher than frame&lt;/a&gt;, so that videos with this issue can render their frames.&lt;/p&gt;
&lt;p&gt;But this was a transient solution, as epicboy later addressed the problem by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7157&#34;&gt;implementing a general solution&lt;/a&gt; that uses the
minimum between these two sizes when writing the decoded image into the GPU, while keeping the aforementioned check in place to ensure no out-of-bounds memory is compromised.&lt;/p&gt;
&lt;p&gt;These changes affect all titles with size disparities, allowing them to render their videos even if the height of the frame and the surface differ by a couple of pixels.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;thbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;thfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;That piano really hits with nostalgia (Tsukihime -A piece of blue glass moon-)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;gwbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/gwbug_hu34264a64c7d74cce405a83173c53b749_93596_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Speaking of good music (Touhou Genso Wanderer -Lotus Labyrinth R-)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;gwfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/gwfix_hu2882a5f6989347a3746cee6ef8ba80e5_1359537_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Speaking of good music (Touhou Genso Wanderer -Lotus Labyrinth R-)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Speaking of good music (Touhou Genso Wanderer -Lotus Labyrinth R-)&lt;/p&gt;


&lt;p&gt;epicboy also made changes to the SPIR-V emitter, so that
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7201&#34;&gt;implicit LOD sampling behaves the same way as the hardware on all GPU drivers&lt;/a&gt; during non-fragment stages of the pipeline.&lt;/p&gt;
&lt;p&gt;It is possible to specify how detailed things can appear on the screen based on the &lt;code&gt;LOD&lt;/code&gt; (Level of Detail).
So, for example, objects further away from the camera will use lower-quality textures, saving computation power and also preventing other problems, such as
&lt;a href=&#34;https://en.wikipedia.org/wiki/Moir%C3%A9_pattern&#34;&gt;Moiré patterns&lt;/a&gt;.
The programmer is able to specify in the shader whether they sample from the original texture (level 0), or from these lower-quality textures (level 1, 2, 3&amp;hellip;, etc.).
In case the &lt;code&gt;LOD&lt;/code&gt; isn&amp;rsquo;t specified in non-fragment stages of the pipeline (i.e. implicit LOD sampling), the LOD level is considered zero in the Nintendo Switch.
Since other GPU drivers don&amp;rsquo;t necessarily behave this way, epicboy simply ensured that this always happens.&lt;/p&gt;
&lt;p&gt;While this change doesn&amp;rsquo;t necessarily translate as a performance or graphic improvement, it guarantees the code ran among different GPU vendors matches the behaviour of the
console.&lt;/p&gt;
&lt;p&gt;Morph updated the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7120&#34;&gt;dynarmic external dependency&lt;/a&gt; to use the CPU cache invalidation fixes submitted by Blinkhawk to
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7173&#34;&gt;perform ranged invalidations when unmapping code memory&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Memory usually gets invalidated when unloading from memory &lt;code&gt;NROs&lt;/code&gt; (Nintendo Relocatable Object), which are dynamic libraries utilized by a variety of titles.
These changes should alleviate (but not completely solve) the crashes that occur when titles swap NROs in-and-out of memory, such as the case of &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Some games would crash if the user had a profile picture set in yuzu.
&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; discovered that this happened when the image&amp;rsquo;s dimensions were greater than &lt;code&gt;256x256&lt;/code&gt;.
To avoid the crash, he made it so that &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7246&#34;&gt;yuzu now resizes big profile pictures&lt;/a&gt; to fit the allowed dimensions instead.&lt;/p&gt;
&lt;p&gt;On Linux, opening the Configuration Window and pressing the &lt;code&gt;OK&lt;/code&gt; button would lead consistently to a crash.
&lt;a href=&#34;https://github.com/MightyCreak&#34;&gt;MightyCreak&lt;/a&gt; found the cause of this problem and submitted a patch to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7186&#34;&gt;solve it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another linux-only crash would happen when inputting text on &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;.
Morph investigated the problem and found it was caused by an out-of-bounds access in the string buffer, so
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7172&#34;&gt;he added the necessary checks&lt;/a&gt; to prevent it.&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;On the way to achieve better high DPI support, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7122&#34;&gt;updated the version of Qt&lt;/a&gt; used by yuzu.
This will allow in the near future to finally have legible UI elements on high DPI settings.&lt;/p&gt;
&lt;p&gt;MightyCreak has arrived with several internal changes, most helping with the build process of yuzu.
One of them is &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7174&#34;&gt;enabling mouse cursor auto-hide by default&lt;/a&gt;, a very welcome quality of life change, especially now that more users
will be playing their games in fullscreen.
Thanks!&lt;/p&gt;
&lt;p&gt;Linux gamepad users will no longer have to periodically tap their mouse to avoid the screensaver from taking over their screens!
toastUnlimited &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6702&#34;&gt;properly disabled the screensaver while running yuzu&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Moonlacer&#34;&gt;Moonlacer&lt;/a&gt; continues polishing the text strings in the UI, this time helping new users
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7165&#34;&gt;understand what our &lt;code&gt;NVDEC&lt;/code&gt; (video decoding) options do&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some users tend to think that NVDEC means that video decoding will only work on NVIDIA GPUs, this is not the case.
NVDEC is the name of the module in the Nintendo Switch, which uses the Tegra X1, an NVIDIA SoC (System on a Chip).
This SoC uses the NVDEC module to decode videos, and the work yuzu has to do is emulate it to work on any compatible system, including systems without NVIDIA GPUs on them.
We have a full explanation &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-nvdec-emulation/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, for the sake of clarity, the options were renamed to better convey the intended result:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;No Video Output&lt;/code&gt; will result in a black screen every time a video wants to render, nothing is displayed, no fun.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CPU Video Decoding&lt;/code&gt; means processing videos using the CPU. This can be useful for AMD Windows users, since the AMD driver is notorious for having bad VP9 video decoding
performance on Vega and newer GPU series, and using the CPU to render could be both faster and more accurate.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GPU Video Decoding&lt;/code&gt; means actually using the GPU&amp;rsquo;s decoding capabilities to process videos. This is considerably faster than CPU decoding and is the default option. If a video
format is not compatible with the user’s GPU, yuzu’s NVDEC emulation will automatically fallback to CPU decoding.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For some time, we were wondering why the Switch had an open spot in its language selection.
Turns out, with the release of &lt;code&gt;Mario Party Superstars&lt;/code&gt;, Nintendo added support for Brazilian Portuguese!
Morph &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7244&#34;&gt;rushed to add support for it in yuzu&lt;/a&gt;.
Our game language selection menu can be found at &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; System &amp;gt; System &amp;gt; Language&lt;/code&gt;.
Jogo bonito on your gameplay sessions!&lt;/p&gt;
&lt;p&gt;The text on the TAS configuration window looked cramped, so &lt;a href=&#34;https://github.com/behunin&#34;&gt;Behunin&lt;/a&gt; edited the
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7147&#34;&gt;UI file and reformatted the text&lt;/a&gt; to make it easier to read.
Later, &lt;a href=&#34;https://github.com/Moonlacer&#34;&gt;Moonlacer&lt;/a&gt; added to these changes by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7197&#34;&gt;fixing some grammar nits and adding a hyperlink&lt;/a&gt; that
links to the guide on our site.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;tasbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/tasbug_hub55b1a986939a53b04162f772c0e2059_15400_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;tasfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/tasfix_hua0c0d9fed859bce3b6911b635aaf4e92_16295_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;


&lt;p&gt;Moonlacer also &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7223&#34;&gt;fixed a problem with the per-game configuration window&lt;/a&gt;, where scaling the monitor over 100% would squash the
window.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;csbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/csbug_hu82b28f53f9ff904d543b036769fc42b1_252197_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;csfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/csfix_hu200a7e1631d5bad3ad4cd8212f74b669_280918_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;


&lt;h2 id=&#34;input-changes&#34;&gt;Input changes&lt;/h2&gt;
&lt;p&gt;When &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7142&#34;&gt;german77&lt;/a&gt; added
&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/#input-changes&#34;&gt;auto-centering support all the way back in July&lt;/a&gt;, the range of the new center wasn’t considered,
making the analog sticks overpass 100% in a direction while failing to reach it in the opposite way.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7142&#34;&gt;Scaling the value of the range depending on the offset applied when centering&lt;/a&gt; solves this issue.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;With the resolution scaler finished, our GPU devs have space to breathe, and they can focus back on work that was reserved for later.
&lt;code&gt;Project Y.F.C&lt;/code&gt; is an example.
In Blinkhawk’s words, “there&amp;rsquo;ll be Chicken Nuggets for everyone soon, a.k.a. it will cover many different things.”&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./wol.png&#34; title=&#34;Lifelight intensifies (Super Smash Bros. Ultimate)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2021/wol_hu6b6943eb6044d07a2009211dc32b200f_2945024_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Lifelight intensifies (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Lifelight intensifies (Super Smash Bros. Ultimate)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Project Gaia&lt;/code&gt; is advancing very well, and &lt;code&gt;Project Kraken&lt;/code&gt; (our Input Rewrite) &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7255&#34;&gt;is out&lt;/a&gt; but didn’t make it in time for this progress report. Don&amp;rsquo;t worry, we
will discuss it next time!&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you so much for your attention and see you next month!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>New Feature Release - Resolution Scaler</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-art/</link>
      <pubDate>Sun, 24 Oct 2021 07:12:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-art/</guid>
      <description>&lt;p&gt;Hey there, yuz-ers!
For those of you eager to go beyond the limits of Switch hardware and experience the full potential of Switch games, the wait has finally ended.
Our most requested and anticipated feature — the &lt;strong&gt;Resolution Scaler&lt;/strong&gt; — is finally here!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey there, yuz-ers!
For those of you eager to go beyond the limits of Switch hardware and experience the full potential of Switch games, the wait has finally ended.
Our most requested and anticipated feature — the &lt;strong&gt;Resolution Scaler&lt;/strong&gt; — is finally here!&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;This new and massively improved &lt;strong&gt;Resolution Scaler&lt;/strong&gt; is now available in the latest yuzu Early Access builds.&lt;br&gt;
We will be working diligently towards bringing this exciting new feature to our Mainline builds as soon as it&amp;rsquo;s ready for a full release.&lt;/p&gt;
&lt;article class=&#34;message is-danger&#34;&gt;
&lt;div class=&#34;message-body&#34; style=&#34;color:#f14668&#34;&gt;&lt;b&gt;Latest Nvidia drivers are causing rendering issues with OpenGL. Please make sure to use the last known good driver: 472.12&lt;/b&gt;&lt;/div&gt;
&lt;/article&gt;
&lt;article class=&#34;message is-warning&#34;&gt;
&lt;div class=&#34;message-body&#34; style=&#34;color:#ffc107&#34;&gt;&lt;b&gt;All following images have large file sizes when expanded. Please consider if on a Metered Connection.&lt;/b&gt;&lt;/div&gt;
&lt;/article&gt;
&lt;h2 id=&#34;what-is-resolution-scaler&#34;&gt;What is Resolution Scaler?&lt;/h2&gt;
&lt;p&gt;Resolution Scaler is a new yuzu feature, which scales the dimensions of textures that Switch games render to, and then renders the games at the scaled resolution.
This allows games that were designed to render at lower resolutions (720p/900p/1080p), to go far beyond what was intended and be played at much higher resolutions (2K/4K/8K) in the same window!&lt;/p&gt;
&lt;p&gt;The massive undertaking to reimplement this complex feature was only possible thanks to the combined efforts of our talented developers &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;&lt;strong&gt;Blinkhawk&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/breadfish64&#34;&gt;&lt;strong&gt;BreadFish&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;&lt;strong&gt;epicboy&lt;/strong&gt;&lt;/a&gt;, and &lt;a href=&#34;https://github.com/reinuseslisp&#34;&gt;&lt;strong&gt;Rodrigo&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt; 

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./metroid_dread.png&#34; title=&#34;Metroid Dread (4x)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/metroid_dread_hua7fe460ad658f0f0eb308ef48e0bc77f_13446256_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Metroid Dread (4x)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Metroid Dread (4x)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;old-scaler&#34;&gt;Old Scaler&lt;/h2&gt;
&lt;p&gt;Blinkhawk implemented the original Resolution Scaler back in July of 2019.
However, the approach he took to achieve that was a bit different.
It was inspired by &lt;a href=&#34;https://cemu.info/&#34;&gt;&lt;strong&gt;Cemu&amp;rsquo;s&lt;/strong&gt;&lt;/a&gt; graphic packs, but rather than having a manual graphics pack developed for each title, it would automatically generate scaling profiles as the user played.&lt;/p&gt;
&lt;p&gt;The generation algorithm used a database that recorded texture types and whether they were scalable or not.
The database was initially empty and, as the game ran, the algorithm would keep learning which textures to scale and which not to.
This approach was necessary, because of how yuzu was initially designed.&lt;/p&gt;
&lt;p&gt;Originally, yuzu&amp;rsquo;s memory reads were &lt;code&gt;reactive&lt;/code&gt; — meaning textures were downloaded only when games tried to read them and hence it wasn&amp;rsquo;t possible to know which textures were going to be downloaded.&lt;/p&gt;
&lt;p&gt;Although these memory reads were fixed a few months later, the Scaler still needed changes to be made to the management of uniform buffers, so that it would be supported on drivers other than Nvidia.
However, the planned rewrites of the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/&#34;&gt;&lt;strong&gt;Texture Cache&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-bcr/&#34;&gt;&lt;strong&gt;Buffer Cache&lt;/strong&gt;&lt;/a&gt;, and the massive GPU emulation overhaul with &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/&#34;&gt;&lt;strong&gt;Project Hades&lt;/strong&gt;&lt;/a&gt; further delayed developers from working on the Scaler, resulting in it never getting merged.&lt;/p&gt;
&lt;p&gt; 


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;aoc1x.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/aoc1x_hu6750194acdd6dec7e398869f2880ad5c_4294494_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hyrule Warriors: Age of Calamity (1x Vs. 3x)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;aoc3x.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/aoc3x_hu60b94c369c8c9720b7946a0454bfc58a_19400042_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hyrule Warriors: Age of Calamity (1x Vs. 3x)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Hyrule Warriors: Age of Calamity (1x Vs. 3x)&lt;/p&gt;

&lt;/p&gt;
&lt;h2 id=&#34;enter-project-art&#34;&gt;Enter Project ART&lt;/h2&gt;
&lt;p&gt;Once all of the heavy lifting subsided, Blinkhawk quickly went back to working on the Resolution Scaler and instead of continuing work on the original scaler, he decided to rewrite it from the ground up.&lt;/p&gt;
&lt;p&gt;Learning from the experiences of the original, Blinkhawk designed and created the new scaling system, which took a significant amount of time and effort.
He initially researched and experimented with a lot of different design approaches and learned their challenges, before finally landing on this new scaling system.&lt;/p&gt;
&lt;br&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/botwbilinearzoom_hu3bfde729f9128864194207c65b2a68fc_3750078_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild (Bilinear Vs. FSR @ 2x)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/botwfsrzoom_hu807e78a74f12de1ec8aa37506447de5e_2673945_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild (Bilinear Vs. FSR @ 2x)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda: Breath of the Wild (Bilinear Vs. FSR @ 2x)&lt;/p&gt;


&lt;p&gt;Unlike the original scaler, which was inspired by Cemu&amp;rsquo;s profile-based scaling, Project ART uses a rating system.
The meticulously designed rating system works by having a set of rules dictating which &lt;code&gt;render targets&lt;/code&gt; can be scaled and having a rating for each texture.
We couldn&amp;rsquo;t simply use a binary &amp;ldquo;YES/NO&amp;rdquo; system because, unbeknownst to us, some games may render textures only once.
Scaling these is pointless and has the potential to break them.&lt;/p&gt;
&lt;p&gt;For the uninitiated, &lt;a href=&#34;https://en.wikipedia.org/wiki/Render_Target&#34;&gt;&lt;strong&gt;render targets&lt;/strong&gt;&lt;/a&gt; are just textures that the game renders to.
Textures can only earn &lt;code&gt;1&lt;/code&gt; credit per frame.
And to earn that &lt;code&gt;1&lt;/code&gt; credit, the texture itself as well as any other textures in that renderpass, all need to satisfy our set of rules.
After accruing &lt;code&gt;2&lt;/code&gt; or more credits, the texture will be scaled and now all rendering will be done in the scaled resolution for that texture.&lt;/p&gt;
&lt;p&gt;The textures keep earning more credits as frames pass.
But if in any frame, even a single texture within a renderpass fails to satisfy the set of rules, all texture scores will be reset to &lt;code&gt;0&lt;/code&gt;.
If a texture interacts with other textures, its new rating will either be based on the current rating of those textures or will be increased to the maximum possible rating, if one of those textures is already scaled.&lt;/p&gt;
&lt;br&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/dread_bilinear_zoom_hu6542f3e19365a57537f2968133a91146_1920015_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Metroid Dread (Bilinear Vs. FSR @ 2x)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/dread_fsr_zoom_hu8ddbb4c990c46b5fb012ec121d00b3de_1409273_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Metroid Dread (Bilinear Vs. FSR @ 2x)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Metroid Dread (Bilinear Vs. FSR @ 2x)&lt;/p&gt;


&lt;h2 id=&#34;the-rest-of-the-puzzle-pieces&#34;&gt;The Rest of the Puzzle Pieces&lt;/h2&gt;
&lt;p&gt;After the scaling system was ready, Rodrigo helped implement the shader patching required for scaling.
This was needed to ensure shaders behaved properly when textures were scaled.&lt;/p&gt;
&lt;p&gt;While Blinkhawk was working on improving scaling in Vulkan and the texture cache, epicboy was working in parallel to add scaling support on the OpenGL side.
But little did they know, their bug squashing crusade was just about to begin.&lt;/p&gt;
&lt;p&gt;As scaling is intrusive, bugs can occur in a myriad of ways.
Scaling occurs when games load in textures, which is usually during loading screens, but the visual bugs tend to happen later during gameplay.
This makes it quite hard to figure out where the bug originally manifested.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smp1x.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/smp1x_hu40be40745cbf293254d6e68fe0f31b74_3356223_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Party (1x Vs. 3x)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smp3x.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/smp3x_hu3fce8cf3650005ff277118a9fdf1bb4c_16515346_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Party (1x Vs. 3x)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Party (1x Vs. 3x)&lt;/p&gt;


&lt;p&gt;Fast-forward a few weeks, and thanks to continuous iterative internal testing, our developers were finally able to fix most of the bugs they came across.&lt;/p&gt;
&lt;p&gt;With much of the scaler work nearly being done, Blinkhawk ported some texture filters from Citra and adapted those to be scaling filters for yuzu.
BreadFish later tuned them and also added a little something extra, AMD&amp;rsquo;s &lt;a href=&#34;https://www.amd.com/en/technologies/radeon-software-fidelityfx-super-resolution&#34;&gt;&lt;strong&gt;FidelityFX™ Super Resolution&lt;/strong&gt;&lt;/a&gt; (FSR)!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo1x.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/smo1x_hu74d3629948bea5d3c3af3712f3ad56b9_3905692_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (1x Vs. 3x)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo3x.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/smo3x_hubdc8eca32926903c779ce0d8e6896dad_17824972_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (1x Vs. 3x)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey (1x Vs. 3x)&lt;/p&gt;


&lt;h2 id=&#34;benefits-of-project-art&#34;&gt;Benefits of Project ART&lt;/h2&gt;
&lt;p&gt;The feature-set of Project ART includes the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Native Resolution Scaling:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Upscaling&lt;/strong&gt; (2x, 3x, 4x, 5x, 6x) and &lt;strong&gt;Downscaling&lt;/strong&gt; (0.5x, 0.75x).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;FXAA Pre-filtering Pass&lt;/li&gt;
&lt;li&gt;Fixed various bugs introduced from the Texture Cache Rewrite (TCR).&lt;/li&gt;
&lt;li&gt;Window Adaptation Filters&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./filters.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/filters_hud6d478e00299c7d27a92ea7602413b16_109661_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;br&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/mk8bilinearzoom_hu885ac1f655081c796a5581c29af71f09_3968667_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mario Kart 8 Deluxe (Bilinear Vs. FSR @ 2x)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/mk8fsrzoom_hu888d10fd8882f28b9ff91ac018873fe2_2263151_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mario Kart 8 Deluxe (Bilinear Vs. FSR @ 2x)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Mario Kart 8 Deluxe (Bilinear Vs. FSR @ 2x)&lt;/p&gt;


&lt;h2 id=&#34;what-to-expect-from-project-art&#34;&gt;What to expect from Project ART&lt;/h2&gt;
&lt;p&gt;The Resolution Scaler requires much more VRAM as compared to games running at their native resolutions.
Here are some minimum and recommended values based on our testing:&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;./scaling.png&#34; width=&#34;500&#34;&gt;&lt;/img&gt;&lt;/center&gt;
&amp;nbsp;
&lt;p&gt;Upscaling works with most games!
We currently know of two games that don&amp;rsquo;t upscale - &lt;code&gt;Paper Mario: The Origami King&lt;/code&gt; and &lt;code&gt;Crash Bandicoot 4: It&#39;s About Time&lt;/code&gt;.
These games are incompatible because they use a compute shader to render an image, which is challenging to work around.
However, thanks to mods, &lt;code&gt;Paper Mario: The Origami King&lt;/code&gt; can be upscaled with a workaround discussed below.&lt;/p&gt;
&lt;p&gt;Downscaling, surprisingly, turned out to be more stable than we thought.
With this, you can gain 20% or more performance at the cost of reduced quality.
It works for most of the games we tested, but our testing has been limited.
We currently know of one game that doesn&amp;rsquo;t downscale (but upscales) — &lt;code&gt;Sonic Colors: Ultimate&lt;/code&gt;.&lt;/p&gt;
&lt;br&gt;


&lt;div class=&#34;columns is-bottom-marginless&#34;&gt;
    &lt;div class=&#34;column is-bottom-paddingless juxtapose&#34;&gt;
    
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/acnh%201x%2030fps_huad5cd4788bb90a84b8039365431c9cec_2750594_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Animal Crossing (1x 30FPS vs. 0.5x 36FPS)&#34;&gt;
    
    
    
    
    
    
        
        
        &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-art/acnh%2005x%2036fps_hu53dac30b4996a9eff21a9786f4af4fdc_808040_960x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Animal Crossing (1x 30FPS vs. 0.5x 36FPS)&#34;&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Animal Crossing (1x 30FPS vs. 0.5x 36FPS)&lt;/p&gt;


&lt;p&gt;Some games that have their own FXAA need a mod to disable their built-in FXAA.
This is because the games use hard coded texture dimensions in their FXAA filters, which leads to poor anti-aliasing quality or artifacts.
&lt;code&gt;Pokémon Sword/Shield&lt;/code&gt; needs the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Switch-Mods#pokemon-swordshield-romfs&#34;&gt;&lt;strong&gt;No Outlines&lt;/strong&gt;&lt;/a&gt; mod for optimal picture quality, as the outlines don&amp;rsquo;t scale correctly.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Kirby Star Allies&lt;/code&gt;	 is known to have an additional performance cost when upscaled.
This is caused by the need to downscale textures before upscaling in order to bypass some crashes and issues in the game.&lt;/p&gt;
&lt;p&gt;Special thanks to our community member and modder &lt;a href=&#34;https://github.com/theboy181&#34;&gt;theboy181&lt;/a&gt;, who created new mods that help with upscaling some of the games listed earlier.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cdn.discordapp.com/attachments/799182828038258698/901595782501781534/Paper_Mario_Origami_King_-_4K.rar&#34;&gt;Paper Mario: The Origami King 4K&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cdn.discordapp.com/attachments/799182828038258698/901595757117866045/XenoBlade_Chronicles_2_-_SuperSampling_x2.rar&#34;&gt;Xenoblade Chronicles 2 - Super Sampling x2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;As we couldn&amp;rsquo;t fully test the Resolution Scaling with the entire Switch game library, we look forward to all the user feedback we will receive.
Your reports will be important in fixing bugs and polishing the Scaler to be the best experience possible.&lt;/p&gt;
&lt;p&gt;If you encounter any issues, bugs, or crashes, please reach out to us via our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt; Patreon channels.
We hope you love this new feature and will be back with more exciting news in the future! Happy emulating!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;

&lt;script src=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js&#34;&gt;&lt;/script&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/css/juxtapose.css&#34;&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report September 2021</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/</link>
      <pubDate>Mon, 11 Oct 2021 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/</guid>
      <description>&lt;p&gt;Hi yuz-ers! Welcome to the latest entry of our monthly progress reports. We have even more GPU rendering fixes, TAS support, 8 player mayhem, input and UI
changes, some preliminary work for future big changes, and more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hi yuz-ers! Welcome to the latest entry of our monthly progress reports. We have even more GPU rendering fixes, TAS support, 8 player mayhem, input and UI
changes, some preliminary work for future big changes, and more!&lt;/p&gt;
&lt;h2 id=&#34;yet-more-amd-specific-changes-and-other-graphical-fixes&#34;&gt;Yet more AMD specific changes and other graphical fixes&lt;/h2&gt;
&lt;p&gt;Certain AMD and Intel GPUs were unable to utilize yuzu&amp;rsquo;s unlock FPS feature with the Vulkan API, due to the lack of driver support for the &lt;code&gt;VK_PRESENT_MODE_MAILBOX_KHR&lt;/code&gt; presentation mode.
They, however, support &lt;code&gt;VK_PRESENT_MODE_IMMEDIATE_KHR&lt;/code&gt;, another mode that allows Vulkan to present at a higher framerate than the screen refresh rate, so
&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; made the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7003&#34;&gt;necessary changes&lt;/a&gt; in order to unlock the FPS on these GPUs.
Due to the nature of this presentation mode, this may cause visible tearing on the screen, so bear that in mind if you try this out.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./framerate.png&#34; title=&#34; And this is with just an RX 550 (Metroid Dread)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/framerate_hufbca9929c0aee4c563e79d8b7b133cfc_1511357_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; And this is with just an RX 550 (Metroid Dread)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; And this is with just an RX 550 (Metroid Dread)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Booting a title in Linux with the Vulkan API using the Intel Mesa driver resulted in a crash due to a device loss error.
The problem was in the synchronization between the rendering and subsequent presentation of frames.&lt;/p&gt;
&lt;p&gt;Previously, yuzu would issue the Vulkan &lt;code&gt;Present&lt;/code&gt; command, then wait for the frame to be rendered before continuing with the process.
While this was fine for other drivers and vendors, ANV (Intel’s Vulkan driver) expected to have the frame already rendered before this command, causing this error.&lt;/p&gt;
&lt;p&gt;epicboy fixed the synchronization behaviour so that
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6953&#34;&gt;yuzu now waits until the frame is fully rendered and ready before presenting it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With the release of AMD’s Windows driver version 21.9.1, and its equivalent AMDVLK and AMDGPU-PRO Vulkan Linux counterparts, users started noticing crashes in most games right
at boot.
We rushed once again to blame AMD for breaking another extension, as it wouldn’t be the first time.
We even singled out &lt;code&gt;Int8Float16&lt;/code&gt; as the culprit, providing an
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7006&#34;&gt;alternative path that reduced performance on all AMD GPUs running non-RADV drivers.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We were wrong.&lt;/p&gt;
&lt;p&gt;Turns out, it was our fault.
epicboy found out that during the process of initializing Vulkan, the emulator
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7027&#34;&gt;assigned Int8Float16’s values after its memory was freed.&lt;/a&gt;
Surprisingly, this only started affecting official AMD drivers recently, after their periodical Vulkan version update.
So we had to lay down the pitchforks, &lt;em&gt;this time.&lt;/em&gt;
Performance returned to normal after the introduction of this PR.&lt;/p&gt;
&lt;p&gt;AMD Windows users are also familiar with certain stages in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; turning completely white or ghosting, akin to when applications &lt;a href=&#34;https://i.stack.imgur.com/4Jh7t.jpg&#34;&gt;would freeze&lt;/a&gt; back in the Windows XP era.
Those were the good days.&lt;/p&gt;
&lt;p&gt;Ahem, anyway, AMD Radeon GPUs lack support for fixed point 24-bit depth textures, or D24 for short, a relatively common texture format.
To bypass this hardware limitation, yuzu uses D32 textures instead, which can cause precision issues during the conversion process.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7070&#34;&gt;By adjusting the Depth Bias and Polygon Offset of yuzu’s D24 emulation,&lt;/a&gt; &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; solves the issue for good.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smashbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/smashbug_hu3cad3d3496a1b9e9ecfe5512ca9aa21d_2087765_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fair play, please (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smashfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/smashfix_hu73706acd92810e3237a0754e629ff3db_2444679_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fair play, please (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Fair play, please (Super Smash Bros. Ultimate)&lt;/p&gt;


&lt;p&gt;Yet another AMD Radeon specific issue is visible when playing &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;.
Terrain textures were colourful and corrupted, like when a PC gamer dials up the RGB to 11.&lt;/p&gt;
&lt;p&gt;This issue affected our regular suspects, GCN4 devices (Polaris, RX 400/500 series) and older, running on the Windows and Linux proprietary Vulkan drivers.
GCN5 (Vega), RDNA1, and RDNA2 devices were unaffected.
The problem resided in how we guessed the textures were being handled by the game.&lt;/p&gt;
&lt;p&gt;Some information first: there are several ways to handle textures, and in this particular example we need to focus on two, &lt;code&gt;Cube Maps&lt;/code&gt; and &lt;code&gt;Texture Arrays&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Cube maps are a cube with its six faces filled with different textures.
The coordinate used to fetch the data, unlike the regular X and Y values, is a single &lt;a href=&#34;https://en.wikipedia.org/wiki/Versor&#34;&gt;versor&lt;/a&gt; originating from the center and pointing
to the surface of the cube.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./array.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/array_hu920f27f94bbf0db0eb0183e1a214ebcc_5896_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Texture arrays on the other hand are just as the name implies, an ordered array of textures one after the other, with X and Y used for positioning information inside the
texture, and a Z axis used to determine which texture of the array is in use.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./cube.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/cube_huca32371eac8086dcb2f34036394b343a_9781_559x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;TL;DR, one is a sphere and the other is a list.&lt;/p&gt;
&lt;p&gt;Vulkan allows for textures to be marked for conversion into cube maps if later needed, but the sampling (reading) is determined by the texture type specified by the game’s shader
instructions. This type is then passed to the graphics API.
We do just this and the game decides to keep its textures as arrays, which is its own decision.
However, the AMD driver decides that the textures should be sampled as cube maps, ignoring what the texture view determined just before.&lt;/p&gt;
&lt;p&gt;While this should not be a problem on its own, as coordinates can still be pulled out from the wrong texture type, the driver can end up reading the wrong texel.
This can result in happy rainbow ground in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;, or as dark and evil terrain in &lt;code&gt;Hyrule Warriors: Age of Calamity&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7076&#34;&gt;By disabling Cube Compatibility on GCN4 and older devices running the official AMD proprietary drivers,&lt;/a&gt; epicboy returned proper
sense to the devastated land of Hyrule.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./botwbug.png&#34; title=&#34; I prefer no RGB, thanks (The Legend of Zelda: Breath of the Wild)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/botwbug_huf13585f4071f04c8891a3ac1ce6ee677_4878469_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; I prefer no RGB, thanks (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; I prefer no RGB, thanks (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./botwfix.png&#34; title=&#34; But not THAT dark! (Hyrule Warriors: Age of Calamity)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/botwfix_huc0e07545264cae07449539ef5239ff9a_4521895_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; But not THAT dark! (Hyrule Warriors: Age of Calamity)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; But not THAT dark! (Hyrule Warriors: Age of Calamity)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Speaking of RGB, &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2021/#paint-me-like-one-of-your-french-bits&#34;&gt;as discussed back in February&lt;/a&gt;, yuzu has to use compute
shaders to convert most BGR texture formats in OpenGL to avoid mismatched colours.
While this can work fine on most current GPUs, there’s a performance cost that can affect older and slower products.&lt;/p&gt;
&lt;p&gt;Users of Kepler series Nvidia GPUs (usually GTX 600/700 series, with several renamed 800 and 900 series too) could experience those performance penalties while also producing
rendering corruptions.
Instead of using compute shaders to swizzle textures, epicboy figured we could just use &lt;code&gt;Pixel Buffer Objects&lt;/code&gt;
&lt;a href=&#34;https://www.khronos.org/opengl/wiki/Pixel_Buffer_Object&#34;&gt;(or PBO for short)&lt;/a&gt; for &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7036&#34;&gt;all affected texture formats instead.&lt;/a&gt;
This has many benefits: it solves Kepler BGR issues, improves performance on weak devices from any GPU vendor, and is also a required change for &lt;code&gt;A.R.T.&lt;/code&gt; (the resolution
scaler in development).&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./keplerbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/keplerbug_hu0c8365c67d108db9df353d5144d10d8a_1321068_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;A Hat in Time&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./keplerfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/keplerfix_hub87386c446c22fb30cf3bec7f22278e8_783110_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;A Hat in Time&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;A Hat in Time&lt;/p&gt;


&lt;p&gt;On the subject of changes needed for the resolution scaler, Blinkhawk implemented &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7077&#34;&gt;fixes to queries and indexed samplers.&lt;/a&gt;
The result is fewer crashes while playing &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt; on Intel and AMD GPUs, be it on Windows or Linux.
This PR helps improve stability for &lt;code&gt;A.R.T.&lt;/code&gt; as well.&lt;/p&gt;
&lt;p&gt;Another issue affecting &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt; is related to its use of &lt;a href=&#34;https://en.wikipedia.org/wiki/Tessellation_(computer_graphics)&#34;&gt;Tessellation Shaders&lt;/a&gt; on Vulkan.
The Vulkan specification requires the input-assembler topology to be &lt;code&gt;PATCH_LIST&lt;/code&gt; in the tessellation stages. Not all games follow this, so
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7101&#34;&gt;manually forcing it&lt;/a&gt; solves crashes experienced in some drivers, more specifically, as you may have guessed it, AMD’s proprietary
ones. All thanks to our fishy epicboy.&lt;/p&gt;
&lt;p&gt;epicboy has also &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7001&#34;&gt;fixed some minor bugs with the &lt;code&gt;StencilOp&lt;/code&gt;&lt;/a&gt;, a type of data buffer intended to help limit the size of the
rendering area.
Thanks to this, &lt;code&gt;WarioWare: Get It Together!&lt;/code&gt; properly renders its models.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./waabug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/waabug_hua1ed077d95b345f6cbb6fdbe12e39cf4_571875_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Waa! (WarioWare: Get It Together!)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./waafix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/waafix_hu08765337d064faa05cba533ba112b1bc_584924_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Waa! (WarioWare: Get It Together!)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Waa! (WarioWare: Get It Together!)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; added support for the legacy GLSL &lt;code&gt;gl_Color&lt;/code&gt; and &lt;code&gt;gl_TexCoord&lt;/code&gt; attributes into our Vulkan backend, so that any game that uses
them can render properly when using this API.&lt;/p&gt;
&lt;p&gt;Both these attributes are part of a set of attributes with specific definitions and uses.
But they were deprecated in newer versions of OpenGL in favour of &amp;ldquo;generic&amp;rdquo; attributes that the programmer can freely define as they want, based on their needs.&lt;/p&gt;
&lt;p&gt;While OpenGL is still able to run shaders that use this legacy feature for the sake of  backwards compatibility, they were already considered obsolete by the time Vulkan was
created, which means that this API lacks a fallback.&lt;/p&gt;
&lt;p&gt;What vonchenplus did is use generic attributes in Vulkan to emulate these features, so that they behave exactly as the legacy GLSL attributes.&lt;/p&gt;
&lt;p&gt;After that, vonchenplus corrected the definition of &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6980&#34;&gt;the values in an enum&lt;/a&gt; used for blending textures.&lt;/p&gt;
&lt;p&gt;Both these changes affect &lt;code&gt;DRAGON QUEST III: The Seeds of Salvation&lt;/code&gt;, fixing the graphical bugs present in this game.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./dqbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/dqbug_hu3c34e31a1e3dedcba56977db14e1d472_1080021_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;DRAGON QUEST III: The Seeds of Salvation&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./dqfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/dqfix_hu7a76ba4e3f0a987c7e0f578a6b6249d0_991289_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;DRAGON QUEST III: The Seeds of Salvation&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;DRAGON QUEST III: The Seeds of Salvation&lt;/p&gt;


&lt;h2 id=&#34;tool-assisted-speedrun&#34;&gt;Tool-assisted speedrun&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/MonsterDruide1&#34;&gt;MonsterDruide1&lt;/a&gt; has added &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6485&#34;&gt;TAS support&lt;/a&gt; to yuzu!
This means precise input commands can be recorded and replayed in-game.
The format used to store them is the one &lt;a href=&#34;https://github.com/hamhub7/TAS-nx/tree/master/scripts&#34;&gt;TAS-nx&lt;/a&gt; implemented, and we have a guide on
&lt;a href=&#34;https://yuzu-mirror.github.io/help/feature/tas/&#34;&gt;how to enable and use this feature here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can access TAS configuration by going to &lt;code&gt;Tools &amp;gt; Configure TAS…&lt;/code&gt;&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./tas.png&#34; title=&#34; TAS Configuration window&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/tas_hu1290e8e13f946ea1cbbbbb244570b5cc_15125_414x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; TAS Configuration window&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; TAS Configuration window&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;other-input-changes&#34;&gt;Other input changes&lt;/h2&gt;
&lt;p&gt;Let’s start with a nice addition by &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; that will make &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; players happy, and Parsec users especially so.
There’s now an option to enable &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6950&#34;&gt;8 player support&lt;/a&gt; for XInput devices, at the cost of disabling the Web Applet. A small price to pay
for epic fights with your friends.&lt;/p&gt;
&lt;p&gt;You can find the option in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Controls &amp;gt; Advanced &amp;gt; Enable XInput 8 player support (disables web applet)&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./8.png&#34; title=&#34; yuzu Controls configuration window&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/8_huf54355b8df7c4df96bf002e7e00d5046_30961_1019x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; yuzu Controls configuration window&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; yuzu Controls configuration window&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/v1993&#34;&gt;v1993&lt;/a&gt; later &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7042&#34;&gt;hid the option for non-Windows OSes&lt;/a&gt;, as this limitation doesn’t apply outside the Windows
SDL builds.&lt;/p&gt;
&lt;p&gt;Linux kernel drivers for Joy-Cons use a different naming convention than the ones we use on Windows.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6979&#34;&gt;Properly following this convention makes the Dual Joy-Con input show up in the device list.&lt;/a&gt; german77 thinks of the penguins.&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;With the release of &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/&#34;&gt;Project Hades&lt;/a&gt;, yuzu started using a full &lt;code&gt;Pipeline cache&lt;/code&gt; instead of single stages of the graphics pipeline, both
in Vulkan and OpenGL.
This means parts of our UI were outdated, so &lt;a href=&#34;https://github.com/goldenx86&#34;&gt;your degenerate writer&lt;/a&gt; decided to simply
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6976&#34;&gt;update the context menu entries&lt;/a&gt; from Shader cache to Pipeline cache.&lt;/p&gt;
&lt;p&gt;Following suit, &lt;a href=&#34;https://github.com/Moonlacer&#34;&gt;Moonlacer&lt;/a&gt; helped &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6977&#34;&gt;replace &lt;code&gt;Use disk shader cache&lt;/code&gt; with &lt;code&gt;Use disk pipeline cache&lt;/code&gt;&lt;/a&gt;.
¡Gracias!&lt;/p&gt;
&lt;p&gt;Later on, Moonlacer &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7020&#34;&gt;removed the toggle&lt;/a&gt; for &lt;code&gt;Enable audio stretching&lt;/code&gt; from the audio settings, as it no longer had any purpose.
As a general rule, the fewer options available, the better.&lt;/p&gt;
&lt;p&gt;Morph decided to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7102&#34;&gt;eliminate a 2 year old feature,&lt;/a&gt; &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-boxcat/&#34;&gt;boxcat&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;BCAT is a network service used by the Nintendo Switch to add content to its games without needing constant updates.
Our old BCAT implementation only added some “gifts” our developers placed into games that were playable at the time. It was unable to support real use cases, like the game
updates &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; regularly pushes.&lt;/p&gt;
&lt;p&gt;While the plan is to add support for this in the future, major changes to the file system emulation need to come first.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/behunin&#34;&gt;behunin&lt;/a&gt; implemented much needed &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7068&#34;&gt;clean ups to our debug configuration window.&lt;/a&gt;
View the results below:&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./debugbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/debugbug_hu54e4e3ca60dab6c5cd8cf31499506332_107568_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Before and After, Debug configuration settings&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./debugfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/debugfix_hu2f474a9ac5c964b236cc5f9d62943584_99196_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Before and After, Debug configuration settings&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Before and After, Debug configuration settings&lt;/p&gt;


&lt;h2 id=&#34;general-bugfixes&#34;&gt;General bugfixes&lt;/h2&gt;
&lt;p&gt;epicboy noticed a memory leak that would grow progressively after stopping and restarting the emulation, which was caused by yuzu’s &lt;code&gt;main_process&lt;/code&gt; not being cleaned up.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7009&#34;&gt;By destroying this process when stopping emulation&lt;/a&gt;, the resources are properly freed now, fixing the leak.&lt;/p&gt;
&lt;p&gt;Additionally, epicboy also mitigated the crashes that happened when emulation was stopped by
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7019&#34;&gt;using std::jthread for worker threads&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;std::jthread&lt;/code&gt; is a &lt;a href=&#34;https://en.cppreference.com/w/cpp/thread/jthread&#34;&gt;new implementation of the thread class that was recently introduced in C++20&lt;/a&gt;, which alleviates their
management and usage, since they simplify some of the synchronization challenges inherent to multithreading.&lt;/p&gt;
&lt;p&gt;With this change, the number of crashes caused by race conditions between working threads upon shutdown was supposed to decrease, but it also introduced a new bug that would
cause yuzu to hang when the emulation was stopped.&lt;/p&gt;
&lt;p&gt;This problem was caused by the order in which objects were being destroyed, which epicboy
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7078&#34;&gt;fixed in a follow-up PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; also &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6965&#34;&gt;introduced std::jthreads into the cpu_manager&lt;/a&gt;, in favour of using this more efficient
implementation of the class for yuzu&amp;rsquo;s host threads.&lt;/p&gt;
&lt;p&gt;He also made changes so that the KEvents used in the nvflinger &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6968&#34;&gt;service&lt;/a&gt; and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6971&#34;&gt;queue&lt;/a&gt;
are owned by these services, instead of being owned by the process for the emulated game, which makes the implementation more accurate.&lt;/p&gt;
&lt;p&gt;We’ve been trying to focus on improving our homebrew support, as this isn’t just a powerful tool that only developers use. For example, modders have very powerful homebrew apps
that the Switch community enjoys.
One important example is &lt;a href=&#34;https://github.com/ultimate-research/UltimateModManager&#34;&gt;UltimateModManager&lt;/a&gt;, or UMM for short, which refuses to work on yuzu for now.&lt;/p&gt;
&lt;p&gt;To counter this, &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; allowed homebrew running in yuzu to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6974&#34;&gt;also create subdirectories instead of just the parent directory&lt;/a&gt;,
resulting in UMM managing to at least start.
This is a temporary solution until our much needed filesystem rewrite is finished.
Additionally, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; pushed a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7010&#34;&gt;partial implementation of the &lt;code&gt;GetFileTimeStampRaw&lt;/code&gt; function,&lt;/a&gt; removing
several warnings.&lt;/p&gt;
&lt;p&gt;This isn’t enough to allow full UMM compatibility, but we’re getting there.&lt;/p&gt;
&lt;p&gt;Moving on to a quality-of-life change, some games pop-up a confirmation window when trying to stop emulation.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./exit.png&#34; title=&#34; Like this, End emulation confirmation window&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/exit_hudbd14da1147c6ed437dd1c24692a8c7e_7560_415x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Like this, End emulation confirmation window&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Like this, End emulation confirmation window&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This kind of redundant question is generated by the game itself and while we always had a toggle to skip it, it wasn’t working properly. epicboy comes to the rescue,
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6997&#34;&gt;fixing the toggle&lt;/a&gt; for good and saving us precious seconds in quitting our games.&lt;/p&gt;
&lt;p&gt;If you wish to change this behaviour, the option is in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; General &amp;gt; Confirm exit while emulation is running&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;v1993 &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7075&#34;&gt;moved all QtWebEngine data to a more organized centralized folder,&lt;/a&gt; improving consistency and reducing clutter from the
user’s storage.
Instead of a separate folder in &lt;code&gt;%localappdata%&lt;/code&gt;, information is now saved in yuzu’s directory, &lt;code&gt;%appdata%\yuzu\qtwebengine&lt;/code&gt; by default.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt;
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7018&#34;&gt;performed his first stubbing surgery with the audio input services &lt;code&gt;Start&lt;/code&gt;, &lt;code&gt;RegisterBufferEvent&lt;/code&gt;, and &lt;code&gt;AppendAudioInBufferAuto&lt;/code&gt;&lt;/a&gt;.
This way, &lt;code&gt;Splatoon 2&lt;/code&gt; can now be played via &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/#lan-party-time&#34;&gt;LAN&lt;/a&gt; without requiring the use of auto-stub. Happy
splatting!&lt;/p&gt;
&lt;p&gt;german77 &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6992&#34;&gt;stubbed &lt;code&gt;SetTouchScreenConfiguration&lt;/code&gt; and implemented &lt;code&gt;GetNotificationStorageChannelEvent&lt;/code&gt;&lt;/a&gt; to make &lt;code&gt;Dr Kawashima&#39;s Brain  Training for Nintendo Switch&lt;/code&gt; playable.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./brain.png&#34; title=&#34; Dr Kawashima&amp;#39;s Brain Training for Nintendo Switch&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/brain_hu5f76972ce26d6461518f81c37dfb0841_1193144_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Dr Kawashima&amp;#39;s Brain Training for Nintendo Switch&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Dr Kawashima&amp;#39;s Brain Training for Nintendo Switch&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;He has also &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7015&#34;&gt;stubbed &lt;code&gt;Match&lt;/code&gt;&lt;/a&gt; to make &lt;code&gt;Cruis&#39;n Blast&lt;/code&gt; playable.
This game experiences some crashes, so there’s more work to do.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./blast.png&#34; title=&#34; Cruis&amp;#39;n Blast&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/blast_hu4d70e92df426d5a49ec273cc89aeb49a_2961115_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Cruis&amp;#39;n Blast&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Cruis&amp;#39;n Blast&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;ogniK &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6975&#34;&gt;implemented the &lt;code&gt;EnsureTokenIdCacheAsync&lt;/code&gt; function,&lt;/a&gt; making &lt;code&gt;Death Coming&lt;/code&gt; go in-game, albeit with some graphical bugs that
we have to sort out in the future.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./death.png&#34; title=&#34; Death Coming&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/death_hu120ee96626b8ff607add2cc8748dafd1_2816897_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Death Coming&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Death Coming&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Morph has been working on implementing what is needed to get &lt;code&gt;Diablo II: Resurrected&lt;/code&gt; working.
Initially, the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7082&#34;&gt;&lt;code&gt;Read&lt;/code&gt; socket service was implemented&lt;/a&gt;, but this mandates also implementing more complex services like &lt;code&gt;Select&lt;/code&gt; and
&lt;code&gt;EventFD&lt;/code&gt;.
&lt;code&gt;EventFD&lt;/code&gt; is particularly tricky as there is no native support for it on Windows, so a considerable amount of work is needed to properly emulate it in the most popular OS.&lt;/p&gt;
&lt;p&gt;As a temporary alternative, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/7085&#34;&gt;Read was just stubbed&lt;/a&gt;, allowing the game to boot.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./diablo.png&#34; title=&#34; Diablo II: Resurrected&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/diablo_huaea0704d7ed08fc84eec4c59d7c4a88d_2166201_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Diablo II: Resurrected&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Diablo II: Resurrected&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;For anyone wondering about &lt;code&gt;Project A.R.T.&lt;/code&gt;, the following image speaks for itself.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./art.png&#34; title=&#34; Xenoblade Chronicles Definitive Edition&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2021/art_huca2967bee837b21824c48b3c2699c593_16950267_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Xenoblade Chronicles Definitive Edition&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Xenoblade Chronicles Definitive Edition&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Regarding works in progress, there are more rendering fixes underway, and we’re already starting plans on what to focus on after &lt;code&gt;A.R.T.&lt;/code&gt; is finished.&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you for your attention and see you next month!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report August 2021</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/</link>
      <pubDate>Sun, 12 Sep 2021 12:00:00 -0300</pubDate>
      <author>Honghoa</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/</guid>
      <description>&lt;p&gt;Welcome, yuz-ers, to our monthly report of developer perseverance and other happenings! In this recap, we&amp;rsquo;ll discuss Radeon fixes, Reaper v3, LAN support, smooth video rendering, and more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Welcome, yuz-ers, to our monthly report of developer perseverance and other happenings! In this recap, we&amp;rsquo;ll discuss Radeon fixes, Reaper v3, LAN support, smooth video rendering, and more!&lt;/p&gt;
&lt;h2 id=&#34;another-terrible-implementation-and-other-graphical-fixes&#34;&gt;&lt;strong&gt;A&lt;/strong&gt;nother &lt;strong&gt;T&lt;/strong&gt;errible &lt;strong&gt;I&lt;/strong&gt;mplementation, and other graphical fixes&lt;/h2&gt;
&lt;p&gt;This month was certainly a happy one for AMD users, as our developers managed to fix a number of graphical bugs present for those with AMD graphics cards.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; pushed a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6900&#34;&gt;fix for the wireframe issue&lt;/a&gt; affecting various 3D models when playing
&lt;code&gt;Pokémon Sword and Shield&lt;/code&gt; while using an AMD GPU on Windows.
Unfortunately, some games, like &lt;code&gt;Super Mario 3D World + Bowser&#39;s Fury&lt;/code&gt;, have similar bugs which were not improved by this fix.
Also, do note that, in some rare cases and conditions, the issue can still occur.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./wirebug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/wirebug_huc62f823e3ccb3460b2e957ab52cdcf87_1741628_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Best character (Pokémon Sword)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./wirefix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/wirefix_hu5168c55792f5659c59520cf4533b9637_1670799_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Best character (Pokémon Sword)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Best character (Pokémon Sword)&lt;/p&gt;


&lt;p&gt;The cause of the problem boils down to the drivers of &lt;em&gt;a certain vendor&lt;/em&gt; (AMD) not properly reading shader attributes near a &lt;code&gt;demote&lt;/code&gt; or &lt;code&gt;discard&lt;/code&gt; instruction.&lt;/p&gt;
&lt;p&gt;Among the many programs that run on the GPU to render graphics, fragment shaders are in charge of calculating the colour of every pixel written into the frame-buffer that will
be sent to your screen. In some cases, these shaders are used to perform subordinate calculations instead, such as derivatives.&lt;/p&gt;
&lt;p&gt;This is a problem, however, as fragments shaders are &lt;em&gt;always&lt;/em&gt; expected to write into the frame-buffer. When used like this, the colour data of these shader instances remains
uninitialized, which is undefined behaviour that will most likely result in rainbow-puke graphics being sent to your screen.&lt;/p&gt;
&lt;p&gt;This is where the &lt;code&gt;demote&lt;/code&gt; and &lt;code&gt;discard&lt;/code&gt; instructions come in to the rescue.
They are used to mark these fragment shaders, so that the colour of every shader instance that is demoted is ignored, keeping the thread alive to perform calculations while the
frame-buffer remains untouched.&lt;/p&gt;
&lt;p&gt;Whenever the driver tried to read attributes (i.e. data such as positions, normals, etc.) in the proximity of these instructions, it would misread them, causing the infamous
graphical glitch.&lt;/p&gt;
&lt;p&gt;Thankfully, this was fixed by simply delaying the demotion of these fragments to the end of the shader program, which has a slight impact on their performance, albeit not one big
enough to be concerned.&lt;/p&gt;
&lt;p&gt;Next on epicboy&amp;rsquo;s list, we have a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6941&#34;&gt;fix that solves the brightness of sRGB graphics&lt;/a&gt; when rendering from a secondary GPU, since they
looked much darker than they should.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./presentationbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/presentationbug_hu714a47d94fab05174b2a8361efa7d313_1052116_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Free HDR! (Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./presentationfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/presentationfix_hufbae919a9ee47aa2dc1f5489a014d38a_1155535_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Free HDR! (Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Free HDR! (Super Mario Odyssey)&lt;/p&gt;


&lt;p&gt;This occurred when the rendering was performed by an AMD GPU, but the presentation of images from the &lt;a href=&#34;https://en.wikipedia.org/wiki/Swap_chain&#34;&gt;swap chain&lt;/a&gt; (the virtual buffers
used by the GPU to prevent tearing and stuttering when updating your screen) was done by an Intel or Nvidia GPU.
The swap chains that were being rendered on the AMD GPU, which contained images in &lt;code&gt;sRGB&lt;/code&gt; format, were being read as &lt;code&gt;Linear&lt;/code&gt; on the secondary GPU, causing them to
be presented with erroneous intensity levels.
This is because the scales used in these formats are incompatible, and their values do not automatically map to an equivalent value on their counterpart space, resulting in a
quality degradation of the image when using the wrong format.&lt;/p&gt;
&lt;p&gt;As a solution, the &lt;code&gt;Linear&lt;/code&gt; colour space format is now preferred when presenting frames from the swap chain.
This alleviates the wrong interpretation of the frame&amp;rsquo;s format, allowing all frames to display properly in the linear colour space.&lt;/p&gt;
&lt;p&gt;Another annoying Windows-only AMD GPU bug gone for good thanks to epicboy is &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6948&#34;&gt;the horrible bright squares&lt;/a&gt; that would appear in the
shading of a number of titles: most notably, &lt;code&gt;Fire Emblem: Three Houses&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./fethbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./fethfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Not so psychedelic any more (Fire Emblem: Three Houses)&lt;/p&gt;


&lt;p&gt;The cause of this problem lies at the hardware-level differences between the GPU of the Nintendo Switch, and that of AMD cards.&lt;/p&gt;
&lt;p&gt;In graphics programming, it&amp;rsquo;s extremely common to perform the same operation over a considerable number of elements — such as vertices, pixels, etc.
GPUs were, thus, designed to operate over large amounts of data at the same time (i.e. in parallel), using instructions that exploit this principle, known as &lt;code&gt;SIMD&lt;/code&gt;
(&lt;a href=&#34;https://en.wikipedia.org/wiki/SIMD&#34;&gt;Single Instruction, Multiple Data&lt;/a&gt;).
This method of parallel computing, combined with multi-threading, is known as &lt;code&gt;SIMT&lt;/code&gt;
(&lt;a href=&#34;https://en.wikipedia.org/wiki/Single_instruction,_multiple_threads&#34;&gt;Single Instruction, Multiple Threads&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In the case of the Tegra X1 (the GPU of the Nintendo Switch), these instructions operate on bundles of 32 threads (called &lt;code&gt;workgroups&lt;/code&gt;), all of which run the same code —
although they do not necessarily operate on the same data.
The &lt;code&gt;SIMT&lt;/code&gt; instructions in AMD cards post the &lt;a href=&#34;https://en.wikipedia.org/wiki/Graphics_Core_Next&#34;&gt;&lt;code&gt;GCN&lt;/code&gt; architecture&lt;/a&gt;, however, only work with workgroups of 64 threads.
This presented a challenge, as yuzu had to divide these workgroups of 64 threads and make them behave as two workgroups of 32 threads in order to properly emulate the guest GPU
on these devices.&lt;/p&gt;
&lt;p&gt;epicboy &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6948&#34;&gt;addressed this problem&lt;/a&gt; and fixed these instructions, so that by using the thread&amp;rsquo;s invocation ID, it&amp;rsquo;s possible to tell
whether any thread is part of the &amp;ldquo;lower&amp;rdquo; or &amp;ldquo;upper&amp;rdquo; 32-thread group, effectively allowing AMD cards to emulate the behaviour of the Nintendo Switch GPU.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; has also contributed a number of fixes for bugs affecting AMD, starting with
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6943&#34;&gt;disabling a vulkan extension&lt;/a&gt; (&lt;code&gt;VK_EXT_SAMPLER_FILTER_MINMAX&lt;/code&gt;) in their GPUs prior to &lt;code&gt;GCN4&lt;/code&gt; (Polaris), which do not have the
necessary hardware to support the extension.
Notably, this fixed the psychedelic graphics in &lt;code&gt;The Legend of Zelda: Skyward Sword HD&lt;/code&gt;, one that many of us will miss, for sure.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sshdbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/sshdbug_hu557fcad7a3ea8809418c4d1806a05946_1963876_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This was originally a video, but it could have triggered epilepsy (The Legend of Zelda: Skyward Sword)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sshdfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/sshdfix_hu162189b5e306e9683a6bc9bb6b65114d_1965027_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This was originally a video, but it could have triggered epilepsy (The Legend of Zelda: Skyward Sword)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;This was originally a video, but it could have triggered epilepsy (The Legend of Zelda: Skyward Sword)&lt;/p&gt;


&lt;p&gt;On a similar vein, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6944&#34;&gt;he increased the number of sets per pool on AMD&lt;/a&gt; (a feature used in Vulkan to manage the memory of resources),
fixing the random crashes that occurred when booting &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/K0bin&#34;&gt;K0bin&lt;/a&gt; is back again, fixing another major issue.
This time, yuzu was not following the official Vulkan specification correctly, leading to overlapping information for textures and buffers on Nvidia graphics cards.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bufferImageGranularity&lt;/code&gt; specifies the size in bytes at which textures and buffers can be aligned.
AMD and Intel GPUs allow for pretty precise values of 1 or 64 bytes depending on the hardware, but Nvidia on the other hand is hard limited to a 1024 byte block.&lt;/p&gt;
&lt;p&gt;yuzu didn’t take this alignment into consideration, leading to data corruption primarily shown by &lt;code&gt;Super Mario Odyssey&lt;/code&gt; with and without the GPU cache garbage collector enabled.
But the same issue could affect any game that handles small textures at any time, as any buffer could corrupt any texture, and any texture could corrupt any buffer.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6834&#34;&gt;Properly respecting this hardware set value&lt;/a&gt; fixes unheard instabilities when running games in Vulkan with an Nvidia GPU, and allows
Reaper, the GPU cache garbage collector, to work on all games.&lt;/p&gt;
&lt;p&gt;There was a bug that made Mario&amp;rsquo;s moustache appear to be light-brown (instead of the classic dark shade we are used to seeing) when using an Intel GPU with the Vulkan API.
The problem was a simple one: yuzu was returning the wrong data type  when querying the &lt;code&gt;gl_FrontFacing&lt;/code&gt; attribute — an unsigned integer, instead of a 32-bit floating-point value.
The solution was equally simple: epicboy changed the code so that the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6928&#34;&gt;queried attribute returned with the correct data type&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./intelbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/intelbug_hu90970aa980e48050f411f2651d6bb52b_776235_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Finally, that hair dye was on discount (Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./intelfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/intelfix_hub07e98721129b028d4d34fcceaa5446a_738127_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Finally, that hair dye was on discount (Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Finally, that hair dye was on discount (Super Mario Odyssey)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6887&#34;&gt;v1993&lt;/a&gt; has been using &lt;a href=&#34;https://pvs-studio.com/en/&#34;&gt;PVS-Studio&lt;/a&gt; to catch logic errors in the code with good success so far. For example,
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6887&#34;&gt;a small clean up in SPIR-V was possible thanks to this&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;lan-party-time&#34;&gt;LAN party time!&lt;/h2&gt;
&lt;p&gt;Work on &lt;code&gt;Local Wireless&lt;/code&gt; continues, but in the meantime, yuzu is proud to announce that &lt;code&gt;LAN&lt;/code&gt;
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6863&#34;&gt;(Local Area Network)&lt;/a&gt; support has been added for all users! This is all thanks to work done by &lt;a href=&#34;https://github.com/spholz&#34;&gt;spholz&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This means that a small selection of games can now be played with a Switch or any other computer running yuzu while connected to the same network (be it wired ethernet, or via
WiFi). With a service like &lt;a href=&#34;https://www.zerotier.com/&#34;&gt;ZeroTier&lt;/a&gt; (hamachi has not worked so far) or by manually configuring a VPN
&lt;a href=&#34;https://en.wikipedia.org/wiki/Virtual_private_network&#34;&gt;(Virtual Private Network)&lt;/a&gt;, this can be extended to global gameplay!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Games with LAN support so far are:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ARMS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Bayonetta 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Duke Nukem 3D: 20th Anniversary World Tour&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Mario &amp;amp; Sonic at the Olympic Games Tokyo 2020&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Mario Golf: Super Rush&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Mario Kart 8 Deluxe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Mario Tennis Aces&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Pokkén Tournament DX&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Pokémon Sword &amp;amp; Shield&lt;/code&gt; (limited game functions by design)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Saints Row IV®: Re-Elected™&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SAINTS ROW®: THE THIRD™ - THE FULL PACKAGE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Splatoon 2&lt;/code&gt; (works with auto-stub enabled)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Titan Quest&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At the moment, not all of the listed games work due to missing services or not having the best compatibility with yuzu, but gameplay proved stable in all working cases.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./lan.png&#34; title=&#34; It just works! (Mario Kart 8 Deluxe)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/lan_hud5147d941255afc455b5ee8cbdd44ecb_3098574_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; It just works! (Mario Kart 8 Deluxe)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; It just works! (Mario Kart 8 Deluxe)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Keep in mind that some games require certain button combinations to switch between LAN and Local Wireless modes.
For example, &lt;code&gt;Mario Kart 8 Deluxe&lt;/code&gt; requires the user to simultaneously hold L + R and depress the left analog stick (L3) in the main menu to be able to create or join a LAN room.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; later followed with &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6905&#34;&gt;network interface cleanups&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;smooth-and-glitchless-videos-for-the-win&#34;&gt;Smooth and glitchless videos for the win&lt;/h2&gt;
&lt;p&gt;Thanks to the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6713&#34;&gt;introduction of VA-API&lt;/a&gt; by &lt;a href=&#34;https://github.com/yzct12345&#34;&gt;yzct12345&lt;/a&gt; back in July, epicboy made it possible to
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6846&#34;&gt;use hardware video acceleration&lt;/a&gt; to decode videos with &lt;a href=&#34;https://en.wikipedia.org/wiki/FFmpeg&#34;&gt;FFmpeg&lt;/a&gt; for all other compatible GPU
and driver combinations.
Furthermore, yuzu will gracefully fall back to software decoding in case none of the combinations are supported.&lt;/p&gt;
&lt;p&gt;This considerably speeds up the decoding process, improving the performance of the emulator when playing videos.&lt;/p&gt;
&lt;p&gt;Currently, the following GPU decoders are implemented:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;GPU&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;WINDOWS&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;LINUX&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;NVIDIA&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;NVDEC/D3D11VA&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;NVDEC/VDPAU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;AMD&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;D3D11VA&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;VA-API/VDPAU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;INTEL&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;D3D11VA&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;VA-API&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Please note that, since the GPU used to decode videos isn&amp;rsquo;t necessarily the same as the one used for rendering, NVDEC is preferred on Windows over D3D11VA, as the performance
experienced with the latter when it defaults to using the iGPU for decoding was lower.&lt;/p&gt;
&lt;p&gt;Next on the list, we have had reports of noisy artifacts appearing in the videos of some games. Notably, those that were encoded with the
&lt;a href=&#34;https://en.wikipedia.org/wiki/VP9&#34;&gt;VP9 format&lt;/a&gt;.
epicboy &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6799&#34;&gt;investigated the problem and solved it by stubbing &lt;code&gt;UnmapBuffer&lt;/code&gt;&lt;/a&gt;, a driver command that is, as you could guess, used to free
GPU memory held by a buffer.
But what was exactly the problem behind this? I&amp;rsquo;m afraid that this will get a tad bit technical, so bear with me for a while.
I promise it will not hurt&amp;hellip; much.&lt;/p&gt;
&lt;p&gt;The VP9 codec defines, among other things, a number of frames in the video to be used as references, which are in turn employed to reconstruct the frames in-between these
&lt;code&gt;key-frames&lt;/code&gt;.
That means that, to properly interpolate these &amp;ldquo;in-between&amp;rdquo; frames, one must rely on the information from both the &lt;code&gt;key-frames&lt;/code&gt;, and previous &lt;code&gt;inter-frames&lt;/code&gt;.
&lt;code&gt;key-frames&lt;/code&gt;, on the other hand, are decoded completely on their own, without relying on any reference.
Decoding a frame like this is a slower process, but it guarantees that the frame will be as clean of errors as possible, which is why they can be used as references.&lt;/p&gt;
&lt;p&gt;As was previously mentioned, FFmpeg is used to decode videos.
In the case of the VP9 format, yuzu needs to send FFmpeg the raw bytes that will be decoded (i.e. the actual images that you see in the video), along with a header that contains
metadata, such as the dimensions of the frame, whether it is a &lt;code&gt;key-frame&lt;/code&gt;, or, if it isn&amp;rsquo;t, what frames are used as references when processing it, etc.&lt;/p&gt;
&lt;p&gt;The information that constitutes this header is mapped to a buffer in memory.
And now, here&amp;rsquo;s where things turn a bit funny.
For some reason, the information in this buffer — namely, that part of the header that specified what &lt;code&gt;key-frames&lt;/code&gt; should be used as reference, would change inconsistently among
&lt;code&gt;inter-frames&lt;/code&gt;.
This led to a degradation of the quality of the video, as every interpolated frame would reference a different &lt;code&gt;key-frame&lt;/code&gt;, leading to the creation of these infamous garbled noise
artifacts.&lt;/p&gt;
&lt;p&gt;By stubbing the &lt;code&gt;UnmapBuffer&lt;/code&gt; command, the addresses of these reference frames now remain constant for as long as they are needed, allowing yuzu to pass to &lt;code&gt;FFmpeg&lt;/code&gt; the correct
information and decode the videos without any problems.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./vp9bug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./vp9fix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Both glitch free and smoother (The Legend of Zelda: Link&amp;#39;s Awakening)&lt;/p&gt;


&lt;p&gt;On a related note, epicboy fixed another VP9 problem: the first frame of the bitstream was missing its frame data, so he changed the logic to
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6844&#34;&gt;ensure the first frame is complete&lt;/a&gt;, silencing a runtime error thrown by FFmpeg.&lt;/p&gt;
&lt;p&gt;As previously mentioned, yuzu reads the header information directly from the NVDEC registers contained in a buffer.
Unfortunately, one key flag that needs to be passed to FFmpeg, &lt;code&gt;is_hidden_frame&lt;/code&gt;, was not actually held in this buffer.&lt;/p&gt;
&lt;p&gt;To circumvent this problem, our implementation also buffers the next frame, and then, based on another flag that holds the same information (&lt;code&gt;is_previous_frame_hidden&lt;/code&gt;), informs FFmpeg
whether the previous frame should be displayed or not.
This means that yuzu would always decode one frame late, and since that was already the case, yuzu wasn&amp;rsquo;t sending the header information for the very first frame, as it needs to
know the value of &lt;code&gt;is_hidden_frame&lt;/code&gt; beforehand.&lt;/p&gt;
&lt;p&gt;What epicboy did was simply copy the first frame in the bitstream, so that essentially the first and second frame are the same, and thus, exploiting this fact, the header information can be passed
to FFmpeg so it stops complaining.&lt;/p&gt;
&lt;p&gt;Alas, the joys of software development are fleeting in this world.&lt;/p&gt;
&lt;h2 id=&#34;general-bugfixes&#34;&gt;General bugfixes&lt;/h2&gt;
&lt;p&gt;You can’t predict how a bug will show up, sometimes they pop out like daisies. With the addition of Brazilian Portuguese as a language for the user interface,
&lt;code&gt;Paper Mario: The Origami King&lt;/code&gt; started to run only in Japanese, ignoring any user setting.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6793&#34;&gt;Fixing the copy amount of &lt;code&gt;GetAvailableLanguageCodes&lt;/code&gt;&lt;/a&gt; was enough to solve this issue. Thanks Morph!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./papermario.png&#34; title=&#34; True native gameplay (Paper Mario: The Origami King)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/papermario_hub71c60c4d32be149b6a18e2bb3c24a28_2814805_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; True native gameplay (Paper Mario: The Origami King)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; True native gameplay (Paper Mario: The Origami King)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6795&#34;&gt;sankasan&lt;/a&gt; gave &lt;code&gt;yuzu-cmd&lt;/code&gt;, our command-line SDL2 alternative to the regular Qt yuzu, some additional love.
By correctly implementing &lt;code&gt;SDL_ShowCursor&lt;/code&gt;, yuzu-cmd can now &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6795&#34;&gt;properly hide the mouse cursor while in fullscreen&lt;/a&gt;. Thank you!&lt;/p&gt;
&lt;p&gt;Also relating to &lt;code&gt;yuzu-cmd&lt;/code&gt;, in the past, while button mapping and other settings were working correctly, the toggle to enable the controller was being completely ignored.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6816&#34;&gt;Reading the &lt;code&gt;connected&lt;/code&gt; value as a boolean&lt;/a&gt; was all it took to get past this misstep, thanks
&lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;toast also found an issue in the logic of how per-game profiles were handled: only the default user profile was ever selected.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6805&#34;&gt;Some code changes, and now the currently selected user profile will be used&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/gidoly&#34;&gt;gidoly&lt;/a&gt; opened his first ever pull request, fixing a small but arguably very important description.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Use Fast GPU time&lt;/code&gt;, one of the options in the Advanced Graphics tab, is a hack intended to improve compatibility with games that use dynamic resolution as a way to keep steady
performance on the Switch.&lt;/p&gt;
&lt;p&gt;By lying and informing the game/application that performance is always good, the emulator avoids unnecessary destruction and reconstruction of textures, saving both performance and VRAM.
As an added benefit, some games use this &lt;em&gt;totally-not-adulterated&lt;/em&gt; information to constantly render at their highest supported resolution.&lt;/p&gt;
&lt;p&gt;For both these reasons we recommend users to keep this option always enabled, as no regressions have been found when using it, and the stability benefits on some particular titles
like &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt; are more than worth it.&lt;/p&gt;
&lt;p&gt;So, by calling a spade a spade, gidoly now informs us that &lt;code&gt;Use Fast GPU time&lt;/code&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6817&#34;&gt;is indeed a hack&lt;/a&gt;. Al pan, pan, y al vino, vino.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6927&#34;&gt;Stubbing the &lt;code&gt;NGCT:U&lt;/code&gt; service&lt;/a&gt; allows &lt;code&gt;Boyfriend Dungeon&lt;/code&gt; to boot. Good catch by &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./boyfriend.png&#34; title=&#34; Boyfriend Dungeon&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/boyfriend_hu641e84f64543168739c538e300464d58_1164604_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Boyfriend Dungeon&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Boyfriend Dungeon&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;epicboy &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6839&#34;&gt;flipped the positions of &lt;code&gt;Limit Speed Percent&lt;/code&gt; and &lt;code&gt;Framerate Cap&lt;/code&gt;&lt;/a&gt; in the configuration window. Tidying the user interface
never hurts.&lt;/p&gt;
&lt;p&gt;Are there any developers tired of having to wait over 3 minutes to compile each change done to the texture cache section of the code? Well, &lt;a href=&#34;https://github.com/yzct12345&#34;&gt;yzct12345&lt;/a&gt;
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6820&#34;&gt;split out the definitions&lt;/a&gt;, reducing the build time to only 30 seconds.&lt;/p&gt;
&lt;p&gt;yzct12345 also found a &lt;a href=&#34;https://en.wikipedia.org/wiki/Deadlock&#34;&gt;deadlock&lt;/a&gt; in our &lt;code&gt;Single-Producer, Single Consumer queue&lt;/code&gt;,
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6868&#34;&gt;and submitted a fix&lt;/a&gt; to address this problem.
The work to rewrite this queue and make it &lt;code&gt;Multi-Producer, Multi-Consumer&lt;/code&gt; has also been started, so hopefully we might see a follow-up next month.
If you’re confused about these &amp;ldquo;&lt;a href=&#34;https://en.wikipedia.org/wiki/Producer%E2%80%93consumer_problem&#34;&gt;Producer-Consumer&lt;/a&gt;&amp;rdquo; terms, just know that they basically describe how to tackle
the access to a resource in a multi-core system, so that the processes that write into (produce), and those that read from (consume), a shared resource, are properly synchronized —
in this case, the queue.&lt;/p&gt;
&lt;p&gt;This adventurous developer also &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6861&#34;&gt;optimized the UnswizzleTexture function&lt;/a&gt;, yielding a sweet speed gain.
Swizzling refers to a technique used to optimize how textures are stored in memory to minimize cache misses.
The opposite operation, thus, would be to take a swizzled texture and reorganize it so it makes sense to humans.&lt;/p&gt;
&lt;p&gt;Some time ago, toast detected a potential out-of-bounds access, which is a bug that occurs when the program accesses memory that is outside the range where it should be operating
at that given moment.
The code in question is also part of the function used to unswizzle textures.
epicboy noticed that the root of the problem laid in the calculation of the frame buffer size, used to limit where the code should operate,
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6879&#34;&gt;and fixed it in this PR&lt;/a&gt;, effectively eliminating the bug.&lt;/p&gt;
&lt;p&gt;While inspecting yuzu manually and with the help of analysis tools, v1993 also found a number of small bugs in different parts of our codebase, such as a
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6884&#34;&gt;misplaced break statement&lt;/a&gt; in the kernel function &lt;code&gt;GetThreadContext()&lt;/code&gt; — a human error that changed the logic of the algorithm,
preventing it from behaving as intended.
In a similar vein, he also corrected a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6889&#34;&gt;copy-paste error&lt;/a&gt; affecting the code of the software keyboard.&lt;/p&gt;
&lt;p&gt;v1993 also found another bug in the &lt;code&gt;GetSubmappedRange()&lt;/code&gt; function, used to obtain the CPU memory segments from a GPU memory address. Blinkhawk
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6894&#34;&gt;went ahead and fixed it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another noteworthy change by Blinkhawk is that he &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6897&#34;&gt;changed the logic of the Garbage Collector&lt;/a&gt; (Reaper), so that it uses a Least-Recently Used
(&lt;code&gt;LRU&lt;/code&gt;) cache instead.&lt;/p&gt;
&lt;p&gt;Previously, the cache of the GC (Garbage Collector) would iterate over &lt;code&gt;n&lt;/code&gt; textures every frame, checking whether they should be cleaned from memory or not.
It also used certain heuristics that would make the cleaning more aggressive towards certain kinds of textures, cleaning them without synchronizing with the host memory.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;LRU&lt;/code&gt; scheme, however, orders the textures based on how recently they were used.
Once the memory is full, the GC starts iterating over the elements of the &lt;code&gt;LRU&lt;/code&gt; cache, eliminating the textures that haven&amp;rsquo;t been used in the longest time.
Additionally, the GC now prioritizes eliminating textures that do not need to synchronize with the host memory, and only considers other textures once these have been emptied
from the cache.
These changes make the new Garbage Collector more stable, so we can safely enable it by default for all users.&lt;/p&gt;
&lt;p&gt;Meanwhile, &lt;a href=&#34;https://github.com/BreadFish64&#34;&gt;BreadFish64&lt;/a&gt; found that yuzu spent considerable CPU time running &lt;code&gt;GetHostThreadID()&lt;/code&gt; — a function of the kernel used to manage threads
— while profiling &lt;code&gt;Fire Emblem: Three Houses&lt;/code&gt;, and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6878&#34;&gt;submitted a patch that optimized the generated code&lt;/a&gt;, providing a small performance
boost.&lt;/p&gt;
&lt;h1 id=&#34;input-improvements&#34;&gt;Input improvements&lt;/h1&gt;
&lt;p&gt;german77 implemented a few input changes this month.&lt;/p&gt;
&lt;p&gt;First of all, when mapping and moving an analog stick, the previous implementation used to only show a blue dot representing the relative position of the analog stick.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6815&#34;&gt;A new green dot is now present&lt;/a&gt;, representing the emulated position of the stick, considering range and dead zones values.
It&amp;rsquo;s useful to know if the stick actually reaches the whole input range.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./stick.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Remember to test and set both Range and Deadzone&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Next, the usual &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6855&#34;&gt;update to SDL&lt;/a&gt;, which always brings some goodies. In this case:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The ability to send effects to DualSense triggers (not implemented at the moment).&lt;/li&gt;
&lt;li&gt;Better sensor data rate for Switch and PlayStation controllers.&lt;/li&gt;
&lt;li&gt;Added support for the Amazon Luna controller.&lt;/li&gt;
&lt;li&gt;Added rumble support for the Google Stadia controller.&lt;/li&gt;
&lt;li&gt;Improved rumble for the Pro Controller.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And finally, the Web Applet can cause the SDL process to die, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6862&#34;&gt;disabling an unnecessary feature&lt;/a&gt; solves the issue.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./art.png&#34; title=&#34; 4K beach episode (Xenoblade Chronicles Definitive Edition)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2021/art_hu87073d82fc7ddf57e5e37443d347018e_12861480_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; 4K beach episode (Xenoblade Chronicles Definitive Edition)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; 4K beach episode (Xenoblade Chronicles Definitive Edition)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Progress on &lt;code&gt;Project A.R.T.&lt;/code&gt; is going well, most major problems have been addressed. Morph had several eureka moments with &lt;code&gt;Project Gaia&lt;/code&gt;. And now other secret recipes are in the oven,
waiting their turn.&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you for your attention — happy playing, and see you next time!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report July 2021</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/</link>
      <pubDate>Thu, 12 Aug 2021 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/</guid>
      <description>&lt;p&gt;Bienvenidos, yuz-ers, to our latest monthly progress report! We have a &lt;em&gt;lot&lt;/em&gt; to talk about this month, so buckle up, ‘cause this will be one good ride!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Bienvenidos, yuz-ers, to our latest monthly progress report! We have a &lt;em&gt;lot&lt;/em&gt; to talk about this month, so buckle up, ‘cause this will be one good ride!&lt;/p&gt;
&lt;h1 id=&#34;project-hades&#34;&gt;Project Hades&lt;/h1&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./hades.png&#34; title=&#34; Why Hades? Well here&amp;#39;s why!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/hades_hu208308d6efaa0adddc38249d8eaf6df2_1621_135x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Why Hades? Well here&amp;#39;s why!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Why Hades? Well here&amp;#39;s why!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=4Zq3OCrzn84&#34;&gt;Kept you waiting, huh?&lt;/a&gt;
After being in development for six months, and spanning almost 50,000 lines of new code, &lt;code&gt;Project Hades&lt;/code&gt; has finally been released. This massive &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6585&#34;&gt;rewrite of the shader decompiler&lt;/a&gt; is brought to you by &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt;, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;, and &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fixing an innumerable amount of rendering bugs, reducing shader build times, improving compatibility, and increasing performance by over 30% for all GPU vendors, Hades is easily
one of the biggest changes made to yuzu to date.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/&#34;&gt;We have a dedicated article explaining the process in technical detail&lt;/a&gt;, so we will be focusing only on the end user changes and some
recommendations to help you get the best experience out of this new feature that both Early Access and Mainline users can enjoy.&lt;/p&gt;
&lt;p&gt;While we keep OpenGL as the default graphics API for compatibility reasons (outdated drivers won’t affect it as much, and it lets Nvidia Fermi GPU users run yuzu out of the box), we
strongly recommend testing your games with the Vulkan API first. Vulkan performance and compatibility have improved significantly (especially if paired with the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/#project-texture-reaper&#34;&gt;Texture Reaper&lt;/a&gt;, the GPU Cache Garbage Collector), additionally, rendering and shader build performance almost always beat OpenGL.
This applies not only for AMD and Intel GPU users, but also Nvidia users.&lt;/p&gt;
&lt;p&gt;There is an exception, however. The Intel Linux Vulkan driver is not stable at the moment, but we’re investigating the cause of the issue. For now, Intel Linux users should
stick to OpenGL.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./perf_ea_vs_hades_ea.png&#34; title=&#34; Integrated GPU users benefit the most from Hades&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/perf_ea_vs_hades_ea_hu025fb8c84f747518bd081df5c2115493_14445_630x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Integrated GPU users benefit the most from Hades&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Integrated GPU users benefit the most from Hades&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Hades implements a &lt;code&gt;Pipeline Cache&lt;/code&gt; for both Vulkan and OpenGL, meaning that regardless of which API you are using, all shaders are now stored and reused the next time the game is
started. This functions similarly to how the old OpenGL Shader Cache behaved.
Needless to say, this means that all previous Shader Caches are no longer valid, and will be discarded if someone tries to use them.&lt;/p&gt;
&lt;p&gt;The difference in terminology lies in the fact that the whole &lt;a href=&#34;https://en.wikipedia.org/wiki/Graphics_pipeline&#34;&gt;Graphics Pipeline&lt;/a&gt; is now stored, not just a specific set of
Shader stages.
An important detail, the OpenGL pipeline cache is not interchangeable with the Vulkan pipeline cache and vice versa.
Two separate sets of shaders are generated if you use both APIs.&lt;/p&gt;
&lt;p&gt;Vulkan now also benefits from &lt;code&gt;parallel shader building&lt;/code&gt;, meaning all CPU threads will be able to handle all upcoming shaders in a parallel fashion, instead of asynchronously,
avoiding graphical issues and building faster.
The end result is the shortest build times of all API and shader backends (more on this later).
Thus, on a fresh game with no previously built cache, more CPU threads will provide a smoother experience, with no imposed limit.
Someone should test running &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; on a big server CPU!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./vulkan.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; First time gameplay has never been smoother!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;All CPU threads, save for one, are used to build shaders. The remaining free thread either handles shader saving to the pipeline cache, or continues the rendering process, depending
on if all shaders have been dealt with at the moment.
This decision was made not only to improve performance, but also to improve overall system response times while building several shaders simultaneously, and to avoid certain
“gaming” laptops from overheating the CPU while keeping all threads busy.&lt;/p&gt;
&lt;p&gt;Note that this is a hardware design flaw by the laptop vendors, not an issue with the emulator. The product should provide enough cooling performance to keep its components
cool enough even at full demand, not just for reaching advertised turbo clock speeds in short bursts.
(Writer note: basically, if you want good gaming performance and longevity, buy &lt;strong&gt;thicc&lt;/strong&gt; laptops.)&lt;/p&gt;
&lt;p&gt;Now, not all games will perform or render the best in Vulkan, some will still show better results with OpenGL instead. For the old API, we have some changes too.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./backend.png&#34; title=&#34; When selecting OpenGL, new options show up!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/backend_hufa3e1f2275438a38cd748d28d8a5373d_22268_1019x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; When selecting OpenGL, new options show up!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; When selecting OpenGL, new options show up!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;We have introduced a new drop list option in the Graphics settings.
Replacing the device selection of Vulkan when using OpenGL, &lt;code&gt;Shader backend&lt;/code&gt; shows up, giving three different options to choose from.&lt;/p&gt;
&lt;p&gt;Out of the box, yuzu uses &lt;a href=&#34;https://en.wikipedia.org/wiki/OpenGL_Shading_Language&#34;&gt;GLSL&lt;/a&gt;, the default backend for OpenGL.
On good performing OpenGL GPU drivers (only Nvidia and the Linux Mesa drivers as of now), it has the best performance, but also takes the longest time to build shaders,
resulting in noticeable stuttering when accessing new areas or performing new attacks.
This is the recommended option for Nvidia users with a previously built cache searching for the highest performance.
While it has its uses in some edge cases, we recommend Windows AMD and Intel users to run Vulkan instead.
Linux Mesa users don’t have this limitation and can enjoy GLSL without issues, thanks to far more mature drivers.&lt;/p&gt;
&lt;p&gt;Next up is &lt;a href=&#34;https://en.wikipedia.org/wiki/ARB_assembly_language&#34;&gt;GLASM&lt;/a&gt;, what in the past was called Assembly Shaders.
This is an Nvidia only feature, it provides lower performance than GLSL or Vulkan, but the second fastest shader build times, only behind Vulkan’s parallel shaders.
We recommend Nvidia users interested in using OpenGL to first run games in GLASM in order to build their pipeline cache, and once done, move to GLSL to get the best performance
without suffering the shader stuttering associated with GLSL.
Any other GPU vendor will skip GLASM and default to GLSL.&lt;/p&gt;
&lt;p&gt;Finally, &lt;a href=&#34;https://en.wikipedia.org/wiki/Standard_Portable_Intermediate_Representation&#34;&gt;SPIR-V&lt;/a&gt;, the default backend of Vulkan, which is a valid option in OpenGL since the
release of version 4.6.
Originally, we wanted OpenGL to use this backend, discontinuing support for GLSL.&lt;/p&gt;
&lt;p&gt;Reality always hits back like the laws of thermodynamics, delaying the release of Hades for several months.
Driver support for SPIR-V in Windows is very bad (especially for Nvidia), with only the Linux Mesa drivers having a correct and fast implementation.
So we decided to keep the option as an experimental feature, focusing on the old GLSL and GLASM backend first. We plan to improve SPIR-V rendering and performance later.
Ideally, SPIR-V in OpenGL should be a jack-of-all-trades, a mix of the performance of GLSL and the shader build times of GLASM.&lt;/p&gt;
&lt;p&gt;So to ease our user’s decision on what to choose, here’s a chart of all possible options for the most common GPU vendors.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./best.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/best_hu2a592afc15a1d2ec7cd1d25d815217cf_477092_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Another important change is in how GPU accuracy operates.
In the past, certain games like &lt;code&gt;Pokémon Sword &amp;amp; Shield&lt;/code&gt; required using High GPU accuracy to get the best performance.
This is no longer the case. Now, Normal consistently produces the best performance, at a low cost in accuracy, while High produces better particle effects and lighting, at a
low performance cost.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6575&#34;&gt;We removed values&lt;/a&gt; that should be enabled by default from the bottom left action buttons of the user interface, like Asynchronous
GPU shaders and Multicore. In their place, users can now &lt;em&gt;switch&lt;/em&gt; between Normal and High GPU accuracy while playing.
A fast and easy way to test what’s better for each game, GPU vendor, and API.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./statusbar.png&#34; title=&#34; Old (top) vs new (bottom)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/statusbar_hu0de8e6b0d628be9d1cc5358354a18163_3649_500x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Old (top) vs new (bottom)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Old (top) vs new (bottom)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;thank-you-captain-obv--er-i-mean-captain-vortex&#34;&gt;Thank you, Captain Obv — er, I mean, Captain Vortex&lt;/h2&gt;
&lt;p&gt;Communication is vital for any project, and it is essential that we make our configuration options &lt;em&gt;even more explanatory&lt;/em&gt; than they already are.&lt;/p&gt;
&lt;p&gt;We want to thank our fellow developer, &lt;a href=&#34;https://github.com/CaptV0rt3x&#34;&gt;Vortex&lt;/a&gt;, for the marvelous change of
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6736&#34;&gt;rewording the explanation of GLASM&lt;/a&gt;. This change was made in order to elaborate that it is, effectively, a shorthand for &lt;code&gt;OpenGL Assembly Shaders&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vortex.png&#34; title=&#34; This is critical&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/vortex_huc936706a8265a389b0bf1716e0c37940_14353_1019x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; This is critical&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; This is critical&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Fear not, my fellow yuz-ers, for we always have the most serious and capable people doing only the best work for your benefit.
Rest assured that if a similar situation were to arise again in the future, Vortex will have your back.
I salute you, my dear friend, and pray that you may ennoble yuzu even further with your future contributions.&lt;/p&gt;
&lt;h2 id=&#34;graphical-fixes&#34;&gt;Graphical fixes&lt;/h2&gt;
&lt;p&gt;epicboy was very busy during the development of Hades, and continues to be busy after it was finished.&lt;/p&gt;
&lt;p&gt;World 1-5 of &lt;code&gt;Super Mario 3D World + Bowser&#39;s Fury&lt;/code&gt; used to crash when loading on AMD and Intel GPU equipped systems running Vulkan.
A depth image was being cleared as a regular colour image and, while OpenGL is totally fine with this, Vulkan is more strict which lead to a crash.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6635&#34;&gt;By only clearing valid colour images&lt;/a&gt;, epicboy resolved the issue.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sm3dw.png&#34; title=&#34; Affected world in Super Mario 3D World &amp;#43; Bowser&amp;#39;s Fury&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/sm3dw_hu8896f1afccd74ef7c8189eded75dda6f_3118017_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Affected world in Super Mario 3D World &amp;#43; Bowser&amp;#39;s Fury&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Affected world in Super Mario 3D World &amp;#43; Bowser&amp;#39;s Fury&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;As a way to limit the maximum framerate a dynamic FPS game can run at, epicboy &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6697&#34;&gt;implemented a multiplier based cap&lt;/a&gt;.
So, for example, if a game natively runs at 30 FPS, but can be run without issues at 240 FPS, setting an FPS cap of 8x will limit the FPS unlimiter to that value. Ideal for
high refresh displays!&lt;/p&gt;
&lt;p&gt;To avoid confusion with the FPS unlimiter, the old Frame limit was &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6696&#34;&gt;renamed to Speed limit.&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./fpscap.png&#34; title=&#34; You can find the new options here&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/fpscap_huc3e33aecf9591297985d7126f0e2331d_24604_1021x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; You can find the new options here&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; You can find the new options here&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;From before the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/&#34;&gt;release of the texture cache rewrite&lt;/a&gt;, a regression has existed that caused users&amp;rsquo; screenshots to save in the wrong directory.
Turns out &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6709&#34;&gt;a single directory separator was missing in the code&lt;/a&gt;.
Now, screenshots will work correctly by either pressing the &lt;code&gt;Ctrl + P&lt;/code&gt; hotkey, or via selecting the &lt;code&gt;Tools &amp;gt; Capture Screenshot…&lt;/code&gt; menu option, and save in the selected folder.&lt;/p&gt;
&lt;p&gt;epicboy also &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6720&#34;&gt;added support for taking screenshots in the Vulkan API&lt;/a&gt;, solving an old issue from way back when
&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/&#34;&gt;Vulkan was first implemented&lt;/a&gt; two years ago. How time flies&amp;hellip;&lt;/p&gt;
&lt;p&gt;Finally, before being dragged against his will to work on Hades, epicboy was working on improving the performance of our compute shader accelerated ASTC decoder.
By reducing the size of the workgroup, making some code simplifications, moving some look up tables, and other changes,
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6791&#34;&gt;performance increased by 15% on average.&lt;/a&gt;
&lt;code&gt;Astral Chain&lt;/code&gt; and similar titles that madly love ASTC should see more consistent frametimes with this change.&lt;/p&gt;
&lt;p&gt;Blinkhawk has also been working constantly lately, not only on Hades and several other improvements, but also in some top secret projects we will mention later.&lt;/p&gt;
&lt;p&gt;Koei Tecmo games are usually quite special, they never fail to give our developers headaches thanks to… unique decisions the studio makes.
It’s not an exaggeration to say that Project Hades’ main motivation was improving how these games run in yuzu.&lt;/p&gt;
&lt;p&gt;One of the remaining issues with &lt;code&gt;Hyrule Warriors: Age of Calamity&lt;/code&gt;, &lt;code&gt;Fire Emblem: Three Houses&lt;/code&gt;, and similar Koei games was instability caused by running them in High
GPU accuracy when loading specific levels.
In Blink’s own words, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6627&#34;&gt;a simple fix&lt;/a&gt;, and the problem was solved.&lt;/p&gt;
&lt;p&gt;Another old regression introduced by the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-bcr/&#34;&gt;Buffer Cache Rewrite&lt;/a&gt; affected particles in games like &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;, the rendering of the BowWow in
&lt;code&gt;The Legend of Zelda: Link’s Awakening&lt;/code&gt; and caused vertex explosions in Unreal Engine 4 games like &lt;code&gt;Yoshi’s Crafted World&lt;/code&gt;, &lt;code&gt;BRAVELY DEFAULT 2&lt;/code&gt; and similar.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6557&#34;&gt;Tuning how to handle high downloads and not fully waiting for command buffers to finish&lt;/a&gt; solved these issues.
To make the best out of this change, High GPU accuracy needs to be enabled.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./particlebug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./particlefix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;High GPU Accuracy is recommended (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;


&lt;p&gt;When Blinkhawk introduced the new fence manager while working on improvements for &lt;code&gt;Asynchronous GPU Emulation&lt;/code&gt; two years ago, some frame delays came with it, causing stuttering
in gameplay even if the framerate counter showed a solid 30 or 60 FPS value.
To counter this, Blink starts &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6787&#34;&gt;pre-queueing frames&lt;/a&gt;, providing a smooth gameplay experience, especially noticeable if the user&amp;rsquo;s
hardware can’t sustain perfect performance constantly.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./vsyncbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./vsyncfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Smooth as butter (Xenoblade Chronicles Definitive Edition)&lt;/p&gt;


&lt;p&gt;Rodrigo has also been hitting those keycaps without rest.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Hyrule Warriors: Age of Calamity&lt;/code&gt; suffered from very dark environments due to unprepared images that were used as render targets. When their dirty flags were not properly set,
a desynchronization happened on the texture cache, causing the issue shown below.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6670&#34;&gt;By correctly preparing such images&lt;/a&gt;, the game renders correctly.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./aocbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/aocbug_hubb66d40baf6ff720a7056d3148f6bc4c_1425159_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That looks like the Dark World to me (Hyrule Warriors: Age of Calamity)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./aocfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/aocfix_hua67f22e77cdc276e5853fe4aad55bcad_1982883_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That looks like the Dark World to me (Hyrule Warriors: Age of Calamity)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;That looks like the Dark World to me (Hyrule Warriors: Age of Calamity)&lt;/p&gt;


&lt;p&gt;By optimizing shaders doing &lt;a href=&#34;https://en.wikipedia.org/wiki/Multiply%E2%80%93accumulate_operation#Fused_multiply%E2%80%93add&#34;&gt;FMA&lt;/a&gt; operations, yuzu
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6722&#34;&gt;gains an extra 4% of performance&lt;/a&gt; overall.&lt;/p&gt;
&lt;p&gt;By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6765&#34;&gt;flipping the viewport&lt;/a&gt; in &lt;code&gt;Y_NEGATE&lt;/code&gt;, Rodrigo matches in Vulkan the correct behaviour OpenGL has, resolving the &amp;ldquo;flipping&amp;rdquo; issues for the following games:
&lt;code&gt;Katana ZERO&lt;/code&gt;, &lt;code&gt;UNDERTALE&lt;/code&gt;, &lt;code&gt;DELTARUNE&lt;/code&gt;, &lt;code&gt;Shantae&lt;/code&gt;, &lt;code&gt;Fire Emblem: Shadow Dragon and the Blade of Light&lt;/code&gt;, and others.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./flipbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/flipbug_hu51987ead620a08c2dd3a9b1386fe9449_126923_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fire Emblem: Shadow Dragon and the Blade of Light&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./flipfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/flipfix_hu0e867690cb7408d1e2f4b277ef9b6771_127261_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fire Emblem: Shadow Dragon and the Blade of Light&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Fire Emblem: Shadow Dragon and the Blade of Light&lt;/p&gt;


&lt;p&gt;&lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; experienced crashes with the Vulkan Mesa drivers due to them lacking null buffers in its transform feedback bindings. Rodrigo had to
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6580&#34;&gt;emulate the lack of this function&lt;/a&gt; in order to solve the crashing.&lt;/p&gt;
&lt;p&gt;AMD Radeon Linux users may have noticed that &lt;code&gt;The Legend of Zelda: Skyward Sword&lt;/code&gt; would run at very slow framerates in stable versions of the OpenGL Mesa drivers.
This is caused by a driver level bottleneck resulting in very slow &lt;a href=&#34;https://www.khronos.org/opengl/wiki/Pixel_Buffer_Object&#34;&gt;PBO&lt;/a&gt; (Pixel Buffer Object)  downloads.
While the current mesa-git has this bottleneck solved, a solution is needed until those fixes reach the stable release versions.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6685&#34;&gt;By specifying the &lt;code&gt;GL_CLIENT_STORAGE_BIT&lt;/code&gt; flag&lt;/a&gt;, an alternative faster path can be used, increasing performance from around 8 FPS
to a solid 60 FPS.
Mesa drivers are the best drivers.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; also contributed with some graphical fixes.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;New Super Mario Bros. U Deluxe&lt;/code&gt; provides video tutorials accessed via the web applet. Prior to his fix, trying to access that list would only result in the game returning to the
previous menu.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6641&#34;&gt;By implementing how to handle Nintendo CDN URLs in the web applet&lt;/a&gt;, this section of the game can now be accessed.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./nsmbuvid.png&#34; title=&#34; Video playback is still a work in progress (New Super Mario Bros. U Deluxe)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/nsmbuvid_hu56a44c7a1221bff3aea727efbcff69f7_1026870_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Video playback is still a work in progress (New Super Mario Bros. U Deluxe)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Video playback is still a work in progress (New Super Mario Bros. U Deluxe)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Morph also solved a quite specific render issue affecting users with multiple displays.
If two or more monitors were in use and the user started a game from any display besides the primary, black borders would appear in the rendering window.
To solve this, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6658&#34;&gt;Morph needed to tell Qt to create a dummy render widget.&lt;/a&gt;&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bordersbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/bordersbug_hu4f9517beedf23569f2952d55582b6eab_524497_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Sonic Mania, in proper pixelated format&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bordersfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/bordersfix_hud01172dba0769c83b2b09f4cd6b6184f_743600_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Sonic Mania, in proper pixelated format&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Sonic Mania, in proper pixelated format&lt;/p&gt;


&lt;p&gt;Newcomer &lt;a href=&#34;https://github.com/yzct12345&#34;&gt;yzct12345&lt;/a&gt; arrived like a sonic boom, implementing critical improvements at impressive speeds!&lt;/p&gt;
&lt;p&gt;By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6679&#34;&gt;ignoring an invalid texture operation&lt;/a&gt;, an early crash affecting &lt;code&gt;Pokémon: Let’s go, Eevee! &amp;amp; Pikachu!&lt;/code&gt; in Vulkan was solved.
No more crashes when catching your first Pokémon. Gotta catch ’em all!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6790&#34;&gt;yzct12345’s work on optimizing UnswizzleTexture&lt;/a&gt; resulted in up to double the performance for video decoding, and it also improved
general gameplay!
This results in far smoother video playback and a considerable reduction of the CPU performance needed to get a pleasant gaming experience. Thanks!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; is our specialist in Linux testing and bug reporting.
He noticed that the rune teleporting animation in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; wasn’t working correctly on the Iris and RadeonSI Mesa drivers, the default OpenGL
drivers for recent Intel and AMD GPUs, respectively.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gitlab.freedesktop.org/mesa/mesa/-/issues/3820#note_753371&#34;&gt;Thanks to instructions the Mesa driver team gave us&lt;/a&gt; in how to properly use BindImageTexture,
toastUnlimited was able to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6570&#34;&gt;implement the needed changes in yuzu&lt;/a&gt;, making the animation render correctly.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botwbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/botwbug_hu0352cfee7ea9f221c11735dd97c82e80_4938744_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Well excuse me, Princess (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botwfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/botwfix_huc8fedd9ee23db00a1ac798317363c686_4929130_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Well excuse me, Princess (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Well excuse me, Princess (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/K0bin&#34;&gt;K0bin&lt;/a&gt; arrived to give us a hand, fixing an important screw up we made.&lt;/p&gt;
&lt;p&gt;Prior to the introduction of full support on Resizable BAR in modern GPUs and systems, the PCI-Express standard is limited to a buffer of 256MB in video memory to communicate
to the CPU at a time.
yuzu uses this small portion of VRAM for allocating its staging buffer, but if the user has GPU intensive background applications, there may not be enough space to allow the
allocation to happen, and yuzu would refuse to create a Vulkan instance, failing to boot any game.
OpenGL is, as usual, excluded from this issue thanks to letting the GPU driver handle those allocations on its own.&lt;/p&gt;
&lt;p&gt;K0bin fixes this issue by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6740&#34;&gt;performing the allocation in system RAM&lt;/a&gt; if there isn’t enough free space. Many thanks!&lt;/p&gt;
&lt;h2 id=&#34;stop-this-sound&#34;&gt;Stop This Sound!&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; has been dedicated to improving the audio side of yuzu this month.
By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6564&#34;&gt;introducing some missing PCM formats&lt;/a&gt;, the missing audio present in &lt;code&gt;Ys IX: Monstrum Nox&lt;/code&gt; was finally fixed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PCM&lt;/code&gt; stands for &lt;a href=&#34;https://en.wikipedia.org/wiki/Pulse-code_modulation&#34;&gt;Pulse-Code Modulation&lt;/a&gt;, an encoding technique used to represent analogue audio signals digitally.
These signals have two basic properties: The &lt;a href=&#34;https://en.wikipedia.org/wiki/Sampling_(signal_processing)#Sampling_rate&#34;&gt;sample rate&lt;/a&gt; (how many samples of the signal are taken
per second), and the &lt;a href=&#34;https://en.wikipedia.org/wiki/Audio_bit_depth&#34;&gt;bit-depth&lt;/a&gt; (how many bits are used to represent the &amp;ldquo;loudness&amp;rdquo; of the signal&amp;rsquo;s samples at any given point
in time).&lt;/p&gt;
&lt;p&gt;In this PR, Maide introduced a number of methods to process formats that were missing in the current implementation — namely, the ability to decode PCM files encoded with a
bit-depth of 8-bit, 32-bit, and also floating-point values.
Since previously none of these formats were being decoded by yuzu, any audio file that made use of them was not being reproduced, causing this behaviour.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Tales of Vesperia&lt;/code&gt; was another title with sound problems, in which audio would be played monaurally through the left channel — far from a pleasant experience, as you can hear
here:&lt;/p&gt;




&lt;audio preload=&#34;auto&#34; controls&gt;
    
        &lt;source src=&#34;./vesperiabug.mp3&#34; type=&#34;audio/mpeg&#34;&gt;
        &lt;a href=&#34;./vesperiabug.mp3&#34;&gt;Download the audio instead&lt;/a&gt;
    
&lt;/audio&gt;

&lt;p&gt;This game in particular would request the available number of active channels and cap its output based on this information — in other words, the game would not output audio to
more channels than what yuzu reported.
Since yuzu was always returning a value of &lt;code&gt;1&lt;/code&gt;, the game ended up outputting all the audio into the left channel.
Thus, this problem was fixed by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6567&#34;&gt;reporting two channels as active instead of one&lt;/a&gt;, which is now mixed properly:&lt;/p&gt;




&lt;audio preload=&#34;auto&#34; controls&gt;
    
        &lt;source src=&#34;./vesperiafix.mp3&#34; type=&#34;audio/mpeg&#34;&gt;
        &lt;a href=&#34;./vesperiafix.mp3&#34;&gt;Download the audio instead&lt;/a&gt;
    
&lt;/audio&gt;

&lt;p&gt;Not satisfied with just this, Maide also went on and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6569&#34;&gt;changed the downmixing logic&lt;/a&gt;, which improved the audio in titles such as
&lt;code&gt;The Legend of Zelda: Link&#39;s Awakening&lt;/code&gt;, &lt;code&gt;New Super Mario Bros. U&lt;/code&gt;, &lt;code&gt;Disgaea 6: Defiance of Destiny&lt;/code&gt;, and &lt;code&gt;Super Kirby Clash&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Simply put, downmixing refers to the process of combining multiple audio channels so it is possible to reproduce them in a system with a lower number of available audio
channels.
There is some mathematics involved here and there, but the general idea behind it is to balance the volume of these individual channels so that the resulting signal sounds
centred.&lt;/p&gt;
&lt;p&gt;In the case of the Nintendo Switch, many games report six audio channels as available to the system, even though they end up providing data for only two channels (stereo sound).
Consequently, yuzu would think the games used all these channels and then &amp;ldquo;downmix&amp;rdquo; them to stereo, affecting the volumes of the left and right channel in the process, which
would end up being much quieter than needed.
While the math used by yuzu is valid when used to downmix six channels to two, it certainly was not a desirable effect in this case.
Therefore, Maide changed the code to preserve the volume of these channels if the audio in a game is already stereo, which now reproduces with the correct levels.&lt;/p&gt;
&lt;p&gt;On the same page of volume problems, there was also a bug with the volume in certain areas of &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt;, where it would occasionally spike out of proportion.
Maide tracked down the cause of this behaviour, and discovered that the gain of the samples sent by this game to yuzu had their values set as &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;a href=&#34;https://en.wikipedia.org/wiki/NaN&#34;&gt;NaN&lt;/a&gt; is a type of placeholder used by computers to represent numeric values that can&amp;rsquo;t be defined otherwise — hence, the acronym
&lt;code&gt;N&lt;/code&gt;ot &lt;code&gt;a&lt;/code&gt; &lt;code&gt;N&lt;/code&gt;umber.
Particularly, the problem at hand lies in the fact that, in order to operate over the samples of the audio signal, these gain values must be converted into integers.
But in this process, the &lt;code&gt;NaN&lt;/code&gt; values, in turn, become obscenely large positive and negative integer values.&lt;/p&gt;
&lt;p&gt;As these samples were further processed by yuzu before sending them to your sound system, these gains would distort and cap the volume of the audio samples to their maximum or
minimum value, causing this bug.
To prevent this problem, Maide added a check that &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6571&#34;&gt;changes the gain value from NaN to zero in such cases&lt;/a&gt;, so that no error is
propagated along the mixing.&lt;/p&gt;
&lt;p&gt;This is mostly a workaround, as it still remains under investigation why the game is yielding these &lt;code&gt;NaN&lt;/code&gt; values, but at the very least, it should help prevent a number of
bleeding ears here and there.&lt;/p&gt;
&lt;h2 id=&#34;input-changes&#34;&gt;Input changes&lt;/h2&gt;
&lt;p&gt;Along with some miscellaneous quality of life changes, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; also changed the behaviour of recently enabled controllers in yuzu.
In order to provide the most precise experience, now &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6698&#34;&gt;sticks will be auto-centred&lt;/a&gt; the moment the device is detected by yuzu.
Surprisingly, this happens with almost every game controller, sticks are always slightly off-centre, and if the dead zone value is small enough, users would experience slight drifting during gameplay.
No drift in this emulator!&lt;/p&gt;
&lt;p&gt;Thanks to internal changes on how settings are stored, the default values of mouse panning were affected.
german77 &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6659&#34;&gt;restored the previous values&lt;/a&gt; and additionally solved an issue where the emulated stick would always look down if the user
had multiple screens.
No drift, not even with the mouse!&lt;/p&gt;
&lt;h1 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h1&gt;
&lt;p&gt;A silent change that has the potential to improve performance considerably for users of old or low-end CPUs has been made by toastUnlimited.
In the past, we recommended our users to manually select the &lt;code&gt;Unsafe&lt;/code&gt; CPU accuracy option if their CPU lacked the FMA instruction set. This is not only confusing for users,
as it required them to know if their specific CPU model was compatible with FMA, but also relied on communication channels and guides properly explaining this to as many people
as possible. This, of course, resulted in several users not even knowing why games performed so poorly.&lt;/p&gt;
&lt;p&gt;Additionally, it was later discovered that using the whole Unsafe preset can cause precision issues affecting things like the shape of the character hitboxes in
&lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;. A better solution was needed.&lt;/p&gt;
&lt;p&gt;In response, toastUnlimited implemented &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6573&#34;&gt;the all new &lt;code&gt;Auto&lt;/code&gt; CPU accuracy setting!&lt;/a&gt;
Enabled by default for all users, this setting determines the need to use the &lt;code&gt;Unfuse FMA&lt;/code&gt; value automatically by reading if the FMA instruction set is supported by the CPU
in
use.
It also sets other values, for example &lt;code&gt;Faster ASIMD instructions&lt;/code&gt;, to boost the performance of 32-bit games.
Auto CPU accuracy has the potential to more than triple the performance of users running old or very low end CPUs!&lt;/p&gt;
&lt;p&gt;Thanks to work done by Morph, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6556&#34;&gt;now all default six Miis are available to the user&lt;/a&gt; in games that request them.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mii.png&#34; title=&#34; We&amp;#39;re still far away from offering full Mii customization, but at least more options are available now (Mario Kart 8 Deluxe)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/mii_hufdf4963a08bcb80c2c5a6a29837199fb_1101654_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; We&amp;#39;re still far away from offering full Mii customization, but at least more options are available now (Mario Kart 8 Deluxe)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; We&amp;#39;re still far away from offering full Mii customization, but at least more options are available now (Mario Kart 8 Deluxe)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/lioncash&#34;&gt;lioncash&lt;/a&gt;, our silent optimizer and code cleaner, found an issue with the new strings that report if a game is 32 or 64-bit.
Languages that read from right to left had issues with the initial implementation, and translating this string was disabled.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6574&#34;&gt;Now both issues are resolved!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After gathering more information on the behaviour of the FPS unlimiter, epicboy discovered that some games will crash when attempting to boot them unlimited.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6576&#34;&gt;Simply force-enabling the limiter at each game boot is enough to solve the issue.&lt;/a&gt;
Remember to unlock the framerate manually after you start a game!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; is back with another nice addition!
Certain game dumps contain several games inside them, and yuzu would default to only launching the first one in the list.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6582&#34;&gt;This change makes the necessary modifications so all games are properly listed.&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./games.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/games_hu2ce51e6f0d087fa0dae9c2238c5d5ad9_116016_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;command-line-shenanigans&#34;&gt;Command-Line Shenanigans&lt;/h2&gt;
&lt;p&gt;toastUnlimited performed a general &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6651&#34;&gt;update to the settings of the command-line version of yuzu&lt;/a&gt;, &lt;code&gt;yuzu-cmd&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The previous implementation had many options that were originally carried over from Citra and later deprecated, as well as others that were not read properly from the &lt;code&gt;ini&lt;/code&gt;
file, or were read but not written into the &lt;code&gt;ini&lt;/code&gt; file, etc.
In other words, there were a lot of things wrong with it, and some updating was in order to properly synchronize everything back with the settings present in the main
executable of yuzu.&lt;/p&gt;
&lt;p&gt;Since toastUnlimited was already working on &lt;code&gt;yuzu-cmd&lt;/code&gt;, he also went on and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6652&#34;&gt;fixed some problems related to Vulkan on Linux&lt;/a&gt;.
When this executable was launched, it wasn&amp;rsquo;t able to detect the window manager, and would proceed to exit instead of booting a game.&lt;/p&gt;
&lt;p&gt;The cause behind this problem lies in the fact that we recently updated how the SDL external library is being fetched for our Linux binaries, which came with a dummy
configuration file with invalid settings.
toastUnlimited made it so that we manually include the correct generated configuration file for building SDL instead of this dummy, while also adding some new logging
information to report when support for a window manager was not compiled.&lt;/p&gt;
&lt;p&gt;In a follow-up PR, toastUnlimited also added &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6693&#34;&gt;support for the full-screen mode settings&lt;/a&gt; to &lt;code&gt;yuzu-cmd&lt;/code&gt;.
Concurrently, he also fixed a bug that caused yuzu to render with the wrong resolution when in full-screen.&lt;/p&gt;
&lt;p&gt;Some time ago, we made it possible for yuzu to run in different full-screen modes, but these options were never added to the command-line version of our executable, which is
addressed in this PR.&lt;/p&gt;
&lt;h2 id=&#34;technical-changes&#34;&gt;Technical Changes&lt;/h2&gt;
&lt;p&gt;Meanwhile, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; was busy &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6551&#34;&gt;improving the management of kernel objects&lt;/a&gt;, drastically reducing the
amount of objects that kept dangling in memory after closing the emulation session.&lt;/p&gt;
&lt;p&gt;A dangling object refers to a stale object in memory that still has references, even though the object is no longer in use.&lt;/p&gt;
&lt;p&gt;In yuzu, kernel objects are implemented so that they keep track of themselves through a &lt;a href=&#34;https://en.wikipedia.org/wiki/Reference_counting&#34;&gt;reference counter&lt;/a&gt;, which keeps the
object alive for as long as they&amp;rsquo;re needed.
In other words, whenever a process needs an object, the reference counter is increased, and conversely, the reference is decreased when the object isn&amp;rsquo;t needed any more.&lt;/p&gt;
&lt;p&gt;Once this value reaches zero, the object is automatically deleted.
Previously, yuzu wasn&amp;rsquo;t doing a great job at maintaining this reference counter, as these kernel objects can be called by more more than just one process — i.e. the &amp;ldquo;owners&amp;rdquo;,
who are responsible for freeing the resource once they&amp;rsquo;re done with it.
In some cases, some of these owners weren&amp;rsquo;t properly freeing the object at all, which meant that the reference counter never reached zero, leaving this object &amp;ldquo;dangling&amp;rdquo; in
memory, even though the information became basically useless at this point.&lt;/p&gt;
&lt;p&gt;One of the many jobs of the kernel in the OS is to keep track of all the resources available in the system.
For this reason, these dangling objects were a problem, as the kernel calculates the number of resources that can be spawned based partly on the number of active objects in
memory.
With dozens of different kernel objects being created thousands of times between emulation sessions, this easily saturated the amount of objects that could be spawned due to yuzu hitting the resource limits much earlier than expected.
What&amp;rsquo;s more, since these objects stick around even after the emulation session is closed, this is a memory leak that would gradually increase for as long as the emulator is running a game — in other words, it would persist even if you stopped the emulation and started it again.&lt;/p&gt;
&lt;p&gt;bunnei took a long look at the problem and improved the situation, but there&amp;rsquo;s still ongoing work to make our implementation more robust and accurate.&lt;/p&gt;
&lt;p&gt;Blinkhawk also had his share of bug-fixing work, as he revisited the texture cache code related to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6553&#34;&gt;1D-to-2D texture overlaps&lt;/a&gt;, which fixes problems in &lt;code&gt;Monster Hunter Rise&lt;/code&gt; and both the the trial and final versions of &lt;code&gt;Monster Hunter Stories 2: Wings of Ruin&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Similarly to how two-dimensional textures are mapped to three dimensions, one-dimensional textures are a simple type of texture that is mapped as two-dimensional when rendered
on the screen.
The problem here lies in the fact that the GPU is unable to tell the difference between a one-dimensional texture and a two-dimensional texture with a height of one.&lt;/p&gt;
&lt;p&gt;As such, it was necessary to add support for them, so that they can be processed correctly by our texture cache.
With the changes in this PR, Blink made it so that they can be copied seamlessly, fixing this faulty behaviour.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./1d2dbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/1d2dbug_hu5f2f0b014db14a9edd270fcea91f4f7f_694602_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From Zero to Hero (MONSTER HUNTER STORIES 2: WINGS OF RUIN Trial Version)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./1d2dfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/1d2dfix_huf98d39d6d8c6c64338be4a3fdb0e6146_2791860_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From Zero to Hero (MONSTER HUNTER STORIES 2: WINGS OF RUIN Trial Version)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;From Zero to Hero (MONSTER HUNTER STORIES 2: WINGS OF RUIN Trial Version)&lt;/p&gt;


&lt;p&gt;If you&amp;rsquo;re interested in a more technical explanation about textures and their types, we recommend reading
&lt;a href=&#34;https://docs.microsoft.com/en-us/windows/win32/direct3d11/overviews-direct3d-11-resources-textures-intro&#34;&gt;the D3D11 documentation provided by Microsoft&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Project A.R.T.&lt;/code&gt;, the designated name for our revival of the resolution scaler, has started, and early results look very promising!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./art.png&#34; title=&#34; Getting blue-shelled at 4K doesn&amp;#39;t really help with anger management (Mario Kart 8 Deluxe)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2021/art_hude6a1ca24805b5f9f3db1624799073f1_10612972_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Getting blue-shelled at 4K doesn&amp;#39;t really help with anger management (Mario Kart 8 Deluxe)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Getting blue-shelled at 4K doesn&amp;#39;t really help with anger management (Mario Kart 8 Deluxe)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;There are many bugs to fix, optimizations to make, and tons of testing to do before we can confidently release this feature.
So for now, know that the scaler is returning!&lt;/p&gt;
&lt;p&gt;toastUnlimited &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6667&#34;&gt;started the preliminary work to get an operational Linux installer&lt;/a&gt; to accompany our current Windows one.
This also means offering precompiled builds for both Mainline and Early Access.
Once it is finished, Linux users will no longer need to be forced to build from the source (if they so prefer)!&lt;/p&gt;
&lt;p&gt;That’s all folks! As a certain AI singer would say, thank you for your kind attention. See you next time!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report June 2021</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/</link>
      <pubDate>Fri, 16 Jul 2021 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/</guid>
      <description>&lt;p&gt;Heya yuz-ers! Welcome to June’s progress report. This past month, we&amp;rsquo;ve had impressive CPU performance gains, the release of Project Reaper v1, critical audio fixes, an &amp;ldquo;unlimited&amp;rdquo; FPS toggle,
tons of kernel changes, UI improvements, and more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Heya yuz-ers! Welcome to June’s progress report. This past month, we&amp;rsquo;ve had impressive CPU performance gains, the release of Project Reaper v1, critical audio fixes, an &amp;ldquo;unlimited&amp;rdquo; FPS toggle,
tons of kernel changes, UI improvements, and more!&lt;/p&gt;
&lt;h2 id=&#34;project-texture-reaper&#34;&gt;Project Texture Reaper&lt;/h2&gt;
&lt;p&gt;An old debt we owed since the release of the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/&#34;&gt;Texture Cache Rewrite&lt;/a&gt; was &lt;code&gt;Project Texture Reaper&lt;/code&gt;, a &lt;code&gt;GPU Cache Garbage Collector&lt;/code&gt;,
originally started by &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; and finished by &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; with new and very important optimizations.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6465&#34;&gt;This garbage collector&lt;/a&gt; has the task of freeing VRAM space by removing the least used resources (textures and buffers),
targeting a range of 2 to 4GB of total used VRAM. This range has been decided by Blinkhawk after extensive testing.&lt;/p&gt;
&lt;p&gt;It’s worth mentioning that GPUs with 2GB of VRAM or less will be handled by either the driver (in OpenGL) or yuzu (in Vulkan), diverting resources to shared VRAM
(a portion of system RAM) as needed.
For performance reasons, we strongly recommend a GPU with 4GB of VRAM or more.&lt;/p&gt;
&lt;p&gt;While this is a critical feature for our Windows AMD Radeon and Intel GPU users that suffer from bad OpenGL performance and rendering, all GPU vendors benefit from it.
This makes it a safe option to use in most games going forward, with the exception of a few outliers: most notably &lt;code&gt;Super Mario Odyssey&lt;/code&gt; running in OpenGL.&lt;/p&gt;
&lt;p&gt;The end results speak for themselves. Games like &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; can now be played perfectly fine in either OpenGL or Vulkan.
In the following graphs, you can see the effects of Reaper in action. Our test system is running an Nvidia GeForce GTX 1650 SUPER with 4GB of VRAM, and the API in use is Vulkan (in order to avoid
any possible driver-level garbage collector).&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./reaper1.png&#34; title=&#34; Before&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/reaper1_huc2c40ecb21c83753983584953b9a7170_2764_683x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Before&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Before&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The above (Before) result has Reaper disabled just after starting the game. VRAM utilization quickly rises to the maximum 4GB available on the testing graphics card.
Once the available VRAM is consumed, the GPU driver will start to use system RAM as a fallback, continuing to pile up resources until the application crashes.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./reaper2.png&#34; title=&#34; After&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/reaper2_hu717b35fe3f1b4d1c88500d2706d271f9_1898_683x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; After&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; After&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The above (After) result has Reaper enabled. You can see how the GPU keeps a steady 2.5-2.6GB of VRAM utilization after several minutes of gameplay, until a sudden spike in use happens.
Reaper intervenes and VRAM utilization quickly returns to the average idle of 2.5GB.&lt;/p&gt;
&lt;p&gt;Reaper is available to all users in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced &amp;gt; Enable GPU Cache Garbage Collector&lt;/code&gt;.
Due to some issues found in &lt;code&gt;Super Mario Odyssey&lt;/code&gt;, the option is disabled by default. We plan to introduce a more robust version in the future.
It is expected to be enabled by default then.&lt;/p&gt;
&lt;p&gt;While previous &lt;code&gt;Disable Dynamic Resolution&lt;/code&gt; mods can now be disabled, we recommend keeping them, not only for picture quality purposes, but also to reduce unnecessary
resource use by avoiding creating new textures after each resolution change.&lt;/p&gt;
&lt;h2 id=&#34;one-does-not-simply-fastmem-into-windows&#34;&gt;One does not simply fastmem into Windows&lt;/h2&gt;
&lt;p&gt;This was a very exciting month as we were able to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6422&#34;&gt;implement &lt;code&gt;fastmem&lt;/code&gt;&lt;/a&gt;, a technique that provides a considerable performance boost by reducing the CPU load when accessing memory within yuzu.
Instead of emulating the Nintendo Switch&amp;rsquo;s Memory Management Unit (&lt;code&gt;MMU&lt;/code&gt;) through software, yuzu is now able to use the host PC &lt;code&gt;MMU&lt;/code&gt; to decode memory addresses. This reduces the latency and size of the code of this operation, allowing for a more efficient use of the instruction cache (used to store instructions within the CPU and speed up the fetching stage).&lt;/p&gt;
&lt;p&gt;Originally, implementing &lt;code&gt;fastmem&lt;/code&gt; in yuzu wasn&amp;rsquo;t considered an option as there was a technical limitation in the Windows OS, but thanks to some changes in the API introduced in Windows 10 version 1803, it finally became viable.
However, due to a lack of documentation of this feature (thanks Microsoft), our devs didn&amp;rsquo;t know they could use it.
We&amp;rsquo;d like to thank &lt;a href=&#34;https://github.com/BreadFish64/&#34;&gt;BreadFish64&lt;/a&gt; for informing our devs about this change, and &lt;a href=&#34;https://github.com/bylaws&#34;&gt;bylaws&lt;/a&gt; for &lt;a href=&#34;https://github.com/MicrosoftDocs/sdk-api/pull/799&#34;&gt;updating Microsoft&amp;rsquo;s documentation regarding this behaviour&lt;/a&gt;.
As previously mentioned, this feature is incompatible with Windows versions older than 1803. Using an older Windows version will cause yuzu to fallback to the old &lt;code&gt;MMU&lt;/code&gt; implementation — although this requirement could change in the future.
If you are interested in a more detailed explanation of how it works and the limitations that prevented its implementation, feel free to read the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-fastmem/&#34;&gt;dedicated article for fastmem&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./fastmem1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/fastmem1_hu49f9560544469445580c5ab129245522_90593_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Some of the measured performance gains, in FPS&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./fastmem2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/fastmem2_huf21840f7b36a43b8c316bf0189f61422_101568_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Some of the measured performance gains, in FPS&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Some of the measured performance gains, in FPS&lt;/p&gt;


&lt;p&gt;Shortly afterwards, &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastunlimited&lt;/a&gt; noticed there was a bug in our MinGW builds, resulting in &lt;code&gt;fastmem&lt;/code&gt; not working.
This was because the defined constant &lt;code&gt;MEM_RESERVE_PLACEHOLDER&lt;/code&gt;, a mask value used for reserving virtual memory as a placeholder, was manually imported for these builds, but incorrectly declared.
Thankfully, the fix was as simple as redeclaring it with the correct value, which Toast &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6494&#34;&gt;did in this PR&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;core-changes&#34;&gt;Core changes&lt;/h2&gt;
&lt;p&gt;Meanwhile, &lt;a href=&#34;https://github.com/MerryMage&#34;&gt;Merry&lt;/a&gt; tweaked dynarmic to add a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6499&#34;&gt;new unsafe CPU option&lt;/a&gt;. This new option optimizes performance for the 32-bit &lt;a href=&#34;https://en.wikipedia.org/wiki/ARM_architecture#Advanced_SIMD_(Neon)&#34;&gt;&lt;code&gt;ASIMD&lt;/code&gt; instructions&lt;/a&gt;, improving the performance in titles such as &lt;code&gt;Mario Kart 8 Deluxe&lt;/code&gt; and &lt;code&gt;Megadimension Neptunia VII&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Floating-point_arithmetic&#34;&gt;Floating-point numbers&lt;/a&gt; are represented as an exponent in base 2, and a fixed number of significant bits.
But there&amp;rsquo;s a limit to how small a number can be represented as a float, which depends on these significant bits, and the numbers that fall below this threshold are called &lt;a href=&#34;https://en.wikipedia.org/wiki/Denormal_number&#34;&gt;Denormal Numbers&lt;/a&gt;.
Depending on the CPU architecture or the instruction performed, these numbers may be ignored and considered zero (called &lt;code&gt;FZ&lt;/code&gt; mode, &amp;ldquo;flush to zero&amp;rdquo;), while others are capable of operating with these denormal values.
This is the case with these &lt;code&gt;ASIMD&lt;/code&gt; instructions, whose logic for floating-point operations is different from other instructions in the &lt;code&gt;ARM&lt;/code&gt; architecture.
To properly emulate the behaviour of these &lt;code&gt;ASIMD&lt;/code&gt; operations, which ignore the &lt;code&gt;FZ&lt;/code&gt; flag, it is necessary to modify the &lt;code&gt;MXCSR&lt;/code&gt; register — which is a very expensive operation — not only once, but twice (to set and unset this flag before and after every instruction).
With this change, it’s now possible to toggle this option on and lose some precision in favour of performance.&lt;/p&gt;
&lt;p&gt;A few days later, Merry followed up with the affirmation that yes, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6532&#34;&gt;Apple is indeed a POSIX system.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; continues to work on our kernel, and the highlights this month are related to fixes for a number of bugs in some Pokémon games.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6414&#34;&gt;By allocating &lt;code&gt;ServiceThreads&lt;/code&gt; per service handler instead of per session&lt;/a&gt;, a race condition that resulted in crashes and softlocks in &lt;code&gt;Pokken Tournament DX&lt;/code&gt; was fixed.&lt;/p&gt;
&lt;p&gt;In the same vein, a crash affecting &lt;code&gt;Pokémon Sword/Shield&lt;/code&gt; — also caused by a race condition — was fixed by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6428&#34;&gt;removing the service thread manager and refactoring the code to use weak pointers&lt;/a&gt;.
But this wasn&amp;rsquo;t the only kernel change solving a problem with this game.
bunnei investigated our session code and fixed another crash caused by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6441&#34;&gt;disconnected sessions trying to overwrite a cloned session&amp;rsquo;s handler&lt;/a&gt;.
The sessions were also being reserved more times than needed, causing yuzu to run out of available sessions.
For this reason, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6444&#34;&gt;he made sure to remove these redundant reservations&lt;/a&gt; to solve the problem.&lt;/p&gt;
&lt;p&gt;bunnei also noticed that the error check for &lt;code&gt;CancelSynchronization&lt;/code&gt; — used to manage threads — was missing and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6440&#34;&gt;added it on this PR&lt;/a&gt;.
This change allows yuzu to avoid a potential crash now, while also making the implementation more accurate.&lt;/p&gt;
&lt;p&gt;On top of these kernel changes, bunnei has also been implementing more of the changes introduced by version 12.X.X of the Switch’s firmware, allowing &lt;code&gt;DOOM Eternal&lt;/code&gt; to boot with its update 1.5 installed — although the game still requires more work in order to start rendering correctly.&lt;/p&gt;
&lt;h2 id=&#34;audio-changes&#34;&gt;Audio changes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; investigated the cause of the crackling and popping in the audio of some titles, and came to the conclusion that not enough audio samples were being fed into the sink in order to be played out in your headset or speakers.&lt;/p&gt;
&lt;p&gt;All games call the &lt;code&gt;RequestUpdateImpl()&lt;/code&gt; to send samples into the sink and also to pass other information, such as the &lt;code&gt;sampling rate&lt;/code&gt; of the audio signal and the &lt;code&gt;sample count&lt;/code&gt; (number of samples to be processed).
Some titles — particularly those running at fixed frame rate of 30 FPS — would call this function less frequently than their 60 FPS counterparts, which resulted in not enough audio samples being processed in time and sent into the sink, causing the aforementioned annoying popping.&lt;/p&gt;
&lt;p&gt;This is how &lt;code&gt;Hellblade: Senua&#39;s Sacrifice&lt;/code&gt; sounded with the old implementation:&lt;/p&gt;




&lt;audio preload=&#34;auto&#34; controls&gt;
    
        &lt;source src=&#34;./audiobug.mp3&#34; type=&#34;audio/mpeg&#34;&gt;
        &lt;a href=&#34;./audiobug.mp3&#34;&gt;Download the audio instead&lt;/a&gt;
    
&lt;/audio&gt;

&lt;p&gt;By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6498&#34;&gt;decoupling the processing and sending of audio samples from the update function&lt;/a&gt;, the games now will be able to call the update function every time they need it (a process that yuzu can&amp;rsquo;t control), while a separate audio thread will process the sample data and send it to the sink. With this new implementation, yuzu is now capable of scheduling the rate at which it will be sending this audio information based on the &lt;code&gt;sample rate&lt;/code&gt; and the &lt;code&gt;sample count&lt;/code&gt;. For example: if a game is using a 48 kHz &lt;code&gt;sample rate&lt;/code&gt; with a &lt;code&gt;sample count&lt;/code&gt; of 240, yuzu will now send the audio data to the sink at a rate of least 200 times per second — enough to keep the buffers full and prevent these problems with the audio.&lt;/p&gt;
&lt;p&gt;And this is &lt;code&gt;Hellblade: Senua&#39;s Sacrifice&lt;/code&gt; again, now with the current implementation merged:&lt;/p&gt;




&lt;audio preload=&#34;auto&#34; controls&gt;
    
        &lt;source src=&#34;./audiofix.mp3&#34; type=&#34;audio/mpeg&#34;&gt;
        &lt;a href=&#34;./audiofix.mp3&#34;&gt;Download the audio instead&lt;/a&gt;
    
&lt;/audio&gt;

&lt;p&gt;This change fixed the slow audio in titles such as &lt;code&gt;ARK&lt;/code&gt;, &lt;code&gt;Bulletstorm&lt;/code&gt;, and &lt;code&gt;Megademension Neptunia VII&lt;/code&gt;, while also — on top of improving the quality — solving the audio softlocks in &lt;code&gt;Donkey Kong Country: Tropical Freeze&lt;/code&gt; and &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/xc2_hu942eafff102b48ff01c23dfb6ae46666_3342111_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Better audio and stable gameplay! (Xenoblade Chronicles 2 &amp;amp; Donkey Kong Country: Tropical Freeze)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./dktf.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/dktf_hu19a82fa91ab3a793cc8c02421fdbaf41_2843884_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Better audio and stable gameplay! (Xenoblade Chronicles 2 &amp;amp; Donkey Kong Country: Tropical Freeze)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Better audio and stable gameplay! (Xenoblade Chronicles 2 &amp;amp; Donkey Kong Country: Tropical Freeze)&lt;/p&gt;


&lt;h2 id=&#34;graphical-improvements&#34;&gt;Graphical improvements&lt;/h2&gt;
&lt;p&gt;Let’s start with something nice, &lt;code&gt;Unlimited FPS&lt;/code&gt;!
&lt;a href=&#34;https://github.com/ameerj&#34;&gt;Epicboy&lt;/a&gt; implemented a toggle that
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6475&#34;&gt;allows the rendering service, nvflinger, to disable the buffer swap interval limit,&lt;/a&gt; allowing the GPU to process frames as soon
as they are available, resulting in no FPS limit on games that allow this behaviour.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./unlimitedfps.png&#34; title=&#34; Beat my framerate!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/unlimitedfps_hu61f8e510487c71b80f206d1958dc5c35_1264031_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Beat my framerate!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Beat my framerate!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;A default hotkey for toggling the FPS limit was also added, say hello to &lt;code&gt;Ctrl + U&lt;/code&gt;!
For the best results, &lt;code&gt;Vertical Synchronization&lt;/code&gt; (or vSync) should be disabled in the GPU driver control panel, otherwise games will be constrained by the refresh rate of the monitor.
Keep in mind, not all games like the setting, some will ignore it, some will not behave well (running faster for example), and some will outright break.
Case-by-case user testing applies.&lt;/p&gt;
&lt;p&gt;Some examples of games that have full dynamic FPS support are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Hollow Knight&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DRAGON QUEST BUILDERS 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Dragon Quest XI S: Echoes of an Elusive Age - Definitive Edition&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WORLD OF FINAL FANTASY MAXIMA&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FINAL FANTASY XV POCKET EDITION HD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Hungry Shark® World&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MONSTER HUNTER STORIES 2: WINGS OF RUIN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NEO: The World Ends with You&lt;/code&gt; demo&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MISTOVER&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Crash™ Team Racing Nitro-Fueled&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Crash Bandicoot™ N. Sane Trilogy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&amp;hellip;and many more&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ASTC texture decoding is a complex topic when it comes to emulation, as no desktop graphics card has the required hardware support needed to process these heavily compressed textures.
The only exception is Intel with their integrated HD Graphics and UHD Graphics series.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2021/&#34;&gt;In the past,&lt;/a&gt; epicboy implemented a way to accelerate ASTC texture decoding via the use of &lt;code&gt;Compute Shaders&lt;/code&gt;,
improving decoding performance considerably thanks to taking advantage of the great computing power of modern GPUs.&lt;/p&gt;
&lt;p&gt;The issue is that in some games, &lt;code&gt;Astral Chain&lt;/code&gt; for example, a synchronization issue caused yuzu to try to access a texture before its decoding was finished, resulting in
driver panics and application crashes.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6496&#34;&gt;Implementing various optimizations and enhancements to the GPU accelerated decoder&lt;/a&gt; solved those crashes, even on a simple GT
730, a card 41.5x times weaker than an RTX 2080 SUPER in compute performance.&lt;/p&gt;
&lt;p&gt;Now that &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/&#34;&gt;Project Hades&lt;/a&gt; is finished, there are plans to implement performance optimizations on the ASTC GPU accelerated decoder.&lt;/p&gt;
&lt;p&gt;Prior to this work, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6464&#34;&gt;a toggle to disable the GPU accelerated decoder&lt;/a&gt; was added for debugging purposes.
It’s no longer needed, but if anyone is curious about how much of a difference decoding with the CPU makes, the option is in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt;  Accelerate ASTC texture decoding&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6469&#34;&gt;avoiding creating image views for blits for different bytes per block, &lt;/a&gt; Rodrigo solved crashes experienced with Unreal Engine 4
games on Vulkan.&lt;/p&gt;
&lt;p&gt;Speaking of blits, &lt;a href=&#34;https://github.com/vonchenplus&#34;&gt;vonchenplus&lt;/a&gt; found that our previous way of handling out of bounds texture blits wasn’t accurate enough, causing
rendering glitches in games like &lt;code&gt;DRAGON QUEST III The Seeds of Salvation&lt;/code&gt;.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6531&#34;&gt;Adding an offset to the source texture address&lt;/a&gt; puts this bug to rest.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./blitbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/blitbug_hu39c0570f86f645c5644ff17dcb14865d_919831_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more acne! (DRAGON QUEST III: The Seeds of Salvation)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./blitfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/blitfix_hub483d658f20cc32f4ef37558b813d7a0_908856_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more acne! (DRAGON QUEST III: The Seeds of Salvation)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;No more acne! (DRAGON QUEST III: The Seeds of Salvation)&lt;/p&gt;


&lt;p&gt;Some games running in Vulkan, like &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; or &lt;code&gt;A Hat in Time&lt;/code&gt;, can cause loops decoding textures, resulting in &lt;code&gt;Out of Bounds&lt;/code&gt; access on an array,
potentially leading to a crash, and breaking our Flatpak support.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6410&#34;&gt;As preemptive work&lt;/a&gt;, &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; added a &lt;code&gt;break&lt;/code&gt; safeguard, and now Flatpaks work as intended.
Having less crashes is always better, right?&lt;/p&gt;
&lt;h2 id=&#34;general-changes-and-bugfixes&#34;&gt;General changes and bugfixes&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;discord-rpc&lt;/code&gt;, the submodule in charge of handling Discord’s &lt;code&gt;Rich Presence&lt;/code&gt; “Now Playing” feature, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6484&#34;&gt;was updated&lt;/a&gt; by
&lt;a href=&#34;https://github.com/CaptV0rt3x&#34;&gt;Vortex&lt;/a&gt; to the last version before it was deprecated in favour of a closed-source alternative named &lt;code&gt;GameSDK&lt;/code&gt; which, of course, we can’t use.
Since &lt;code&gt;discord-rpc&lt;/code&gt; still is compatible with &lt;code&gt;Rich Presence&lt;/code&gt;, this update should provide more stable reporting in your Discord Status.&lt;/p&gt;
&lt;p&gt;Vortex also &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6486&#34;&gt;updated &lt;code&gt;httplib&lt;/code&gt;&lt;/a&gt;, removing the need for previous fixes, solving issues with token verification and
Compatibility Report uploading.&lt;/p&gt;
&lt;p&gt;We previously mentioned Flatpak support. &lt;a href=&#34;https://github.com/liushuyu&#34;&gt;liushuyu&lt;/a&gt; requested that &lt;a href=&#34;https://flathub.org/home&#34;&gt;Flathub&lt;/a&gt; add yuzu to their repositories,
officially providing &lt;a href=&#34;https://flathub.org/apps/details/org.yuzu_emu.yuzu&#34;&gt;another installation option&lt;/a&gt; for our Linux users.&lt;/p&gt;
&lt;p&gt;Maide implemented the &lt;code&gt;GetAudioOutPlayedSampleCount&lt;/code&gt; service, making &lt;code&gt;Ninja Gaiden&lt;/code&gt; series games playable!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ninja1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/ninja1_hu962e34b4960823c11060fd1253c12f5d_1773010_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ninja Gaiden series&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ninja2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/ninja2_hu7cafcfc5f52f308f61d317471e3e3cf0_1939922_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ninja Gaiden series&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ninja3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/ninja3_hu41af33556bbd080be7c63937c6bc289e_1636631_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ninja Gaiden series&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Ninja Gaiden series&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; has been having fun rewriting how analog input is handled by yuzu.
The old method handled each analog joystick in a separate thread, periodically updating the angle held by the user. This is not only imprecise, but also slower and was
found to cause data races, eventually leading to random crashes.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6389&#34;&gt;By removing the need for separate threads, and using timestamps the game can consult at its own request&lt;/a&gt;, the data race is
avoided. This eliminates the crashes, results in considerably smoother movement, and lowers resource utilization, helping performance.
A victory in all scenarios!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6450&#34;&gt;Thanks to changes made upstream&lt;/a&gt;, &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; was able to update the &lt;code&gt;SDL&lt;/code&gt; version in use, resolving
crashes experienced by Linux users right when opening yuzu.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/clementgallet&#34;&gt;kilaye&lt;/a&gt; has been giving us a hand in an often forgotten area of yuzu, the &lt;code&gt;yuzu-cmd&lt;/code&gt; binary, which is intended as an SDL2 alternative to
the most commonly used &lt;code&gt;yuzu&lt;/code&gt; Qt interface binary.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6412&#34;&gt;OpenGL wasn’t rendering&lt;/a&gt; due to recent changes applied, and a bad initialization of
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6411&#34;&gt;touch_from_button&lt;/a&gt; was causing crashes.
All were fixed thanks to kilaye’s work.&lt;/p&gt;
&lt;p&gt;While on an SDL2 rush, kilaye also &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6418&#34;&gt;implemented an SDL2 audio backend&lt;/a&gt; as an alternative to our default cubeb backend.
More work is needed to refine its performance and end-results, but having an easy-to-maintain, multi-platform backend is never a bad idea.&lt;/p&gt;
&lt;h2 id=&#34;filesystem-changes&#34;&gt;Filesystem changes&lt;/h2&gt;
&lt;p&gt;toastUnlimited has been working along with &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;morph&lt;/a&gt; to improve the experience of using the
&lt;a href=&#34;https://github.com/ultimate-research/UltimateModManager&#34;&gt;Ultimate Mod Manager&lt;/a&gt; application with yuzu — a tool that allows one to mod &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.
First, toast added an option in the context menu of a game to support &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6471&#34;&gt;dumping the RomFS to the SDMC subdirectory&lt;/a&gt;, while morph
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6472&#34;&gt;made the necessary changes&lt;/a&gt; for this setup to work.&lt;/p&gt;
&lt;p&gt;New users intending to use UMM only need to right click the game in yuzu’s game list and select &lt;code&gt;Dump RomFS &amp;gt; Dump RomFS to SDMC&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./umm.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/umm_hu1335599702a043b764226efdec618dd6_21817_526x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6460&#34;&gt;working on new debug options for the filesystem emulation&lt;/a&gt;, Morph also fixed certain DLCs that used to make
&lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; fail to load at boot with the previous implementation.
You can now run the game without major issues, even when fully updated.&lt;/p&gt;
&lt;p&gt;When dumping RomFS to disk, there has to be enough free space. Morph
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6451&#34;&gt;added a check to avoid users trying to dump without enough room.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Due to a bug in the Microsoft Visual C++ (or just MSVC) compiler, a crash could happen when trying to access folders recursively in order to load game dumps in yuzu’s game
list.
Morph fixed it by replacing the &lt;code&gt;recursive_directory_iterator&lt;/code&gt; class &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6448&#34;&gt;with the &lt;code&gt;directory_iterator&lt;/code&gt; class&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;Some changes have been done to the title bar by epicboy.
To begin with, games will now &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6535&#34;&gt;display if they are built for the 32-bit or 64-bit instruction set.&lt;/a&gt;
This will help determine when &lt;code&gt;Unsafe CPU&lt;/code&gt; should be used to get the previously mentioned performance optimization.&lt;/p&gt;
&lt;p&gt;Additionally, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6502&#34;&gt;the GPU vendor will now be displayed too.&lt;/a&gt;
This is not only for debugging purposes or providing better support to users, it also clarifies which driver is in use on systems running multiple GPUs.
One would think there are only 3 vendors per API, but that’s far from reality.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6502/files&#34;&gt;By checking the list&lt;/a&gt;, you can see there are many different reported vendors for different needs, including CPU
software rendering drivers.&lt;/p&gt;
&lt;p&gt;For their first Pull Request with yuzu, &lt;a href=&#34;https://github.com/OZtistic&#34;&gt;OZ&lt;/a&gt;
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6514&#34;&gt;corrected the size of the Per-Game configuration window and removed the useless “help” button&lt;/a&gt; in the top right corner.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./oz.png&#34; title=&#34; Thanks OZ!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/oz_hu706f4dd0f39c6115fa56376b6e7b3f7c_223083_843x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Thanks OZ!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Thanks OZ!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;toastUnlimited added a new option to the right click context menu on any game in yuzu’s game list.
You can now &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6426&#34;&gt;right click a game and launch it&lt;/a&gt; with any custom per-game configuration you may have, or with
the current global settings.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./start.png&#34; title=&#34; Quick way to test two different sets of settings&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/start_hu6d057bc1f9155f0d2ee8b2b19fbf3e1a_17998_292x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Quick way to test two different sets of settings&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Quick way to test two different sets of settings&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Column sizes in the game list used to constantly resize during updates or DLC installation to NAND, resulting in an extreme width that made the game list uncomfortable to use.
Maide &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6402&#34;&gt;put a stop to this&lt;/a&gt;, improving the quality of life of our UI.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6413&#34;&gt;Kewlan&lt;/a&gt; is back at it, this time
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6413&#34;&gt;preventing users from inputting invalid characters in text windows,&lt;/a&gt; for example when creating a new Input Profile.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./text.png&#34; title=&#34; No more 1337 talk&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2021/text_hudc6d6b8a97aecc9c9bed3cadf0048f6c_5608_285x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; No more 1337 talk&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; No more 1337 talk&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;With Project Hades &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/&#34;&gt;(our new shader decompiler)&lt;/a&gt;, Rodrigo continues with his crazy experiments, bunnei has yet more kernel changes in the oven, and german77 and Morph continue
to work on their top secret projects.&lt;/p&gt;
&lt;p&gt;More GPU related optimizations are underway, and users should keep a keen eye on the horizon.&lt;/p&gt;
&lt;p&gt;That’s all folks! As always, we hope you keep enjoying yuzu.
See you next month!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>New Feature Release - Shader Decompiler Rewrite</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-hades/</link>
      <pubDate>Sat, 10 Jul 2021 03:40:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-hades/</guid>
      <description>&lt;p&gt;Greetings, yuz-ers!
The long awaited day is finally here.
We are very excited to present to you, &lt;strong&gt;Project Hades&lt;/strong&gt;, our shader decompiler rewrite!
This massive update includes huge performance improvements, countless bug fixes, and more.
Let&amp;rsquo;s get started!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Greetings, yuz-ers!
The long awaited day is finally here.
We are very excited to present to you, &lt;strong&gt;Project Hades&lt;/strong&gt;, our shader decompiler rewrite!
This massive update includes huge performance improvements, countless bug fixes, and more.
Let&amp;rsquo;s get started!&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Project Hades is now available in the latest &lt;a href=&#34;https://yuzu-mirror.github.io/help/early-access/&#34;&gt;yuzu Early Access build&lt;/a&gt;.
As always, we ask that you test various games with these builds and if you encounter any issues, bugs, or crashes, please reach out to us via the &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord&lt;/a&gt; Patreon channels.&lt;/p&gt;
&lt;article class=&#34;message is-warning&#34;&gt;&lt;div class=&#34;message-header&#34;&gt;&lt;p&gt;Notice&lt;/p&gt;&lt;/div&gt;&lt;div class=&#34;message-body&#34;&gt;&lt;p style=&#34;color:white&#34;&gt;The entire shader generation process has been redesigned from the ground up, thus existing shader caches have been invalidated. Users will need to build their shader caches again, from scratch, with Project Hades.&lt;/p&gt;&lt;/div&gt;&lt;/article&gt;
&lt;h1 id=&#34;what-is-project-hades-&#34;&gt;What is Project Hades ?&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Project Hades&lt;/strong&gt; is the codename for our shader decompiler code rewrite, although at this point it&amp;rsquo;s become much more than that.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For those who don&amp;rsquo;t know what a shader decompiler is, you&amp;rsquo;ll need to understand the process of how games render (show/display) anything.
&lt;a href=&#34;https://en.wikipedia.org/wiki/Shader&#34;&gt;Shaders&lt;/a&gt; are special programs that are coded to perform various tasks on GPUs, typically relating to rendering graphics on display.
Shaders are usually written in high-level shader languages compatible with the graphics API in use - e.g. &lt;a href=&#34;https://en.wikipedia.org/wiki/OpenGL_Shading_Language&#34;&gt;OpenGL Shading Language (GLSL)&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Standard_Portable_Intermediate_Representation&#34;&gt;Standard Portable Intermediate Representation - V (SPIR-V)&lt;/a&gt;, and &lt;a href=&#34;https://en.wikipedia.org/wiki/ARB_assembly_language&#34;&gt;OpenGL ARB Assembly language (GLASM)&lt;/a&gt;.
Games often use hundreds or thousands of these shaders to tell the GPU what to render and how to do it.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./yuzu_gpu.png&#34; title=&#34; yuzu Shader Generation&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/yuzu_gpu_hu92801aac6d0367ff5db200297e11d194_1208513_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; yuzu Shader Generation&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; yuzu Shader Generation&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;In the case of Switch games, they also use shaders to render graphics on the Switch itself.
However, since these shaders are precompiled for the Switch&amp;rsquo;s GPU, yuzu cannot use them directly to render graphics using the host GPU (User&amp;rsquo;s GPU).
Therefore, yuzu first decompiles these shaders into something called &lt;a href=&#34;https://en.wikipedia.org/wiki/Intermediate_representation&#34;&gt;IR, or Intermediate Representation&lt;/a&gt;, which is then used to generate the high-level &lt;strong&gt;GLSL/SPIR-V/GLASM&lt;/strong&gt; shaders used by the graphics APIs and drivers to render games on the host GPU.&lt;/p&gt;
&lt;p&gt;Shader decompilation is the process of translating the guest (in this case, the Nintendo Switch) GPU machine code to a representation that can be compiled on the host (User&amp;rsquo;s PC) GPU.
Shader compilation is the process of taking that representation and sending it to the host GPU driver to get compiled and then executed on the user&amp;rsquo;s GPU.&lt;/p&gt;
&lt;h2 id=&#34;goals&#34;&gt;Goals&lt;/h2&gt;
&lt;p&gt;The main goal of Project Hades was to redesign the decompiler and shader generation code with a focus on simplicity and accuracy.
It aimed to make both decompilation and compilation faster overall, thus improving the performance.
Rewriting the decompiler would allow us to audit it through &lt;a href=&#34;https://en.wikipedia.org/wiki/Unit_testing&#34;&gt;unit testing&lt;/a&gt;, following a design similar to &lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;dynarmic&lt;/a&gt;, allowing proper program analysis and optimizations over fast-to-emit intermediate representation.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Dark%20Souls.png&#34; title=&#34; Dark Souls&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Dark%20Souls_hu4bb822bd111f7f599597b05c187afbd8_6871744_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Dark Souls&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Dark Souls&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Dragon%20Quest%20XI.png&#34; title=&#34; Dragon Quest XI&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Dragon%20Quest%20XI_hub7a69653e5b2cd6e5045fc37a6856eda_9613705_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Dragon Quest XI&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Dragon Quest XI&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Taking a leaf from dynarmic&amp;rsquo;s book, the developers opted to use an &lt;a href=&#34;https://en.wikipedia.org/wiki/Static_single_assignment_form&#34;&gt;SSA representation&lt;/a&gt;, as it would work very nicely with the &lt;code&gt;SPIR-V&lt;/code&gt; IR used for shaders, thanks to its native support for SSA.
As for the unit testing, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; wrote &lt;a href=&#34;https://github.com/ReinUsesLisp/nxgpucatch&#34;&gt;homebrew tests for the hardware&lt;/a&gt; which helped the developers accurately emulate hardware behaviour.&lt;/p&gt;
&lt;p&gt;But this was just the beginning.
Over the course of a few months, the developers would go on to face and overcome many hurdles with the code rewrite and the Project&amp;rsquo;s goals would expand to accommodate much more.&lt;/p&gt;
&lt;h1 id=&#34;overview-of-changes&#34;&gt;Overview of changes&lt;/h1&gt;
&lt;p&gt;Project Hades was a collaborative effort from developers &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt;, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;, and &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt;.
They distributed the required work among themselves and spent countless hours in coding, unit testing, game testing, and performance validation.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; mainly worked on implementing miscellaneous instructions, including texture sampling instructions required for decompilation.
He added support for Nvidia&amp;rsquo;s &lt;code&gt;VertexA shader stage&lt;/code&gt;, a non-standard shader stage available on Nvidia hardware that is executed before the regular &lt;code&gt;VertexB shader stage&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This allowed games such as &lt;code&gt;Catherine: Full Body&lt;/code&gt;, &lt;code&gt;Bravely Default 2&lt;/code&gt;, and &lt;code&gt;A Hat in Time&lt;/code&gt; to render graphics for the first time.
&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; also fixed an issue in yuzu&amp;rsquo;s texture cache relating to the texture streaming used in Unreal Engine 4 (UE4) games, resolving many of their rendering issues.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Due to a race condition in our GPU Emulation, to render Catherine Full Body correctly, you may need to disable Asynchronous GPU Emulation.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Catherine.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Catherine_hu4b3214fd3ec49dbdfb814eca3113b3f0_3119614_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Catherine: Full Body&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Catherine_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Catherine_2_hu9896ecf641cbf42daab0bc11f20973bb_5294932_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Catherine: Full Body&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Catherine: Full Body&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Hat%20in%20Time.png&#34; title=&#34; A Hat in Time&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Hat%20in%20Time_hua599f4cf11a03ed570fb38ae3ffc065d_4904946_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; A Hat in Time&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; A Hat in Time&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Bravely_Default_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Bravely_Default_2_hu96f0056f921c1fc040e8b513badda00c_4860834_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Bravely Default II&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Bravely_Default_2_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Bravely_Default_2_2_hueced9db7a9f39a8767d147b99f8d7e10_4479365_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Bravely Default II&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Bravely Default II&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; implemented almost all of the arithmetic, logical, and floating-point instructions, as well as developing the entire GLSL backend.
&lt;strong&gt;GLSL&lt;/strong&gt; is the default backend, when the OpenGL API is selected in the yuzu configuration settings.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;GLSL&lt;/strong&gt; backend rewrite was not part of the initial plan for Project Hades, as the developers only intended to work on &lt;strong&gt;GLASM&lt;/strong&gt; and &lt;strong&gt;SPIR-V&lt;/strong&gt;, but it was later included due to how buggy and slow some OpenGL &lt;strong&gt;SPIR-V&lt;/strong&gt; compilers are.
That said, some OpenGL drivers benefit greatly from the use of &lt;strong&gt;SPIR-V&lt;/strong&gt; shaders, so the choice of using &lt;strong&gt;SPIR-V&lt;/strong&gt; on OpenGL is left as an experimental setting.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Mario%20and%20rabbids.png&#34; title=&#34; Mario and Rabbids&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Mario%20and%20rabbids_huec273303423fde9f672c2636430d328a_7003814_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Mario and Rabbids&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Mario and Rabbids&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./monchrome_hades.png&#34; title=&#34; Monochrome&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/monchrome_hades_huece621bca4f925b0ed80429fead088d8_1647911_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Monochrome&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Monochrome&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; designed the overall structure to support these changes, and developed multiple optimization passes to improve performance wherever possible.
In addition to that, he rewrote the entire &lt;strong&gt;GLASM&lt;/strong&gt; (GL Assembly) backend, and integrated the existing frontend rasterizers with the new backends.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;GLASM&lt;/strong&gt; backend is a special path where the decompiled shaders (&lt;a href=&#34;https://en.wikipedia.org/wiki/Assembly_language&#34;&gt;assembly language&lt;/a&gt;) skip the shader compilation steps on the host GPU, thus improving the performance.
Unfortunately, &lt;strong&gt;GLASM&lt;/strong&gt; is only supported by Nvidia GPUs, limiting the scope of this performance boost.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;Crash%20Bandicoot%204.png&#34; title=&#34; Crash Bandicoot 4&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Crash%20Bandicoot%204_hu5e6d6507231ee50224f88d4e3c9fe34f_4705630_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Crash Bandicoot 4&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Crash Bandicoot 4&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;world-of-ff-hades.jpg&#34; title=&#34; World of Final Fantasy&#34;&gt;&lt;img src=&#34;world-of-ff-hades.jpg&#34; alt=&#34; World of Final Fantasy&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; World of Final Fantasy&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While these were the major changes, there were also many other minor improvements.
Changing how the shaders are generated also meant changing the way shader information is presented to the renderers.
This was overhauled for simplicity, which led to some new features, and ease of caching.&lt;/p&gt;
&lt;h2 id=&#34;vulkan-pipeline-caching&#34;&gt;Vulkan Pipeline Caching&lt;/h2&gt;
&lt;p&gt;All the information required to generate pipelines from scratch now gets cached to disk, thereby removing shader stutter almost completely on Vulkan.
In contrast, OpenGL can still encounter  shader stutters due to unpredictable or undocumented state changes.
Vulkan still can have minor stutters when new shaders are detected, but it hasn&amp;rsquo;t been noticeable during our testing.&lt;/p&gt;
&lt;h2 id=&#34;asynchronous-pipeline-creation&#34;&gt;Asynchronous Pipeline Creation&lt;/h2&gt;
&lt;p&gt;yuzu already supported &lt;code&gt;Asynchronous Shaders&lt;/code&gt;, where draw calls are skipped (rendering is paused) until the shader, or in Vulkan&amp;rsquo;s case, the pipeline, is compiled.
This is nice in some cases because it allows for more consistent play sessions, minimizing stutter from shader compilations.
But this also has a big drawback: it introduces graphical glitches, which are sometimes persistent throughout the play session.
While this is not an issue after restarting emulation and having the shaders cached, it&amp;rsquo;s not optimal.&lt;/p&gt;
&lt;p&gt;A better way to implement this for Vulkan was to build pipelines in parallel without skipping draw calls.
In other words, continue processing GPU commands while the pipelines are being built.
This allows building one pipeline per CPU thread (minus one) in parallel while the game is executing.
This results in reduced stutter that is, in a way, similar to skipping draw calls.&lt;/p&gt;
&lt;article class=&#34;message&#34;&gt;&lt;div class=&#34;message-header&#34;&gt;How does this work?&lt;/div&gt;&lt;div class=&#34;message-body&#34;&gt;
To understand why this is possible, it&#39;s necessary to explain how yuzu&#39;s Vulkan command recording works. Commands are recorded and deferred to a separate thread for processing (sometimes called the &#34;Command Submission (CS) thread&#34;).&lt;br&gt;
&lt;br&gt;
This thread runs in parallel to the main GPU thread. This means the CS thread can build the pipelines sequentially while the main GPU thread continues its execution, periodically pushing new commands to the CS thread.&lt;br&gt;
&lt;br&gt;
Sadly, this is not possible at the moment on OpenGL, because drivers wait more often for their CS thread than yuzu on its own CS thread.
It may be possible if we optimize the whole OpenGL backend to avoid &#34;glGen*&#34; and &#34;glGetSynciv&#34; calls within a draw call.
&lt;/div&gt;&lt;/article&gt;
&lt;h2 id=&#34;even-more&#34;&gt;Even more!!&lt;/h2&gt;
&lt;p&gt;On top of these big improvements, we also have many minor optimizations. Some notable ones are listed below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Project Hades keeps track of the number of bytes used in constant buffers and passes this information to the buffer cache. This reduces the number of uploaded bytes on some titles, thus improving performance.&lt;/li&gt;
&lt;li&gt;Vulkan command submission to the GPU now happens on the separate CS thread, increasing performance by 1 to 2 FPS in &lt;code&gt;Super Mario Odyssey&lt;/code&gt;, although presentation to screen is still being synchronized.&lt;/li&gt;
&lt;li&gt;Synchronization for &lt;a href=&#34;https://www.khronos.org/opengl/wiki/Buffer_Texture&#34;&gt;texture buffers&lt;/a&gt; between the texture cache and the buffer cache, fixing some crashes on Koei Tecmo games.&lt;/li&gt;
&lt;li&gt;Generate specialized Vulkan descriptor pools, sharing pools within similar pipelines. This reduces memory consumption and boot time on most drivers, saving ~700 MiB of VRAM on AMD compared to the previous approach.&lt;/li&gt;
&lt;li&gt;Usage of &lt;a href=&#34;https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VK_KHR_push_descriptor.html&#34;&gt;VK_KHR_push_descriptor&lt;/a&gt; when available. Reduces the overhead of updating descriptor sets on Nvidia by 57% and by 10% on Intel (measured on &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; 1v1 on Final Destination). It also reduces memory consumption but this hasn&amp;rsquo;t been measured.&lt;/li&gt;
&lt;li&gt;Usage of &lt;a href=&#34;https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VK_EXT_conservative_rasterization.html&#34;&gt;VK_EXT_conservative_rasterization&lt;/a&gt; and &lt;a href=&#34;https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VK_EXT_provoking_vertex.html&#34;&gt;VK_EXT_provoking_vertex&lt;/a&gt; when available.&lt;/li&gt;
&lt;li&gt;Use specialized &amp;ldquo;pre-draw&amp;rdquo; functions per pipeline to reduce unnecessary work.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Texture Reaper&lt;/code&gt;, which cleans the least used resources in your VRAM to reduce VRAM usage. We will cover this and others, in detail, in our next progress report.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;graphical-fixes&#34;&gt;Graphical fixes&lt;/h1&gt;
&lt;p&gt;Thanks to the redesign and reimplementation of our entire shader generation code, the developers were able to investigate and identify the causes for graphical glitches in many games.
In fact, some games like &lt;code&gt;Yoshi&#39;s Crafted World&lt;/code&gt;, &lt;code&gt;Trials of Mana&lt;/code&gt;, &lt;code&gt;Minecraft Dungeons&lt;/code&gt;, and many others, now render almost perfectly.
&lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; is now fully playable on Vulkan.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./BOTW_Vulkan.png&#34; title=&#34; Breath of the Wild (fixed runes in Vulkan)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/BOTW_Vulkan_hu41cc6fb4552daa198aad01711681b8b8_5282307_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Breath of the Wild (fixed runes in Vulkan)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Breath of the Wild (fixed runes in Vulkan)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw-ea.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/botw-ea_hu3d00fdf11e56b3c643c6c4052e5fe98b_2179212_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw-hades.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/botw-hades_hucad959a175ecaec1f8864972593763e6_2418285_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda: Breath of the Wild (EA Vs. HADES)&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Yoshi%27s%20Crafted%20World.png&#34; title=&#34; Yoshi&amp;#39;s Crafted World&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Yoshi%27s%20Crafted%20World_hu1dee2d59b199ca1e1353d7909bba9f99_5373685_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Yoshi&amp;#39;s Crafted World&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Yoshi&amp;#39;s Crafted World&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./bd2.png&#34; title=&#34; Bravely Default II&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/bd2_hufa2eee2f863e015dcb4b8354a8f38746_3106185_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Bravely Default II&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Bravely Default II&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./minecraft_dungeons.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/minecraft_dungeons_huae9e9fb51969176748db0d5de4e62076_2959134_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Minecraft Dungeons&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Minecraft_Dungeons_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Minecraft_Dungeons_2_hucb574f453fe9b21308f266bdbd9ec57e_4776520_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Minecraft Dungeons&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Minecraft Dungeons&lt;/p&gt;


&lt;p&gt;The broken bloom, causing sand and fog in &lt;code&gt;Super Mario Odyssey&lt;/code&gt; to render incorrectly, is now fixed!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo_sand_ea.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/smo_sand_ea_hu5eb1f3af53cb9e0d79864366b14d46fa_3155555_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo_sand_hades.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/smo_sand_hades_hu687e40c3f6796522dab56f4bb70579b0_2855700_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo_fog_ea.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/smo_fog_ea_hu927726ef8b6d14845d96e30b56fbe5a1_4521519_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo_fog_hades.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/smo_fog_hades_hu804cbb5b15c50c0ab02a7773d0d1eac5_4292521_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey (EA Vs. HADES)&lt;/p&gt;


&lt;p&gt;Thanks to the implementation of tessellation shaders, the sand in &lt;code&gt;Luigi&#39;s Mansion 3&lt;/code&gt; is no longer broken!

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Luigis%20Mansion%203.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Luigis%20Mansion%203_hudf7fb30f9a91fd0d8d5068b8ed345dd1_3153371_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;Various graphical glitches, crashes and general stability issues in &lt;code&gt;Fire Emblem: Three houses&lt;/code&gt;, &lt;code&gt;Hyrule Warriors: Age of Calamity&lt;/code&gt;, &lt;code&gt;Marvel Ultimate Alliance 3&lt;/code&gt;, &lt;code&gt;Persona 5 Strikers&lt;/code&gt;, and &lt;code&gt;Xenoblade Chronicles&lt;/code&gt; were also fixed.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Fire%20emblem%20Three%20houses.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Fire%20emblem%20Three%20houses_hu8f39cdf45ad3d981dad8d7e3b9dd0455_7364437_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fire Emblem: Three Houses&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./feth1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/feth1_hu126c279a2868b535fffa25f7aca636e9_2720351_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fire Emblem: Three Houses&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./feth2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/feth2_hu496ef06f876dee824fcd43a6d0b8e4ee_3401237_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fire Emblem: Three Houses&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Fire Emblem: Three Houses&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./AOC_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/AOC_2_hu276b87c01d91dade1af7f256f81b3e3d_4338315_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hyrule Warriors: Age of Calamity&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./AOC_3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/AOC_3_hu7fddf97b4f7f419220255e9f20ea6772_4702082_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hyrule Warriors: Age of Calamity&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./AOC_4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/AOC_4_huceeb667b0ea2aed1cee1984f194e5f72_4208369_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hyrule Warriors: Age of Calamity&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Hyrule Warriors: Age of Calamity&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Marvel%20Ultimate%20Alliance%203.png&#34; title=&#34; Marvel Ultimate Alliance 3&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Marvel%20Ultimate%20Alliance%203_hu8fd1d5c891f2dcac7f2e3a37e8ae8900_3974015_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Marvel Ultimate Alliance 3&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Marvel Ultimate Alliance 3&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Hyrule_Warriors_DE.png&#34; title=&#34; Hyrule Warriors Definitive Edition&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Hyrule_Warriors_DE_hu6e760e9977e7e60b4621329474643070_4022138_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Hyrule Warriors Definitive Edition&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Hyrule Warriors Definitive Edition&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./P5S.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/P5S_hu9df0358370a47e98b357c8039aaff192_634220_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Persona 5 Strikers&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./P5S_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/P5S_2_huf9c00d1863e8d739edae0f750392b60e_2881807_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Persona 5 Strikers&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./P5S_3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/P5S_3_huc3f3f9502a985a296975c084dc837b7f_2916964_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Persona 5 Strikers&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Persona 5 Strikers&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc-ea.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./xc-ea.jpg&#34; alt=&#34;Xenoblade Chronicles (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc-hades.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./xc-hades.jpg&#34; alt=&#34;Xenoblade Chronicles (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Xenoblade Chronicles (EA Vs. HADES)&lt;/p&gt;


&lt;p&gt;&lt;code&gt;Hollow Knight&#39;s&lt;/code&gt; issue with transparent textures has been fixed.


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hollow_knight_ea.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/hollow_knight_ea_hu73a02a4a60254979235c628c88139f60_1976672_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hollow Knight (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hollow_knight_hades.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/hollow_knight_hades_hubfd635b9ed39bb9fa543891bd36ffc93_2029908_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hollow Knight (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Hollow Knight (EA Vs. HADES)&lt;/p&gt;

&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Kirby Star Allies&lt;/code&gt;, &lt;code&gt;Mario Kart 8 deluxe&lt;/code&gt;, &lt;code&gt;Tony Hawk Pro Skater&lt;/code&gt;, &lt;code&gt;Story of Seasons&lt;/code&gt;, and &lt;code&gt;Clubhouse&lt;/code&gt; games, were among many other titles that saw graphical glitches fixed.
&lt;code&gt;Rune Factory 4&lt;/code&gt; renders perfectly now and &lt;code&gt;Rune Factory 5&lt;/code&gt; has improved rendering.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kirby-ea.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./kirby-ea.jpg&#34; alt=&#34;Kirby Star Allies (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kirby-hades.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./kirby-hades.jpg&#34; alt=&#34;Kirby Star Allies (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Kirby Star Allies (EA Vs. HADES)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./MK8_EA.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/MK8_EA_hu2eb988e5012a87e87f8560a835f07f97_3359581_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mario Kart 8 Deluxe (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./MK8_Hades.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/MK8_Hades_hu6af1bae841fb8159e8d2bdcfa1568150_3452946_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mario Kart 8 Deluxe (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Mario Kart 8 Deluxe (EA Vs. HADES)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./tonyhawk-ea.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/tonyhawk-ea_hub823b10f3fbf400511efe6b23224d5fa_1322348_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Tony Hawk Pro Skater (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./tonyhawk-hades.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/tonyhawk-hades_hucada89fd6bc6fd329b7a586e680a8f00_2958317_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Tony Hawk Pro Skater (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Tony Hawk Pro Skater (EA Vs. HADES)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./story-of-seasons_ea.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/story-of-seasons_ea_huc2ebb6ee57b130e9f1082d71e771e12b_2624380_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Story of Seasons (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./story-of-seasons_hades.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/story-of-seasons_hades_hu64a1232677bea6322cf4fa18a4fa7223_3350112_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Story of Seasons (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Story of Seasons (EA Vs. HADES)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./runefactory-ea.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./runefactory-ea.jpg&#34; alt=&#34;Rune Factory 4 (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./runefactory-hades.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./runefactory-hades.jpg&#34; alt=&#34;Rune Factory 4 (EA Vs. HADES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Rune Factory 4 (EA Vs. HADES)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Rune_Factory_5.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Rune_Factory_5_huc78fe89e2df3de5fca7cf4b5e65fff3e_4569873_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Rune Factory 5&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Rune_Factory_5_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Rune_Factory_5_2_hu044e5045c5ae5987e06a13eb8272b252_5408641_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Rune Factory 5&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Rune Factory 5&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Trials%20of%20mana.png&#34; title=&#34; Trials of Mana&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Trials%20of%20mana_hu7495918c6d02b54bf688df179d70927b_5929794_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Trials of Mana&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Trials of Mana&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./clubhouse.png&#34; title=&#34; Clubhouse&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/clubhouse_hu0d5abf495636586e8c77dae671be8f94_1773136_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Clubhouse&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Clubhouse&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./farm_sim_20.png&#34; title=&#34; Farming Simulator 20&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/farm_sim_20_hu96df3ce91c0e7951e0f9b0dd34f94905_3638083_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Farming Simulator 20&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Farming Simulator 20&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h3 id=&#34;and-many-more&#34;&gt;And many more!!&lt;/h3&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Densha_de_Go.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Densha_de_Go_hu65e378351049ff0c7c3e1e3a5f564488_2340572_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Densha de Go&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Densha_de_Go_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Densha_de_Go_2_hu7785ad342f1278d73cb5da6fa57e58d9_3245778_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Densha de Go&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Densha de Go&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./FF_XII.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/FF_XII_hubfe436b85b10d79c7fd71063b732faa0_1152532_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Final Fantasy XII&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./FF_XII_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/FF_XII_2_hu71a1b6e8376e15b6d1714471e99099f6_1744003_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Final Fantasy XII&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Final Fantasy XII&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hellblade.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/hellblade_hu46f9cc1e115ed0dcf3ba894a76717a60_2243631_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hellblade: Senua&amp;#39;s Sacrifice&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hellblade_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/hellblade_2_hu717702cf97d784101d0d9e90c54120b0_2025895_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hellblade: Senua&amp;#39;s Sacrifice&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Hellblade: Senua&amp;#39;s Sacrifice&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Spyro_Reignited.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Spyro_Reignited_hub563145b6bdbf5f62e206d4e946511c9_1594716_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Spyro Reignited Trilogy&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Spyro_Reignited_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/Spyro_Reignited_2_huaad40072b770e26fb0e02119c8e727ae_1974313_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Spyro Reignited Trilogy&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Spyro Reignited Trilogy&lt;/p&gt;


&lt;h1 id=&#34;alright-lets-talk-numbers-now&#34;&gt;Alright! Let&amp;rsquo;s talk numbers now!&lt;/h1&gt;
&lt;p&gt;Project Hades rewrote a vast majority of the GPU code and made tons of improvements and optimizations to boost the performance.
Since the changes touched on many areas of the GPU emulation, we observed performance improvements in many titles.&lt;/p&gt;
&lt;p&gt;Below are some performance comparison charts between yuzu Early Access (1860) and Project Hades on our recommended specifications using Vulkan API.
Please note that at the time of comparison, EA 1860 was almost equivalent to yuzu Mainline, with no changes that would significantly affect performance.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./perf-1.png&#34; title=&#34; Recommended Specs (* is OpenGL)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/perf-1_hu473a6e90981a7ad473f304347797404c_26621_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Recommended Specs (* is OpenGL)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Recommended Specs (* is OpenGL)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;That&amp;rsquo;s not all.
The improvements made to the Vulkan backend in Project Hades have greatly improved performance for AMD GPU users on Linux (RADV).&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./perf-2.png&#34; title=&#34; Linux AMD (RADV)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-hades/perf-2_huc2e74ba1b28fdf2605402809760b2731_82713_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Linux AMD (RADV)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Linux AMD (RADV)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;These are just a small testament to the performance improvements that Hades brings.
We will be sharing more performance charts with our next progress report.&lt;/p&gt;
&lt;h1 id=&#34;fin&#34;&gt;Fin&lt;/h1&gt;
&lt;p&gt;Our development efforts were massively accelerated by our testers, who tested dozens of titles for bugs, fixes, and performance regressions.
Since our testing couldn&amp;rsquo;t realistically cover all titles, we request that you test and play your favourite games in yuzu and experience the improvements yourselves.
While testing, if you come across any regressions, glitches, bugs, or crashes, please reach out to us via our Discord Patreon Channels.
This will assist us in identifying and fixing any potential issues Project Hades might present.&lt;/p&gt;
&lt;h3 id=&#34;thats-all-we-have-for-now-until-next-time-happy-emulating&#34;&gt;That&amp;rsquo;s all we have for now, until next time! Happy emulating!&lt;/h3&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report May 2021</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/</link>
      <pubDate>Thu, 10 Jun 2021 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/</guid>
      <description>&lt;p&gt;Hola yuz-ers! It&amp;rsquo;s time yet again for another progress report!
We have dozens of changes to discuss: Kernel fixes, input and UI improvements, graphical updates, the saga of the legendary dot, and even a method to procure extra VRAM!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hola yuz-ers! It&amp;rsquo;s time yet again for another progress report!
We have dozens of changes to discuss: Kernel fixes, input and UI improvements, graphical updates, the saga of the legendary dot, and even a method to procure extra VRAM!&lt;/p&gt;
&lt;h2 id=&#34;pokémon-snap-but-its-new&#34;&gt;Pokémon Snap, but it’s New&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;New Pokémon Snap&lt;/code&gt;’s release resulted in tons of work needed to make the game playable. For starters, Snap experienced crashes during gameplay,
an issue &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; was not happy about.
The &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-bcr/&#34;&gt;buffer cache rewrite&lt;/a&gt; introduced an optimized fast path for &lt;code&gt;uniform bindings&lt;/code&gt;, but the conditions to take advantage of it are that buffers must be both small and &lt;em&gt;non-null&lt;/em&gt;. Turns out,
null buffers were not being explicitly checked for, causing instabilities along the way.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6322&#34;&gt;Properly checking for those zero sized buffers&lt;/a&gt; fixed the stability issues the new Snap was facing.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/1_hue8994bfb41fe47113d39d0ee8ee9067f_4733050_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;New Pokémon Snap&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/2_huac17e32688fdb6c177cecb39eaa3625d_5288088_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;New Pokémon Snap&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/3_hube9e18280c58039b95a27d1718bcccef_4483400_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;New Pokémon Snap&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;New Pokémon Snap&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; has been working hard on implementing much needed fixes in yuzu&amp;rsquo;s file system emulation.
In this particular case, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6265&#34;&gt;improving the accuracy of CreateFile&lt;/a&gt; fixes the saving and loading issues Snap was experiencing.
Unexpectedly, the error codes of conditions like “parent directory doesn’t exist” or “path already exists” were incorrect, causing havoc in the file system emulation.&lt;/p&gt;
&lt;p&gt;Snap also revealed flaws in our touch screen gesture emulation.
Thanks to work done by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6275&#34;&gt;german77&lt;/a&gt;, yuzu &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6267&#34;&gt;now properly supports multiple fingers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;GPU emulation related issues stop this game from being perfectly playable. In its current status, photos are not recognized when they are evaluated at the end of a stage. &lt;a href=&#34;https://bugs.dolphin-emu.org/issues/4460&#34;&gt;Like mother, like daughter&lt;/a&gt;.
This can be partially solved by using High GPU accuracy in OpenGL with Assembly Shaders enabled, or for non-Nvidia users, using Extreme GPU accuracy on Vulkan.&lt;/p&gt;
&lt;h2 id=&#34;graphical-fixes&#34;&gt;Graphical fixes&lt;/h2&gt;
&lt;p&gt;Texture blits (bit block transfers, a combination of bitmaps) can sometimes work out of bounds by interleaving copy regions, by design.
yuzu has to be able to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6289&#34;&gt;properly emulate this behaviour&lt;/a&gt; and return the correct portion,
something epicboy had no problem properly implementing for us.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./blits.png&#34; title=&#34; Here’s a beautifully detailed example of the old out-of-bounds incorrect behaviour in red, and the correct result in blue, with the affected area moving to the next row, as it should&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/blits_hub987128d074f901733e30b7431f6c8fc_8248_550x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Here’s a beautifully detailed example of the old out-of-bounds incorrect behaviour in red, and the correct result in blue, with the affected area moving to the next row, as it should&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Here’s a beautifully detailed example of the old out-of-bounds incorrect behaviour in red, and the correct result in blue, with the affected area moving to the next row, as it should&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The result is quite noticeable in games that use this blit technique, such as &lt;code&gt;Shantae&lt;/code&gt; and &lt;code&gt;Pixel Game Maker Series Werewolf Princess Kaguya&lt;/code&gt;, which we mentioned in the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/&#34;&gt;previous progress report&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./shantae-bug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/shantae-bug_hu10017b9eb08ad162879e7c6c6f46e2d5_1457400_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Textures and text rendering correctly, notice the stairstepping on the right side of the left image&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./shantae-fix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/shantae-fix_hu08fff6eda3ca9caf07cb46e36893981c_1425921_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Textures and text rendering correctly, notice the stairstepping on the right side of the left image&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Textures and text rendering correctly, notice the stairstepping on the right side of the left image&lt;/p&gt;


&lt;p&gt;Thanks to user reports, it was brought to our attention that our FPS counter in the lower right corner of yuzu’s window was not accurate.
The readings were previously accurate when the GPU thread was synchronous with the other services.
Now that asynchronous GPU emulation is implemented, this is no longer the case.&lt;/p&gt;
&lt;p&gt;The solution epicboy came up with is, instead of letting the nvflinger service handle the counter, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6317&#34;&gt;let the graphics API inform the counter after it finishes drawing the frame&lt;/a&gt;.
This way, the value is far more accurate and stable on performance oscillations.
Additionally, the update frequency of the counter was changed from 2000 ms to 500 ms to allow for more frequent and up-to-date information to be displayed.&lt;/p&gt;
&lt;p&gt;And now for a big update for Vulkan users waiting for &lt;code&gt;Project Reaper&lt;/code&gt; to leave the development board.
The previous Vulkan &lt;code&gt;memory allocator&lt;/code&gt; used local memory as top priority (that’s the physical VRAM on your dedicated GPU),
and only used host memory in certain applicable cases. These cases varied depending on how the GPU driver informed the different memory heaps available to yuzu,
primarily in keeping critical required information closer to the CPU.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; implemented a new method (solving some issues with the old one) that
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6367&#34;&gt;allows yuzu to access all the available host memory&lt;/a&gt;.
Up to 50% of the total system RAM is available to the GPU as host memory, or as Windows calls it in the Task Manager, GPU shared memory.
This change means that the GPU effectively has more RAM available to use with Vulkan, helping delay our sadly infamous out-of-memory issues with this API.&lt;/p&gt;
&lt;p&gt;For those that can’t wait, want to test an in-development partial solution, and have experience with git,
&lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; has been working on what can be called a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6378&#34;&gt;“light Reaper”&lt;/a&gt;.
This is a simpler version of what Rodrigo plans to release in the future, working as a garbage collector on a configurable fixed timer.
For anyone interested and with the time to spare in building yuzu manually, the PR is open to be tested.
We don’t plan to merge it for now as it needs as much refinement as the regular Reaper to provide a pleasant user experience.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; removed &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6372&#34;&gt;the risk of an overflow in the rasterizer cache&lt;/a&gt;
by doubling the size of the responsible array.&lt;/p&gt;
&lt;p&gt;The Nintendo Switch shares its RAM with both the CPU and GPU, so games are free to assume any information in VRAM will be the same in RAM (since it physically is).
As PCs don’t allow this (even on integrated GPU systems), yuzu has to keep track of any memory pages in use by the GPU
to ensure that all information is also reflected in system RAM.
The previous limit of 255 references was observed to be surpassed in some rare instances during testing, resulting in utter chaos, so this PR increases it to a maximum of 65535.&lt;/p&gt;
&lt;p&gt;All of this costs the user 2&lt;em&gt;MB&lt;/em&gt; of RAM instead of the previous 1&lt;em&gt;MB&lt;/em&gt;. Such a heavy price to pay for the additional peace of mind, Google Chrome would be proud of us.&lt;/p&gt;
&lt;h2 id=&#34;core-changes-and-improvements&#34;&gt;Core changes and improvements&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; migrated our old implementation of kernel objects to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6266&#34;&gt;KAutoObjects&lt;/a&gt;, which is part of the newly written implementations that have been added in the past months to match more closely to that of how the kernel of the Nintendo Switch works.&lt;/p&gt;
&lt;p&gt;Previously, our kernel objects, such as condition variables, events, threads, processes, etc., used the C++ &lt;code&gt;std::shared_ptr&lt;/code&gt; (a type of smart pointer) in their implementation.
Whenever a new instance of a shared pointer reference is made using one of these pointers, a counter is automatically increased to keep track of them.
Similarly, whenever one of the references isn&amp;rsquo;t needed anymore, the counter decreases its value and the reference is discarded.
However, the implementation doesn&amp;rsquo;t necessarily reflect the way the Nintendo Switch&amp;rsquo;s kernel deals these objects and their reference counters.
Thus, the advantage of implementing these &lt;code&gt;KAutoObjects&lt;/code&gt; is that it allows yuzu to manage when these objects are created and destroyed, accurately.&lt;/p&gt;
&lt;p&gt;This was a big change that involved refactoring the codebase for consistency and fleshing out the implementation of various existing kernel objects and their definitions to match the new behaviour correctly.&lt;/p&gt;
&lt;p&gt;Part of the work also involved improving some system calls (the so-called &lt;code&gt;SVCs&lt;/code&gt;) by implementing missing calls such as &lt;code&gt;UnmapSharedMemory&lt;/code&gt;, and making the implementation of other calls more robust (e.g. better error checking, etc.).
These &lt;code&gt;SVCs&lt;/code&gt; are functions used by games to communicate with the rest of their system, in order to create events, manage them, or send information to other services such as audio and graphics.
They are essential for the communication between processes and the OS, so their correct functioning is imperative, as they are the programs that run whenever a game needs the kernel to perform operations that require elevated permissions.&lt;/p&gt;
&lt;p&gt;With the introduction of the firmware version &lt;code&gt;12.0.0&lt;/code&gt;, the protocol of &lt;a href=&#34;https://en.wikipedia.org/wiki/Inter-process_communication&#34;&gt;Inter-Process Communication&lt;/a&gt; (&lt;code&gt;IPC&lt;/code&gt;)
has also been updated.
bunnei worked on &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6299&#34;&gt;various improvements to the IPC and session management&lt;/a&gt; with the aim to support &lt;code&gt;TIPC&lt;/code&gt; — the new protocol.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;IPC&lt;/code&gt; is a mechanism provided by the OS and used by processes to communicate between themselves, usually to manage or cooperate in the processing of some shared resource — such
as a memory region, a file, etc.
A &lt;code&gt;session&lt;/code&gt; in this context refers to an object that is created to manage the information exchange between a client (i.e. games) and a server (services that the game uses to
render graphics, play audio, get user input, etc.).
With these changes, the code in charge of &lt;code&gt;session management&lt;/code&gt; has been updated to support the new &lt;code&gt;IPC&lt;/code&gt; protocol, additionally fixing a number of inaccuracies in some of the
error-checking functions.
bunnei has also greatly simplified the original &lt;code&gt;IPC&lt;/code&gt; code, which should improve the memory usage and performance of these operations.&lt;/p&gt;
&lt;p&gt;As a consequence of the changes introduced in the previous &lt;code&gt;KAutoObject&lt;/code&gt; PR, the maximum values for many of the kernel objects have started to be enforced. This resulted in
crashes in games that open and close sessions often, such as &lt;code&gt;Nintendo Labo&lt;/code&gt;, &lt;code&gt;Pokémon Sword&lt;/code&gt;, and &lt;code&gt;Pokémon Shield&lt;/code&gt;, due to yuzu not managing sessions correctly.
The root problem was also the cause of small memory leaks that hadn&amp;rsquo;t been noticed until now, since the sessions weren&amp;rsquo;t being properly closed and remained in memory.
For this reason, bunnei implemented mechanisms for moving and closing objects in a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6347&#34;&gt;follow-up PR&lt;/a&gt;, which corrected the way the
session counter and its opening and closing operations worked.&lt;/p&gt;
&lt;p&gt;There are still many other kernel objects to migrate and, for this reason, bunnei introduced a PR to make the
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6373&#34;&gt;KSlabHeap use both guest and host allocations&lt;/a&gt;,
as this will facilitate the process while missing functions and other structures are being implemented.&lt;/p&gt;
&lt;p&gt;Simply put, the &lt;a href=&#34;https://en.wikipedia.org/wiki/Slab_allocation&#34;&gt;slab heap&lt;/a&gt; is a structure used to store kernel elements more efficiently in memory in a &lt;a href=&#34;https://en.wikipedia.org/wiki/Linked_list&#34;&gt;linked list&lt;/a&gt;, based on their size. All the slots in a slab of memory have the same size, and there can be lists of different sizes to store different objects too.
Instead of allocating and deallocating memory, the kernel marks the nodes on the list as &amp;ldquo;used&amp;rdquo; or &amp;ldquo;free,&amp;rdquo; so when it needs to store a new object, it looks for a free slot and overwrites the data there.
On the other hand, if an object is not needed anymore, the node where it&amp;rsquo;s stored is marked as &amp;ldquo;free&amp;rdquo; so that it can be used to store a new object.
This way, the kernel will find frequently-requested memory sizes available more quickly, providing a small optimization to the whole process.&lt;/p&gt;
&lt;p&gt;As of yet, yuzu doesn&amp;rsquo;t emulate the complete memory structure of the Nintendo Switch.
The emulated memory space only provides enough functionality to run a single process (i.e. a game), while every other service, such as the kernel, is allocated outside of the virtual memory.
This implementation works because the games aren&amp;rsquo;t allowed to access kernel memory, and so, when yuzu switches from executing a game to running some kernel procedure, it just handles this internally through the High Level Emulation (&lt;code&gt;HLE&lt;/code&gt;) implementations, with the games completely oblivious to where any of said procedures are stored.
However, there are certain elements that the games actually need to access, and so, they must be inside the emulated memory.
One such case is the &lt;a href=&#34;https://en.wikipedia.org/wiki/Thread-local_storage&#34;&gt;Thread Local Storage&lt;/a&gt; (&lt;code&gt;TLS&lt;/code&gt;),
a memory region used by the emulated threads to store variables that only they see, but none of their peers have access to — because a thread can access only its own &lt;code&gt;TLS&lt;/code&gt; region.
Since these entities can be allocated in the &lt;code&gt;KSlabHeap&lt;/code&gt;, along with other entities that don&amp;rsquo;t need to be inside the emulated memory accessible for the games,
bunnei introduced this hybrid method so yuzu is able to manage the slab list for all kernel objects, regardless of whether they need to be &lt;code&gt;HLE&lt;/code&gt;&amp;rsquo;d,
or stored in the virtual memory.&lt;/p&gt;
&lt;p&gt;Of course, there are still many other things to flesh out and implement.
The kernel is an essential part of the system that makes it possible for everything else to work.
Any improvements and additions to this component make the emulation experience more robust and solidify the accuracy of how the emulator works.&lt;/p&gt;
&lt;p&gt;Morph has also been paying attention to the kernel, refactoring part of the IPC code and adding a function to
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6320&#34;&gt;pop the ID of a process&lt;/a&gt;, fixing a small bug where a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6337&#34;&gt;wrong value was being returned&lt;/a&gt;,
and stubbing a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6358&#34;&gt;function for the memory manager&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, the real poyo-pearl of this month has been his &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6270&#34;&gt;rework of yuzu&amp;rsquo;s Common File System Interface&lt;/a&gt; to make use of the
&lt;code&gt;std::filesystem&lt;/code&gt; library introduced in C++17, as a continuation of the work done by the maintainer &lt;a href=&#34;https://github.com/lioncash&#34;&gt;lioncash&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The file system interface is the code that controls how yuzu accesses files (e.g. the creation of save files, or how yuzu loads DLC and update files for a game, etc.).
Since yuzu originally started as a fork of &lt;a href=&#34;https://citra-emu.org/&#34;&gt;Citra&lt;/a&gt;, there were many functions inherited from that project that weren&amp;rsquo;t as new as the ones included in
this newly added library, or weren&amp;rsquo;t compatible with the new Virtual File System that yuzu uses, or simply weren&amp;rsquo;t used at all.&lt;/p&gt;
&lt;p&gt;With this huge PR, after Morph reversed-engineered the file system in order to bring yuzu&amp;rsquo;s behaviour closer to how it works on the Nintendo Switch, he removed the clutter in
favour of simpler code and rewrote the whole implementation, fixing some problems that the old code had in Windows builds in the process.
As a bonus, he also documented all of yuzu&amp;rsquo;s file system functions.&lt;/p&gt;
&lt;p&gt;While these changes don&amp;rsquo;t necessarily result in a performance increase for end-users, they have certainly tackled some long-standing problems with how yuzu handled files,
besides simplifying the codebase notably, making it much easier to read and maintain for our developers.&lt;/p&gt;
&lt;h2 id=&#34;on-screen-keyboard-changes&#34;&gt;On-Screen Keyboard changes&lt;/h2&gt;
&lt;p&gt;Morph has been working hard on fixes for the software keyboard.&lt;/p&gt;
&lt;p&gt;Games received the text string of the inline keyboard instead of the regular one, resulting in empty fields being sent which could cause games to panic,
as it would mean an invalid entry was sent.
Fixing this only required &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6333&#34;&gt;sending the correct information from the right keyboard type.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Users reported crashes when pressing Enter after naming a ruleset or controller layout in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.
As it turns out, the &lt;code&gt;QLineEdit::returnPressed&lt;/code&gt; signal generated a &lt;a href=&#34;https://en.wikipedia.org/wiki/Race_condition&#34;&gt;race condition&lt;/a&gt;, resulting in the crashes.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6339&#34;&gt;Switching to &lt;code&gt;Qt::QueuedConnection&lt;/code&gt;&lt;/a&gt; solved the issue.&lt;/p&gt;
&lt;p&gt;Additionally, testing confirmed that games can leave regions of memory uninitialized if a text check is performed and doesn’t result in either &lt;code&gt;Failure&lt;/code&gt; or &lt;code&gt;Confirm&lt;/code&gt;,
causing, once again, crashes.
This is fixed by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6374&#34;&gt;reading only the text check message.&lt;/a&gt;. Thanks to gidoly and OZ for all the help in finding this!&lt;/p&gt;
&lt;p&gt;Lastly, there was an issue where the mouse input is captured by the software keyboard until the user moves to the next event.
german77 fixed this &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6275&#34;&gt;by releasing the mouse input when yuzu is out of focus.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;general-bugfixes&#34;&gt;General bugfixes&lt;/h2&gt;
&lt;p&gt;Let’s begin this section with an obituary.
Keen-eyed users may have noticed that old builds used to have a single . &lt;em&gt;dot&lt;/em&gt; at the end of the title bar. A suspicious &lt;em&gt;dot&lt;/em&gt; whose purpose was unknown.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dot.png&#34; title=&#34; The Legend&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/dot_hu0290b5ecf97c46349ce69dda7aa179c3_2040_227x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The Legend&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The Legend&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;When resuming an old quest that was previously left unfinished, epicboy,
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6316&#34;&gt;while working on displaying the game version on the title bar&lt;/a&gt;, found the code related to the existence of the &lt;em&gt;dot&lt;/em&gt;,
and decided to slay it.&lt;/p&gt;
&lt;p&gt;Of course, the &lt;em&gt;dot&lt;/em&gt; wouldn’t be gone without a fight, and removing it caused the yuzu version info to disappear from logs and even the “about us” window!
Morph was the next hero of light selected by the king to slay the monster, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6326&#34;&gt;and so he did&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And thus, the saga of the mysterious &lt;em&gt;dot&lt;/em&gt; ends, for now.&lt;/p&gt;
&lt;p&gt;Speaking of sagas, &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; works in ways beyond our comprehension.
An open PR about &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6354&#34;&gt;allowing yuzu to set a nickname for the emulated switch&lt;/a&gt; and
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6355&#34;&gt;implementing the &lt;code&gt;DisableAutoSaveDataCreation&lt;/code&gt; service&lt;/a&gt; are some of the surprises The Shark left us.
By the way, that last service? It’s used by &lt;code&gt;Mii Edit&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Morph &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6301&#34;&gt;stubbed the ´ImportClientPki´ and ´ImportServerPki´ services&lt;/a&gt;, making &lt;code&gt;JUMP FORCE Deluxe Edition&lt;/code&gt; boot.
&lt;code&gt;Project Hades&lt;/code&gt; will help make this game playable.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./jfmenu.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/jfmenu_hu3698d5ff4d7b8bc1471ea43b6f364657_2687999_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thanks, Ghost, for the pics! (JUMP FORCE Deluxe Edition)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./jfingame.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/jfingame_hu09b33837015da968a9ac8e9b03373535_128366_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thanks, Ghost, for the pics! (JUMP FORCE Deluxe Edition)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Thanks, Ghost, for the pics! (JUMP FORCE Deluxe Edition)&lt;/p&gt;


&lt;p&gt;bunnei &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6386&#34;&gt;fixed a hang on shutdown in the NVFlinger thread&lt;/a&gt; (used for compositing),
fixing hangs when stopping emulation while playing &lt;code&gt;Super Mario Odyssey&lt;/code&gt;.
You not only have to let’s-a go, Mario, but also let’s-a stop sometimes.&lt;/p&gt;
&lt;p&gt;While yuzu allows users to install anything to NAND, be it updates, DLC, or even the base game, we recommend that only updates and DLC be installed,
leaving yuzu to find the base game with the user provided locations of the game dumps.
Morph &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6319&#34;&gt;properly blocked this,&lt;/a&gt; and added a warning that accompanies it.&lt;/p&gt;
&lt;p&gt;Besides what was mentioned earlier in the article, &lt;code&gt;Shantae&lt;/code&gt; took a bit of extra work to become playable. Another case of an emulator inside an emulator.
epicboy &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6284&#34;&gt;solved a softlock at boot&lt;/a&gt; by creating layers when queried but not found in the compositting service NVFlinger
and ogniK &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6279&#34;&gt;fixed the crashes&lt;/a&gt; by stubbing the emulation of &lt;code&gt;nvhost-prof-gpu&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./shantae.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Atta girl! Thank you OZ for the gameplay! (Shantae)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Linux deserves some love too, and &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; shall give it.
&lt;a href=&#34;https://github.com/linuxdeploy/linuxdeploy&#34;&gt;linuxdeploy&lt;/a&gt; introduced a regression that caused any file open dialog to crash yuzu if you ran one of our official AppImages.
toast solved it &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6324&#34;&gt;by downloading our own version hosted as one of our externals&lt;/a&gt;, allowing us to have better control on changes to
linuxdeploy, as well as fixing the crashes.
Users can enjoy the ease of use of AppImage releases again.&lt;/p&gt;
&lt;p&gt;An old limitation we faced with Linux Distributions that decide to “stay on their old and trusted packages” is outdated versions of the Qt binaries.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6366&#34;&gt;By setting up version 5.12 as the minimum requirement and adding 5.15 to our externals,&lt;/a&gt; we can ensure that no problems are faced
when building yuzu with any of the valid compilers, be it MSVC, GCC, Clang, or even MinGW.&lt;/p&gt;
&lt;h2 id=&#34;ui-and-other-quality-of-life-improvements&#34;&gt;UI and other Quality of Life improvements&lt;/h2&gt;
&lt;p&gt;Users have the option to customize the game list via &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; General &amp;gt; UI&lt;/code&gt;, and the Add-Ons column can be disabled there.
Previously, if the user disabled it, the game list was not being refreshed, forcing the user to find inventive ways to manually do it.
Thanks to &lt;a href=&#34;https://github.com/Kewlan&#34;&gt;Kewlan&lt;/a&gt;’s work,
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6298&#34;&gt;the game list now properly refreshes itself with no need for manual intervention!&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./add-ons.png&#34; title=&#34; Add-Ons shows which update, DLCs and mods are installed and enabled&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/add-ons_hub680e63d023b0306b58e32fcfabb0065_1325_102x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Add-Ons shows which update, DLCs and mods are installed and enabled&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Add-Ons shows which update, DLCs and mods are installed and enabled&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;toastUnlimited reluctantly &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6321&#34;&gt;added the CPU tab to per-game settings.&lt;/a&gt; At the same time, Custom RTC (Real-Time-Clock) was removed to force it as a global value.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./cpu.png&#34; title=&#34; Totally not a hint of anything&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/cpu_hu22c0472363fc17a01bb2b764036d8088_134384_802x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Totally not a hint of anything&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Totally not a hint of anything&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While we’re on this subject, some things need to be clarified about the CPU settings tab.
Unsafe was originally only intended for CPUs that lacked the FMA instruction set, which causes games to run at very low framerates.
Later on, a fix was discovered that could boost the performance of &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt; by reducing precision. This was described in
&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/&#34;&gt;January’s progress report.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As a result, we recommend users of CPUs that do have FMA to stick to &lt;code&gt;Accurate&lt;/code&gt; and only force &lt;code&gt;Unsafe&lt;/code&gt; for &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt;.
Using &lt;code&gt;Unsafe&lt;/code&gt; is known to cause precision issues, for example, exaggerating the hitboxes of characters in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.
Users with old or low-end Intel CPUs that lack FMA, feel free to keep &lt;code&gt;Unsafe&lt;/code&gt; enabled all the time.&lt;/p&gt;
&lt;p&gt;We provide some examples in the following gorgeous and totally perfect table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;CPU series&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;FMA support&lt;/th&gt;
&lt;th&gt;Recommended setting&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Intel Core 4000 to 11000 series&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td&gt;Use Accurate, Unsafe for LM3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Intel Core 500 to 3000 series and older&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;No&lt;/td&gt;
&lt;td&gt;Use Unsafe&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Intel Atom, Celeron and Pentium series&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;No&lt;/td&gt;
&lt;td&gt;Use Unsafe&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;AMD Ryzen series&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td&gt;Use Accurate, Unsafe for LM3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;AMD FX and A 4000 to 9000 APU series&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td&gt;Use Accurate, Unsafe for LM3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;AMD Phenom, A 3000 APU series and older&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;No&lt;/td&gt;
&lt;td&gt;Use Unsafe&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;*LM3 = Luigi’s Mansion 3&lt;/p&gt;
&lt;p&gt;toastUnlimited also gave us the option to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6346&#34;&gt;apply settings while games are running&lt;/a&gt;.
This can allow users to more efficiently test settings while playing.
Keep in mind that settings that require a reboot to take effect won&amp;rsquo;t be affected by the apply button.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./apply.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/apply_hu6b0436de7678dfc9c3516a541e5aedc7_197295_802x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Continuing with the per-game setting improvements, toast also added an exception for homebrew.
Since most homebrew use a game-ID of 0000000000000000, using the ID to save the per-game settings would have been useless, so instead,
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6361&#34;&gt;yuzu will use the name of the homebrew file.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And finally, toast, continuing work from german77 and &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;Tobi&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6362&#34;&gt;added a button to reset yuzu settings to default&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./reset.png&#34; title=&#34; Simple as that&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/reset_hu2b365c9312301b302fea2f2ae00d6528_21315_1021x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Simple as that&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Simple as that&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This is sometimes needed in very rare cases, for example, when being unable to boot &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;shake-it-babyhttpsyoutubeiac0t6dnuzm&#34;&gt;&lt;a href=&#34;https://youtu.be/Iac0T6dnuzM&#34;&gt;Shake it, baby&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;german77 has been working on &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6244&#34;&gt;implementing SDL motion&lt;/a&gt;, with the purpose of removing our dependency on third party programs to get
motion input from valid controllers like Dual Sense, Joy-Cons, or Pro Controllers.
With this PR, users can simply pair their controllers via Bluetooth and yuzu will pick them up as a valid input device, auto-mapping and enabling motion support, effectively
removing the need to use betterjoy, ds4windows, or other third party software in yuzu.&lt;/p&gt;
&lt;p&gt;A separate PR adds &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6318&#34;&gt;detection of two separate Joy-Cons as a single input device&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And to provide motion support on the Linux side, &lt;a href=&#34;https://github.com/v1993&#34;&gt;v1993&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6293&#34;&gt;enables the use of HIDAPI within SDL2&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Work continues to fine tune how the sensor data is interpreted, specially from non-Nintendo devices.
For example, PS3 controllers operate motion on a single Z axis, but report the remaining 2 axes to the operating system with useless NaN values,
making any motion calculations useless.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6310&#34;&gt;By replacing the X and Y axis values with zeros&lt;/a&gt;, german77 solved the issue.&lt;/p&gt;
&lt;p&gt;Games don’t always check for obvious physical limitations.
For example, in the past, it was possible to use handheld controller emulation while the game was in a docked status.
Doing this can break games like &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt;, as the game expects the console to disable input when the Joy-Cons are connected to a docked Switch’s rails.
german77 solves this by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6353&#34;&gt;forcing an emulated Pro Controller instead&lt;/a&gt;.
No more weird Frankenstein input monstrosities, please.&lt;/p&gt;
&lt;p&gt;Finally, it could sometimes be difficult to map analog sticks in yuzu due to a bug in how the event was handled. While fixing this, german77 also
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6312&#34;&gt;fixed a crash caused by controllers not listed in the controller list disconnecting&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;Now, I know we keep teasing &lt;code&gt;Project Hades&lt;/code&gt;, but we have good news!
SPIR-V is finalized, GLASM is in its final testing, and GLSL is not far behind. Few regressions remain to be squashed.
Once the shading languages are done, previous features like the old asynchronous shaders are reimplemented, and the fine tuning is finished, it will finally be released.
We&amp;rsquo;re trying to release it alongside Reaper, but time will tell.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hades1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/hades1_hu3f7c499c24b5817705fbd68fca5956be_1445382_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;MARVEL ULTIMATE ALLIANCE 3: The Black Order, WORLD OF FINAL FANTASY MAXIMA, Yoshi&amp;#39;s Crafted World&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hades2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/hades2_hu044534dd602dbed5fdb632bd9288b9a6_1867644_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;MARVEL ULTIMATE ALLIANCE 3: The Black Order, WORLD OF FINAL FANTASY MAXIMA, Yoshi&amp;#39;s Crafted World&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hades3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2021/hades3_hu015136e6565f279a41d9c5befaed0c12_1727791_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;MARVEL ULTIMATE ALLIANCE 3: The Black Order, WORLD OF FINAL FANTASY MAXIMA, Yoshi&amp;#39;s Crafted World&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;MARVEL ULTIMATE ALLIANCE 3: The Black Order, WORLD OF FINAL FANTASY MAXIMA, Yoshi&amp;#39;s Crafted World&lt;/p&gt;


&lt;p&gt;That’s all folks! Thank you so much for staying with us until the end of this month’s progress report.
See you in the next one!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>New Feature Release - Fastmem Support</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-fastmem/</link>
      <pubDate>Tue, 08 Jun 2021 04:00:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-fastmem/</guid>
      <description>&lt;p&gt;Hey there, yuz-ers!
While all of you wait eagerly for the release of Project Hades, our shader decompiler rewrite, we thought we&amp;rsquo;d bring you a nice little surprise to keep you occupied.
We present to you, the newest addition to yuzu&amp;rsquo;s ever-improving features list - Fastmem (Fast Memory Access)!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey there, yuz-ers!
While all of you wait eagerly for the release of Project Hades, our shader decompiler rewrite, we thought we&amp;rsquo;d bring you a nice little surprise to keep you occupied.
We present to you, the newest addition to yuzu&amp;rsquo;s ever-improving features list - Fastmem (Fast Memory Access)!&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;This is now available in the latest yuzu Early Access build (1759 or newer) and we intend to make this available in Mainline builds very soon.
As always, we ask that you test various games with these builds and if you encounter any issues, bugs, or crashes, please reach out to us via the &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord&lt;/a&gt; Patreon channels.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: This feature is enabled by default.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-is-fastmem&#34;&gt;What is Fastmem?&lt;/h2&gt;
&lt;p&gt;Fastmem or Fast Memory Access, is a well-known feature among emulator developers and emulation enthusiasts.
Emulators like &lt;a href=&#34;https://dolphin-emu.org/&#34;&gt;Dolphin&lt;/a&gt; and &lt;a href=&#34;https://citra-emu.org/&#34;&gt;Citra Android&lt;/a&gt; have implemented this in the past.&lt;/p&gt;
&lt;p&gt;All modern Operating Systems have this concept of &amp;ldquo;virtual memory,&amp;rdquo; where addressable memory (from the running process) is a space of memory addresses that are only &amp;ldquo;known&amp;rdquo; to that process, e.g. Discord on your PC, or Super Mario Odyssey on your Switch — and the addresses are translated by the Switch&amp;rsquo;s MMU (Memory Management Unit) to the physical location in the Switch’s physical RAM as the game runs.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./MMU.png&#34; title=&#34;Illustration of an MMU (By Mdjango, Andrew S. Tanenbaum)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-fastmem/MMU_hu8193ff6017aea71cb7f5920cb65b79d7_41187_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Illustration of an MMU (By Mdjango, Andrew S. Tanenbaum)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Illustration of an MMU (By Mdjango, Andrew S. Tanenbaum)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;In yuzu, we emulate the Switch&amp;rsquo;s virtual address space for the running process.
But, that means for each time the game tries to read/write memory, which happens millions of times per frame, we need to basically &amp;ldquo;decode&amp;rdquo; where that Switch virtual address maps to our &amp;ldquo;emulated&amp;rdquo; Switch memory (RAM allocated for yuzu).
This adds a lot of overhead when you consider how much the game reads/writes to memory.&lt;/p&gt;
&lt;p&gt;The idea behind Fastmem here is to map the emulated Switch game&amp;rsquo;s addressable memory on the host (Windows / Linux), at offset addresses.
The offset is a constant.&lt;/p&gt;
&lt;h2 id=&#34;the-technical---how&#34;&gt;The Technical - HOW?&lt;/h2&gt;
&lt;p&gt;On the Switch, we have 4GB of memory.
The hardware supports a virtual memory size of 48bits (just like x64); however, the Switch kernel limits this to only 39bit to save some memory for storing page tables.
This results in a 512GB virtual address space (2^39) for use. (A page table is the data structure used to store the mapping between virtual addresses and physical addresses.)&lt;/p&gt;
&lt;p&gt;To emulate this, we allocated a HUGE page table, which had an offset for each memory page addressable in the virtual memory region of the Switch. This table alone was 1GB in size!
And whenever a game wanted to access the memory, we looked up this table, which resulted in roughly ~10 x64 CPU instructions and twice the memory latency.
That latency being: first read the table&amp;rsquo;s value, then read the correct memory.&lt;/p&gt;
&lt;p&gt;Fastmem, however, uses the host MMU to rebuild the same 39bit virtual memory arena.
Here, we&amp;rsquo;re lucky that Nintendo limits the memory to 39bit.
We cannot allocate 48bit because that&amp;rsquo;s the entire virtual address space on the host.&lt;/p&gt;
&lt;p&gt;This cuts the effort to access the memory down to 3+1 x64 CPU instructions with a single memory latency.
3 instructions to check if the pointer is smaller than 39 bit, and one memory load instruction.
We need this size check to ensure out-of-bounds memory access won&amp;rsquo;t return any physical address.&lt;/p&gt;
&lt;h2 id=&#34;the-challenges&#34;&gt;The Challenges&lt;/h2&gt;
&lt;p&gt;Implementing Fastmem required two major things in &lt;a href=&#34;https://github.com/MerryMage/dynarmic/&#34;&gt;Dynarmic&lt;/a&gt;, our JIT recompiler.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;First:&lt;/strong&gt; A64 Fastmem support on Dynarmic.&lt;/p&gt;
&lt;p&gt;Dynarmic has had support for A32 Fastmem (see Citra Android) for a while now.
A64 Fastmem support was &lt;a href=&#34;https://github.com/MerryMage/dynarmic/pull/528&#34;&gt;originally worked on a year ago by MerryMage and vdwjeremy&lt;/a&gt; but it never got merged to the master branch.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/degasus/&#34;&gt;degasus&lt;/a&gt; worked with &lt;a href=&#34;https://github.com/MerryMage/&#34;&gt;MerryMage&lt;/a&gt; to clean up and get &lt;a href=&#34;https://github.com/MerryMage/dynarmic/pull/613&#34;&gt;these changes merged&lt;/a&gt; to the master branch so that yuzu could benefit from this.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Second:&lt;/strong&gt; To generate the 512GB virtual address space with the same mappings as on the Switch.&lt;/p&gt;
&lt;p&gt;degasus proved last year that this was easy to implement on Linux as the POSIX mmap call provided very similar features to the Horizon OS.
But it was a huge challenge for Windows, as the Windows Virtual Memory API is larger with a few missing features.
Moreover, while Windows page tables were 4K aligned, Windows memory management was 64K aligned for &lt;a href=&#34;https://devblogs.microsoft.com/oldnewthing/20031008-00/?p=42223&#34;&gt;outdated reasons&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;the-solutions&#34;&gt;The Solutions&lt;/h2&gt;
&lt;p&gt;Turns out, Microsoft had realized this too and frequently patched their Virtual Memory API.
With the release of Windows 10 v1803, their new API supported new &amp;ldquo;placeholder&amp;rdquo; memory which didn&amp;rsquo;t suffer from the previous limitations.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/BreadFish64/&#34;&gt;Breadfish64&lt;/a&gt;, who used this new API in their Gameboy emulator and showed us that it was now indeed possible to support Fastmem on Windows.
Unfortunately, this makes the feature usable only on Windows versions 1803 and higher.&lt;/p&gt;
&lt;p&gt;Since we already met the base requirements for our new Fastmem implementation long ago, our devs were able to quickly address the missing pieces.
&lt;a href=&#34;https://github.com/bunnei/&#34;&gt;bunnei&lt;/a&gt; implemented the much-needed kernel rework changes in yuzu, degasus cleaned up their original proof-of-concept code for Linux, and &lt;a href=&#34;https://github.com/ReinUsesLisp/&#34;&gt;Rodrigo&lt;/a&gt; implemented the Windows Fastmem support.
&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; provided valuable advice and coordinated these efforts to get the feature release-ready.&lt;/p&gt;
&lt;h2 id=&#34;the-results&#34;&gt;The Results&lt;/h2&gt;
&lt;p&gt;As an added bonus, game booting/loading times have been improved thanks to these changes.
Thanks to developer Rodrigo, Normal GPU accuracy no longer triggers a myriad of exceptions on the Smash character selection screen, improving its performance from 10-20 FPS to a full 60.&lt;/p&gt;
&lt;p&gt; 

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./SSBU.png&#34; title=&#34;Super Smash Bros. Ultimate&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-fastmem/SSBU_hu59186921872e87ac8045b58428fbe211_2417530_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Smash Bros. Ultimate&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Smash Bros. Ultimate&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;For all game benchmarks, we utilized a PC built to our own recommended hardware spec.
In this testing we observed performance improvements ranging from 15-60% in some of the most demanding areas of gameplay.
Please note the marked titles that were tested with the processor limited to 2.4Ghz, to synthetically make it slower than usual and highlight the improvements.&lt;/p&gt;
&lt;p&gt; 

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./BENCH_01.png&#34; title=&#34;The * indicates titles tested at 2.4Ghz&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-fastmem/BENCH_01_hu49f9560544469445580c5ab129245522_90593_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The * indicates titles tested at 2.4Ghz&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The * indicates titles tested at 2.4Ghz&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt; 

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./BENCH_02.png&#34; title=&#34;The * indicates titles tested at 2.4Ghz&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-fastmem/BENCH_02_huf21840f7b36a43b8c316bf0189f61422_101568_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The * indicates titles tested at 2.4Ghz&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The * indicates titles tested at 2.4Ghz&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/p&gt;
&lt;h5 id=&#34;thats-all-we-have-for-now-see-you-soon-with-exciting-news-about-project-hades-and-more-happy-emulating&#34;&gt;That&amp;rsquo;s all we have for now, see you soon with exciting news about Project Hades and more! Happy emulating!&lt;/h5&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report April 2021</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/</link>
      <pubDate>Sun, 09 May 2021 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/</guid>
      <description>&lt;p&gt;Howdy yuz-ers! Another month gone, another progress report written. From new firmware versions to Vulkan fixes, we have quite a bit to talk about, so let’s get right into it!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Howdy yuz-ers! Another month gone, another progress report written. From new firmware versions to Vulkan fixes, we have quite a bit to talk about, so let’s get right into it!&lt;/p&gt;
&lt;h2 id=&#34;project-eleuthia&#34;&gt;Project Eleuthia&lt;/h2&gt;
&lt;p&gt;As described in &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-applet-overlays/&#34;&gt;its own dedicated article&lt;/a&gt;, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; and &lt;a href=&#34;https://github.com/Its-Rei&#34;&gt;Rei&lt;/a&gt; have been very busy &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6133&#34;&gt;&lt;em&gt;rei&lt;/em&gt;mplementing the applets&lt;/a&gt; yuzu uses.&lt;/p&gt;
&lt;p&gt;This first step implements the &lt;code&gt;On-Screen Keyboard&lt;/code&gt; (or OSK) that games use, and the &lt;code&gt;Error Display&lt;/code&gt; yuzu uses to alert the user to bugs, missing data, or crashes.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./osk1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/osk1_hu570db074cf62d4f9859fc182e850552e_597810_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Examples of the different kinds of keyboards games request&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./osk2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/osk2_hu790d73f10f126ef0c4712e58cbf5a128_86692_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Examples of the different kinds of keyboards games request&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./osk3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/osk3_hu710b6c0150e0c275201c73ef535b2701_249683_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Examples of the different kinds of keyboards games request&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Examples of the different kinds of keyboards games request&lt;/p&gt;


&lt;p&gt;Another major advantage is adding gamepad support! No need to get off the couch to grab a keyboard anymore.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./error1.png&#34; title=&#34; An error example&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/error1_hu60695a5bfb724efeb7fda18e719f6e79_54846_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; An error example&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; An error example&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Part of the effort included working around Qt’s quirks, so as a by-product users now have the option to select either the old &lt;code&gt;Exclusive Fullscreen&lt;/code&gt; (recommended and used as default on Linux), or the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6135&#34;&gt;new&lt;/a&gt; &lt;code&gt;Borderless Fullscreen&lt;/code&gt; (recommended for most cases and to have OSK properly working).&lt;/p&gt;
&lt;p&gt;Borderless not only gives us better input support for gamepads, but also reduces screen tearing and improves clock management related performance issues on some AMD GPUs.&lt;/p&gt;
&lt;h2 id=&#34;input-improvements&#34;&gt;Input improvements&lt;/h2&gt;
&lt;p&gt;A feature lacking from our &lt;code&gt;Stereo Vision&lt;/code&gt; implementation was support for the Switch’s motion detection, and by this we don&amp;rsquo;t mean Joy-Cons, but rather the actual console.
This is commonly used for moving the camera with your head when the Switch is in the Labo goggles.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6226&#34;&gt;implemented SevenSixAxis and ConsoleSixAxisSensor&lt;/a&gt;, continuing from &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6224&#34;&gt;previous work&lt;/a&gt; done by &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph,&lt;/a&gt; allowing your configured motion device to freely let you look around in compatible games.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vr.png&#34; title=&#34; Please don&amp;#39;t use it like this...&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/vr_hu83682f27ceb9ddfde613d1cd19ad58d4_22601_372x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Please don&amp;#39;t use it like this...&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Please don&amp;#39;t use it like this...&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Both the left and right Joy-Cons map their buttons to different memory locations, as &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; found out.
He discovered that we had the wrong &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6131&#34;&gt;location for the SL and SR buttons.&lt;/a&gt;
One fix later, and everything is as it should be.&lt;/p&gt;
&lt;p&gt;A long standing bug when trying to play &lt;code&gt;Mario Kart 8 Deluxe&lt;/code&gt; in local split screen multiplayer was a freeze that occurred when confirming all connected players.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6205&#34;&gt;Morph&lt;/a&gt; fixed this crash by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6205&#34;&gt;sending the focus state change message&lt;/a&gt; on applet state changes.&lt;/p&gt;
&lt;p&gt;Thank you EmulationFanatic and riperiperi for the help!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./mk8input.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Better to crash other players than crash the game!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Taking inspiration from &lt;a href=&#34;https://rpcs3.net/&#34;&gt;RPCS3&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6205&#34;&gt;Morph&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6241&#34;&gt;sets the default keyboard input&lt;/a&gt; to something more suitable for PC users.
You just can’t beat WASD movement, especially when combined with mouse aiming.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./keys.png&#34; title=&#34; Rip and tear, press and click until it is done&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/keys_hu2773565411ba624b4ad48db890d304fc_73287_872x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Rip and tear, press and click until it is done&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Rip and tear, press and click until it is done&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Gamecube controllers connected to an adapter sometimes reported the joystick off-center due to invalid data being sent during the connection.
&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; solved this &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6243&#34;&gt;by taking 4 measurements during initialization&lt;/a&gt;, ensuring that the controller finds its center, like any warrior should.&lt;/p&gt;
&lt;h2 id=&#34;user-interface-changes&#34;&gt;User interface changes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Kewlan&#34;&gt;Kewlan&lt;/a&gt; is back with more UI improvements!&lt;/p&gt;
&lt;p&gt;To start off, they&amp;rsquo;ve &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6198&#34;&gt;added a favourite option in the context menu,&lt;/a&gt; so you can force some of your games to the top of the list.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./fav.png&#34; title=&#34; Just right click them!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/fav_huff3a3f0a0eaa0ba7c1cdd8235e9d227b_56553_442x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Just right click them!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Just right click them!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Additionally, they &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6261&#34;&gt;updated the results from a filtered search&lt;/a&gt; after you remove a directory. This fixes incorrect behaviour if the user decides to modify the game folders while doing a filtered search.&lt;/p&gt;
&lt;p&gt;And lastly, they fixed a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6263&#34;&gt;random bug that caused folders to expand or collapse when moving them in the game list.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Several users reported that &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; may get stuck when loading our web applet, making the whole game softlock.
Turns out the URL used by the applet was getting deleted before being used.
&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; got around this bug &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6257&#34;&gt;by extending the lifetime of the URL.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;its-12-oclock-and-its-time-for-a-new-firmware&#34;&gt;It’s 12 o’clock and it’s time for a new firmware!&lt;/h2&gt;
&lt;p&gt;A big challenge made its entrance last month: the Nintendo Switch&amp;rsquo;s firmware version was finally updated to Version 12.X, which has kept our developers quite busy figuring out what has changed and what needs to be implemented.&lt;/p&gt;
&lt;p&gt;Thanks to joint efforts of &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt;, &lt;a href=&#34;https://github.com/lioncash&#34;&gt;lioncash&lt;/a&gt;, and &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt;, yuzu was able to update many system call ID tables (&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6153&#34;&gt;PR #6153&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6154&#34;&gt;PR #6154&lt;/a&gt;), services and function tables (&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6157&#34;&gt;PR #6157&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6158&#34;&gt;PR #6158&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6159&#34;&gt;PR #6159&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6160&#34;&gt;PR #6160&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6161&#34;&gt;PR #6161&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6164&#34;&gt;PR #6164&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6171&#34;&gt;PR #6171&lt;/a&gt;), as well as some system values (&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6155&#34;&gt;PR #6155&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Firmware updates generally aim to improve the stability of the hardware and patch exploits, but they might also add support for new features under the hood, which usually requires changes to services, their structures, and other monsters lurking within the OS.
Since future games could make use of any of these things, it’s imperative to integrate and support these changes as soon as possible.&lt;/p&gt;
&lt;h2 id=&#34;general-bugfixes&#34;&gt;General bugfixes&lt;/h2&gt;
&lt;p&gt;Recently, &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; caught some bugs using &lt;a href=&#34;https://github.com/google/sanitizers/wiki&#34;&gt;Sanitizers&lt;/a&gt;: a number of tools present in some compilers, which are used to analyse the source code and alert the programmer about memory-related problems (leaks, overflows), undefined behaviour (code that works in one environment but might fail in another), data races (a synchronization problem that appears when dealing with multiple threads accessing the same data), etc.
This led to a series of PRs implementing fixes in yuzu&amp;rsquo;s code, such as: &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6141&#34;&gt;Prevent stack-use-after-scope&lt;/a&gt;, which ensures that data that used to be accessed indirectly through pointers cannot be accessed again once the reference is lost (possibly corrupting the data that was being pointed to), &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6142&#34;&gt;Avoid reference binding to misaligned address&lt;/a&gt;, as well as a number of undefined behaviour bugs that occurred when copying memory from one address to another (&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6143&#34;&gt;PR #6143&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6145&#34;&gt;PR #6145&lt;/a&gt;, and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6146&#34;&gt;PR #6146&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;toastUnlimited also reported an overflow that occurred when he tried playing &lt;code&gt;Pokémon Sword&lt;/code&gt; and &lt;code&gt;Pokémon Let&#39;s Go Pikachu&lt;/code&gt;’s demo, which was related to some of the operations realized by the clock.
This helped &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; notice a problem in the implementation of the &lt;code&gt;CalculateStandardUserSystemClockDifferenceByUser&lt;/code&gt; function, and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6167&#34;&gt;promptly submit a fix&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Different processes communicate through mechanisms known as &lt;code&gt;IPC&lt;/code&gt; (Inter-Process Communication), and they can send data by using &lt;code&gt;data buffers&lt;/code&gt;, typically used for large data transfers, or &lt;code&gt;raw arguments&lt;/code&gt;, which are usually composed of smaller data sets.
In the case of the clock service of this function, this information has to be sent through the aforementioned &lt;code&gt;data buffers&lt;/code&gt;, but it was being extracted as &lt;code&gt;raw arguments&lt;/code&gt; instead.
This caused the function to operate using uninitialized data (in other words, junk), since it retrieved the wrong values.
What should have been generally reported as a couple of milliseconds was instead being reported as a time span of trillions of years — approximately, 320 000 times the calculated age of the universe!
Thankfully, the fix only required a small change, so now the values are retired from the proper buffers, and yuzu won&amp;rsquo;t try to dilate time any more (relatively speaking, if you catch my drift).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; made a follow-up of previous work that aimed to improve the accuracy of how the values for &lt;code&gt;resource limits&lt;/code&gt; are &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6185&#34;&gt;used in the kernel&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By nature, all resources in any piece of hardware are limited.
The amount of memory, the number of I/O devices, and even the number of processors, just to name a few examples, have a fixed value that cannot be changed at whim, without changing the hardware first.
One of the many functions of the kernel in an operating system is to manage and distribute these resources to the processes that request them  — and for this, it must know the availability and limits of these resources.
Whenever a process is created or deleted, the hardware calculates the amount of memory that is free to use and being used by checking and updating the variables that keep track of these resources.&lt;/p&gt;
&lt;p&gt;Previously, yuzu created processes in such a way that each instance of a process had their own value for &lt;code&gt;resource limits&lt;/code&gt;.
This was a work-around to ensure that, whenever a process queried the kernel for the amount of memory available, a correct value was always returned.
This, however, is not how the hardware works.
Memory is a resource that is shared system-wide among all the processes, and the task of the kernel to coordinate how these resources are shared among the processes in the system.&lt;/p&gt;
&lt;p&gt;With this PR, processes don&amp;rsquo;t &amp;ldquo;own&amp;rdquo; their own instance of &lt;code&gt;resource limits&lt;/code&gt;, and they now use the global kernel instance instead.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;Dynarmic&lt;/a&gt; — yuzu&amp;rsquo;s JIT, used to translate the Switch’s ARM CPU instructions — was recently updated again in order to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6132&#34;&gt;increase the size of the code cache&lt;/a&gt; (where yuzu stores the translated code), and add support for some unimplemented instructions from the &lt;code&gt;thumb32&lt;/code&gt; set, expanding the amount of code that can be translated.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/degasus&#34;&gt;degasus&lt;/a&gt; found that the code cache size was too small when testing &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;, and alerted &lt;a href=&#34;https://github.com/MerryMage&#34;&gt;merry&lt;/a&gt;, the chief maintainer, about the problem.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smash.png&#34; title=&#34; No items, The Best only, Final Destination&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/smash_huab2d8b3d86d2c120eabadd193b8a6a99_3577392_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; No items, The Best only, Final Destination&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; No items, The Best only, Final Destination&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Surprisingly, this simple change fixed a very obnoxious problem in a completely different game: the strange slowdowns in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.
It turned out that these slowdowns were unrelated to the power of the computer running yuzu, nor were they neither related to building the shader cache.
Dynarmic was just translating code again, simply because the cache where the translated code was stored was too small.
But now, with the new size value in place, Dynarmic has no need for any recompilation, and the emulation can proceed smoothly.&lt;/p&gt;
&lt;p&gt;Continuing with previous &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; Spirit Board’s fixes, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6170&#34;&gt;synchronized the network clock to the local clock&lt;/a&gt;, solving the game timers getting reset.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; also fixed &lt;code&gt;GetClockSnapshotFromSystemClockContext&lt;/code&gt;.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6214&#34;&gt;This PR&lt;/a&gt; allowing &lt;code&gt;Super Kirby Clash&lt;/code&gt; and &lt;code&gt;Yo-Kai Watch 4&lt;/code&gt; to boot.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./kirby.png&#34; title=&#34; Poyo!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/kirby_hu6c8d95f6728eb2366b73b7add2812006_2931019_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Poyo!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Poyo!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6234&#34;&gt;stubbing &lt;code&gt;SetRequestExitToLibraryAppletAtExecuteNextProgramEnabled&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6235&#34;&gt;adding the &lt;code&gt;ectx:aw&lt;/code&gt; service&lt;/a&gt; made &lt;code&gt;Pixel Game Maker Series Werewolf Princess Kaguya&lt;/code&gt; boot!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kaguya.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/kaguya_hu8efd136892d8794cbd2c43d30d0e4c68_362752_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Right picture is from a more recent PR that will be mentioned in the next progress report (Pixel Game Maker Series Werewolf Princess Kaguya)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kaguya2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/kaguya2_huf172acf33f244f5a2a658f67cd06bccc_252578_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Right picture is from a more recent PR that will be mentioned in the next progress report (Pixel Game Maker Series Werewolf Princess Kaguya)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Right picture is from a more recent PR that will be mentioned in the next progress report (Pixel Game Maker Series Werewolf Princess Kaguya)&lt;/p&gt;


&lt;p&gt;The game currently has rendering bugs especially affecting Nvidia hardware. AMD users will have a better experience in this particular game for now.&lt;/p&gt;
&lt;h2 id=&#34;graphics-improvements&#34;&gt;Graphics improvements&lt;/h2&gt;
&lt;p&gt;For our &lt;del&gt;thermonuclear&lt;/del&gt; laptop users and heavy multitaskers, the legendary &lt;a href=&#34;https://github.com/degasus&#34;&gt;degasus&lt;/a&gt; has a treat for you.
By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6162&#34;&gt;avoiding spin loops&lt;/a&gt; in the video core, more idle time is achieved with no performance loss.
This means the GPU can enter &lt;code&gt;sleep&lt;/code&gt; state more often, resulting in lower temperatures/power consumption, better battery life, and allows the scheduler to take on other tasks waiting in the background, improving system responsiveness.
No more burned thighs while on the pause menu, laptop users!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Joshua-Ashton&#34;&gt;Joshua-Ashton&lt;/a&gt;, the Frog Master from &lt;a href=&#34;https://github.com/doitsujin/dxvk&#34;&gt;DXVK&lt;/a&gt;, brought us a few Vulkan fixes and improvements.&lt;/p&gt;
&lt;p&gt;First on the list is avoiding a device loss (GPU locks up and the driver restarts it) by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6180&#34;&gt;checking the return value of vkAcquireNextImageKHR.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Joshua also &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6181&#34;&gt;enabled the individual features&lt;/a&gt; from &lt;code&gt;VK_EXT_robustness2&lt;/code&gt;, instead of just enabling the extension.&lt;/p&gt;
&lt;p&gt;And finally, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6182&#34;&gt;fixing a wrong offset for null vertex buffers&lt;/a&gt; to properly follow the Vulkan specification.
You never know when a driver will behave in erratic ways. Fixes like this allow developers to report bugs to the vendors&amp;rsquo; driver development teams, thanks to confirming everything is within specs. Any resulting error falls under responsibility of the driver teams.&lt;/p&gt;
&lt;p&gt;OpenGL wasn&amp;rsquo;t the only API to have BGR issues, it turns out Vulkan can also suffer from &amp;ldquo;blue madness&amp;rdquo; when a game uses the &lt;code&gt;A1B5G5R5_UNORM&lt;/code&gt; texture format.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6238&#34;&gt;swapped the Red and Blue channels&lt;/a&gt; of this format, fixing colours in games like &lt;code&gt;Pokémon Let’s Go Eevee/Pikachu&lt;/code&gt;, &lt;code&gt;Shantae: Risky’s Revenge&lt;/code&gt;, and many others!
You can see the result in the following pictures, before (left) and after (right).&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pokebug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/pokebug_hu863223a432dd4bc55841f46140c761f7_1227246_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;I didn’t want Pokémon Blue! (Pokémon Let&amp;#39;s Go, Eevee!)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pokefix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/pokefix_hu1591ffdf51d53f7b932f06839e43a3ea_1129846_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;I didn’t want Pokémon Blue! (Pokémon Let&amp;#39;s Go, Eevee!)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;I didn’t want Pokémon Blue! (Pokémon Let&amp;#39;s Go, Eevee!)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./shanbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/shanbug_hu7d964a72ff5fd61efd93e64944faf03f_951050_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That’s definitely not Vivi (Shantae: Risky’s Revenge)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./shanfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2021/shanfix_hubae4324284a41f0a1aac33a149688ddb_1004284_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That’s definitely not Vivi (Shantae: Risky’s Revenge)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;That’s definitely not Vivi (Shantae: Risky’s Revenge)&lt;/p&gt;


&lt;h2 id=&#34;linux-build-system&#34;&gt;Linux Build System&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; has been periodically improving yuzu’s build system for our Linux user base.
Not all our users want or are able to use the official AppImage, so not only did our build instructions need to be improved, but it was also equally important to refine the environment necessary to get yuzu running — namely, the dependencies, build process, etc.&lt;/p&gt;
&lt;p&gt;The first step was to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6204&#34;&gt;make SDL2&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6207&#34;&gt;an external dependency.&lt;/a&gt;
This would allow us to ship the latest version without having to face Linux distributions&amp;rsquo; incompatibilities due to different build flags (different characteristics being enabled), or outright outdated versions that aren’t able to support all of the required features that our input asks for.&lt;/p&gt;
&lt;p&gt;The changes to SDL2 introduced an incompatibility with the Conan-provided Boost version. &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6222&#34;&gt;Downloading it as an external dependency&lt;/a&gt; ensures compatibility, as most of the time the local packages provided by the distribution won’t be enough.
This change also makes our external download script cross-platform with Windows and other distributions that used to require special workarounds.&lt;/p&gt;
&lt;p&gt;As a special bonus, due to all of these changes, Red Hat Enterprise Linux 8 and its derivatives can build yuzu in a much more user-friendly way.&lt;/p&gt;
&lt;p&gt;For anyone interested, we keep updated build instructions &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/wiki/Building-For-Linux&#34;&gt;on this page.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;This section has lately turned into Project Hades teasing, but we won’t apologize for that! Here’s more info/teasing:&lt;/p&gt;
&lt;p&gt;While working on implementing SPIR-V for OpenGL, we discovered that Nvidia decided to take the lazy way out and just convert SPIR-V back to GLSL, which is then compiled again to GLASM.
This not only destroys any benefit we expected to gain when switching to SPIR-V by default, it also causes huge delays and rendering problems.
We are forced to also implement GLSL in Project Hades, introducing a considerable amount of extra work that wasn’t expected.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./hades.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The best use of Tessellation Shaders ever&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This will provide better compatibility for Nvidia hardware, saving Fermi once again from the gutter.&lt;/p&gt;
&lt;p&gt;Regarding other project news, Morph’s Project Gaia is growing. german77 is working hard on Project Kraken. bunnei has more kernel changes in the oven.&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you for sticking with us and see you next month!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report March 2021</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2021/</link>
      <pubDate>Sat, 10 Apr 2021 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2021/</guid>
      <description>&lt;p&gt;Hi yuz-ers, we&amp;rsquo;re here with the March progress report to offer you our latest news! We continue to update the Kernel, some considerations have been made for specific hardware, we have several changes and fixes to discuss, and we have a sneak peek at the progress on Project Hades.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hi yuz-ers, we&amp;rsquo;re here with the March progress report to offer you our latest news! We continue to update the Kernel, some considerations have been made for specific hardware, we have several changes and fixes to discuss, and we have a sneak peek at the progress on Project Hades.&lt;/p&gt;
&lt;h2 id=&#34;general-bug-fixes-and-improvements&#34;&gt;General bug fixes and improvements&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; to the rescue! &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6053&#34;&gt;Fixing CalculateSpanBetween&lt;/a&gt; allows &lt;code&gt;Super Smash Bros. Ultimate’s&lt;/code&gt; Spirit Board to work!
A separate PR &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6054&#34;&gt;improving ClockSnapshot&lt;/a&gt; fixes the timers.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./spirit.png&#34; title=&#34; More work is needed to make World of Light playable, we continue to fight for it! (Super Smash Bros. Ultimate)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2021/spirit_huf76c90c1ab70c5bbbda791294d1ae883_1177156_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; More work is needed to make World of Light playable, we continue to fight for it! (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; More work is needed to make World of Light playable, we continue to fight for it! (Super Smash Bros. Ultimate)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Those who have paid attention to our previous progress reports will notice that we sometimes write about when a service is &lt;code&gt;stubbed&lt;/code&gt; (ignored, basically) to allow a game to progress further.
This process requires manual intervention each and every time a game update or new game uses a new unimplemented service.
To mitigate user frustration, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; implemented &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6062&#34;&gt;Auto-Stubbing&lt;/a&gt;, continuing &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4237&#34;&gt;previous work&lt;/a&gt; from &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With this toggle, games will just ignore any unimplemented services and continue running, allowing developers to focus on the services that need urgent, proper implementations.
This is not a new invention by any means. Several emulators in the past have used this feature to great benefit, reducing the load on developers and providing a better experience for the end user.&lt;/p&gt;
&lt;p&gt;Keep in mind that auto-stub will be always disabled by default on each boot, so it has to be manually enabled for each session by going to &lt;code&gt;Emulation &amp;gt; Configure &amp;gt; General &amp;gt; Debug &amp;gt; Enable Auto-Stub&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./stub.png&#34; title=&#34; You can find it here, at the bottom of the picture in the Advanced section&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2021/stub_hud7f37b35d37ce77085b17be9411f1d11_23455_1021x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; You can find it here, at the bottom of the picture in the Advanced section&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; You can find it here, at the bottom of the picture in the Advanced section&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; took it upon himself to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6070&#34;&gt;update the emulated Switch firmware version to 11.0.1&lt;/a&gt;, and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6069&#34;&gt;the NgWord version,&lt;/a&gt; improving compatibility with recent games, and solving some odd bugs.
For example, &lt;code&gt;Disgaea&lt;/code&gt; games no longer require a firmware dump to be playable.&lt;/p&gt;
&lt;p&gt;We now have some new additions to our command line arguments thanks to &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;.
Users can &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6116&#34;&gt;select which user profile to load&lt;/a&gt; by adding the &lt;code&gt;-u #&lt;/code&gt; argument to their command, with &lt;code&gt;#&lt;/code&gt; being the profile number.
For example, by using &lt;code&gt;yuzu.exe -u 1 -g &amp;quot;path_to_game&amp;quot;&lt;/code&gt;, the second profile will be selected.&lt;/p&gt;
&lt;p&gt;In an attempt to reduce file size when downloading yuzu and also reduce the download size when building it from source, &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; reworked &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5880&#34;&gt;how FFmpeg is linked&lt;/a&gt;.
This way, only what is needed for yuzu is built, reducing the size and build time required for this module, and as an added bonus Linux users will avoid problems with possible outdated versions included in their distributions. Data capped users rejoice!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ivan-boikov&#34;&gt;ivan-boikov&lt;/a&gt; fixed an &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6092&#34;&gt;issue where pressing Cancel would result in the wrong destination folder&lt;/a&gt; in the file system configuration. Nothing beats quality of life fixes!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Microsoft Visual Studio&lt;/code&gt;, by default, will compile applications with the character set corresponding to the region of the local developer’s PC.
This limitation can cause issues for certain regions like Asia when trying to build our source.
Morph bypassed this limitation &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6029&#34;&gt;by forcing the UTF-8 character set.&lt;/a&gt;
As an added benefit, some UI elements like up and down arrows started rendering. Free bonus.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./utf8.png&#34; title=&#34; There&amp;#39;s nothing like a good arrow icon.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2021/utf8_hu2050023f4d130682a5821e9002527337_4157_193x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; There&amp;#39;s nothing like a good arrow icon.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; There&amp;#39;s nothing like a good arrow icon.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While a ton of work is needed to make &lt;code&gt;MONSTER HUNTER RISE&lt;/code&gt; run, including finishing the shader decompiler rewrite and implementing the asynchronous software keyboard, that doesn’t mean &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; can’t start some preliminary work.
In this particular case, the focus is to improve &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6112&#34;&gt;&lt;code&gt;Parental Control&lt;/code&gt; emulation,&lt;/a&gt; bringing it closer to the Switch’s native hardware implementation.&lt;/p&gt;
&lt;h2 id=&#34;graphic-improvements&#34;&gt;Graphic improvements&lt;/h2&gt;
&lt;p&gt;Since the introduction of &lt;code&gt;Asynchronous shaders&lt;/code&gt;, we noticed that not all drivers like the feature.
In particular, Intel Windows OpenGL, and the proprietary AMD drivers (for both Windows with Adrenalin, and Linux with AMDGPU-PRO) despise the setting, with Intel ignoring it at a driver level, and AMD outright skipping frames, resulting in massive stuttering.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6095&#34;&gt;added a blacklist&lt;/a&gt; for our red and blue GPU users, ensuring no performance or graphical regressions occur while attempting to use a feature that their drivers can’t support in OpenGL anyway.
It’s worth mentioning that Asynchronous shaders work as intended in Vulkan and all free Linux OpenGL drivers, be it for AMD or Intel. Nvidia works as expected on any combination of API or OS with their proprietary drivers.
Thanks to &lt;a href=&#34;https://github.com/theboy181&#34;&gt;theboy181&lt;/a&gt; for the suggestion!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; implemented an optimization that affects all graphic caches (texture, buffer, shader).
By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6028&#34;&gt;using a flat array&lt;/a&gt;, cache performance is improved slightly, with the bonus of some memory bandwidth saved due to better resource allocation.
A small but measurable 5% performance bump can be experienced, for example, in &lt;code&gt;Super Mario Odyssey&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;technical-fixes-continued&#34;&gt;Technical fixes, continued&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;dynarmic&lt;/a&gt; submodule has been recently &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6047&#34;&gt;updated in this PR&lt;/a&gt;, merging the latest changes with yuzu.
Thanks to the efforts of &lt;a href=&#34;https://github.com/MerryMage/&#34;&gt;merry&lt;/a&gt; and &lt;a href=&#34;https://github.com/lioncash&#34;&gt;lioncash&lt;/a&gt;, many &lt;code&gt;thumb32&lt;/code&gt; instructions (a subset of ARM instructions) were implemented, increasing the amount of instructions supported for 32-bit games on yuzu.&lt;/p&gt;
&lt;p&gt;Additionally, all floating-point instructions received minor optimizations, and a couple of bugs in the implementation of &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6118&#34;&gt;AVX-512 extensions&lt;/a&gt; were fixed too.
There was also a problem with &lt;code&gt;AMD&lt;/code&gt; CPUs, where previously dynarmic disabled the use of the &lt;code&gt;BMI&lt;/code&gt; instruction set (used for bit manipulation), due to being extremely slow in those processors.
However, on Zen 3 and newer, the performance of these instructions has increased considerably, so now dynarmic allows these &lt;code&gt;AMD&lt;/code&gt; processors to use &lt;code&gt;BMI&lt;/code&gt; instructions if the detected CPU is fast enough to perform them.&lt;/p&gt;
&lt;p&gt;All of these changes were possible thanks to the contribution of &lt;a href=&#34;https://github.com/Wunkolo&#34;&gt;Wunkolo&lt;/a&gt; to dynarmic (which eventually made it to yuzu), so shoutouts for the great work!&lt;/p&gt;
&lt;p&gt;Going back to kernel updates, &lt;a href=&#34;https://github.com/bunnei/&#34;&gt;bunnei&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6099&#34;&gt;reworked and cleaned the kernel memory management code&lt;/a&gt;.
As the name implies, this is the part of the OS that allocates memory resources for games when they request them.
With this change, the implementation matches more closely that of the Nintendo Switch.
As always, these changes make it easier to support any future hardware revisions, along with all other kernel changes that are currently ongoing.&lt;/p&gt;
&lt;p&gt;Bunnei also fixed &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6036&#34;&gt;a memory leak&lt;/a&gt; caused by &lt;code&gt;dummy threads&lt;/code&gt;.
These dummies are used by yuzu to interact with our emulated kernel.
Every &amp;ldquo;real&amp;rdquo; emulated thread has a dummy associated with it.
As explained in the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2021/&#34;&gt;previous progress report&lt;/a&gt;, yuzu utilizes fibers in order to emulate threads.
However, these dummy threads don&amp;rsquo;t actually use fibers.
With this change, bunnei removed some unnecessary memory overhead by removing the creation of fibers (which would only be needed for &amp;ldquo;real&amp;rdquo; emulated threads), thus reducing the memory usage by a bit.&lt;/p&gt;
&lt;p&gt;Another bug that was also fixed by bunnei was related to how &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6100&#34;&gt;JIT states are saved between page table changes&lt;/a&gt;.
A &lt;a href=&#34;https://en.wikipedia.org/wiki/Page_table&#34;&gt;page table&lt;/a&gt; is a scheme used to map physical memory into virtual memory, used to give processes the impression they&amp;rsquo;re working with a unique, contiguous section of memory, regardless of where and how this memory is actually stored.
Due to the way dynarmic is coded, whenever yuzu changes the page table that is currently in use, it needs to recreate the CPU JIT.
But, until now, yuzu wasn&amp;rsquo;t saving and restoring the state of this JIT properly when this happened.
However, with this change, all the context needed by the JIT is now stored and retrieved correctly.&lt;/p&gt;
&lt;h2 id=&#34;input-improvements&#34;&gt;Input improvements&lt;/h2&gt;
&lt;p&gt;Not all devices can do &lt;code&gt;N-key rollover&lt;/code&gt;, meaning pressing many keys/buttons at the same time without some inputs being missed.
For this, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; implemented a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6040&#34;&gt;toggle to hold a button for you.&lt;/a&gt;
This way you can ask yuzu to keep pressing a button, freeing your hand and devices from it, while you move to something else!
To access this feature, right click the Modifier button in control settings, and select &lt;code&gt;Toggle button&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./toggle.png&#34; title=&#34; Right click any button or modifier&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2021/toggle_hua7e71105a8314bd44a01ad8e7ed31634_66982_1021x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Right click any button or modifier&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Right click any button or modifier&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;For those using &lt;a href=&#34;https://cemuhook.sshnuke.net/&#34;&gt;Cemuhook&lt;/a&gt; to provide motion via an Android device, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; has a nice stability improvement for you!
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6004&#34;&gt;Each individual socket connection now needs its unique client ID.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In a separate PR, german77 &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6127&#34;&gt;tests using a single UDP connection per server&lt;/a&gt; instead of per controller, reducing the error rate thanks to simplified communications.
The end result of this work is more stable connections for motion devices.&lt;/p&gt;
&lt;p&gt;Xbox 360 and Xbox One controllers were incorrectly displayed as just &lt;code&gt;Xinput Controller&lt;/code&gt; in our device list, causing confusion to our users.
Additionally, the default Pro Controller mapping had its face buttons swapped by mistake.
&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6119&#34;&gt;fixed both issues.&lt;/a&gt; Bad defaults are bad.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;Project Hades, our rewrite of the shader decompiler, is taking shape.
On the games that can be booted now, we can already measure performance increases and countless bugs fixed.&lt;/p&gt;
&lt;p&gt;Here’s a sneak peak, fresh from the source.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./wip.png&#34; title=&#34; You can say it&amp;#39;s one hell of a rewrite!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2021/wip_hu3d34bb77dc55edd65b3f16256a0f841d_1618135_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; You can say it&amp;#39;s one hell of a rewrite!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; You can say it&amp;#39;s one hell of a rewrite!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;While our graphics devs continue to rewrite all shader instructions, we can inform everyone that the new pipeline cache for Vulkan is fully working, storing and loading just as well as OpenGL’s shader cache, while even being faster!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./wip1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2021/wip1_hue4ceccf5ff2f341bc538ce6b993c5e52_2375665_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more hard crashes (Fire Emblem: Three Houses)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./wip2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2021/wip2_hu97a4ea07de5423f466ceaf5ed928bbb6_5334084_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more hard crashes (Fire Emblem: Three Houses)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./wip3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2021/wip3_hue86e53e19c7edd4d46601c1f1c5aee78_2376897_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more hard crashes (Fire Emblem: Three Houses)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;No more hard crashes (Fire Emblem: Three Houses)&lt;/p&gt;


&lt;p&gt;On top of that, Rodrigo also implemented a new kind of asynchronous shader “secret technique” that scales better with the number of threads available, and produces zero graphical glitches!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./wip4.png&#34; title=&#34; The Bokoblin Slayer (Hyrule Warriors: Age of Calamity)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2021/wip4_hue13b15e9a0d29453e5f5a8d51a6cd98c_4003779_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The Bokoblin Slayer (Hyrule Warriors: Age of Calamity)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The Bokoblin Slayer (Hyrule Warriors: Age of Calamity)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;We will expand this information once Hades is out and has its own dedicated article.&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you so much for allowing us to take some of your time, and see you next month!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>New Feature Release - Applet Overlays</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-applet-overlays/</link>
      <pubDate>Sat, 03 Apr 2021 01:00:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-applet-overlays/</guid>
      <description>&lt;p&gt;Hey there, yuz-ers!
Have you ever thought of enjoying yuzu on your TV, relaxing on your couch, but found our user interface cumbersome?
Thanks to the efforts of our developers &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; and &lt;a href=&#34;https://github.com/Its-Rei&#34;&gt;Rei&lt;/a&gt;, yuzu has taken a massive step forward in making couch gaming comfy.
Let&amp;rsquo;s dig in!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey there, yuz-ers!
Have you ever thought of enjoying yuzu on your TV, relaxing on your couch, but found our user interface cumbersome?
Thanks to the efforts of our developers &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; and &lt;a href=&#34;https://github.com/Its-Rei&#34;&gt;Rei&lt;/a&gt;, yuzu has taken a massive step forward in making couch gaming comfy.
Let&amp;rsquo;s dig in!&lt;/p&gt;
&lt;h1 id=&#34;what-is-this-about&#34;&gt;What is this about?&lt;/h1&gt;
&lt;p&gt;For a while now, users have complained that yuzu&amp;rsquo;s couch setup (full-screen, TV, controller) experience isn&amp;rsquo;t as comfortable as it could be.
One pain point was that pop-ups of any kind can&amp;rsquo;t be addressed with a controller.
On top of that, these pop-up windows were separate background processes that wouldn&amp;rsquo;t appear until you exited full-screen mode.
As you can guess, you always had to have a keyboard and mouse handy.&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./error_old.png&#34; title=&#34; Old error applet&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-applet-overlays/error_old_hucf490d9216edddf799ccbf12100e1b08_1893328_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Old error applet&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Old error applet&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./error_new.png&#34; title=&#34; New controller friendly error applet&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-applet-overlays/error_new_hucc6c7b86b81f2ff65c1d0c0dfe7e03e7_559004_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; New controller friendly error applet&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; New controller friendly error applet&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;To fix this once and for all, Rei started work on eliminating all pop-up windows and to make it possible to control all system messages with a controller.
It was during this time that Morph began working on rewriting our software keyboard applet.
And since the software keyboard applet wasn&amp;rsquo;t controller friendly either, they both collaborated and redesigned it from the ground up.&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./swkbd_old.png&#34; title=&#34; Old software keyboard applet&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-applet-overlays/swkbd_old_huc6e881e5d57201c17c9050b3ef45d73b_10851_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Old software keyboard applet&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Old software keyboard applet&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./swkbd_new.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; New controller friendly software keyboard applet&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/p&gt;
&lt;h1 id=&#34;the-software-keyboard&#34;&gt;The Software Keyboard&lt;/h1&gt;
&lt;p&gt;As many of you might know, the Switch has a software keyboard that allows players to input text into games.
What you might not know is that there are multiple variants of keyboards implemented within the Switch&amp;rsquo;s Horizon OS.
For example, there is the full-screen keyboard, which pauses games and allows input, and there is the inline keyboard, which allows input while the game is running.&lt;/p&gt;
&lt;p&gt;Our old software keyboard implementation was just the bare minimum required by the full-screen variant and, due to its design, was difficult to add support for the other variants.
It also quickly became outdated due to the newer revisions of the applet that shipped with later Switch firmware updates.
Equipped with the knowledge and expertise from previously rewriting two other applets - namely, the browser applet &amp;amp; the controller applet - Morph set out to rewrite the entire software keyboard applet from scratch.&lt;/p&gt;
&lt;p&gt;Rei had meticulously designed the new overlays for the keyboard applet and they turned out to be absolutely stunning.
Now, all that was left was to implement the keyboard applet backend and connect it to the frontend — but then came the challenges.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./osk_ssbu_line_white.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-applet-overlays/osk_ssbu_line_white_hu10a4a9fda2d0b0b90fc2401684a1d2d3_73062_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The new software keyboard layouts for each yuzu theme&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./osk_ssbu_line_midnight.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-applet-overlays/osk_ssbu_line_midnight_hu96ff7a183ca05854fd0696415b19c464_78369_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The new software keyboard layouts for each yuzu theme&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./osk_ssbu_line_dark.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-applet-overlays/osk_ssbu_line_dark_hu077abc1d4082e197cb507cc585c64164_77745_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The new software keyboard layouts for each yuzu theme&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The new software keyboard layouts for each yuzu theme&lt;/p&gt;


&lt;h1 id=&#34;challenges&#34;&gt;Challenges&lt;/h1&gt;
&lt;p&gt;As mentioned earlier, our old implementation was not designed with multi-variant support in mind.
With the rewrite, our foundational goal was to ensure all keyboard variants were supported.
A major challenge was figuring out how the inline keyboard variant worked.
In contrast to the full-screen variant, this one worked asynchronously.&lt;/p&gt;
&lt;p&gt;Applets run as separate processes on the Switch, but games have a habit of pausing their processes, invoking the keyboard applet, and making it seem synchronous.
There are several more applets that work asynchronously in addition to the inline keyboard variant.
As such, Morph spent a lot of time and effort on testing how the applet worked on original hardware — figuring out how all the pieces fall into place, making optimizations, and thus slowly perfected the backend implementation.&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./mhgu_line_swkbd.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Monster Hunter Generations Ultimate - Inline Keyboard in action&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./swsh_num_swkbd.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Pokémon Sword/Shield - Numeric Keyboard in action&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;With the backend in place, a new set of challenges arose due to yuzu&amp;rsquo;s frontend library, &lt;a href=&#34;https://www.qt.io/&#34;&gt;Qt&lt;/a&gt;.
Qt has a &lt;strong&gt;lot&lt;/strong&gt; of annoying quirks, such as window positioning, transparency, and more.
These took several days of testing to track down and resolve.
For the frontend, Morph and Rei also had to plan and account for various other things like game specific keyboard scaling, high DPI displays, and higher resolutions.&lt;/p&gt;
&lt;p&gt;The final and most important challenge was figuring out how to make the applet controller friendly.
Thanks to the efforts spent in planning and testing at various stages of development, our devs were able to overcome these challenges.&lt;/p&gt;
&lt;h1 id=&#34;extra&#34;&gt;Extra&lt;/h1&gt;
&lt;p&gt;Although the overlay dialogs were initially designed with the keyboard applet in mind, the devs soon discovered its potential as a replacement for pop-up windows.
Thanks to this, the error applet has now joined the list of controller friendly applets, with more to come soon.
The error applet is used by games to crash and report back error codes to the user in various scenarios, which was previously done via a pop-up window.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./error_white.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-applet-overlays/error_white_hud3bb1ba5ce2bcad704158530826d5151_734789_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The new error applet overlays for each yuzu theme&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./error_midnight.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-applet-overlays/error_midnight_hud595fd048a1e9a938b4f2dce7be224c0_659969_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The new error applet overlays for each yuzu theme&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./error_dark.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-applet-overlays/error_dark_hu3985d37d183b137d70646b0b6860235a_566637_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The new error applet overlays for each yuzu theme&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The new error applet overlays for each yuzu theme&lt;/p&gt;


&lt;h1 id=&#34;fin&#34;&gt;Fin&lt;/h1&gt;
&lt;p&gt;Both the new keyboard applet and the controller friendly error applet are now available in the &lt;a href=&#34;https://yuzu-mirror.github.io/help/early-access/&#34;&gt;latest Early Access build&lt;/a&gt;.
Since these are currently still under development, we would like to hear more about your experiences and any bugs/issues you might encounter.
Please don&amp;rsquo;t hesitate to reach out to us on our Discord server&amp;rsquo;s Patreon support channels to report any findings.
That&amp;rsquo;s all we have for today but, we&amp;rsquo;re sure to be back with more exciting news soon!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report February 2021</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2021/</link>
      <pubDate>Wed, 10 Mar 2021 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-feb-2021/</guid>
      <description>&lt;p&gt;Welcome back yuz-ers, welcome to &lt;del&gt;City 17&lt;/del&gt; February’s progress report! This time we will talk about Vulkan performance improvements, audio changes, how to make good use of compute shaders, new input additions, and more kernel rewrites.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Welcome back yuz-ers, welcome to &lt;del&gt;City 17&lt;/del&gt; February’s progress report! This time we will talk about Vulkan performance improvements, audio changes, how to make good use of compute shaders, new input additions, and more kernel rewrites.&lt;/p&gt;
&lt;h2 id=&#34;new-minimum-requirements&#34;&gt;New minimum requirements&lt;/h2&gt;
&lt;p&gt;Thanks to progress in Linux’s mesa drivers, we&amp;rsquo;ve recently modified our minimum graphics requirements.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5888&#34;&gt;yuzu now requires OpenGL 4.6&lt;/a&gt;. However, any previously compatible hardware reaches this requirement with its latest GPU drivers installed, even old Fermi or GCN 1.0 series products.
Laptop users, like desktop users, should visit the GPU manufacturer&amp;rsquo;s site (&lt;a href=&#34;https://www.amd.com/en/support&#34;&gt;AMD&lt;/a&gt;, &lt;a href=&#34;https://downloadcenter.intel.com/product/80939/Graphics&#34;&gt;Intel&lt;/a&gt;, and &lt;a href=&#34;https://www.nvidia.com/en-us/geforce/drivers/&#34;&gt;Nvidia&lt;/a&gt;) instead of the laptop vendor’s site (HP, Lenovo, Asus, etc.), as it will provide compatible and up-to-date drivers.
Thanks &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; for the change!&lt;/p&gt;
&lt;p&gt;On the flip side, while the requirement of Vulkan 1.1 hasn&amp;rsquo;t changed, as stated in previous articles, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; made &lt;code&gt;VK_EXT_robustness2&lt;/code&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5917&#34;&gt;a hard requirement.&lt;/a&gt;
This means that updated drivers are critical now, as lacking this extension will stop yuzu from booting games while on Vulkan.
AMD users still require to install the latest &lt;code&gt;Optional&lt;/code&gt; driver version to get support for &lt;code&gt;VK_EXT_robustness2&lt;/code&gt;. At the time of writing, the latest version is &lt;code&gt;21.2.3&lt;/code&gt;, but yuzu will work with drivers as old as &lt;code&gt;20.12.1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Multi-GPU systems must have all their drivers updated, even for integrated graphics that are functional but not in use.&lt;/p&gt;
&lt;h2 id=&#34;technical-bugfixes&#34;&gt;Technical bugfixes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/MerryMage&#34;&gt;Merry&lt;/a&gt; recently caught a bug in the implementation of yuzu&amp;rsquo;s &lt;code&gt;SPSC&lt;/code&gt; ring buffer and fixed it by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5885&#34;&gt;removing the granularity template argument&lt;/a&gt;.
What does this mean exactly? Let&amp;rsquo;s explain!&lt;/p&gt;
&lt;p&gt;A buffer is a data structure that reserves space in memory as slots to store information temporarily: for example, an audio buffer.
In particular, a &lt;a href=&#34;https://en.wikipedia.org/wiki/Circular_buffer&#34;&gt;ring buffer&lt;/a&gt; is a special type of buffer where the slot next to the final one is the first slot in the buffer (so the start and the end are connected).
Once it&amp;rsquo;s full, no new data is added until some information has been extracted from the buffer and processed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SPSC&lt;/code&gt; stands for &amp;ldquo;Single-Producer/Single-Consumer,&amp;rdquo; and is a model that comes from the &lt;a href=&#34;https://en.wikipedia.org/wiki/Producer%E2%80%93consumer_problem&#34;&gt;Producer-Consumer problem&lt;/a&gt; proposed by computer scientists to deal with the problem of proper synchronization when various simultaneous processes write and read from the same buffer.
In this case, only one thread at a time can insert data into the buffer (the Single-Producer), and only one thread at a time can remove elements from the buffer (the Single-Consumer).&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s possible to choose a minimal size for each &amp;ldquo;slot&amp;rdquo; of the buffer in order to exploit regularities of the information stored.
The entities inside these slots are then considered a single &amp;ldquo;unit&amp;rdquo; of information, an &lt;em&gt;information granule&lt;/em&gt;, from which the term &amp;ldquo;granularity&amp;rdquo; stems from.
The ring buffer implementation in yuzu was meant to be as general as possible, which is why granularity was a parameter that the programmer could modify to fit their needs.
Merry noticed there was a small bug when pushing data into the buffer with a granularity different from &lt;code&gt;1&lt;/code&gt;, but since there is no use case for a granularity different from &lt;code&gt;1&lt;/code&gt; in yuzu, Merry decided to remove the parameter altogether, in favor of simplifying the codebase.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; has been taking a look at the timing code and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5964&#34;&gt;fixed an integer overflow in the wall-clock&lt;/a&gt; - a tool used to measure the passage of time in the emulator.
Previously, these calculations would use 128-bit math for high precision, which can be quite expensive on the processor, so a few optimizations were done to perform 64-bit math instead.
However, there was a bug introduced with these optimizations, and the timing math would result in an integer overflow.
This PR fixed the bug by preventing the wall-clock from overflowing, and now things are back to working as intended.&lt;/p&gt;
&lt;p&gt;bunnei also continues on his campaign to rewrite the kernel and its codebase. This time, he has been tidying up the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5953&#34;&gt;memory management code&lt;/a&gt; and refactoring the implementation to be closer to the latest Switch firmware in order to make it easier to import code from newer firmware.&lt;/p&gt;
&lt;p&gt;Additionally, he changed the implementation of &lt;a href=&#34;https://en.wikipedia.org/wiki/Fiber_(computer_science)&#34;&gt;fibers&lt;/a&gt; to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6006&#34;&gt;use unique_ptr instead of shared_ptr&lt;/a&gt;, but later &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6041&#34;&gt;changed it again to use weak_ptr&lt;/a&gt; as it&amp;rsquo;s more appropriate in this use case.&lt;/p&gt;
&lt;p&gt;Fibers are similar to threads, except they can&amp;rsquo;t be executed in parallel.
Instead, they &lt;em&gt;yield&lt;/em&gt; control to other fibers in a process.
In yuzu, they&amp;rsquo;re used to have better control over thread scheduling, working as tools for the kernel to quickly pause and resume emulated guest threads from within the application, without having to rely on the OS scheduler.&lt;/p&gt;
&lt;p&gt;Previously, fibers were managed through a special object called a &lt;code&gt;shared pointer&lt;/code&gt;, a kind of variable that stores the memory addresses of other objects - it “references” them.
In particular, this variable keeps track of how many &lt;code&gt;shared_ptr&lt;/code&gt; references to an object exist in the program, and the memory won&amp;rsquo;t be freed until the total amount of references is zero (i.e. when the object isn&amp;rsquo;t being used anymore).
If these references aren&amp;rsquo;t managed with proper care, some pointers may retain memory and never free it, resulting in memory leaks.
For this reason, bunnei changed the implementation to use a different kind of object, a &lt;code&gt;weak pointer&lt;/code&gt;, which is similar to the &lt;code&gt;shared pointer&lt;/code&gt; but it doesn&amp;rsquo;t increase the reference counter, nor is it capable of deleting the original referenced object.
Thus, the referenced memory will be free only when the original pointer is deleted, regardless of how many other &lt;code&gt;weak_ptr&lt;/code&gt; references to the same memory exist, eliminating the memory leaks caused by the old implementation.&lt;/p&gt;
&lt;p&gt;One of the many tasks of the kernel is to assign resources to processes whenever they ask for them.
For this reason, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; started the work necessary to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5877&#34;&gt;utilize a more accurate resource_limit implementation&lt;/a&gt;, in order to match the hardware behavior more closely.&lt;/p&gt;
&lt;p&gt;Be it memory, threads, or ports, the kernel checks for their availability and keeps track of them through a variable called &lt;code&gt;resource limit&lt;/code&gt;.
By comparing the current amount of resources being used against the resource limit, the kernel can determine whether to deny a request or not.
This stems from the fact that resources are finite, especially in weaker hardware such as that in the Nintendo Switch.
A PC, on the other hand, isn&amp;rsquo;t as restricted as a Nintendo Switch.
Until now, whenever a process requested resources, yuzu would create its own instance of &lt;code&gt;resource limit&lt;/code&gt; instead of using a system-wide variable to keep track of it.
This PR is just the initial step in preparation to reverse engineer the correct behavior and implement it in the emulator.&lt;/p&gt;
&lt;h2 id=&#34;paint-me-like-one-of-your-french-bits&#34;&gt;Paint me like one of your french bits&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; has also been busy this month implementing two features through &lt;a href=&#34;https://en.wikipedia.org/wiki/Compute_kernel&#34;&gt;compute kernels&lt;/a&gt;, a special kind of program that is written to run in the GPU instead of the CPU.
Originally, these subroutines were used to calculate light levels, darkness, colors, and other properties to render 3D images on the screen.
Thus, these programs were promptly named as &lt;a href=&#34;https://en.wikipedia.org/wiki/Shader&#34;&gt;shaders&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Modern GPUs are designed to break down their workload into smaller sized problems, which in turn are processed simultaneously in the many compute units of the card (entities akin to cores in a CPU).
The reason for this design choice is simply because parallelisation is a very efficient scheme to process computer graphics. A single instruction is capable of operating over many components of data at the same time, such as the vertices and textures of a 3D scene, and produce separate results for each parallel thread of execution, which is generally a pixel. This increases the throughput of information, especially when compared against the performance of running the same operations on a CPU.
Their potential isn&amp;rsquo;t limited to just these functions though.
It is possible to write programs that won&amp;rsquo;t necessarily operate over graphics, but can still take advantage of the high levels of parallelisation provided by GPUs.
This is known as &lt;code&gt;GPGPU&lt;/code&gt; - &lt;a href=&#34;https://en.wikipedia.org/wiki/General-purpose_computing_on_graphics_processing_units&#34;&gt;General-purpose computing on graphics processing units&lt;/a&gt; - and it&amp;rsquo;s intended to be used when there is a problem that can be separated into a number of parallel tasks in order to be processed more efficiently. These problems are commonly called &lt;code&gt;embarrassingly parallel problems&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;One of these cases was the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5927&#34;&gt;use of compute shaders to decode ASTC textures&lt;/a&gt;.
&lt;code&gt;ASTC&lt;/code&gt; stands for &amp;ldquo;Adaptable Scalable Texture Compression,&amp;rdquo; and it&amp;rsquo;s a fairly new image compression format developed by ARM and AMD mainly aimed at mobile devices.
The Nintendo Switch is capable of decoding these textures natively in hardware, but it&amp;rsquo;s a feature that most PC GPU vendors lack in their products (with the exception of Intel Graphics, being the only vendor that offers native support).
The decoding of these textures is therefore a non-trivial task that can have a huge impact on performance. Two notable examples are &lt;code&gt;Astral Chain&lt;/code&gt; and &lt;code&gt;Luigi&#39;s Mansion 3&lt;/code&gt;, since both games make extensive use of this format, but it can also be observed to varying degrees in other titles, where these textures are generally used in menu icons, minimaps, etc.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./astral_chain_atsc.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Comparison between the old and the new implementation of the ASTC decoder&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This led to the implementation of an &lt;code&gt;ASTC&lt;/code&gt; decoder through the CPU, which was faster than what GPUs could do with their lack of native support. The CPU decoder was still far from being a satisfactory solution, since it consumed precious CPU resources and, consequently, slowed down to a halt when running games that made extensive use of this format.
The solution, thus, was to implement the decoding through compute shaders.
Since this is an embarrassingly parallel process, seeing as how every block of pixels can be decoded independently, it&amp;rsquo;s more fit to be performed on the GPU by manipulating the data through &lt;code&gt;GPGPU&lt;/code&gt;.
This way, the load on the CPU will be shifted to the GPU, allowing emulation to run in parallel with the texture decoding.
As a side benefit, now textures remain in the GPU memory all the time, since they don&amp;rsquo;t need to be transferred between CPU and GPU for decoding.
This means that there won&amp;rsquo;t be time spent downloading the texture to the CPU and then uploading it back to the GPU after the decoding is done, like in the old implementation.&lt;/p&gt;
&lt;p&gt;This feature works as intended on all GPU vendors on Windows, although there are a few problems on Linux (more specifically, the &lt;code&gt;AMDGPU-PRO&lt;/code&gt; driver) that still need to be ironed out.
Our devs are working hard to solve these bugs, so we ask our tux-friends to be patient and stay tuned!&lt;/p&gt;
&lt;p&gt;Since compute programs were originally meant to manipulate image data, they also worked out nicely to fix a problem with one of the rendering APIs used in yuzu: by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5891&#34;&gt;using compute shaders to swizzle BGR textures on copy&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./octopath1.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./octopath1.jpg&#34; alt=&#34;Color-swapped and properly swizzled versions of Octopath Traveler&amp;#39;s title screen&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./octopath2.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./octopath2.jpg&#34; alt=&#34;Color-swapped and properly swizzled versions of Octopath Traveler&amp;#39;s title screen&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Color-swapped and properly swizzled versions of Octopath Traveler&amp;#39;s title screen&lt;/p&gt;


&lt;p&gt;In OpenGL, colors are stored in channels, and the way they are laid out varies depending on the format used.
For example, the &lt;code&gt;RGB&lt;/code&gt; format stores the color channels in the order &amp;ldquo;Red, Green, and Blue,&amp;rdquo; while the &lt;code&gt;BGR&lt;/code&gt; format stores the channels in the order &amp;ldquo;Blue, Green, and Red.&amp;rdquo;
Unfortunately, this latter format isn&amp;rsquo;t supported internally by OpenGL, which caused problems with a number of games that made use of &lt;code&gt;BGR&lt;/code&gt; textures: their Red and Blue channels were swapped and the final images looked blue-ish.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sg1.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./sg1.jpg&#34; alt=&#34;Blue Christina looks nice, but the red hue definitely suits the Nixie Tubes much better in Steins;Gate: My Darling&amp;#39;s Embrace&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sg2.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./sg2.jpg&#34; alt=&#34;Blue Christina looks nice, but the red hue definitely suits the Nixie Tubes much better in Steins;Gate: My Darling&amp;#39;s Embrace&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Blue Christina looks nice, but the red hue definitely suits the Nixie Tubes much better in Steins;Gate: My Darling&amp;#39;s Embrace&lt;/p&gt;


&lt;p&gt;The solution to this problem then was to reorder the Blue and Red channels of &lt;code&gt;BGR&lt;/code&gt; textures in the copy uploaded to the GPU.
Reordering the graphical information of an image to process it in the graphics card is called swizzling, so what this PR does is copy the values of the Red channel into the Blue channel and vice-versa, a process that can be exploited through parallel computation.
This way, the limitation with OpenGL is directly bypassed on the GPU, and these textures are rendered as intended on screen.&lt;/p&gt;
&lt;h2 id=&#34;general-bug-fixes-and-improvements&#34;&gt;General bug fixes and improvements&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Pokémon Sword and Shield&lt;/code&gt; players can enjoy one less frequent crash.
Boss &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5920&#34;&gt;fixed a problem on LDN initialization&lt;/a&gt;, eliminating the crash that occurred if the player pressed &lt;code&gt;Y&lt;/code&gt; during gameplay (activating online services that yuzu lacks).
An error window will still pop up, but emulation will continue.&lt;/p&gt;
&lt;p&gt;Yet another &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; update, yet another service to stub or implement to regain playability.
This time, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5892&#34;&gt;stubbing GetSaveDataBackupSetting&lt;/a&gt; made &lt;code&gt;1.7.0&lt;/code&gt; and later versions playable again.
Thanks &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Under certain conditions, the &lt;code&gt;WebApplet&lt;/code&gt; would crash yuzu when opening, for example, the Action Guide in &lt;code&gt;Super Mario Odyssey&lt;/code&gt;.
&lt;a href=&#34;https://github.com/aleasto&#34;&gt;aleasto&lt;/a&gt; managed to solve this by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5878&#34;&gt;fixing an out of bounds read.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A common annoyance that affected new users was a prompt asking for the derivation keys to be placed in the correct &lt;code&gt;keys&lt;/code&gt; folder, a folder which had to be manually created until now.
Thanks to &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt;, now there is an empty &lt;code&gt;keys&lt;/code&gt; folder created by default as part of the installation process of yuzu, ready to be populated by the user’s own Switch keys.&lt;/p&gt;
&lt;h2 id=&#34;graphics-improvements&#34;&gt;Graphics improvements&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Kelebek1&#34;&gt;Maide&lt;/a&gt; has been working on improving the recently released &lt;code&gt;Disgaea 6: Defiance of Destiny&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;First, Vulkan needed some &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5936&#34;&gt;corrected offsets&lt;/a&gt; for &lt;code&gt;TexelFetch&lt;/code&gt; and &lt;code&gt;TextureGather&lt;/code&gt;, types of texture instructions.&lt;/p&gt;
&lt;p&gt;A similar change &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5980&#34;&gt;was needed for OpenGL.&lt;/a&gt; This code also includes better handling of &lt;code&gt;signed atomics&lt;/code&gt;, improving precision.
Thanks to &lt;a href=&#34;https://github.com/Ryujinx/Ryujinx&#34;&gt;Ryujinx&lt;/a&gt; for helping here.&lt;/p&gt;
&lt;p&gt;Finally, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5997&#34;&gt;implementing glDepthRangeIndexedNV&lt;/a&gt; solves out of range issues in the depth buffer.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./d6bug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./d6fix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The result of Maide&amp;#39;s work (Disgaea 6: Defiance of Destiny)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5919&#34;&gt;fixed a bug in Vulkan’s stream buffer&lt;/a&gt;, improving performance and reducing VRAM use, while also making better use of the dedicated VRAM, instead of falling back to shared VRAM, which is better known as just system RAM.&lt;/p&gt;
&lt;p&gt;By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5923&#34;&gt;using dirty flags&lt;/a&gt;, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; also managed another slim, but measurable, Vulkan performance bump.
Reducing draw calls always helps!&lt;/p&gt;
&lt;p&gt;After a lot of time spent experimenting, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5989&#34;&gt;reduced the size of Vulkan’s command pool&lt;/a&gt;, from 4096 to just 4.
This makes the driver assign less memory for command buffers, saving a considerable amount of system RAM.&lt;/p&gt;
&lt;p&gt;For example, in &lt;code&gt;Pokémon Sword and Shield&lt;/code&gt;, Vulkan’s use of system RAM goes from 707MB, to just 2MB.&lt;/p&gt;
&lt;p&gt;To end the day, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; fixed a regression introduced by the &lt;code&gt;Buffer Cache Rewrite&lt;/code&gt;.
Some games benefit from skipping the cache, but others lose performance. &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; was an example severely affected in Vulkan.
By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/6021&#34;&gt;implementing a way to heuristically decide when to skip the cache&lt;/a&gt;, performance was not only restored, but also increased.&lt;/p&gt;
&lt;h2 id=&#34;input-improvements&#34;&gt;Input improvements&lt;/h2&gt;
&lt;p&gt;First and foremost, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; finished implementing &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4940&#34;&gt;native Gamecube controller support!&lt;/a&gt;
With this change, games will now actually register GC controllers instead of registering them as, for example, emulated Pro Controllers.
Right now Gamecube triggers are mapped as buttons, but they will be correctly handled as analog triggers in coming changes.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; later added &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5944&#34;&gt;vibration support for the GC controller.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Another new feature &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; added is stick &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5869&#34;&gt;mouse panning.&lt;/a&gt;
This allows users to set the mouse as an analog stick, enabling very comfortable gameplay on titles that use the right analog stick as camera control.
By default, pressing Ctrl +  F9 toggles this feature.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./panning.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Keyboard warriors rejoice! (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;A &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5929&#34;&gt;separate PR&lt;/a&gt; improves panning functionality even more, giving it a more natural control.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5908&#34;&gt;implemented the Finalize request&lt;/a&gt; on the inline keyboard implementation, allowing it to exit in a stable and graceful way instead of looping indefinitely.
This solves issues experienced in &lt;code&gt;Super Mario 3D World + Bowser’s Fury&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Jatoxo&#34;&gt;Jatoxo&lt;/a&gt; gives us a feature we didn’t know we wanted.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5894&#34;&gt;They&amp;rsquo;ve added depth to the analog sticks&lt;/a&gt; of the Pro Controller in the controls preview.
See the result for yourself!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./stickold.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./sticknew.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Nothing beats quality of life changes like this&lt;/p&gt;


&lt;h2 id=&#34;audio-achievements&#34;&gt;Audio achievements&lt;/h2&gt;
&lt;p&gt;One of our most requested fixes is finally here.
&lt;code&gt;Fire Emblem: Three Houses&lt;/code&gt; no longer echoes voices!
&lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; is responsible for this fix, which properly &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5909&#34;&gt;implemented I3dl2Reverb.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you paused emulation and resumed it some time later, you would experience severe stuttering until the audio caught up to the rendering.
&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; resolved this unpleasant experience by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5868&#34;&gt;preventing overscheduling audio events&lt;/a&gt;, allowing for a seamless experience after resuming emulation.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;Project Kraken is underway. Project Gaia started. Project Hades, the shader decompiler rewrite, is progressing steadily. If it continues like this, it will be released before Memory Reaper. As you’ve seen in this article, bunnei continues to suffer through implementing Kernel changes.&lt;/p&gt;
&lt;p&gt;That’s all folks! As always, thank you for reading until the end, and see you next time!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report January 2021</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/</link>
      <pubDate>Wed, 10 Feb 2021 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/</guid>
      <description>&lt;p&gt;Welcome yuz-ers, to the first progress report of 2021! We have quite a bit in store for you: from kernel and CPU emulation improvements to another major graphical rewrite. Here are the most important changes of January.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Welcome yuz-ers, to the first progress report of 2021! We have quite a bit in store for you: from kernel and CPU emulation improvements to another major graphical rewrite. Here are the most important changes of January.&lt;/p&gt;
&lt;h2 id=&#34;the-buffer-cache-rewrite&#34;&gt;The Buffer Cache Rewrite&lt;/h2&gt;
&lt;p&gt;While we have a &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-bcr/&#34;&gt;dedicated article detailing the improvements from the Buffer Cache Rewrite&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5741&#34;&gt;(BCR)&lt;/a&gt;, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; didn&amp;rsquo;t sit idle and continued to improve the buffer cache. These new changes and improvements deserve some time in the spotlight. For the full context, we advise reading the dedicated article before continuing.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./xcdebug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./xcdefix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The BCR offers performance and rendering improvements (Xenoblade Chronicles Definitive Edition)&lt;/p&gt;


&lt;p&gt;Vulkan needed some improvements to be compatible with the BCR. In particular, its &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5297&#34;&gt;memory allocator&lt;/a&gt; got a complete overhaul, improving its functionality.&lt;/p&gt;
&lt;p&gt;A performance bottleneck affecting Intel GPUs in Vulkan was fixed by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5311&#34;&gt;using timeline semaphores instead of spin waits.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5363&#34;&gt;Preliminary work was done&lt;/a&gt; to have the compute accelerated texture decoders working in the near future.&lt;/p&gt;
&lt;p&gt;Assembly shaders are very limited and hard to work with due to their &lt;a href=&#34;https://en.wikipedia.org/wiki/ARB_assembly_language#History&#34;&gt;ancient origins.&lt;/a&gt; A problem faced during the BCR development is keeping compatibility with them while offering their advantage in shader build times to Nvidia users.
At release, the first implementation &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; tried made use of &lt;code&gt;interops&lt;/code&gt;, a feature that allows calling functions of one graphics API from another. In this particular case, he used the new memory allocator of Vulkan from within an OpenGL context.
While the results in Windows 10 and Linux were satisfactory, this had some limitations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 7 was unstable due to broken memory management. A known problem that was never fixed during the lifetime of this now discontinued operating system.&lt;/li&gt;
&lt;li&gt;Fermi era GPUs (mostly 400 and 500 series) had to skip assembly shaders due to Nvidia never adding Vulkan support.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, as a workaround for now, the old pre-BCR method is currently in place. Since this method may be slower in some games compared to the updated GLSL implementation, assembly shaders is now disabled by default while Rodrigo works on a different implementation. Feel free to re-enable this setting if you get playable performance in your games. You can find it in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced tab&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Vulkan users are advised to update their GPU drivers to the very latest version, as the BCR makes the extension &lt;code&gt;VK_EXT_robustness2&lt;/code&gt; mandatory, instead of its previous optional status after the release of the Texture Cache Rewrite.
All three main GPU companies (Nvidia, AMD, and Intel) now offer support for this extension in their latest driver.
AMD users updating from Radeon Software may need to allow &lt;code&gt;Optional&lt;/code&gt; driver download support to get the corresponding driver version to have access to this valuable Vulkan extension (at the time of writing).&lt;/p&gt;
&lt;p&gt;Several games now prefer &lt;code&gt;High&lt;/code&gt; GPU accuracy over the default &lt;code&gt;Normal&lt;/code&gt; value.
Users can change this setting while playing by going to &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Graphics &amp;gt; Advanced tab &amp;gt; Accuracy level&lt;/code&gt;.
We recommend users to play with this setting to find the optimal performance, but to avoid the &lt;code&gt;Extreme&lt;/code&gt; value for the moment, as it will either result in very low performance (intended result), or crash the game entirely (not intended, being investigated).&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./bcr.png&#34; title=&#34; While there are big improvements across the board, this graph shows the limitations of integrated GPUs constantly fighting the CPU for RAM resources. Having your own fast dedicated on-board VRAM is very important for performance.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/bcr_hu5ff90bbf02fdc73f800d5219bc8c5bf3_26336_1008x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; While there are big improvements across the board, this graph shows the limitations of integrated GPUs constantly fighting the CPU for RAM resources. Having your own fast dedicated on-board VRAM is very important for performance.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; While there are big improvements across the board, this graph shows the limitations of integrated GPUs constantly fighting the CPU for RAM resources. Having your own fast dedicated on-board VRAM is very important for performance.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Analysis time. If you compare this graph to the one of the RX550 in the &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-bcr/&#34;&gt;BCR artricle,&lt;/a&gt; you will notice that a small integrated Vega manages to beat a dedicated Polaris card in &lt;code&gt;Fire Emblem: Three Houses&lt;/code&gt; by a few frames.
This is because newer GPU architectures offer features that are useful for Switch emulation. Ray tracing is not the only cool kid in town!&lt;/p&gt;
&lt;p&gt;The Tegra X1 SoC in the Nintendo Switch offers native support for FP16 with a 2:1 performance ratio, allowing games to double their performance over regular FP32 when doing floating point calculations. A simple way to achieve a higher frame rate on limited hardware.
Vega (GCN 5.0), Turing, Gen 9 Intel Graphics and newer offer native support for FP16, or as AMD calls it, “Rapid Packed Math”.
Series like Polaris (GCN 4.0), Pascal and older may offer support in their drivers but don’t provide a performance advantage, and in the case of Pascal, it reduces performance considerably (64 times slower than FP32).
In those cases FP32 is used to emulate FP16, obviously resulting in no performance gains.&lt;/p&gt;
&lt;p&gt;This is the main reason our &lt;a href=&#34;https://yuzu-mirror.github.io/help/quickstart/#hardware-requirements&#34;&gt;Hardware Requirements&lt;/a&gt; lists Gen 9.5, Vega, and Turing cards, as the recommended GPUs. Maxwell v2, Vega, Gen9 and later series also offer &lt;code&gt;conservative rasterization&lt;/code&gt;, a very useful feature that yuzu can take advantage of in the future.&lt;/p&gt;
&lt;h2 id=&#34;general-bug-fixes-and-improvements&#34;&gt;General bug fixes and improvements&lt;/h2&gt;
&lt;p&gt;Let’s start with good news, Champion Leon can no longer win by default!
Thanks to &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK’s&lt;/a&gt; work, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5799&#34;&gt;unregistering already registered events&lt;/a&gt;, games like &lt;code&gt;Pokémon Let’s Go Eevee/Pikachu&lt;/code&gt; and &lt;code&gt;Pokémon Sword/Shield&lt;/code&gt; won’t softlock when the game requests playing a video. Gotta beat em all, was it?&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pksw.png&#34; title=&#34; Let’s battle, for real this time! (Pokémon Sword)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/pksw_hu5b17c1705e510283828fb772b25294c0_3603239_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Let’s battle, for real this time! (Pokémon Sword)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Let’s battle, for real this time! (Pokémon Sword)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Quality of Life improvements, although seemingly small, can still require several considerations.
&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; made &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5324&#34;&gt;docked mode the default option&lt;/a&gt;, with the intention to offer users the highest game quality, and to remove flickering experienced in &lt;code&gt;Super Mario Odyssey&lt;/code&gt; when running the game with assembly shaders enabled while in undocked mode.
Users with integrated, slow, and/or old GPUs should consider using undocked mode, as the reduced resolution and detail level will help avoid performance bottlenecks.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; solved one of the most common problems users had when playing &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5842&#34;&gt;the inability to boot the game if more than one user profile was created&lt;/a&gt;.
Thanks to this fix, users are no longer forced to play the game with the top profile in the list.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; continues his work on Linux’s &lt;code&gt;AppImages&lt;/code&gt;.
Now yuzu’s &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5302&#34;&gt;AppImage build can be updated&lt;/a&gt;, reducing the download size to just around 9MB &lt;a href=&#34;https://appimage.github.io/AppImageUpdate/&#34;&gt;if you use AppImageUpdate.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5279&#34;&gt;By improving &lt;code&gt;nvflinger&lt;/code&gt;, the display service of the Nintendo Switch,&lt;/a&gt; &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; made &lt;code&gt;Katana ZERO&lt;/code&gt; playable again.&lt;/p&gt;
&lt;p&gt;Serendipity strikes again.
By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5284&#34;&gt;fixing a data race&lt;/a&gt; introduced by one of the recent kernel changes, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; also fixed unlimited FPS mods which previously made the emulator crash.&lt;/p&gt;
&lt;p&gt;By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5840&#34;&gt;fixing invalid buffer index errors,&lt;/a&gt; &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; was able to resolve various crashes in booting &lt;code&gt;Super Mario Maker 2&lt;/code&gt; that occurred due to file system issues.&lt;/p&gt;
&lt;p&gt;In the eternal torture that is audio development, &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5809&#34;&gt;implemented &lt;code&gt;FlushAudioOutBuffers&lt;/code&gt;,&lt;/a&gt; making the &lt;code&gt;Devil May Cry&lt;/code&gt; series playable.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dmc2.png&#34; title=&#34; Look at the graphics, that&amp;#39;s you know, what it&amp;#39;s really all about (Devil May Cry 2)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/dmc2_hu68cd14ae9b12778b36946d5ea4525414_3795364_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Look at the graphics, that&amp;#39;s you know, what it&amp;#39;s really all about (Devil May Cry 2)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Look at the graphics, that&amp;#39;s you know, what it&amp;#39;s really all about (Devil May Cry 2)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;miscellaneous-graphical-improvements&#34;&gt;Miscellaneous graphical improvements&lt;/h2&gt;
&lt;p&gt;We have three public service announcements, one for each GPU vendor:&lt;/p&gt;
&lt;p&gt;First, a message for AMD users with RX 5000 series graphics cards.
In the past, we blacklisted the &lt;code&gt;VK_EXT_extended_dynamic_state&lt;/code&gt; Vulkan extension on all RDNA1 based GPUs on Windows. The drivers at the time were unstable when using this extension, causing yuzu to crash to the desktop.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5814&#34;&gt;This block has been removed&lt;/a&gt; by &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo,&lt;/a&gt; but keep in mind that the user needs to be running &lt;code&gt;20.12.1&lt;/code&gt; or newer driver versions.
“Navi“ users can expect several graphical fixes thanks to this change.&lt;/p&gt;
&lt;p&gt;Blue team’s turn. On the topic of blacklists, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; had to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5798&#34;&gt;disable FP16 math support from Intel Windows Vulkan drivers&lt;/a&gt; to solve stability issues affecting &lt;code&gt;Astral Chain&lt;/code&gt;.
For now, half-float operations will be emulated using FP32 math. This will result in lower performance if the game manages to make full use of the compute capabilities of the GPU. However, on current Intel Graphics, rasterization (to put it simple, the raw power of the GPU) is usually the first element to bottleneck performance, even before being affected by the aforementioned operations.&lt;/p&gt;
&lt;p&gt;Thanks to this change and Intel’s native ASTC texture decoding support, Intel Graphics now has the best rendering quality in this particular game.
We’re waiting for a driver fix to come relatively soon, so as always, keep your drivers updated!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./acfp16.png&#34; title=&#34; Astral Chain on integrated GPUs, reaching 30 FPS (docked mode)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/acfp16_hu5fc8fe50fb0ee3397e450c3b6cb29323_1322225_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Astral Chain on integrated GPUs, reaching 30 FPS (docked mode)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Astral Chain on integrated GPUs, reaching 30 FPS (docked mode)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Finally, regarding Nvidia.
If the shader cache is stored in Nvidia’s own provided directory, a 200MB total folder size limit is imposed.
BSoD found out that such a limit is easy to surpass if other shader intensive programs are in use, like Adobe’s software suite.
&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; bypassed this problem &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5778&#34;&gt;by moving the cache to yuzu’s own directory,&lt;/a&gt; instead of using the default directory the driver provides.&lt;/p&gt;
&lt;p&gt;With this change, we recommend building your cache with assembly shaders enabled, but once the cache is complete or close to completion, switch to regular GLSL (disable assembly shaders).
That way (after a long period of shader compilation at boot), stuttering will be completely avoided.
Thanks to &lt;a href=&#34;https://github.com/Exzap&#34;&gt;Exzap&lt;/a&gt; from &lt;a href=&#34;https://cemu.info/&#34;&gt;Cemu&lt;/a&gt; for the help!&lt;/p&gt;
&lt;p&gt;Our resident shark, &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK,&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5810&#34;&gt;implemented the missing services to have &lt;code&gt;Stereo Vision&lt;/code&gt;,&lt;/a&gt; the Nintendo Switch’s implementation of Virtual Reality using a &lt;code&gt;Nintendo Labo&lt;/code&gt; “headset”.
Games like &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;, &lt;code&gt;Super Mario Odyssey&lt;/code&gt;, &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;, and &lt;code&gt;Captain Toad: Treasure Tracker&lt;/code&gt; can now render for both eyes.&lt;/p&gt;
&lt;p&gt;While this doesn’t offer full VR support for PC compatible headsets yet, it allows users to make their own cardboard headsets à la Google, so long as they are handicraft-inclined.
Pro tip, stream to a phone or tablet.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vr.png&#34; title=&#34; You will need a lot of cardboard if you want to use this on big displays (The Legend of Zelda: Breath of the Wild)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/vr_hufd87cb5eb5d7828cc219b6b4ecc3801e_2145359_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; You will need a lot of cardboard if you want to use this on big displays (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; You will need a lot of cardboard if you want to use this on big displays (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5786&#34;&gt;fixing the constant buffer’s size calculation&lt;/a&gt;, &lt;code&gt;Undertale&lt;/code&gt; can now be run in OpenGL with Assembly Shaders disabled, allowing the game to run on Intel and AMD GPUs.
&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; will no longer have a &lt;a href=&#34;https://www.youtube.com/watch?v=wDgQdr8ZkTw&#34;&gt;bad time.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Buffer Cache Rewrite helped expose new issues in games, one example is geometry explosions in &lt;code&gt;Zombie Panic in Wonderland DX&lt;/code&gt;.
&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; fixed this by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5785&#34;&gt;flushing the destination buffer on CopyBlock.&lt;/a&gt;&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./zpiwbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/zpiwbug_hubc7462f480d3e046b2be3878fa188914_3505955_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;More work is needed to make this game look right (Zombie Panic in Wonderland DX)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./zpiwfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/zpiwfix_hub84a551538b018ebda566050e9b7cf20_3604113_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;More work is needed to make this game look right (Zombie Panic in Wonderland DX)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;More work is needed to make this game look right (Zombie Panic in Wonderland DX)&lt;/p&gt;


&lt;p&gt;One of the important additions of the Texture Cache Rewrite is the support for &lt;code&gt;Format Views&lt;/code&gt;, a feature games request and use natively.
Unfortunately, AMD and Intel Windows drivers have a broken implementation, and format views had to be disabled to fix rendering problems.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smobug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/smobug_hufe124ec0a5ecb473335c015deb3b2636_725202_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mushroom Dark World? (Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smofix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/smofix_hu14f967056be4d978c9aff8bc1466d76a_1174298_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mushroom Dark World? (Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Mushroom Dark World? (Super Mario Odyssey)&lt;/p&gt;


&lt;p&gt;We reported this problem a long time ago to both vendors, but it seems like OpenGL is not a priority on Windows. The Linux mesa team, on the other hand, &lt;a href=&#34;https://gitlab.freedesktop.org/mesa/mesa/-/issues/4034&#34;&gt;has &lt;em&gt;fantastic&lt;/em&gt; response times&lt;/a&gt; to bug reports of any API.&lt;/p&gt;
&lt;p&gt;For the Linux side, recent changes made the Vulkan Intel driver &lt;code&gt;anv&lt;/code&gt; incompatible.
By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5341&#34;&gt;removing a not critical requirement&lt;/a&gt; (for now), and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5349&#34;&gt;fixing initialization,&lt;/a&gt; &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; restored functionality.&lt;/p&gt;
&lt;p&gt;Due to its constant use of ASTC textures of considerable size (way bigger than the display resolution of the Nintendo Switch), &lt;code&gt;Astral Chain&lt;/code&gt; is a prime example for testing the stability of yuzu’s software ASTC decoder.
Game crashes were common due to reading or writing out of bounds, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; fixes this by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5348&#34;&gt;improving the robustness of the decoder.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-youkai-the-rabbit-and-friendshttpswwwyoutubecomwatchv195xntreomc&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=195XntreoMc&#34;&gt;The Youkai, the rabbit, and friends&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/MerryMage&#34;&gt;MerryMage&lt;/a&gt; has recently made some changes to &lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;Dynarmic&lt;/a&gt; that improved the performance of some games.&lt;/p&gt;
&lt;p&gt;We start off with &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5278&#34;&gt;a PR that introduces a setting to remove some NaN checks from JITed code.&lt;/a&gt;
This inherently results in a decrease of accuracy on the representation of these and other special values, which is why this setting is &lt;code&gt;unsafe&lt;/code&gt;.
However, this also boosts the performance of games that make heavy use of NaN values, such as &lt;code&gt;Luigi&#39;s Mansion 3&lt;/code&gt; (especially in the &lt;code&gt;basement 2&lt;/code&gt; and &lt;code&gt;floor 12&lt;/code&gt; areas, where previously performance would decrease greatly).
This setting can be found in &lt;code&gt;Emulation &amp;gt; Configure &amp;gt; CPU &amp;gt; Unsafe&lt;/code&gt; as a toggle option, &lt;code&gt;Inaccurate NaN handling&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./LM3_1.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Luigi&amp;#39;s Mansion 3, the new and the old. The general performance of the game improved drastically thanks to this PR.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;On any digital system, all numbers are represented in a binary base in order to be stored and perform operations with them.
Naturally, there is a limit to the amount of numbers and the precision with which they can be represented, not to mention that a number can be expressed in many ways by just declaring it as a different type (e.g. integer, &lt;a href=&#34;https://en.wikipedia.org/wiki/Floating-point_arithmetic&#34;&gt;floating-point&lt;/a&gt; number, etc.).
Likewise, there are also many mathematical elements that aren&amp;rsquo;t numbers per se, but special cases that result from mathematical operations.
Think, for example, about the square root of a negative number: although the result of this operation is a valid &lt;a href=&#34;https://en.wikipedia.org/wiki/Complex_number&#34;&gt;complex number&lt;/a&gt;, it&amp;rsquo;s not a defined type (i.e. a number that the computer understands), therefore, it becomes &lt;em&gt;something else&lt;/em&gt;.
Or think about dividing any number by zero: this mathematical operation is undefined, and thus it yields a similar result.&lt;/p&gt;
&lt;p&gt;These types of indeterminations are defined as a special floating-point value called &lt;a href=&#34;https://en.wikipedia.org/wiki/NaN&#34;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; - which stands for &amp;ldquo;Not a Number&amp;rdquo;.
The architecture of the CPU of the Nintendo Switch (&lt;code&gt;ARM&lt;/code&gt;) handles these NaN values differently from the architecture used by any computer CPU (&lt;code&gt;AMD64&lt;/code&gt;).
For example, while a NaN is always produced as a positive value in &lt;code&gt;ARM&lt;/code&gt;, it is always produced as a negative value in &lt;code&gt;AMD64&lt;/code&gt;.
These NaN values might also be &lt;code&gt;quiet&lt;/code&gt; or &lt;code&gt;signaling&lt;/code&gt; - a characteristic that determines whether the CPU detects a NaN value at the end of an operation, or in an intermediate step (which can be halted or not, depending on the program).
Dynarmic is in charge of translating the code of a game from instructions understood by the &lt;code&gt;ARM&lt;/code&gt; architecture into instructions understood by the &lt;code&gt;AMD64&lt;/code&gt; architecture.
This includes ensuring these NaN values are represented properly.
By toggling this optimization, however, many of these checks are now skipped by dynarmic in favor of performance.
The reason is quite simple: most software, including games, ignore the sign and payload of these values, so it&amp;rsquo;s safe to ignore them.&lt;/p&gt;
&lt;p&gt;MerryMage also submitted &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5831&#34;&gt;a PR to prevent flushing the cache when an ISB instruction is executed&lt;/a&gt;, fixing a wide range of games that ran at 1-2fps, such as &lt;code&gt;Cobra Kai&lt;/code&gt;, &lt;code&gt;Megadimension Neptunia VII&lt;/code&gt;, &lt;code&gt;Super Robot Wars series&lt;/code&gt;, &lt;code&gt;Windbound&lt;/code&gt;, and many others.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mn7.png&#34; title=&#34; Megadimension Neptunia VII&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/mn7_hu279ff3f2950de7ed72f9bf6fa7fd970a_3603906_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Megadimension Neptunia VII&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Megadimension Neptunia VII&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;In order to process instructions faster, modern CPUs read program code from memory and store it in a cache, because access times are much faster that way.
But processing these instructions isn&amp;rsquo;t an instantaneous task.
First, an instruction is fetched from the cache, decoded, executed, and the result is written back to a register or memory.
To make this process more efficient, the CPU has a dedicated circuit for every one of these steps, and they execute these tasks for different instructions at the same time.
This parallelization process is known as &lt;a href=&#34;https://en.wikipedia.org/wiki/Instruction_pipelining&#34;&gt;Instruction Pipelining&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ARM&lt;/code&gt; architecture has a variety of special instructions (called &lt;code&gt;Memory Barrier Instructions&lt;/code&gt;) that give the CPU better control over how instructions are written in and from program memory.
One of these is &lt;code&gt;ISB&lt;/code&gt;, which stands for &amp;ldquo;Instruction Synchronization Barrier&amp;rdquo;, and it&amp;rsquo;s used to flush the CPU pipeline and cache, so that all instructions following the &lt;code&gt;ISB&lt;/code&gt; instruction are refeteched from memory.
Normally, this is useful when running self-modifying programs, since there is new code being written into executable memory (where the program is stored), and flushing the queued instructions ensures that no old code is run.
So, naturally, when Dynarmic executed an ISB instruction, the whole cache was being flushed on the assumption that it was outdated.
This resulted in yuzu constantly flushing out and recompiling the cache, which translated as severe slowdowns and performance drops for certain games.&lt;/p&gt;
&lt;p&gt;Now, here&amp;rsquo;s the catch.
The Nintendo Switch is a platform that, with some exceptions, doesn&amp;rsquo;t allow for executable code to be rewritten.
So, there will never be a case where yuzu will need to flush the cache this way, because games can&amp;rsquo;t overwrite code in memory.
This PR changed the behaviour of dynarmic, so that whenever there&amp;rsquo;s an &lt;code&gt;ISB&lt;/code&gt; instruction, it executes a &lt;code&gt;NOP&lt;/code&gt; (no operation) instead - a special instruction that does nothing.
This way, performance is not affected anymore, as yuzu doesn’t need to rebuild the cache since it safely ignores these &lt;code&gt;ISB&lt;/code&gt; instructions.&lt;/p&gt;
&lt;p&gt;On a different note, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; has been continuing with his work on the kernel.
The first change introduced last month was &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5779&#34;&gt;a PR to rewrite threads to be more accurate&lt;/a&gt;.
While there are not many visible benefits for the user due to the low-level nature of the change, it helped to fix a lot of smaller inaccuracies, including the softlocks in &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; when transitioning between scenes.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./acnh.png&#34; title=&#34; We don&amp;#39;t judge you, Isabelle (Animal Crossing: New Horizons)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jan-2021/acnh_huc72e68063250bc36258e05b6d45f87c9_1990875_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; We don&amp;#39;t judge you, Isabelle (Animal Crossing: New Horizons)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; We don&amp;#39;t judge you, Isabelle (Animal Crossing: New Horizons)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Originally, yuzu started as a fork of &lt;a href=&#34;https://github.com/citra-emu/citra&#34;&gt;Citra&lt;/a&gt;, the 3DS emulator.
Naturally, there is a remnant of code that was used on Citra and later modified to work for the Nintendo Switch.
While it was fully functional and did the job, it was far from being accurate.
&lt;code&gt;KThread&lt;/code&gt; is yuzu&amp;rsquo;s implementation of &lt;a href=&#34;https://en.wikipedia.org/wiki/Thread_(computing)&#34;&gt;computing threads&lt;/a&gt;, and this change aims to make it match as closely as possible to the implementation of threads of the real Nintendo Switch kernel.&lt;/p&gt;
&lt;p&gt;The second change introduced last month is &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5862&#34;&gt;Refactoring of KEvent/KReadableEvent/KWritableEvent&lt;/a&gt;.
A &lt;code&gt;Kernel Event&lt;/code&gt; is a kernel primitive that is used to &amp;ldquo;signal events&amp;rdquo;, generally across processes.
This is one of the simplest mechanisms used to communicate different threads: one thread signals an event, and then another thread waits for it.
The &lt;code&gt;KReadableEvent&lt;/code&gt; and &lt;code&gt;KWritableEvent&lt;/code&gt; attributes are just an abstraction used to further enhance the synchronization across processes.
These three objects are thus used to represent a single &amp;ldquo;signallable event&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;These mechanisms would be used, for example, when a game needs to play a sound.
The audio service will produce a &lt;code&gt;KEvent&lt;/code&gt; that will &amp;ldquo;signal&amp;rdquo; when it&amp;rsquo;s ready for more audio data from a game, and this will communicate with the audio thread so that data can be submitted and requested as needed by using these &lt;code&gt;KReadableEvent&lt;/code&gt; and &lt;code&gt;KWritableEvent&lt;/code&gt; attributes.&lt;/p&gt;
&lt;p&gt;As always, the major benefit of these rewrites is accuracy.
These changes will also make it easier in the long term to add the code of future updates that Nintendo might do to their kernel, since the behaviour of this implementation will be closer to the hardware and the existing code won’t need many changes to accommodate for it.&lt;/p&gt;
&lt;p&gt;There’s still room for more additions and improvements, so stay tuned for more work on this area.&lt;/p&gt;
&lt;p&gt;After a period of inactivity, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;FernandoS27&lt;/a&gt; is back with a PR to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5275&#34;&gt;optimize clock calculations&lt;/a&gt; by introducing a new method to compute time values, such as nanoseconds, microseconds, milliseconds, and also guest clock and cpu cycles, from the native clock of the CPU.
This is a relatively small change, but since these calculations are performed often, all optimizations are helpful to reduce the time spent on these transformations.&lt;/p&gt;
&lt;h2 id=&#34;input-changes&#34;&gt;Input changes&lt;/h2&gt;
&lt;p&gt;What can be better than QoL changes that you didn’t know you wanted until you saw them?
&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; gives us just that by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5339&#34;&gt;animating the controller input settings image&lt;/a&gt; on player actions.
You can see the results yourself:&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./pro.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./joy.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;I like to move it, move it!&lt;/p&gt;


&lt;p&gt;The animation will highlight the buttons that are currently being pressed.
There’s also a second animation for the analog sticks to make the calibration of deadzones and range more intuitive.
Your controller will behave in-game as shown by the animation in the settings, so if you think there’s any problem with your input, it’s a good idea to check if it’s working as intended here.&lt;/p&gt;
&lt;p&gt;Input lag, the worst enemy of competitive games… And &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; comes to the rescue, by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5861&#34;&gt;preventing overscheduling events.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Pokémon Let’s Go Eevee/Pikachu&lt;/code&gt; may disconnect the emulated controller, or fail to recognise the connection.
By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5805&#34;&gt;applying a delay to this process&lt;/a&gt;, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; improves the stability of input emulation for this series of games.
Handheld or single Joy-Con input modes are still needed to play this game, be sure to check your input settings in &lt;code&gt;Emulation &amp;gt; Configure… &amp;gt; Controls&lt;/code&gt;. Swap the default Pro Controller to, for example, Handheld.&lt;/p&gt;
&lt;p&gt;Users discovered that some games may continue to send vibration signals, this is due to the game never sending a 0 amplitude signal.
&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; fixes those erroneous vibrations by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5800&#34;&gt;adding a 1 second maximum time for any vibration.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In a double combo, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; and &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; hit us with fixes regarding Handheld mode.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5743&#34;&gt;A wrong behaviour regarding player 1 was addressed&lt;/a&gt;, which used to result in input changes not saving, especially in Handheld mode.
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5757&#34;&gt;A check was added to ensure Handheld mode is connected&lt;/a&gt; only in the correct &lt;code&gt;npad_index&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;Holding a button would sometimes stutter, resulting in unstable behaviour. &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5366&#34;&gt;adds a new method to check the duration of the press or hold of the buttons&lt;/a&gt;, resulting in stable behaviour.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;The merge of the Buffer Cache Rewrite will open the way to some improvements and fixes on the roadmap, epicboy will have some interesting things to show thanks to this. Morph is up to something. german77 is up to something. ogniK is up to something. bunnei continues to suffer with the Kernel rewrites. Rodrigo is making the first tests on Project Hades, while also planning a couple of nice Vulkan and video memory management improvements.&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you so much for staying with us. See you in the February report!&lt;/p&gt;
&lt;p&gt;And remember kids, winners update their GPU drivers to the latest version!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>New Feature Release - Buffer Cache Rewrite</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-bcr/</link>
      <pubDate>Sat, 16 Jan 2021 21:00:00 -0300</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-bcr/</guid>
      <description>&lt;p&gt;Hey there, yuz-ers! The follow-up to our &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/&#34;&gt;previous big code rewrite&lt;/a&gt; is finally here: the Buffer Cache Rewrite!
This massive undertaking not only improves performance significantly, but also simplifies the code for our developers.
Now let&amp;rsquo;s get this article started!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey there, yuz-ers! The follow-up to our &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/&#34;&gt;previous big code rewrite&lt;/a&gt; is finally here: the Buffer Cache Rewrite!
This massive undertaking not only improves performance significantly, but also simplifies the code for our developers.
Now let&amp;rsquo;s get this article started!&lt;/p&gt;
&lt;h2 id=&#34;so-what-does-a-buffer-cache-do&#34;&gt;So, what does a Buffer Cache do?&lt;/h2&gt;
&lt;p&gt;As the name implies, a Buffer Cache — well — caches (stores) buffers.
That might not have made much sense, but that&amp;rsquo;s what it does.&lt;/p&gt;
&lt;p&gt;In graphics programming, for the GPU to render anything it needs data like position, color, etc.
Usually, this data is supplied by the application.
But when we have large applications dealing with large volumes of data, it becomes increasingly difficult to constantly supply the GPU
with data and have it render.
Hence, buffer objects were introduced.&lt;/p&gt;
&lt;p&gt;Buffer objects are memory objects that store the render data in the GPU memory — thereby increasing reusability significantly.
There are various types of bindings, commonly referred to as buffer types, like index buffers, vertex buffers, and uniform buffers (among others).
This improves the rendering performance because the data is now readily available for the GPU to use.&lt;/p&gt;
&lt;h3 id=&#34;yuzus-buffer-cache&#34;&gt;yuzu&amp;rsquo;s Buffer Cache&lt;/h3&gt;
&lt;p&gt;Coming back to yuzu&amp;rsquo;s case, yuzu initially inherited a stream buffer — originally implemented for &lt;a href=&#34;https://citra-emu.org&#34;&gt;Citra&lt;/a&gt; by &lt;a href=&#34;https://github.com/degasus&#34;&gt;degasus&lt;/a&gt;.
A stream buffer works in a modify/use cycle, meaning you frequently update the buffer object and you bind that region.
&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; and &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; later implemented our existing buffer cache to work alongside the stream buffer.&lt;/p&gt;
&lt;p&gt;There was nothing inherently wrong with it; stream buffers are in fact one of the fastest ways to upload data to the GPU.
But when &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; profiled yuzu, the cache management and upload copies were something that kept popping up as slow.&lt;/p&gt;
&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Profiling&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        In software engineering, profiling (&amp;ldquo;program profiling&amp;rdquo;, &amp;ldquo;software profiling&amp;rdquo;) is a form of dynamic program analysis that measures, for example, the space (memory) or time complexity of a program,
the usage of particular instructions, or the frequency and duration of function calls. Most commonly, profiling information serves to aid program optimization.
    &lt;/div&gt;
&lt;/article&gt;

&lt;p&gt;The problem lay in the fact that games aren&amp;rsquo;t exactly streaming data all the time.
So using immediate uploads (on OpenGL) and faster caching yielded much better performance than having a stream buffer and caching large resources, at least for Nvidia.
Upon further testing, we found that this turned out to be false for non-Nvidia drivers on OpenGL (AMD, Intel, and Mesa) and hence had to add a stream buffer for small uploads in these drivers.&lt;/p&gt;
&lt;h2 id=&#34;whats-changed-now&#34;&gt;What&amp;rsquo;s changed now?&lt;/h2&gt;
&lt;p&gt;The technical design goals for the Buffer Cache Rewrite were the same as our Texture Cache Rewrite.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cleaner code: No more virtual function calls or shared pointers, meaning easier maintenance in the future.&lt;/li&gt;
&lt;li&gt;Improved efficiency and improved performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Resolving which buffer existed in which memory region was a very expensive operation in our old buffer cache implementation.
This is why the stream buffer existed — to make it faster.&lt;/p&gt;
&lt;p&gt;The new Buffer Cache has vastly improved tracking for the various buffers it caches.
In the new implementation, when buffers are created in the memory, they are forcibly aligned to 4K &lt;a href=&#34;https://en.wikipedia.org/wiki/Page_(computer_memory)&#34;&gt;pages&lt;/a&gt; (4096 bytes - starting at zero).
And to efficiently know what buffer exists on what address, the cache uses a flat array 32 MiB wide to translate from the current CPU page where the buffer exists to what buffer resides in it.
&lt;code&gt;e.g., if the address is 4096 or 7000, that is page 1 &amp;amp; if it is 8192, that is page 2.&lt;/code&gt;
Thus, the new Buffer Cache can track what pages of a buffer have been modified on a page basis instead of being a binary state.&lt;/p&gt;
&lt;p&gt;Imagine if a buffer has a size of 524288 bytes and a game modifies only 1 byte of the buffer.
Since buffers are now aligned to 4096 bytes as mentioned earlier, only those 4096 bytes are uploaded to the GPU.
The same thing happens when the GPU tries to update the cache with data modified by the CPU.&lt;/p&gt;
&lt;p&gt;This tracking is done by making use of bit arrays in the buffers.
Each value represents the state of the page - 1 being modified, 0 being clear.
Keeping things in a bit array allows us to use efficient bit operations like &lt;code&gt;std::countr_zero&lt;/code&gt; and &lt;code&gt;std::countr_one&lt;/code&gt; (C++20).
This results in fewer instructions yielding the same results (much faster).&lt;/p&gt;
&lt;h2 id=&#34;all-right-lets-talk-performance-gains&#34;&gt;All right, let&amp;rsquo;s talk performance gains!&lt;/h2&gt;
&lt;p&gt;The main focus of this work is to improve performance, but some graphical improvements also resulted from this rewrite.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./otbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-bcr/otbug_hu0ec6382faaaf32c00049fcfadfdd40c4_2193721_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Vertex explosions are no longer a problem in OCTOPATH TRAVELER&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./otfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-bcr/otfix_hud63d13bc8babcd429f7907e35e65356a_3183308_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Vertex explosions are no longer a problem in OCTOPATH TRAVELER&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Vertex explosions are no longer a problem in OCTOPATH TRAVELER&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./acnhbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-bcr/acnhbug_hu0cc6930dfef1b11bf677342bf378c70d_2387401_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Font rendering is now working for all GPU vendors in Animal Crossing: New Horizons&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./acnhfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-bcr/acnhfix_hud9375e742820c8045efe0c112ebdeea7_1986227_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Font rendering is now working for all GPU vendors in Animal Crossing: New Horizons&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Font rendering is now working for all GPU vendors in Animal Crossing: New Horizons&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./xbdebug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./xbdefix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Item drops stop flickering in Xenoblade Chronicles Definitive Edition&lt;/p&gt;


&lt;p&gt;With that out of the way, let&amp;rsquo;s talk about performance. Of course, metrics will vary greatly depending on the hardware and API in use.
Here are some examples measured after a couple of runs in the most demanding or common areas of the games listed:&lt;/p&gt;
&lt;p&gt;Nvidia, in this example represented by an RTX3070, shows up to 84% improved performance in OpenGL.

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./nvbench.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-bcr/nvbench_huad6f813e0bcdc09d1b005b82dabdc18c_134004_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;AMD on the other hand, represented by a small RX550, shows an up to 55% improvement in Vulkan.

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./amdbench.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-bcr/amdbench_huad6f813e0bcdc09d1b005b82dabdc18c_133299_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;Regarding Intel, an unsurprising problem arises. All currently released products bottleneck due to immature drivers and simply lacking the raw power for Switch emulation. This results in little to no performance improvements with this rewrite. Hopefully this can be addressed with future improvements to both yuzu and Intel&amp;rsquo;s future drivers and hardware releases.&lt;/p&gt;
&lt;p&gt;As a special mention, AMD Vega based integrated GPUs show an up to 223% increase in &lt;code&gt;Paper Mario the Origami King&lt;/code&gt;, reaching the same level of performance as dedicated cards of a much higher calibre.&lt;/p&gt;
&lt;h2 id=&#34;fin&#34;&gt;Fin&lt;/h2&gt;
&lt;p&gt;With that, we conclude our coverage of the new Buffer Cache Rewrite.
As always, we would like to remind users that the features released in &lt;a href=&#34;https://yuzu-mirror.github.io/help/early-access/&#34;&gt;Early Access&lt;/a&gt; are still being worked on.
If you come across any bugs, issues, performance loss, crashes, or regressions with this new feature, please
reach out to us on our &lt;a href=&#34;https://discord.com/invite/u77vRWY&#34;&gt;Discord server&lt;/a&gt; and share your findings.&lt;/p&gt;
&lt;p&gt;See you next time, &lt;br&gt;
- yuzu development team!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report December 2020</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/</link>
      <pubDate>Sun, 10 Jan 2021 12:00:00 -0300</pubDate>
      <author>Honghoa</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/</guid>
      <description>&lt;p&gt;Happy New Year, dear yuz-ers! 2020 is finally behind us, so what better way to start 2021 than with a progress report? Follow us for a summary of the last changes yuzu saw in 2020, and a small preview of what will come. This time we offer you kernel changes, new input and user interface additions, and the first changes applied to get the Buffer Cache Rewrite finished.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Happy New Year, dear yuz-ers! 2020 is finally behind us, so what better way to start 2021 than with a progress report? Follow us for a summary of the last changes yuzu saw in 2020, and a small preview of what will come. This time we offer you kernel changes, new input and user interface additions, and the first changes applied to get the Buffer Cache Rewrite finished.&lt;/p&gt;
&lt;h2 id=&#34;general-improvements-and-bug-fixes&#34;&gt;General improvements and bug fixes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; has been busy squashing bugs, in this case &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5201&#34;&gt;killing two with one PR.&lt;/a&gt; In some instances, we were trying to read data from an nvflinger buffer before it even existed. By adding a check addressing this, &lt;code&gt;Yoshi’s Crafted World&lt;/code&gt; now boots, albeit with several graphical glitches.
This PR also fixes how buffers are accessed, so several games now boot for the first time. Some examples include: &lt;code&gt;Katana ZERO&lt;/code&gt;, &lt;code&gt;DELTARUNE Chapter 1&lt;/code&gt;, &lt;code&gt;Dragon Ball FighterZ&lt;/code&gt; and &lt;code&gt;Wonder Boy: The Dragon’s Trap&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./katanazero.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/katanazero_hud52150ff875e7c6216ff5a4dc317b0c9_975697_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./wonderboy.png&#34; title=&#34; Now booting!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/wonderboy_hufc8c073bbbd3000c4a96650a8b0e4f4c_3914969_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Now booting!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Now booting!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;A PSA for our Intel graphics users. With the release of the Windows driver version &lt;code&gt;27.20.100.9126&lt;/code&gt;, Intel added support for not only the much needed &lt;code&gt;VK_EXT_robustness2&lt;/code&gt;, but also &lt;code&gt;VK_EXT_custom_border_color&lt;/code&gt;, improving performance and stability with the former extension and solving rendering issues in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; with the latter. Nothing better than free improvements for our integrated graphics crew running Vulkan. Latest is best!&lt;/p&gt;
&lt;p&gt;Linux distributions compatibility, and the dependency issues that come with it, have been a long standing problem for our tuxedo-wearing users&amp;hellip; Until now.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited,&lt;/a&gt; we now provide &lt;a href=&#34;https://appimage.org/&#34;&gt;AppImage builds,&lt;/a&gt; simplifying the installation process considerably. AppImages  eliminate the dreaded dependencies issues, and bringing back support for Ubuntu 18.04, Debian Buster, CentOS 8, and many older distributions.&lt;/p&gt;
&lt;p&gt;In the future, Early Access will finally be able to be distributed pre-compiled like this, the promise has been made. Thanks to the reduced source code compilation work hours, the CPU Union approves of this change.&lt;/p&gt;
&lt;p&gt;During the time the Texture Cache Rewrite spent in Early Access, several regressions have been fixed. One of the notorious ones is related to the camera rune in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./camera.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/camera_hue4298eaa992741d378a41b83a500a10f_5196_344x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;As you can clearly see with &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo’s&lt;/a&gt;&amp;hellip; art, the game informs two different size values for the same texture, named &lt;code&gt;pitch&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt;, so yuzu didn’t transfer needed information between them as it considered them different textures. By changing this behaviour, entities like animals, flowers, enemies, etc. are properly registered by the camera now.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botwbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/botwbug_huc050f897e4929f5dff1db36b4e9b0ad9_2896577_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Tony, get the boulder (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botwfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/botwfix_hu25273836066bb8a267b004559c6e3fc0_2895776_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Tony, get the boulder (The Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Tony, get the boulder (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;


&lt;p&gt;There were some crashes when exiting yuzu that was related to the telemetry process. &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;Tobi&lt;/a&gt; ported a fix from &lt;a href=&#34;https://github.com/citra-emu/citra&#34;&gt;Citra&lt;/a&gt; that &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5127&#34;&gt;changes the type of &lt;code&gt;AddField&lt;/code&gt; to a string,&lt;/a&gt; squashing one bug down.&lt;/p&gt;
&lt;p&gt;A commonly reported issue was that configuration changes are lost if yuzu crashes. &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; changed this behaviour to simply &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5217&#34;&gt;save the current settings before booting a game.&lt;/a&gt; This change saves several headaches.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; implemented the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5200&#34;&gt;new OSS fonts&lt;/a&gt; that &lt;a href=&#34;https://github.com/Its-Rei&#34;&gt;Rei&lt;/a&gt; put together. With this, users no longer require to dump the Switch firmware to get proper button fonts. The firmware dumping process is still needed for games that have Mii related content.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smm2fontbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/smm2fontbug_hu597fde90544b471be1d7ba63746ea27c_207784_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It’s far cleaner to have ZL and ZR as a trigger button, than just the letters alone, don’t you agree? (Super Mario Maker 2)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smm2fontfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/smm2fontfix_hu176d17ff27ff10d81b162616ebe0acf3_134193_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It’s far cleaner to have ZL and ZR as a trigger button, than just the letters alone, don’t you agree? (Super Mario Maker 2)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;It’s far cleaner to have ZL and ZR as a trigger button, than just the letters alone, don’t you agree? (Super Mario Maker 2)&lt;/p&gt;


&lt;p&gt;A separate PR &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5205&#34;&gt;added +/-&lt;/a&gt; to the fonts.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smashfontbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/smashfontbug_hu3b89098057e67b89ef9d2b26b5841303_129288_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;THE anime swordsman (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smashfontfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/smashfontfix_hu3b89098057e67b89ef9d2b26b5841303_129914_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;THE anime swordsman (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;THE anime swordsman (Super Smash Bros. Ultimate)&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./fonts.png&#34; title=&#34; Some insight in the process behind this.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/fonts_hud1468dc3746d218c9bc5d427914edd1a_33804_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Some insight in the process behind this.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Some insight in the process behind this.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Some games report the wrong device handle when sending vibration signals, like &lt;code&gt;NEKOPARA Vol. 3&lt;/code&gt; (don’t Google this series). &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; fixed this by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5190&#34;&gt;validating the device handles before use.&lt;/a&gt; Man of culture.&lt;/p&gt;
&lt;h2 id=&#34;kernel-rewrites&#34;&gt;Kernel Rewrites&lt;/h2&gt;
&lt;p&gt;yuzu&amp;rsquo;s kernel received important changes this month, focused on refactoring the code for thread management and synchronization. &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; started working on these changes two months ago, as covered on the previous progress report. Although a bit technical, these modifications are essential for accurate Nintendo Switch emulation. They also improve yuzu&amp;rsquo;s code quality and make it easier to work with. There are still many changes planned for the kernel, so stay tuned for even more improvements in the very near future.&lt;/p&gt;
&lt;p&gt;First, there is an improvement to yuzu &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5206&#34;&gt;ensuring safe memory access across threads&lt;/a&gt;. A &lt;code&gt;Race Condition&lt;/code&gt; happens when multiple threads are running simultaneously, and one thread modifies data while another thread accesses it. Race conditions can cause faulty or unexpected behaviour: a thread can retrieve partial data or even overwrite changes made by another. yuzu emulates the Nintendo Switch&amp;rsquo;s internal memory using a type of abstract data structure called a &lt;code&gt;Page Table&lt;/code&gt;, which works as a virtual layer between the physical and the emulated memory. It maps these addresses in a &amp;ldquo;contiguous table&amp;rdquo; that lets the programmer access memory easily without checking where actual memory stores everything. Most memory management operations were written before multicore CPU and asynchronous GPU were implemented. There was only a single thread back then, so there were no guards for thread-safe memory access. bunnei introduced a lock in this PR to alleviate a race condition where the data in the memory pages was being accessed while the GPU was operating on them.&lt;/p&gt;
&lt;p&gt;bunnei has also been rewriting the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5131&#34;&gt;kernel scheduler&lt;/a&gt;. Modern operating systems run many processes simultaneously, however, a single CPU core can only process one of them at any given time. The scheduler is an essential piece of the kernel, as it is in charge of swapping CPU access to the different processes and choosing in which order this happens. This will make yuzu’s kernel match &lt;code&gt;Horizon OS&lt;/code&gt; more closely.&lt;/p&gt;
&lt;p&gt;As a follow-up to this rewrite, bunnei reworked the way service calls were implemented in yuzu, by allocating their calls in their own &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5208&#34;&gt;individual service threads&lt;/a&gt;. Many services are running in the background on the Nintendo Switch. They are in charge of initializing and managing specific tasks, such as audio, graphics, user input, networking, etc. yuzu emulates these services through HLE - High Level Emulation. This means that, instead of dumping the binary code of these routines from the Nintendo Switch and translating their instructions so that a PC can run them, the programmer reimplements the functionality of these services in C++. Thus, HLE works like a &amp;ldquo;black box&amp;rdquo;: these services are called whenever there&amp;rsquo;s a request from the games, and they send (or ask) for the corresponding data, even though internally they may be different to how the service was originally implemented in hardware. But, as long as the information requested or sent through the service is valid and processed appropriately, the system is being emulated correctly.&lt;/p&gt;
&lt;p&gt;These service processes are independent of each other, so games call them asynchronously. But before this PR, all of these services were being processed in the &lt;code&gt;CoreTiming&lt;/code&gt; thread &amp;ndash; a thread that is used to process events at certain times in the future (for example, when a frame completes rendering). This meant that games would call these processes, but they would not be processed until the &lt;code&gt;CoreTiming&lt;/code&gt; thread was run, which resulted in these requests piling up in a queue and possibly introducing lag if the queue wasn&amp;rsquo;t emptied fast enough.&lt;/p&gt;
&lt;p&gt;Thanks to the changes in this PR, each of these processes was moved to their own thread and is processed more quickly. An immediate benefit of this change is that load times improve significantly, and input lag is also reduced. But another important perk is that this implementation is more accurate, as it resembles the behaviour of services in the Nintendo Switch. GPU emulation also runs on its own thread now, which is synchronized on GPU pushes and flushes. This means that &lt;code&gt;async GPU&lt;/code&gt; can be decoupled from multicore and these settings can now be toggled independently from each other.&lt;/p&gt;
&lt;p&gt;Finally, as a continuation to the previous two PRs, comes the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5266&#34;&gt;rewrite of the kernel synchronization primitives&lt;/a&gt; – namely, &lt;code&gt;Synchronization Objects&lt;/code&gt;, &lt;code&gt;Condition Variables&lt;/code&gt; and &lt;code&gt;Address Arbiters&lt;/code&gt;. An in-depth explanation of how these mechanisms work goes beyond the scope of this report, but essentially they are tools used by threads in different processes to communicate with each other and be synchronized properly. The major benefit of these changes is that a lot of code that was being carried over from Citra (and that required major workarounds to make it function properly with multicore) has been changed in favour of mechanisms more appropriate for how yuzu works, besides making it closer to how the &lt;code&gt;Horizon OS&lt;/code&gt; of the Nintendo Switch works.&lt;/p&gt;
&lt;p&gt;Going in hand with these synchronization changes, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; introduced a PR to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5237&#34;&gt;incorporate a syncpoint manager for nvdec&lt;/a&gt;. This utilizes the tools mentioned previously to implement a more accurate GPU-CPU synchronization mechanism. It is crucial to avoid race conditions when async operations are being performed by the emulator when decoding a video.&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;Finally, a very needed User Interface change, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5239&#34;&gt;language support&lt;/a&gt; is here. Thanks to work done by &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;Tobi&lt;/a&gt; and many, &lt;em&gt;many&lt;/em&gt; members of the community from around the globe, we can now offer support for 11 different languages, plus regional variations. ¡Muchas gracias!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./language.png&#34; title=&#34; You can find this in Emulation &amp;gt; Configure &amp;gt; General &amp;gt; UI &amp;gt; Interface language&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/language_hu88a62c38c4596df29ba39fbd8e1795be_14285_1020x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; You can find this in Emulation &amp;gt; Configure &amp;gt; General &amp;gt; UI &amp;gt; Interface language&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; You can find this in Emulation &amp;gt; Configure &amp;gt; General &amp;gt; UI &amp;gt; Interface language&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Anyone is welcome to help &lt;a href=&#34;https://www.transifex.com/yuzu-emulator/yuzu&#34;&gt;expand the available language list.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For our command-line or shortcut lovers, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; adds &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5229&#34;&gt;command-line arguments.&lt;/a&gt; Current options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;yuzu.exe &amp;quot;path_to_game&amp;quot;&lt;/code&gt; - Launches a game at &lt;code&gt;path_to_game&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yuzu.exe -f&lt;/code&gt; - Launches the next game in fullscreen.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yuzu.exe -g &amp;quot;path_to_game&amp;quot;&lt;/code&gt; - Launches a game at &lt;code&gt;path_to_game&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yuzu.exe -f -g &amp;quot;path_to_game&amp;quot;&lt;/code&gt; - Launches a game at &lt;code&gt;path_to_game&lt;/code&gt; in fullscreen.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feel free to create desktop shortcuts of all of your games!&lt;/p&gt;
&lt;p&gt;Thinking of our fast typers, &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; added several &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5223&#34;&gt;menubar access hot-keys&lt;/a&gt;. Now, for example, a user can press &lt;code&gt;Alt + F, R, ENTER&lt;/code&gt; to load the most recently played game. Look Ma! No mouse!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; added the option to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5178&#34;&gt;resize yuzu’s window to 1920x1080&lt;/a&gt;, on top of the traditional 1280x720. This ensures a perfect 1:1 pixel ratio with native 1080p games while playing windowed, for those with high-resolution displays.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./resize.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/resize_hu42b5350564af2a33b7845b3ae07584b2_27329_366x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;input-changes&#34;&gt;Input changes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5178&#34;&gt;german77&lt;/a&gt; is back in action with a couple of input improvements.&lt;/p&gt;
&lt;p&gt;Adding a way to invert an analog stick axis was a problem we did not expect to have on Xbox and PlayStation controllers, but some alternative brands don’t seem to follow the specifications very closely. Now if you right-click on an axis, you get the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5233&#34;&gt;option to invert it.&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./invert.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/invert_hu04af81816416b375bba066bab4f9684b_6986_269x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This is also a great way to invert a camera if a game doesn’t allow it in its own settings, for example in &lt;code&gt;Star Wars Jedi Knight II: Jedi Outcast&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Analog triggers were sometimes mapped inverted to what the user intended. As a way to avoid some bad moments to our users, now &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5265&#34;&gt;the program takes two samples when mapping an analog trigger,&lt;/a&gt; to better determine the direction of movement. This was &lt;a href=&#34;https://github.com/citra-emu/citra/pull/5509&#34;&gt;ported from Citra&lt;/a&gt;, so thanks, guys!&lt;/p&gt;
&lt;p&gt;A few games like &lt;code&gt;Voez&lt;/code&gt; and &lt;code&gt;The Room&lt;/code&gt; require specific touch gestures, and to achieve that, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5270&#34;&gt;multitouch support was added.&lt;/a&gt; With this, yuzu now offers support for up to 16 touch inputs with the keyboard, touch screen or via UDP services.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./room.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/room_hud87d3f44ab29b2ff5cfd71a6a7d18f8c_1453658_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;preliminary-work-for-the-buffer-cache-rewrite&#34;&gt;Preliminary work for the Buffer Cache Rewrite&lt;/h2&gt;
&lt;p&gt;While we sadly couldn’t give you a Christmas present in the form of the &lt;code&gt;Buffer Cache Rewrite&lt;/code&gt; (or BCR for short), the preliminary work needed to have it ready has started. &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; has his hands full with cleaning up the TCR recently merged into Mainline, the current internal work and testing on the BCR, and his first steps with &lt;code&gt;Project Hades&lt;/code&gt;. &lt;em&gt;“Sleep is for the weak”&lt;/em&gt; indeed.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./rodrigo.png&#34; title=&#34; And you don&amp;#39;t seem to understand... (Rodrigo sleeping)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-dec-2020/rodrigo_hu40eea79643b4062a0b7dbda2b684bdaf_527063_650x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; And you don&amp;#39;t seem to understand... (Rodrigo sleeping)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; And you don&amp;#39;t seem to understand... (Rodrigo sleeping)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;We will go in-depth once BCR is completed, but one of the required features is &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5225&#34;&gt;having access to Vulkan at all times&lt;/a&gt; to make use of &lt;code&gt;interop&lt;/code&gt;, a driver feature (or as Rodrigo calls it, a monstrosity) that allows developers to cross-code between different graphics APIs on Nvidia and AMD products. This way, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5230&#34;&gt;Vulkan can be used from OpenGL if it offers a better solution to a problem.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A rather interesting change needed is &lt;a href=&#34;https://github.com/MerryMage/dynarmic/pull/566&#34;&gt;related&lt;/a&gt; to &lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;Dynarmic&lt;/a&gt;. By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5249&#34;&gt;masking data in three lower pointer bits&lt;/a&gt; before reading them, Rodrigo can now store required information of the page tables without needing to use a lock, saving precious execution time and, at most, some 128MB of system memory.&lt;/p&gt;
&lt;p&gt;Lastly, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5262&#34;&gt;additional granularity in the CPU pages.&lt;/a&gt; This PR allows informing if the CPU or the GPU modified a range of data in the CPU page. If the relevant range was modified by the CPU, it must be uploaded to the GPU. Processors supporting the &lt;code&gt;BMI1&lt;/code&gt; instruction set will get a slim performance improvement, these include Intel Haswell (Gen. 4) or newer, and AMD Piledriver (2nd Gen. FX)/Jaguar or newer.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;It’s no surprise, but the &lt;code&gt;Buffer Cache Rewrite&lt;/code&gt; is close to release. Vulkan performance and stability improvements are planned, with kernel improvements continuing to be a high priority.
Plus we also have some other interesting things we’ll reveal later on.&lt;/p&gt;
&lt;p&gt;That’s all folks! Thank you so much for sticking around. See you next time in the January progress report! Take care and stay safe!
Thanks to Darkerm and Morph for helping with the pictures.&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report November 2020</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2020/</link>
      <pubDate>Wed, 09 Dec 2020 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2020/</guid>
      <description>&lt;p&gt;Salutations, yuz-ers! This is the November progress report which, for an unlimited time, will offer you hundreds of graphical fixes, improved performance, kernel changes, input additions, and major code cleanups.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Salutations, yuz-ers! This is the November progress report which, for an unlimited time, will offer you hundreds of graphical fixes, improved performance, kernel changes, input additions, and major code cleanups.&lt;/p&gt;
&lt;h2 id=&#34;4-jits-four-of-a-kind&#34;&gt;4-JITs, four of a kind&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; and &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; have been taking a look at yuzu&amp;rsquo;s implementation of the kernel, searching for bugs or code that could be refactored — that is to say, rewritten to gain performance or make it easier to read, without changing the core functionality.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4996&#34;&gt;This kernel refactor PR&lt;/a&gt; focuses on modifying how the JIT (Just-in-time) compiler, an essential tool to emulate the Nintendo Switch&amp;rsquo;s CPU, is being used in yuzu. These changes greatly benefit the user since they will mitigate the need to set up a huge pagefile for the emulator. Setting the default pagefile size to &lt;code&gt;auto&lt;/code&gt; should now be sufficient, although some games, like &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;, might still need a pagefile with a more reasonable size due to the sheer amount of resources being allocated. Users may want to set the pagefile size to 10000MB to cover these worst-case scenarios.&lt;/p&gt;
&lt;p&gt;Speaking of &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;, these changes have also fixed a softlock that occurred quite frequently when the Final Smash of the DLC character “Hero” was used. You can now freely kick your opponents off the screen with all your might without needing to hold your breath and cross your fingers.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./hero.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Hero’s Final Smash (Super Smash Bros. Ultimate)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Additionally, the stutters experienced in many games have disappeared. This includes those found while changing character costumes in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; and right before the world map and tutorial videos play in &lt;code&gt;Super Mario Odyssey&lt;/code&gt; (the videos also play much more smoothly).&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./smobug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./smofix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;World map in Super Mario Odyssey, before (left) and after (right) the changes, now stutter-free!&lt;/p&gt;


&lt;p&gt;So, you might be wondering, what exactly is happening behind the curtains?&lt;/p&gt;
&lt;p&gt;Computer programs, such as games, are usually written in high-level programming languages. These programs basically consist of a series of statements that will be carried out by the processor in sequential order to accomplish different tasks. The processor, however, does not understand these high-level instructions, so they are converted into a set of more elemental operations in binary called &lt;a href=&#34;https://en.wikipedia.org/wiki/Machine_code&#34;&gt;machine code&lt;/a&gt;, which is directly compatible with the hardware of the system. The process of converting source code into machine code is called &lt;code&gt;compilation&lt;/code&gt;, and this produces a file that can be loaded into memory and executed by the processor from there.&lt;/p&gt;
&lt;p&gt;The Nintendo Switch uses a 4-core ARM-based CPU, so naturally the generated machine code of any Switch game will be fully compatible with that architecture. This arises a problem, however, since yuzu was designed to run on computers using a processor with a AMD64 architecture, which is not capable of understanding these instructions. For this reason, they must be interpreted or translated from guest machine code (ARM) to host machine code (AMD64). There are different approaches to accomplish this, and yuzu does so by using &lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;Dynarmic&lt;/a&gt;: a dynamic recompiler written by &lt;a href=&#34;https://github.com/MerryMage&#34;&gt;MerryMage&lt;/a&gt; that performs this translation in real time. This process, the so-called JIT Compilation, reads chunks of the program in memory, decodes the instructions, and emits the translated code so the host CPU can run it. By invoking Dynarmic, it is possible to recompile game code into machine code that runs natively on the host architecture.&lt;/p&gt;
&lt;p&gt;Previously, yuzu would create one instance of Dynarmic per guest thread being emulated on the Switch. This resulted in having multiple instances of the JIT running at the same time, which could be as many as twenty, if not more! As a consequence, a lot of resources were being wasted unnecessarily like this. But with the changes introduced in this PR, yuzu now creates only four instances of Dynarmic: one per core, which is a more efficient solution. The chart shown below compares the usage of memory among some popular titles before and after this PR was implemented; the test was performed during the internal testing phase, while yuzu was being run along Google Chrome and Discord. As it can be seen, the differences in memory usage vary between 3 GB and 6.4 GB, depending on the game. Similar results have been observed across other titles.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./memgraph.png&#34; title=&#34; Memory usage before and after implementing 4-JITs&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2020/memgraph_hu0d349aca320730e1db3f6032ff7ea1eb_28407_927x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Memory usage before and after implementing 4-JITs&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Memory usage before and after implementing 4-JITs&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;bunnei is still working on more cleanups and looking for things that can be further improved, so expect more updates in the future.&lt;/p&gt;
&lt;h2 id=&#34;the-texture-cache-rewrite&#34;&gt;The Texture Cache Rewrite&lt;/h2&gt;
&lt;p&gt;We’ve already spoken in detail about &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4967&#34;&gt;the Texture Cache Rewrite&lt;/a&gt; in its &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/&#34;&gt;dedicated article&lt;/a&gt;, so in short, the &lt;code&gt;Texture Cache Rewrite&lt;/code&gt; (which is not a shader cache change) is work done by &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; to reimplement the old texture cache yuzu used, which was forked from &lt;a href=&#34;https://github.com/citra-emu/citra&#34;&gt;Citra.&lt;/a&gt; This effort took over 10000 lines of code, fixing graphical bugs in numerous games and improving performance along the way.&lt;/p&gt;
&lt;p&gt;This paves the way for future important changes, like the &lt;code&gt;Buffer Cache Rewrite&lt;/code&gt;, which is expected to not only continue to improve render accuracy, but to raise performance by optimizing the “hottest” code in the GPU section of our source, according to profiling. Afterwards, development of &lt;code&gt;Project Hades&lt;/code&gt; is planned. This is a rewrite of the &lt;code&gt;Shader Cache&lt;/code&gt;, with its main focus being improved precision and stability, and increased performance in Intel GPUs that are bottlenecked by the current implementation.&lt;/p&gt;
&lt;p&gt;Expected soon-ish are the &lt;code&gt;Compute Texture Decoders&lt;/code&gt; which will leverage the compute shader capabilities of GPUs to decode the texture formats handled by the Nintendo Switch games. This includes even elusive formats like &lt;code&gt;ASTC&lt;/code&gt;, the main cause of non-shader related stuttering on non-Intel GPUs.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./botw.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Prettiest fast-traveling (The Legend of Zelda: Breath of the Wild)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;One sad point of this rewrite is that the “Vulkan memory manager”, now called the &lt;code&gt;Texture Reaper&lt;/code&gt;, which was expected to help reduce VRAM use in Vulkan, will take longer to implement due to technical complications that surfaced during its development. There is more detailed information in the dedicated article.&lt;/p&gt;
&lt;p&gt;A small PSA, AMD users should install the &lt;code&gt;20.11.3&lt;/code&gt; driver version or newer, as it adds &lt;code&gt;VK_EXT_robustness2&lt;/code&gt; to all missing Radeon products, helping in stability and precision.&lt;/p&gt;
&lt;h2 id=&#34;project-aether-or-how-to-visit-yuzu-from-within-yuzu&#34;&gt;Project Aether, or how to visit yuzu from within yuzu&lt;/h2&gt;
&lt;p&gt;Nintendo Switch games have access to a &lt;code&gt;web applet&lt;/code&gt; that is typically used to show tutorials or guides while playing. Our original implementation using &lt;a href=&#34;https://doc.qt.io/qt-5/qtwebengine-index.html&#34;&gt;QtWebEngine&lt;/a&gt; had some lasting bugs that impeded gameplay in some cases, like the tutorials on a first boot of &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5042&#34;&gt;rewrote yuzu’s web applet&lt;/a&gt;, still based on QtWebEngine, but completely overhauled. The web applet now accepts controller input instead of only touch emulation via mouse, and rendering fonts extracted from the native OS on the Switch, or using Open Source Software fallbacks.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./webapplet.png&#34; title=&#34; Working tutorials in Super Smash Bros. Ultimate&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2020/webapplet_hu2d3b37a01005341b8a7f78318415bbfe_854905_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Working tutorials in Super Smash Bros. Ultimate&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Working tutorials in Super Smash Bros. Ultimate&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Previously non-rendering applets are now working. This includes the few cases where games got stuck due to the previous implementation, like in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;. Mods that bypass the applet are no longer required, like in &lt;code&gt;Super Mario Odyssey&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There are limitations listed in the Pull Request that we will continue to work on. Expect this change to force our minimum Ubuntu version requirement to 20.10 in the future due to the need to update Qt to version 5.14.2 or higher.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./yuzu.png&#34; title=&#34; yuzuception!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2020/yuzu_hu619807f13ac737091a019037b50c750e_636597_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; yuzuception!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; yuzuception!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;general-bug-fixes-and-improvements&#34;&gt;General bug fixes and improvements&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; brings the Xenoblade fans a nice little fix. &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5013&#34;&gt;Implementing &lt;code&gt;early fragment tests&lt;/code&gt;&lt;/a&gt; fixes ghost geometry problems that resulted in dark rendering areas.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xcdebug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2020/xcdebug_hu03cc0b23bc2277cd9ace912d98e1002b_2952665_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Like night and day! (Xenoblade Chronicles Definitive Edition)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xcdefix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2020/xcdefix_huc9271feb6d3d74d43af8de573b7a9f6d_8324840_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Like night and day! (Xenoblade Chronicles Definitive Edition)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Like night and day! (Xenoblade Chronicles Definitive Edition)&lt;/p&gt;


&lt;p&gt;This fix will be a Vulkan exclusive for now to avoid invalidating the current OpenGL shader cache.&lt;/p&gt;
&lt;p&gt;More vulkan fixes, now by &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy!&lt;/a&gt; He &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4946&#34;&gt;implemented the missing &lt;code&gt;alpha test culling&lt;/code&gt; feature&lt;/a&gt; from Vulkan, resolving transparency related rendering bugs. This could be easily spotted in the main menu of &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; or the vegetation of &lt;code&gt;Tales of Vesperia: Definitive Edition&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smashbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2020/smashbug_hued13fab351b53fcdef96a61908d1eea9_948422_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smashfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2020/smashfix_hud242f41138fd825ae9af94d9be72adf7_931601_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./talesbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2020/talesbug_hu01c546763ad9a2db806be7a18e47767b_3324196_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Those are some weird plants (Tales of Vesperia: Definitive Edition)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./talesfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2020/talesfix_hu7026470b981a9c662a964fbf01574a50_2618138_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Those are some weird plants (Tales of Vesperia: Definitive Edition)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Those are some weird plants (Tales of Vesperia: Definitive Edition)&lt;/p&gt;


&lt;p&gt;While we are speaking about &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt;, he also improved the quality of the NVDEC video decoder, by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5002&#34;&gt;queueing all frames&lt;/a&gt; and cleaning up the code. This results in reduced skipped frames, and greatly improves videos encoded in &lt;code&gt;VP9&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./introbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./introfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Do you need a hand? (Super Smash Bros. Ultimate)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./smovidbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./smovidfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;An example of embedded videos during gamplay (Super Mario Odyssey)&lt;/p&gt;


&lt;p&gt;There has been some progress in World of Light playability, the single player campaign of &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;. The main problem is not fixed yet, but thanks to &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4901&#34;&gt;stubbing &lt;code&gt;GetAlbumFileList3AaeAruid&lt;/code&gt;,&lt;/a&gt; now users can do a single fight in World of Light, save, restart yuzu, and do another one. We’re slowly getting there!&lt;/p&gt;
&lt;p&gt;Later updates of &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; fail to load, but by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4951&#34;&gt;stubbing &lt;code&gt;OLSC Initialize&lt;/code&gt; and &lt;code&gt;SetSaveDataBackupSettingEnabled&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; restored playability once again. You can now enjoy all the new content and events added with the latest update.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4932&#34;&gt;started preliminary work&lt;/a&gt; on future fixes for audio emulation. This change currently improves fidelity in games like &lt;code&gt;Shovel Knight&lt;/code&gt; and the &lt;code&gt;LEGO&lt;/code&gt; series. Expect more audio related changes soon.&lt;/p&gt;
&lt;p&gt;yuzu has always been unstable when stopping emulation, and there are several reasons for this. &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; fixed two distinct cases, when &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4978&#34;&gt;closing while shaders were compiling, &lt;/a&gt; and when closing &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4977&#34;&gt;early during the boot process.&lt;/a&gt; Quality of life fixes are always welcome.&lt;/p&gt;
&lt;h2 id=&#34;input-improvements&#34;&gt;Input improvements&lt;/h2&gt;
&lt;p&gt;You’ve been asking for it for ages, and &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; delivers. &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4939&#34;&gt;Mouse support is here!&lt;/a&gt; With this, users can now set their mouse as they desire, be it an analog stick, buttons, motion, or touch screen emulation. A controller with motion support is still the recommended input method, but a mouse can save you in a pinch.&lt;/p&gt;
&lt;p&gt;As an extra gift for keyboard users, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; also added support for &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4905&#34;&gt;better analog emulation with keyboard inputs.&lt;/a&gt; With this change, keyboard players can now “drift” the emulated analog stick to get any angle, not just the fixed eight directions you can get by pressing key combinations.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./analogkey.png&#34; title=&#34; You can find this setting in Emulation &amp;gt; Configure... &amp;gt; Controls &amp;gt; Advanced &amp;gt; Emulate Analog with Keyboard Input&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2020/analogkey_hu82a94e17b6e55350e07c3cb65b4a403a_38996_1021x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; You can find this setting in Emulation &amp;gt; Configure... &amp;gt; Controls &amp;gt; Advanced &amp;gt; Emulate Analog with Keyboard Input&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; You can find this setting in Emulation &amp;gt; Configure... &amp;gt; Controls &amp;gt; Advanced &amp;gt; Emulate Analog with Keyboard Input&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; also enabled the use of &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4937&#34;&gt;up to 8 different UDP servers.&lt;/a&gt; This allows for motion controls for each player.&lt;/p&gt;
&lt;p&gt;By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4959&#34;&gt;using &lt;code&gt;NpadStyleSet&lt;/code&gt;,&lt;/a&gt; &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; now limits the available input options depending on the game. For example, in &lt;code&gt;Pokémon: Let’s Go&lt;/code&gt;, the options are now limited to either Handheld, Left Joy-Con, or Right Joy-Con.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./limit.png&#34; title=&#34; No cheating!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-nov-2020/limit_hua63c74d294ec6624dbb1c26ead1e6fd5_103141_1018x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; No cheating!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; No cheating!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4950&#34;&gt;tweaked the rumble amplification function,&lt;/a&gt; making it more linear and less aggressive. This should help when low strength percentage values are used.&lt;/p&gt;
&lt;p&gt;By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5021&#34;&gt;stubbing both&lt;/a&gt; &lt;code&gt;SetNpadCommunicationMode&lt;/code&gt; and &lt;code&gt;GetNpadCommunicationMode&lt;/code&gt;, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; made &lt;code&gt;Borderlands: Game of the Year Edition&lt;/code&gt; and &lt;code&gt;Borderlands 2: Game of the Year Edition&lt;/code&gt; playable!&lt;/p&gt;
&lt;h2 id=&#34;a-silent-guardian-a-watchful-protector&#34;&gt;A silent Guardian, a watchful Protector&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lioncash&#34;&gt;Lioncache&lt;/a&gt;, our harsh but fair code reviewer, has been &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/5028&#34;&gt;removing&lt;/a&gt; the &lt;code&gt;global variable accessor&lt;/code&gt; from the whole project (the linked PR is just the latest section), work that has taken months. yuzu used to be able to run a single global system instance, but with this change, yuzu can now create as many emulated instances as needed, all separate from each other. This provides full control over the life cycle of the emulated system, allowing among other things, faster game boot times, and maybe more importantly, forcing the devs to keep up cleaner code, which is easier to maintain in the future.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;Buffer Cache Rewrite&lt;/code&gt; has been progressing very fast with no delays so far, and Rodrigo is very enthusiastic about starting &lt;code&gt;Project Hades&lt;/code&gt; after finishing it. More multicore changes are incoming, along with input improvements.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s all folks! Thank you so much for taking the time to read this progress report. See you next month, maybe Christmas will come early!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Mini-Series - Dev Interview #3</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-mini-dev-3/</link>
      <pubDate>Thu, 03 Dec 2020 01:45:00 &#43;0100</pubDate>
      <author>MysticExile</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-mini-dev-3/</guid>
      <description>&lt;p&gt;Hey there yuz-ers, welcome to the third Developer Interview! It&amp;rsquo;s been a while since the last installment of this mini-series, so let&amp;rsquo;s jump right into the good stuff.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey there yuz-ers, welcome to the third Developer Interview! It&amp;rsquo;s been a while since the last installment of this mini-series, so let&amp;rsquo;s jump right into the good stuff.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This time we&amp;rsquo;re interviewing the myth, the legend, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt;! He is the main reason why we have &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4729&#34;&gt;NVDEC&lt;/a&gt; now!
If you didn&amp;rsquo;t know already, NVDEC is Nvidia&amp;rsquo;s video decoder used by the Nintendo Switch. Without him, we wouldn&amp;rsquo;t be able to watch videos like &lt;code&gt;Fire Emblem: Three House&#39;s&lt;/code&gt; intro or &lt;code&gt;The Legend of Zelda: Breath of the Wild&#39;s&lt;/code&gt; memories.
But that&amp;rsquo;s not the only thing he has done!
He was also responsible for &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4443&#34;&gt;asynchronous shader compilation on the Vulkan renderer&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4137&#34;&gt;GameCube Controller support&lt;/a&gt;, and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4946&#34;&gt;Alpha Test Culling on the Vulkan renderer&lt;/a&gt;.
And now, on to the interview!!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Q: Hey epicboy, why don&amp;rsquo;t you start by telling us a bit about yourself?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E:&lt;/strong&gt; I&amp;rsquo;m just a typical college student majoring in Computer Science. I&amp;rsquo;m in my fourth year of studies out of five, pursuing both a BS and MS degree.
To be honest, I&amp;rsquo;ve been suffering from &lt;a href=&#34;https://en.wikipedia.org/wiki/Impostor_syndrome&#34;&gt;imposter syndrome&lt;/a&gt; in my classes, so I wanted to put my programming skills to the test.
That&amp;rsquo;s what drove me to contribute to yuzu; a real-world test of the knowledge and experience I gained from my classes to prove to myself that my time at college hasn&amp;rsquo;t been a waste.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: Why did you choose yuzu, a Nintendo Switch emulator, specifically?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E:&lt;/strong&gt; When I first heard of yuzu, back in 2018, I was impressed by the progress made on Switch emulation so soon after the console&amp;rsquo;s release.
I continued to follow the project&amp;rsquo;s progress and was inspired by the never ending drive and effort of the developers.
Soon after &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; was announced as playable on the emulator, which sounded too good to be true, I gave the emulator a shot and was blown away at the compatibility.
Of course, it wasn&amp;rsquo;t perfect, especially given that my beloved controller of choice, the Nintendo GameCube controller, was not compatible with the emulator.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: So you decided that it was time to take matters into your own hands and add support yourself?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E:&lt;/strong&gt; Knowing that other emulators (notably &lt;a href=&#34;https://dolphin-emu.org/&#34;&gt;Dolphin&lt;/a&gt;) had proper support for the official GameCube adapter,
and considering I was looking to sharpen my programming skillset,
I decided to take the opportunity and see if I can bring that support over to yuzu, opening the option to use the GameCube controller for anyone on the emulator.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: I&amp;rsquo;m sure our GC controller users are very happy with your contribution! Why did you choose to tackle such a large task as NVDEC?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E:&lt;/strong&gt; I found the code review for the GC adapter implementation to be really useful.
I wanted to learn more from the very sharp yuzu developers and continued to make more contributions and became more familiar with the yuzu dev team.
One feature that I saw many yuzu fans request was for video decoding.
I learned that &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; had attempted to implement NVDEC before and reached out to get an understanding of this feature&amp;rsquo;s scope and challenges faced along the way.
Before I knew it, I had access to the repository with the old implementation&amp;rsquo;s code and was encouraged to find a way to finish it off.&lt;/p&gt;
&lt;p&gt;It was intimidating at first, but the encouragement and mentorship from ogniK kept me motivated.
It was also the first glimpse I had at the guts of yuzu, and found the work that has gone into the emulation of the Nintendo Switch&amp;rsquo;s GPU to be very interesting.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./zla_0.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-3/zla_0_hu2af81f6b3cafef181f86346caa3dcd83_2064566_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Link&amp;#39;s Awakening&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./zla_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-3/zla_1_hu87f54b6117c2cd9232846812dacab23e_1041880_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Link&amp;#39;s Awakening&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda: Link&amp;#39;s Awakening&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ssbu_0.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-3/ssbu_0_hud74bbcc6da23859524443dc928109d9d_2298121_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Smash Bros. Ultimate&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ssbu_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-3/ssbu_1_hua084218ed0b11de4722d22608ac3ab56_3979061_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Smash Bros. Ultimate&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Smash Bros. Ultimate&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;Q: What obstacles did you have to overcome when implementing NVDEC?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E:&lt;/strong&gt; The earliest challenge was to understand what the data I&amp;rsquo;m looking at means. At the GPU command level, everything is hexadecimal numbers with no obvious meaning tied to it.
Thankfully, there have been others who reverse engineered and documented the processes that the GPU goes through for the NVDEC functionality.
I was able to get quite far with decoding H.264 videos with the help of ogniK&amp;rsquo;s older implementation. But the VP9 encoded videos found in many games were very difficult to decode.&lt;/p&gt;
&lt;p&gt;In order to decode VP9, I needed the frame data along with a &amp;ldquo;compressed&amp;rdquo; and &amp;ldquo;uncompressed&amp;rdquo; header to be sent to &lt;a href=&#34;https://ffmpeg.org/&#34;&gt;FFmpeg&lt;/a&gt;, a library which is widely used for video decoding.
The Switch GPU provided me with the frame data, but the headers needed to be manually constructed based on meta data provided by the GPU.
I found myself spending countless hours reading the VP9 specification, and analyzing the video frame-by-frame in a tool that displays each frame&amp;rsquo;s headers. Ultimately, it paid off, and many VP9 videos are decoded accurately.&lt;/p&gt;
&lt;video width=&#34;1280&#34; height=&#34;720&#34; controls&gt;
  &lt;source src=&#34;./ssbu_2.mp4&#34; type=&#34;video/mp4&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt;
&lt;p&gt;&lt;strong&gt;Q: Quite the task I imagine. Why did you opt for the FFMpeg library instead of other alternatives?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E:&lt;/strong&gt; FFmpeg was kind of a no-brainer. It&amp;rsquo;s fast, it&amp;rsquo;s open sourced, and it&amp;rsquo;s well documented. It handles decoding with little effort on the programmer&amp;rsquo;s part.
It also provides API&amp;rsquo;s to re-scale and convert video formats, which proved to be useful.
The other alternative would have been writing my own software decoder from scratch, but there&amp;rsquo;s no point in reinventing the wheel!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./botw_0.png&#34; title=&#34; Footage of one of The Legend of Zelda: Breath of the Wild&amp;#39;s memories.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-3/botw_0_hu333d01a22c75237e468f199bb203144f_2282915_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Footage of one of The Legend of Zelda: Breath of the Wild&amp;#39;s memories.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Footage of one of The Legend of Zelda: Breath of the Wild&amp;#39;s memories.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Q: No kidding! Is there anything you&amp;rsquo;re currently working on?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E:&lt;/strong&gt; Of course! I&amp;rsquo;m always looking for the next opportunity to contribute to the project while continuing to learn and grow as a programmer as well.
There&amp;rsquo;s still some work left for me to finish up for the NVDEC implementation, so I haven&amp;rsquo;t decided on what I&amp;rsquo;d like to tackle next. All I can say for now is that I genuinely enjoyed GPU related programming.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: We look forward to your future contributions! Is there anything else you would like to share to our users?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E:&lt;/strong&gt; I&amp;rsquo;d like to say &amp;ldquo;thank you&amp;rdquo; to all the yuz-ers! They are always appreciative of the work the yuzu developers put into the emulator, and are always excited to know what&amp;rsquo;s next for the project.
Their demands can sometimes be overwhelming, but it continues to motivate the developers, and it&amp;rsquo;s always gratifying to see the positive reaction they have when a feature they&amp;rsquo;ve been looking forward to finally becomes a reality.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A huge thanks to epicboy for taking the time to sit down and give us some insight on NVDEC and himself.
We hope you all enjoyed it, and we will be back soon with another featured yuzu dev to bring you behind the curtains again. Until then, thank you for your support and stay tuned!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>New Feature Release - Texture Cache Rewrite</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-tcr/</link>
      <pubDate>Sun, 22 Nov 2020 16:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-tcr/</guid>
      <description>&lt;p&gt;Hi yuz-ers! We’re very excited to offer you one of the biggest code rewrites in yuzu’s history: The Texture Cache Rewrite! Now available to our Early Access members, continue reading to learn more.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hi yuz-ers! We’re very excited to offer you one of the biggest code rewrites in yuzu’s history: The Texture Cache Rewrite! Now available to our Early Access members, continue reading to learn more.&lt;/p&gt;
&lt;h2 id=&#34;but-what-is-the-tcr&#34;&gt;But what is the TCR?&lt;/h2&gt;
&lt;p&gt;yuzu started as a fork of &lt;a href=&#34;https://github.com/citra-emu/citra&#34;&gt;Citra&lt;/a&gt;, so Citra&amp;rsquo;s texture cache (or rasterizer cache, as it was called at the time) was used in the early days of yuzu. However, this cache only supported OpenGL, so one of the first efforts when adding support for &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/&#34;&gt;Vulkan&lt;/a&gt; was to make the code more generic, helping in GPU emulation.&lt;/p&gt;
&lt;p&gt;When this was being worked on, we were still learning how the Nintendo Switch&amp;rsquo;s GPU worked (we still are, but even more so then). Some design decisions taken at the time stuck with the codebase making things harder to change in the future. It was also easier to break with unrelated changes.&lt;/p&gt;
&lt;p&gt;So out with the old, in with the new. The previous implementation was no longer sufficient, so &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; started working on a complete rewrite from scratch. This includes but is not limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cleaner code. No more virtual calls or shared pointers, this allows for easier maintenance in the future.&lt;/li&gt;
&lt;li&gt;Proper handling for texture swizzling.&lt;/li&gt;
&lt;li&gt;Some operations are now done in the GPU instead of in the CPU, improving performance.&lt;/li&gt;
&lt;li&gt;Control over when to destroy textures.&lt;/li&gt;
&lt;li&gt;Previously, textures were removed from the cache on CPU writes, but now they are flagged as dirty. This allows yuzu to cache already visited image views and render targets, saving time.&lt;/li&gt;
&lt;li&gt;Multiple textures can coexist in the same address now.&lt;/li&gt;
&lt;li&gt;Aliased images are now emulated through copies on demand.&lt;/li&gt;
&lt;li&gt;Rendering to compressed textures is properly emulated.&lt;/li&gt;
&lt;li&gt;3D BC4 textures are emulated with RGBA8.&lt;/li&gt;
&lt;li&gt;Rendering to texture views of different compatible formats is emulated without copies.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./lain.png&#34; title=&#34; A very detailed explanation from our developer&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/lain_hu72a9222a2273035c3fa0d17aeba6bb0c_8280_542x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; A very detailed explanation from our developer&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; A very detailed explanation from our developer&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;ok-but-how-does-this-help&#34;&gt;OK, but how does this help?&lt;/h2&gt;
&lt;p&gt;In short: it fixes a lot of graphical bugs, improves performance, and is not limited to any hardware configuration or driver in use. Improvements for everyone, once all parts are finished.&lt;/p&gt;
&lt;p&gt;Before we talk about performance, here are just a few examples of the rendering fixes you can expect to see with this release:&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./splatoon_2_before_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/splatoon_2_before_2_huec3b68ec61adf0a15ec495da37082d50_2525922_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Splatoon_2_after_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/Splatoon_2_after_2_hu8f3689c651e4d08d7e80af73a7adcc3d_3427593_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;





&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Splatoon_2_before.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/Splatoon_2_before_huec3b68ec61adf0a15ec495da37082d50_2353106_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Shadows in Splatoon 2 are now rendered correctly, finally allowing us to admire the beautiful cityscape&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Splatoon_2_after.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/Splatoon_2_after_huec3b68ec61adf0a15ec495da37082d50_3553546_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Shadows in Splatoon 2 are now rendered correctly, finally allowing us to admire the beautiful cityscape&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Shadows in Splatoon 2 are now rendered correctly, finally allowing us to admire the beautiful cityscape&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./LM3_before.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/LM3_before_hucbb5ea835c095620e567a63bb74a2935_2276532_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Lighting and stencil shadow corruption is now fixed in Luigi&amp;#39;s Mansion 3&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./LM3_After.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/LM3_After_hucbb5ea835c095620e567a63bb74a2935_2342250_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Lighting and stencil shadow corruption is now fixed in Luigi&amp;#39;s Mansion 3&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Lighting and stencil shadow corruption is now fixed in Luigi&amp;#39;s Mansion 3&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./AC_before_3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/AC_before_3_huec3b68ec61adf0a15ec495da37082d50_1226964_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./AC_after_3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/AC_after_3_huec3b68ec61adf0a15ec495da37082d50_1173085_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;





&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./AC_Before_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/AC_Before_2_hu335e53870fe7489117032877e3fb8c99_2454408_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Astral Chain no longer exhibits black texture corruption&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./AC_After_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/AC_After_2_hu504fabd7bb110fed7c52a4c1b1f225df_2403640_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Astral Chain no longer exhibits black texture corruption&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Astral Chain no longer exhibits black texture corruption&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./acnh_OLD.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/acnh_OLD_hu335e53870fe7489117032877e3fb8c99_2455751_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./acnh_NEW.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/acnh_NEW_hu335e53870fe7489117032877e3fb8c99_2557617_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;





&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./acnh_OLD_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/acnh_OLD_2_hu335e53870fe7489117032877e3fb8c99_2611567_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Depth of field issues are gone in Animal Crossing: New Horizons&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./acnh_NEW_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/acnh_NEW_2_hu335e53870fe7489117032877e3fb8c99_2610005_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Depth of field issues are gone in Animal Crossing: New Horizons&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Depth of field issues are gone in Animal Crossing: New Horizons&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc2b.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/xc2b_hud6e9a5f60f9e8ceaee010ec66f07b4b0_3603752_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Xenoblade Chronicles 2 is free from vertex explosions on AMD Vulkan drivers&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc2f.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/xc2f_hu65bc059f294d47d5090a415d3770f56e_4309355_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Xenoblade Chronicles 2 is free from vertex explosions on AMD Vulkan drivers&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Xenoblade Chronicles 2 is free from vertex explosions on AMD Vulkan drivers&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./torna.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Texture swapping &amp;amp; flickering issues are fixed in all Xenoblade Chronicles games&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smashb.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/smashb_hu4d442bf71efcad6dcbc3e48f30039935_2402226_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smashf.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/smashf_hubcdb3cf48918a9f86aa866b666e14508_2706386_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;





&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smashb2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/smashb2_hu3354340051381dec03edbc4806acaed0_2798583_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Jumbotrons now display correctly in Super Smash Bros. Ultimate. Here’s an example running in the radeonsi mesa OpenGL Linux drivers&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smashf2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/smashf2_hu9b5f0a5540afbf7043b9e295904292ff_2463165_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Jumbotrons now display correctly in Super Smash Bros. Ultimate. Here’s an example running in the radeonsi mesa OpenGL Linux drivers&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Jumbotrons now display correctly in Super Smash Bros. Ultimate. Here’s an example running in the radeonsi mesa OpenGL Linux drivers&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sf1b.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/sf1b_hudb89fcc59c9fc9517338b8fae18c5cea_1827468_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;yuzu now has Multisample anti-aliasing (MSAA) support, as shown in SONIC FORCES here&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sf1f.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/sf1f_hu602c0c9e4499af6458f7ac89014e3b91_1818361_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;yuzu now has Multisample anti-aliasing (MSAA) support, as shown in SONIC FORCES here&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sf2b.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/sf2b_hu1e4eb3885f200cbec502a375b9901806_2735_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;yuzu now has Multisample anti-aliasing (MSAA) support, as shown in SONIC FORCES here&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sf2f.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/sf2f_hub9226f941173d3c8cfa722cbe79ed000_2851_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;yuzu now has Multisample anti-aliasing (MSAA) support, as shown in SONIC FORCES here&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;yuzu now has Multisample anti-aliasing (MSAA) support, as shown in SONIC FORCES here&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./rain.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Slow rainfall fixed in The Legend of Zelda: Breath of the Wild (Requires High GPU accuracy)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./botw.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Rune transportation renders just like native hardware in The Legend of Zelda: Breath of the Wild&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;but-what-about-performance&#34;&gt;But what about performance?&lt;/h2&gt;
&lt;p&gt;On top of the rendering improvements, many games show a 10-30% improvement to framerate, with greatly improved frametime stability as demonstrated below:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./lm3.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Luigi’s Mansion 3 received some huge leaps in rendering accuracy *and* performance, notice the frametime graph&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./smo.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Super Mario Odyssey&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./link.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The Legend of Zelda: Breath of the Wild&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./acnh.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Animal Crossing: New Horizons&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;current-limitations-and-future-progress&#34;&gt;Current limitations and future progress&lt;/h2&gt;
&lt;p&gt;Due to these changes, hardware lacking the &lt;code&gt;VK_EXT_robustness2&lt;/code&gt; extension will not produce the optimal experience. In Windows, this includes AMD graphics cards older than Vega (Polaris and older series) and all Intel iGPUs to date. You can check the current support &lt;a href=&#34;http://vulkan.gpuinfo.org/listdevicescoverage.php?extension=VK_EXT_robustness2&amp;amp;platform=windows&#34;&gt;here&lt;/a&gt;. Games requesting this extension on unsupported hardware may behave randomly or crash in rare instances. A fallback code path is being worked on. Make sure to be up to date with your drivers, as the GPU vendor may be able to add support in the future if the hardware allows it.&lt;/p&gt;
&lt;p&gt;Originally, &lt;code&gt;Bindless Texture&lt;/code&gt; support was expected to be added, but several difficulties emerged during development. One of the problems is the lack of native hardware support for ASTC texture decoding. If we used uncompressed textures, GPUs with less than 8GB of VRAM would not be able to load all the game assets, and if we recompressed them in another texture format to avoid this problem, image quality would degrade. True bindless texture support can be considered again in the future.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Depth Stencil Blits&lt;/code&gt; are not implemented on Vulkan for devices that don&amp;rsquo;t offer native support (any AMD and Intel GPU).&lt;/p&gt;
&lt;p&gt;Another complication that emerged during development is related to memory management. The idea was to release the Texture Cache Rewrite with what the team calls the &lt;code&gt;Texture Reaper&lt;/code&gt;, a way to remove textures from VRAM that have not been used after some time. While this has been almost working in OpenGL during testing, managing to run Luigi&amp;rsquo;s Mansion 3 in under 300MB of VRAM, Vulkan on the other hand received no benefit.&lt;/p&gt;
&lt;p&gt;Vulkan faces one main problem: it fragments the memory when textures need to be mapped to &lt;em&gt;contiguous&lt;/em&gt; video memory. There’s no tolerance for fragmentation, so freeing blocks will not help at all if the next texture doesn’t fit in the new empty space. This will require the development of a VRAM defragmentation routine, work that can take quite some time. So we can say that today marks the day &lt;code&gt;Project Texture Reaper&lt;/code&gt; starts.&lt;/p&gt;
&lt;p&gt;A feature that will be added shortly later will be &lt;code&gt;Accelerated Texture Decoding&lt;/code&gt;, which will handle any texture format via &lt;code&gt;Compute Shaders&lt;/code&gt;, even formats the GPU doesn’t support natively. &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; is working on the ASTC compute decoder.&lt;/p&gt;
&lt;p&gt;The next project &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; is working on is the &lt;code&gt;Buffer Cache Rewrite&lt;/code&gt;. This work promises to solve more rendering issues (for example font rendering problems) and seriously improve performance, especially on memory bandwidth starved hardware like integrated GPUs.&lt;/p&gt;
&lt;p&gt;And with that, our overview of the Texture Cache Rewrite is finished! Please report any bugs or problems you face with this new feature on our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord server&lt;/a&gt; or on our &lt;a href=&#34;https://community.citra-emu.org/c/yuzu-support/&#34;&gt;Forums.&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ugg.png&#34; title=&#34; HONK&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-tcr/ugg_huf58f67e101014fb38708bdbccb43d91f_2397678_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; HONK&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; HONK&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report October 2020</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2020/</link>
      <pubDate>Tue, 10 Nov 2020 12:00:00 -0300</pubDate>
      <author>Honghoa</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2020/</guid>
      <description>&lt;p&gt;How&amp;rsquo;s it going, yuz-ers? Here work continues. This month&amp;rsquo;s report offers you mythological hammers dropping, Vulkan and OpenGL stability fixes, and some news on the continued fight to make Super Mario 3D All-Stars render.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;How&amp;rsquo;s it going, yuz-ers? Here work continues. This month&amp;rsquo;s report offers you mythological hammers dropping, Vulkan and OpenGL stability fixes, and some news on the continued fight to make Super Mario 3D All-Stars render.&lt;/p&gt;
&lt;h2 id=&#34;project-mjölnir&#34;&gt;Project Mjölnir&lt;/h2&gt;
&lt;h3 id=&#34;part-3---smite-as-hard-as-you-desire&#34;&gt;Part 3 - Smite as hard as you desire&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; strikes again with &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4866&#34;&gt;part 3 of &lt;code&gt;Project Mjölnir&lt;/code&gt;&lt;/a&gt; - a major rewrite of yuzu&amp;rsquo;s &lt;code&gt;Human Interface Device (HID)&lt;/code&gt;. This concludes months of hard work that also involved the contributions of &lt;a href=&#34;https://github.com/its-rei&#34;&gt;Rei&lt;/a&gt; (who designed the new user interface) and &lt;a href=&#34;https://github.com/jroweboy&#34;&gt;jroweboy&lt;/a&gt; (who started the original HID rewrite that later Morph continued).&lt;/p&gt;
&lt;p&gt;Just as &lt;a href=&#34;https://en.wikipedia.org/wiki/Mj%C3%B6lnir#Origins_in_the_Prose_Edda&#34;&gt;three different gifts&lt;/a&gt; were given to the Nordic gods by the dwarves (including the iconic hammer of Thor), this project was divided into three parts focused on different aspects of emulating the input control of the Nintendo Switch.&lt;/p&gt;
&lt;p&gt;The first part was centered on overhauling the user interface, as well as modifying and fixing errors in the backend that handled the mapping and detection of controllers. These changes allowed yuzu&amp;rsquo;s implementation of input to behave more closely to the hardware, improved the user experience, and also paved the way for the subsequent improvements in the following PRs.&lt;/p&gt;
&lt;p&gt;The second part took care of implementing the &lt;code&gt;Controller Applet&lt;/code&gt;: a service used by games to communicate and set up the kind of controller input they can accept, how many players will use them, what character they will control, etc.&lt;/p&gt;
&lt;p&gt;And now, at last, comes the third part of this project: introducing bug fixes, &lt;code&gt;Controller Profiles&lt;/code&gt;, and an overhaul to the implementation of &lt;code&gt;Rumble&lt;/code&gt; realized by &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./load_profile.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Loading a profile for a Sony DS4 controller&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Controller Profiles&lt;/code&gt; had been a placeholder since Part 1 of &lt;code&gt;Project Mjölnir&lt;/code&gt;. They allow users to set up the configuration of their gamepads and save them in a file, which can be loaded and marked with a distinctive name. This is particularly useful for people who own more than one type of controller, since they store all button and axis information, as well as the port and engine used to read the input data. Changing between one configuration and another becomes as simple as clicking a dropdown menu and choosing the desired profile, and all the settings will then be applied automatically. Users now can create a profile by simply clicking on the &amp;ldquo;New&amp;rdquo; button and writing a descriptive name to save it.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4809&#34;&gt;Modifier Buttons&lt;/a&gt; was also another feature that wasn&amp;rsquo;t working well since Part 1. A &lt;code&gt;Modifier Button&lt;/code&gt; allows the user to change the range of an axis on the fly by pressing it, which is particularly useful when said axis is mapped to digital buttons instead of an analog stick. This is because digital buttons are interpreted as a &amp;ldquo;virtual axis&amp;rdquo; that is being pushed from the minimum value (0%) to its maximum value (100%) every time they are pressed. With this change, it is now possible to set the maximum value of this axis to a value lower than 100%, effectively limiting its range. Useful for walking or sneaking!&lt;/p&gt;
&lt;p&gt;Next on the list of fixed bugs, we had a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4816&#34;&gt;controller reconnection issue&lt;/a&gt;. Sometimes, a controller instance was being pushed back into memory right after being disconnected. This faulty behaviour was a bug that prevented the controller from being recognized by yuzu when it was reconnected by the user again. &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; implemented a simple guard to avoid this and solved the problem.&lt;/p&gt;
&lt;p&gt;For some games, vibrations didn&amp;rsquo;t work properly, or at all. To understand why this was happening, we will need to explain a bit of what’s going on behind the curtains of abstraction, so please bear with us here.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Rumble&lt;/code&gt; in the Nintendo Switch is physically generated by a pair of identical &lt;a href=&#34;https://en.wikipedia.org/wiki/Linear_actuator&#34;&gt;Linear Resonant Actuator motors&lt;/a&gt; that can emit a wide range of frequencies on the low and high spectrum, independently from each other. This contrasts with the approach used in other controllers, which typically have low frequency &lt;a href=&#34;https://en.wikipedia.org/wiki/Rotating_unbalance&#34;&gt;Eccentric Rotating Mass (ERM) motors&lt;/a&gt; at the left side and a high frequency ERM at the right side; depending on the desired frequency band at which one wants to make those controllers vibrate, it is possible to send signals to one or the other and thus accomplish low and high frequency rumble. The Nintendo Switch also characterizes vibration in such a way that it&amp;rsquo;s possible for games to distinguish between the left and right motors of different players. This is because each device has an identifier handler that is used to send the correct vibration commands to the right place.&lt;/p&gt;
&lt;p&gt;Prior to this PR, the functions that processed this handler information weren’t coded yet, or they were stubbed and returned incorrect information. Even with those limitations, this exceeded the capabilities of the &lt;a href=&#34;https://www.libsdl.org/&#34;&gt;SDL library&lt;/a&gt; (an &lt;a href=&#34;https://en.wikipedia.org/wiki/API&#34;&gt;API&lt;/a&gt; that yuzu uses to communicate with the hardware of the input devices), which was designed to work with generic gamepads that do not present any of these unique features of the Nintendo Switch. As a result, the rumble wasn&amp;rsquo;t being processed correctly. This resulted in inaccurate behaviour, such as the lack of vibration for the controllers of players other than player one, since this handler information wasn&amp;rsquo;t available for SDL to distinguish where to send the vibration signals other than for &amp;ldquo;controller 0&amp;rdquo;. In order to make vibrations work as intended, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; investigated how this information was characterized and implemented the functions to process these handlers, so that the vibration data could be sent to the appropriate devices and players. The addition of these functions also fixed a number of games, such as &lt;code&gt;Xenoblade Chronicles: Definitive Edition&lt;/code&gt;, &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt;, &lt;code&gt;Hollow Knight&lt;/code&gt;, and many others that previously didn&amp;rsquo;t exhibit rumble at all.&lt;/p&gt;
&lt;p&gt;Previously, some people using certain types of wireless controllers reported in-game performance losses whenever their gamepads rumbled. The root of this issue lied in the rate at which the vibration states were being updated to these controllers, so &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; implemented a solution to reduce the rate to 50 Hz and filter out some of the vibrations. But it was later reported that some vibration effects were missing in games such as &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; due to this filter, so an alternative solution was needed. For this reason, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; implemented &lt;code&gt;Accurate Vibrations&lt;/code&gt;, a toggle option (off by default) that switches between a full implementation and one with the effective vibration rate reduced through heuristics. If this option is disabled, the vibration rate is limited to 100 vibrations per second, excluding vibrations with an amplitude value of 0 (which is considered as the &amp;ldquo;not vibrating&amp;rdquo; state). This rate was determined to be safe through testing done by &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; and &lt;a href=&#34;https://github.com/renA21&#34;&gt;Ren&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./configure_vibration.png&#34; title=&#34; Vibration Configuration Window&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2020/configure_vibration_hufa57987c5ebed781b3cab85ce6aa4609_8899_374x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Vibration Configuration Window&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Vibration Configuration Window&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;These changes were enough to fix the stutters experienced by these users. In order to toggle &lt;code&gt;Accurate Vibrations&lt;/code&gt; on, the user should navigate to &lt;code&gt;Emulation &amp;gt; Configure... &amp;gt; Controls&lt;/code&gt; and click on &amp;ldquo;Configure&amp;rdquo; under the &amp;ldquo;Vibrations&amp;rdquo; tickbox. They can also change the intensity of the vibrations for each player, if desired.&lt;/p&gt;
&lt;p&gt;Furthermore, an additional check has been implemented when initializing a vibration device to determine if a controller is apt to rumble or not. It consists in sending vibrations with an amplitude value of 0 and reading the value sent back from the controller. While this approach works fine for the GameCube Adapter, SDL returns an incorrect value if two vibration signals with identical amplitudes are sent to the device. To work around this problem, yuzu first sends a vibration with an amplitude of 1/65535, then one with amplitude 0, and then reads the value returned from the device. This check is extremely important, because it helps in implementing the necessary functions that tell the games if the vibration device is properly mounted and capable of rumble, and it also makes it possible for yuzu to disable rumble capabilities in the backend automatically if a controller doesn&amp;rsquo;t support it.&lt;/p&gt;
&lt;p&gt;On top of these changes, work has been done so that anyone can plug in their favorite controller and, if it supports vibrations, all configuration related to it will be applied automatically. In the case that the controller doesn’t, however, rumble will be disabled on the backend.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mapping.png&#34; title=&#34; Manually mapping an analog stick&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2020/mapping_hu6c0c9ef93cc9b44af93ed3c929ec6d80_6654_465x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Manually mapping an analog stick&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Manually mapping an analog stick&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;It is worth noting that, in case the automatic configuration process fails, users can map their analog sticks manually by clicking on any of the axis mappings. This solves issues with certain controllers that have their axis mapped as digital buttons.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Project Mjölnir&lt;/code&gt; has come a long way since it started. Major parts of yuzu’s original code for input were rewritten, tested, and ironed out. Vast parts of the input frontend and backend were overhauled in favour of a more user friendly interface, aiming to make it easy to configure your controllers in the most intuitive way (and many of these configurations are also being applied automatically). Much of the effort done by the devs is easily perceivable, but there’s also a lot of work that went into making things run perfectly behind the scenes. Hours of investigation, lining up the details, and polishing every addition. Indeed, our devs gave it their best, just like the dwarves in the Eddas, to present you with this gift. The Nordic gods debated which among the three presents they received was the best, and they concluded the hammer was, without any doubts, the most precious of them. It is our most sincere wish that you will accept this hammer from us, and smite as hard as you desire!&lt;/p&gt;
&lt;p&gt;As a small sidenote: In the Edda, the dwarves happened to ask for Loki’s head as compensation for the gifts. But don’t worry, we won’t go that far with you! &lt;em&gt;(Yet)&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;back-to-the-pokéfuture&#34;&gt;Back to the Pokéfuture&lt;/h2&gt;
&lt;p&gt;A highly requested fix, and understandably so. Pokémon has long been a franchise that uses time as a game mechanic. In yuzu, this feature was not working as intended with &lt;code&gt;Sword and Shield&lt;/code&gt;. What would normally be saving, closing yuzu, and loading in later expecting time to naturally pass, ends up as if nothing happened, rendering several events (like berry respawns, changing weather, Pokéjobs, different Pokémon spawns, or just simple time of day changing) useless. We don&amp;rsquo;t have a proper fix to naturally progress the time yet, but for now, thanks to the work done by &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt;, it is now possible to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4792&#34;&gt;bypass this problem by changing the clock from yuzu&amp;rsquo;s settings during gameplay.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can find the setting in &lt;code&gt;Emulation &amp;gt; Configure... &amp;gt; System&lt;/code&gt;, enable &lt;code&gt;Custom RTC&lt;/code&gt;, and then enjoy time travelling!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./rtc.png&#34; title=&#34; Try to avoid changing the divergence value, Doc!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2020/rtc_huc7dcdc34436e31df241d6a1f1834fe24_12961_971x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Try to avoid changing the divergence value, Doc!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Try to avoid changing the divergence value, Doc!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;greetings-professorhttpswwwyoutubecomwatchvxr-aiariea4-fixes-to-report&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=xr-aIARiea4&#34;&gt;Greetings, Professor!&lt;/a&gt; Fixes to report!&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; has for us a couple of stability improvements for &lt;code&gt;Fire Emblem: Three Houses&lt;/code&gt;, only involving Vulkan and assembly shaders (GLASM) for now.&lt;/p&gt;
&lt;p&gt;On the Vulkan side, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4782&#34;&gt;managing primitive topologies as fixed state&lt;/a&gt; fixes regressions introduced by recent Nvidia drivers, but it has been reported to also help AMD Radeon users quite a bit too.&lt;/p&gt;
&lt;p&gt;On the GLASM side, and benefitting our Nvidia users the most, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4807&#34;&gt;implementing robust buffer operations&lt;/a&gt; like it is done in GLSL helps make the game playable when using this very useful shader implementation.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./fe3h.png&#34; title=&#34; I have something to ask of you (Fire Emblem: Three Houses)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2020/fe3h_hudc9bc45824cc3ec1e7e9eaa2cf34ca25_3981057_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; I have something to ask of you (Fire Emblem: Three Houses)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; I have something to ask of you (Fire Emblem: Three Houses)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Crashes will still be experienced in specific chapters of the game, like Ch. 15 and Ch. 17. For those cases, we can offer you a workaround:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You need to download one of the following old builds: &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-mainline/releases/tag/mainline-0-66&#34;&gt;yuzu 66&lt;/a&gt; or &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-mainline/releases/tag/mainline-0-41&#34;&gt;yuzu 41&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Set it up as a standalone version by extracting it and creating a &lt;code&gt;user&lt;/code&gt; folder where &lt;code&gt;yuzu.exe&lt;/code&gt; is located.&lt;/li&gt;
&lt;li&gt;This folder will replace &lt;code&gt;%appdata%\yuzu&lt;/code&gt;, so you need to extract a copy of your keys there, along with any save data you want to transfer to get past the crashes. Make sure to also copy your &lt;code&gt;nand&lt;/code&gt; folder so you can transfer all DLC and updates to the standalone yuzu build.&lt;/li&gt;
&lt;li&gt;Play the game, expect tons of glitches and pretty bad performance for such an old build. Save after progressing past the crashing area and transfer that save to the latest &lt;code&gt;Mainline/Early Access&lt;/code&gt; version you are using, and continue playing regularly from there.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;emuception&#34;&gt;Emuception&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; seems to have a personal vendetta with &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt;. He has:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4783&#34;&gt;Implemented the nvhost_as_gpu::FreeSpace service.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4784&#34;&gt;Implemented the BufferQueue::CancelBuffer service.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4793&#34;&gt;Stubbed IManagerForApplication::StoreOpenContext.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4799&#34;&gt;Reworked the program loader to better handle multiple processes.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4832&#34;&gt;Fixed crashes when trying to launch subsequent games.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4869&#34;&gt;Improved GPU synchronization.&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The last one also improves stability in games like &lt;code&gt;Luigi&#39;s Mansion 3&lt;/code&gt;. The only thing missing to get &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt; rendering is the &lt;code&gt;Texture Cache Rewrite&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;nvdec-improvements&#34;&gt;NVDEC improvements&lt;/h2&gt;
&lt;p&gt;Work on video decoding continues, thanks to &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt;. Some games like &lt;code&gt;Onimusha: Warlords&lt;/code&gt; and &lt;code&gt;Ni no Kuni&lt;/code&gt; had an incompatible &lt;code&gt;BGRA8&lt;/code&gt; format in our first NVDEC implementation. Now they render correctly.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./ninokuni.png&#34; title=&#34; Working menu rendering (Ni no Kuni)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2020/ninokuni_hud9764e7fdee7bd5e304ebb139ca443e1_2612522_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Working menu rendering (Ni no Kuni)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Working menu rendering (Ni no Kuni)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Unfortunately, a select few games like &lt;code&gt;FINAL FANTASY XII THE ZODIAC AGE&lt;/code&gt;, &lt;code&gt;The Legend of Zelda: Link&#39;s Awakening&lt;/code&gt;, and &lt;code&gt;Onimusha: Warlords&lt;/code&gt; currently have problems with memory addressing, causing incorrect video decoding and various graphical glitches (flashing/flickering). While there is a workaround in place in Early Access builds, this fix is not stable enough to be considered mergeable. Once a more elegant solution is found, we will let you all know.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./onimusha.png&#34; title=&#34; Happy moments (Onimusha: Warlords)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2020/onimusha_hu999fc57aa755c5c6ab81ff3724858342_2888611_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Happy moments (Onimusha: Warlords)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Happy moments (Onimusha: Warlords)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;And last but not least, NVDEC is now in Mainline! Anyone can now enjoy the in-game videos in yuzu. As the tradition for all merged Pull Requests, &lt;a href=&#34;https://github.com/lioncash&#34;&gt;Lioncache&lt;/a&gt; didn&amp;rsquo;t take long to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4837&#34;&gt;clean it up.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;non-mythological-input-changes&#34;&gt;Non-mythological input changes&lt;/h2&gt;
&lt;p&gt;We have some great changes made possible from the work of &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;. Thank you!&lt;/p&gt;
&lt;p&gt;To start with, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4742&#34;&gt;buttons that are impossible to use on certain input configurations are now blocked&lt;/a&gt;. For example, if an emulated Pro Controller is changed to a left Joy-Con, the right stick, A, X, Y and Z will no longer be accessible to the games. No cheating!&lt;/p&gt;
&lt;p&gt;Up next, some devices have access to an accelerometer, but lack a gyroscope. While this setup is basically useless for full motion, it can be used to detect simple shaking motions, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4757&#34;&gt;so we don&amp;rsquo;t see why we shouldn&amp;rsquo;t add support for that.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And finally, for our traditional fighters out there, we have some improvements for GC adapters. &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4781&#34;&gt;Adapters can now be hotplugged, basic rumble support was added, and compatibility with more vendors was improved.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A new challenger approaches! &lt;a href=&#34;https://github.com/FrogTheFrog&#34;&gt;FrogTheFrog&lt;/a&gt; tuned up &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4727&#34;&gt;the shake values&lt;/a&gt; to improve compatibility with the rare &lt;code&gt;Steam Controller&lt;/code&gt;. Wouldn&amp;rsquo;t having Portal and Portal 2 on the Switch be awesome?&lt;/p&gt;
&lt;h2 id=&#34;bug-fixes-and-improvements&#34;&gt;Bug fixes and improvements&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4805&#34;&gt;changed the values for &lt;code&gt;Multicore&lt;/code&gt;, &lt;code&gt;Asynchronous GPU&lt;/code&gt;, and &lt;code&gt;Assembly Shaders&lt;/code&gt;&lt;/a&gt; to be enabled by default. This will help provide a much better experience out of the box to all users that haven&amp;rsquo;t changed those values already. Some other advanced settings like &lt;code&gt;Asynchronous shaders&lt;/code&gt; are not altered by this change as they still require further testing and bug-fixing.&lt;/p&gt;
&lt;p&gt;By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4766&#34;&gt;implementing CUBE textures and fixing an issue with arrays,&lt;/a&gt; &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; made the &lt;code&gt;Pikmin 3: Deluxe Demo&lt;/code&gt; playable. This will most likely help in making the final game playable too.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pikmin3.png&#34; title=&#34; Thanks GG for the capture! (Pikmin 3: Deluxe Demo)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2020/pikmin3_hub286e21e37bdfdfa85eb1da0a89926ed_3719286_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Thanks GG for the capture! (Pikmin 3: Deluxe Demo)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Thanks GG for the capture! (Pikmin 3: Deluxe Demo)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;In a minor change to Vulkan, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4765&#34;&gt;changed the way GPU devices are sorted in yuzu,&lt;/a&gt; helping pick the best GPU according to yuzu&amp;rsquo;s current compatibility and needs.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vklist.png&#34; title=&#34; A developer&amp;#39;s system, gotta render &amp;#39;em all!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2020/vklist_hu6982ba926845bc96850a97aaf7d3c773_18265_887x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; A developer&amp;#39;s system, gotta render &amp;#39;em all!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; A developer&amp;#39;s system, gotta render &amp;#39;em all!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The current method follows these rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Priority will be given to the GPU vendor following the &lt;code&gt;Nvidia &amp;gt; AMD &amp;gt; Intel&lt;/code&gt; order.&lt;/li&gt;
&lt;li&gt;Dedicated hardware will take priority over integrated. For example an RX 570 will have a higher priority than an Intel UHD630.&lt;/li&gt;
&lt;li&gt;The device name will be considered, a GTX 1650 will be selected over a GTX 1060. Most of the time, newer architecture generations offer better performance benefits than pure raw performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the previous progress report, we mentioned that we removed a blacklist on AMD GPUs for the &lt;code&gt;VK_EXT_extended_dynamic_state&lt;/code&gt; Vulkan extension. Turns out, RDNA1 GPUs crash to the desktop while using this extension, so &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; (while using your writer&amp;rsquo;s PC) had to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4772&#34;&gt;manually add a new blacklist only including current Navi based GPUs.&lt;/a&gt; One would expect that a reported extension is tested before releasing the drivers that start supporting it&amp;hellip; The 20.10.1 driver version from AMD seems to revert to an older Vulkan version lacking this extension, so the Red Team is aware of the issue.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; changed how &lt;code&gt;Asynchronous Shaders&lt;/code&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4865&#34;&gt;determines the amount of threads to use,&lt;/a&gt; increasing it for higher thread count CPUs. Past the 8 threads mark, one shader thread is added every two CPU threads.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;CPU Threads&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Shader Threads&lt;/th&gt;
&lt;th&gt;Example CPUs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1 - 7&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td&gt;R3 3200G, i5-9400&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td&gt;R3 3100, i3-10100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;12&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td&gt;R5 3600, i5-10400&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;16&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;6&lt;/td&gt;
&lt;td&gt;R7 3700X, i7-10700K&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;32&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;14&lt;/td&gt;
&lt;td&gt;R9 3950X, i9-9960X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;128&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;62&lt;/td&gt;
&lt;td&gt;Threadripper 3990X&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Kewlan&#34;&gt;Kewlan&lt;/a&gt; is back again, fixing another important UI bug. This time, yuzu will &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4817&#34;&gt;no longer ask for a profile if there is a single one created.&lt;/a&gt; The devil is in the details.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4785&#34;&gt;added a check to see if a directory is a &lt;code&gt;nullptr&lt;/code&gt;.&lt;/a&gt; This fixes save file creation in &lt;code&gt;Hades&lt;/code&gt;. However, more work is needed to get the game playable.&lt;/p&gt;
&lt;p&gt;With the demo just released, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; started the work to get &lt;code&gt;Hyrule Warriors: Age of Calamity - Demo Version&lt;/code&gt; playable. By implementing &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4853&#34;&gt;FCMP immediate&lt;/a&gt; and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4854&#34;&gt;texture CUBE array shadows&lt;/a&gt; the game starts to render.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./aoc.png&#34; title=&#34; Where are my glasses? (Hyrule Warriors: Age of Calamity - Demo Version)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2020/aoc_hu1b4f8eed53d262bb47871bb8232555e8_4320994_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Where are my glasses? (Hyrule Warriors: Age of Calamity - Demo Version)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Where are my glasses? (Hyrule Warriors: Age of Calamity - Demo Version)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;
&lt;p&gt;We personally want to thank &lt;a href=&#34;https://github.com/lioncash&#34;&gt;Lioncache.&lt;/a&gt; He&amp;rsquo;s not mentioned much in the progress reports due to the technical nature of his work, but he is without a doubt one of the top contributors to the project. Thank you Lion, for the patience you have, and the huge help you give us.&lt;/p&gt;
&lt;h2 id=&#34;future-changes&#34;&gt;Future changes&lt;/h2&gt;
&lt;p&gt;There are some important core fixes incoming: &lt;code&gt;Local Wireless&lt;/code&gt; emulation continues to progress well, we have more plans for &lt;code&gt;NVDEC&lt;/code&gt; progress on their way, and there is now a roadmap of what will follow the &lt;code&gt;Texture Cache Rewrite&lt;/code&gt; once it&amp;rsquo;s finished, but we will tell you more about that later.&lt;/p&gt;
&lt;p&gt;As an early gift, here&amp;rsquo;s a preview of the Texture Cache Rewrite&amp;rsquo;s progress:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./tcr.png&#34; title=&#34; &#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2020/tcr_hu4edd1fc0f06fd862b764a407c20b2fe8_1277266_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; &#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;And that&amp;rsquo;s all folks! Thank you so much for reading, and see you all in the next progress report!
Thanks GG for the pics!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./burgy.png&#34; title=&#34; Image by https://twitter.com/JamesTurner_42&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-oct-2020/burgy_hu0d414d3d2a23737df3eb18fbe11e286b_32552_128x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Image by https://twitter.com/JamesTurner_42&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Image by https://twitter.com/JamesTurner_42&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Online Support Removed</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-x-raptor/</link>
      <pubDate>Mon, 02 Nov 2020 18:00:00 -0800</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-x-raptor/</guid>
      <description>&lt;p&gt;We are saddened to report that we have removed online support from yuzu, indefinitely, and effective immediately.
We apologize to our community for the confusion and disappointment surrounding this release, and especially to those who were excited to try this feature.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;We are saddened to report that we have removed online support from yuzu, indefinitely, and effective immediately.
We apologize to our community for the confusion and disappointment surrounding this release, and especially to those who were excited to try this feature.&lt;/p&gt;
&lt;p&gt;We have received valid and insightful feedback from our fans and members of the broader Switch and emulation communities.
Truthfully, we are all just a bunch of enthusiastic people from around the globe, who were genuinely excited about something we thought we could offer.
In hindsight, we 100% understand your concerns.&lt;/p&gt;
&lt;p&gt;As always, we will continue working on other features and improvements within yuzu, to make it the best emulator we possibly can.
Thank you to everyone who has continued to support us, provided us feedback and been open to constructive discussion on this topic.
Now, as always, we value your opinions.&lt;/p&gt;
&lt;p&gt;– The yuzu development team&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report September 2020</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2020/</link>
      <pubDate>Wed, 30 Sep 2020 12:00:00 -0300</pubDate>
      <author>Honghoa</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2020/</guid>
      <description>&lt;p&gt;Greetings yuz-ers! Welcome to September&amp;rsquo;s progress report. This month we offer you the joy of motion, video playback, more input fixes and additions, small Vulkan improvements, and the initial groundwork needed to get Super Mario 3D All-Stars playable.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Greetings yuz-ers! Welcome to September&amp;rsquo;s progress report. This month we offer you the joy of motion, video playback, more input fixes and additions, small Vulkan improvements, and the initial groundwork needed to get Super Mario 3D All-Stars playable.&lt;/p&gt;
&lt;h2 id=&#34;ya-like-to-move-it&#34;&gt;Ya like to (move it!)&lt;/h2&gt;
&lt;p&gt;Many popular Nintendo Switch titles have mechanics designed with motion controls in mind, so naturally this was a long-awaited feature that a lot of people wanted to see implemented in yuzu. We are very happy to announce that, thanks to the efforts of the developer &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;, it is now possible to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4594&#34;&gt;use any controller that supports motion sensing&lt;/a&gt; and play these games the way they were meant to be played. Just be careful not to hit anything when you shake it!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./motion1.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Functional Motion Input (&amp;#39;A SixAxis tester by German77&amp;#39;, a homebrew application).&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This feature&amp;rsquo;s development began back in July, when german77 was working on the implementation of a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4411&#34;&gt;native Joy-Con adapter for yuzu&lt;/a&gt; (a task still in the works). While he was analyzing the data sent by the controllers, he realized he could read the values reported by the accelerometer and the gyroscope as well. Feeling curious about what could be done with this knowledge, he experimented with implementing new inputs and feeding them the output from these sensors. The result was quite satisfactory: not only did this work, but it became the main motivation to investigate and implement motion controls the same way they work on the Switch.&lt;/p&gt;
&lt;p&gt;german77 was aware of a previously discontinued &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3882&#34;&gt;PR for motion&lt;/a&gt; by &lt;a href=&#34;https://github.com/anirudhb&#34;&gt;anirudhb&lt;/a&gt; and decided the best course of action would be to take it from there, fix any incompatibilities, and sort out the subsequent bugs introduced. As he ironed out the implementation, he tested how it performed with the game &lt;code&gt;Captain Toad: Treasure Tracker&lt;/code&gt;. The results this time, however, were far from satisfactory. Controls felt unnatural and responded quite differently compared to the Switch, indicating an error in how the values sent by the controllers were processed. To better understand the problem, german77 developed two homebrew applications to identify and fix these inaccuracies.&lt;/p&gt;
&lt;p&gt;After a long period of extensive testing, and with the help of &lt;a href=&#34;https://github.com/theboy181&#34;&gt;theboy181&lt;/a&gt; (who focused on testing the feature on different games), german77 finally realized the problem laid in the implementation&amp;rsquo;s logic: there was an error transforming a &lt;a href=&#34;https://en.wikipedia.org/wiki/Quaternion&#34;&gt;quaternion&lt;/a&gt; into a &lt;a href=&#34;https://en.wikipedia.org/wiki/Rotation_matrix&#34;&gt;rotation matrix&lt;/a&gt;. For the people allergic to math, you can think of a quaternion as a system to describe orientations and rotations in a 3D space, and a rotation matrix as a &amp;ldquo;translation&amp;rdquo; from a quaternion to a familiar (x, y, z) Cartesian coordinate. Thankfully, once this error was fixed, almost all the games that showed problems started to work flawlessly!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./motion2.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; &lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./motion3.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Motion in action. Top: &amp;#39;Super Mario Odyssey&amp;#39;, bottom: &amp;#39;The Legend of Zelda: Breath of the Wild&amp;#39;.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Motion controls currently work with Wiimotes, Joy-Cons, Pro Controllers, DualShock 4 Wireless Controllers, and even cellphones (provided they have an accelerometer and a gyroscope). To bridge these devices to yuzu, the implementation makes use of the DSU protocol (also known as &amp;ldquo;CemuHook UDP&amp;rdquo;), so users need to utilize &lt;a href=&#34;https://github.com/Davidobot/BetterJoy&#34;&gt;BetterJoy&lt;/a&gt; (for Nintendo controllers), &lt;a href=&#34;http://ds4windows.com/&#34;&gt;ds4windows&lt;/a&gt; (for Sony controllers), or any app that supports CemuHook for cellphones or other compatible devices. You can check &lt;a href=&#34;https://wiki.cemu.info/wiki/Motion_Controls&#34;&gt;this guide&lt;/a&gt; for more information regarding how to set up your controller. Make sure to try it out!&lt;/p&gt;
&lt;p&gt;Bear in mind that devices such as generic copies of official Nintendo or Sony controllers may work, although it&amp;rsquo;s not guaranteed. Needless to say, no matter how hard you shake your keyboard and mouse, that&amp;rsquo;s not going to work, so please don&amp;rsquo;t do it!&lt;/p&gt;
&lt;h2 id=&#34;i-have-no-motion-and-i-must-shake&#34;&gt;I have no motion, and I must shake&lt;/h2&gt;
&lt;p&gt;If your favorite controller has no support for motion controls (such as Xbox controllers), don&amp;rsquo;t worry, not everything is lost. After implementing functional motion controls, &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt; also made this follow-up PR to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4677&#34;&gt;implement a button to simulate a shake&lt;/a&gt;. This will allow you to configure any key of your liking to work as if you were physically swinging your controller and activating the in-game motion mechanics.&lt;/p&gt;
&lt;p&gt;While this should work with games such as &lt;code&gt;Super Mario Odyssey&lt;/code&gt; and others, do note it won&amp;rsquo;t be able to cover all cases or titles. Every game is different, and the required input is not always just a shake.&lt;/p&gt;
&lt;h2 id=&#34;remember-the-rumble-pak&#34;&gt;Remember the Rumble Pak?&lt;/h2&gt;
&lt;p&gt;Also thanks to &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;, yuzu can now proudly boast &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4291&#34;&gt;Rumble support&lt;/a&gt;. Any SDL2 compatible device will vibrate when asked by your Switch games. This includes but is not limited to: DualShock, Xbox, and Nintendo controllers.&lt;/p&gt;
&lt;p&gt;HD Rumble is not possible, yet. The SDL2 specification is incompatible, and not everyone will play with Nintendo peripherals. This means that a Pro Controller or a pair of Joy-Cons cannot reach the same level of precision as the Switch. Additionally, some games seem to use different ways to ask for rumble and are not supported yet. We are investigating this.&lt;/p&gt;
&lt;p&gt;Soon, german77 has plans to add native Joy-Con pairing support. This will allow for real HD Rumble compatibility.&lt;/p&gt;
&lt;h2 id=&#34;video-decoding-or-how-to-suffer-for-so-long-with-a-single-codec&#34;&gt;Video decoding, or how to suffer for so long with a single codec&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s finally here! After such a long wait, and thanks to the work from &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; and &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4729&#34;&gt;yuzu can now play videos in-game!&lt;/a&gt; For now, only &lt;code&gt;H.264&lt;/code&gt; and &lt;code&gt;VP9&lt;/code&gt; videos are supported, which thankfully seems to cover all released games until now. Support for &lt;code&gt;H.265&lt;/code&gt; and &lt;code&gt;VP8&lt;/code&gt; will come later.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./mk8.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Video Killed the Radio Star (Mario Kart 8 Deluxe)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This is possible by using &lt;a href=&#34;https://ffmpeg.org/&#34;&gt;FFmpeg.&lt;/a&gt; For now, decoding happens in a single CPU thread, and support for multiple threads and GPU decoding is currently being worked on.&lt;/p&gt;
&lt;p&gt;We have an entire article dedicated to showing how this feature came to be, how it works, its challenges, and current limitations in more detail &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-nvdec-emulation/&#34;&gt;here.&lt;/a&gt; Please take your time to read it: it also includes a list of games confirmed working and not-so-working yet.&lt;/p&gt;
&lt;h2 id=&#34;an-emulator-inside-an-emulator&#34;&gt;An emulator inside an emulator&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt; is a special case in several aspects. For starters, the game is just a container for several other binary executables (known as &lt;code&gt;Program NCAs&lt;/code&gt;), each one with their own Title ID. Step one to get this game to boot is &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4675&#34;&gt;to correctly handle these multi-content games&lt;/a&gt;, a job &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; did.&lt;/p&gt;
&lt;p&gt;Good, finished, right? Wrong. Turns out, handling several integrated programs with different title IDs will make XCI game dumps conflict, as they include games and even firmware updates to account for users without internet access. &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; also &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4710&#34;&gt;had to add checks for cases like this.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Next step, unimplemented functions. &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; did a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4678&#34;&gt;partial implementation of &lt;code&gt;LoadOpenContext&lt;/code&gt;&lt;/a&gt;, a function that several collections games use. Some examples are &lt;code&gt;Clubhouse Games: 51 Worldwide Classics&lt;/code&gt;, &lt;code&gt;Grandia HD Collection&lt;/code&gt;, &lt;code&gt;XCOM 2 Collection&lt;/code&gt;, &lt;code&gt;Baldur&#39;s Gate I and II&lt;/code&gt;, &lt;code&gt;Dr Kawashima&#39;s Brain Training&lt;/code&gt;, and of course &lt;code&gt;Super Mario 3D All-Stars&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Similarly, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4676&#34;&gt;&lt;code&gt;GetPreviousProgramIndex&lt;/code&gt; needed to be stubbed&lt;/a&gt;. The result is getting the game-selector/menu working.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./menu.png&#34; title=&#34; For now, just the menu and soundtrack sections! (Super Mario 3D All-Stars)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2020/menu_huc4ea349968606ca682e6c5579c4fa352_3649568_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; For now, just the menu and soundtrack sections! (Super Mario 3D All-Stars)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; For now, just the menu and soundtrack sections! (Super Mario 3D All-Stars)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;vulkan-changes&#34;&gt;Vulkan changes&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;VK_KHR_timeline_semaphore&lt;/code&gt; is a relatively recent Vulkan extension only supported by &lt;em&gt;desktop or laptop&lt;/em&gt; GPUs. In the past, resources were being assigned with &lt;code&gt;VkFence&lt;/code&gt; and freed when arbitrarily asked, leading to a possible small pileup. With &lt;code&gt;VK_KHR_timeline_semaphore&lt;/code&gt;, each resource is tied to a periodically checked &amp;ldquo;GPU tick,&amp;rdquo; and you only need to verify on which tick you are at the moment to know if that resource is now free.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vk.png&#34; title=&#34; Our implementation is not that complex. This is just an example provided by Khronos&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2020/vk_hu9b4ec87ce1d165ee0384e4e55e2af75c_68977_1006x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Our implementation is not that complex. This is just an example provided by Khronos&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Our implementation is not that complex. This is just an example provided by Khronos&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4674&#34;&gt;Adding support for timeline semaphores in yuzu&lt;/a&gt; helps simplify the code a lot, improves VRAM use a small amount, and paves the way for the finalization of the &lt;code&gt;Texture Cache rewrite&lt;/code&gt;. Thank you, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt;, for its addition! The result should be transparent for the user with no perceptible change besides a bit of VRAM savings.&lt;/p&gt;
&lt;h2 id=&#34;bug-fixes-and-improvements&#34;&gt;Bug fixes and improvements&lt;/h2&gt;
&lt;p&gt;A missing feature in the input rewrite was the ability to merge two separate single left and right Joy-Cons into a single dual Joy-Con, a function &lt;code&gt;Super Mario Odyssey&lt;/code&gt; needs. &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4629&#34;&gt;implemented &lt;code&gt;MergeSingleJoyasDualJoy&lt;/code&gt;&lt;/a&gt;, so this is no longer a problem for Mario. He can return to work once again for nothing. Thirty-nine years and no rewards for the best hero the Mushroom Kingdom ever saw.&lt;/p&gt;
&lt;p&gt;A small PSA for our Linux users, the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4638&#34;&gt;required Qt version has been raised to &lt;code&gt;5.12.8&lt;/code&gt;&lt;/a&gt; now. Thanks &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; for the update! We need those new Plasma functions.&lt;/p&gt;
&lt;p&gt;Users have been reporting input latency, so &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;Tobi&lt;/a&gt; decided to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4643&#34;&gt;test some changes&lt;/a&gt; and see if the situation improves. To further mitigate this issue if you experience it, be sure to enable &lt;code&gt;Radeon Anti-Lag&lt;/code&gt; or &lt;code&gt;Nvidia Ultra-Low Latency&lt;/code&gt; in your respective driver control panel. Nothing makes you ragequit more than losing in Smash due to lag.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4618&#34;&gt;Gamecube controllers will now be autoconfigured!&lt;/a&gt; Thanks to work done by &lt;a href=&#34;https://github.com/german77&#34;&gt;german77&lt;/a&gt;, Gamecube Adapter controllers will show up as devices in the input window, and their buttons will be mapped automatically. Laziness is the best.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Clubhouse Games: 51 Worldwide Classics&lt;/code&gt; now manages to boot and, with a save, load the board games. &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; managed this by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4683&#34;&gt;implementing the &lt;code&gt;Get/SetNpadHandheldActivationMode&lt;/code&gt; functions&lt;/a&gt;. However, the game will still render almost everything in black, so don&amp;rsquo;t consider it playable yet.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./51a.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2020/51a_hu449afde6e02898c03be3f1f13c986bb8_122163_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Paint it all black (Clubhouse Games: 51 Worldwide Classics)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./51b.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-sep-2020/51b_hua4a12870f859aa635356b119d08d1a10_158875_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Paint it all black (Clubhouse Games: 51 Worldwide Classics)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Paint it all black (Clubhouse Games: 51 Worldwide Classics)&lt;/p&gt;


&lt;p&gt;If you ran a game in fullscreen and a pop-up needed to display (for example, naming a character), it used to render behind the main yuzu window, forcing you to exit fullscreen, focus the pop-up, complete the action, and then continue with your game. Quite annoying indeed. &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; is our savior for this one, by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4728&#34;&gt;using the &lt;code&gt;Qt::WindowStaysOnTopHint&lt;/code&gt; flag&lt;/a&gt;, the pop-ups will now display on top of your game. Thanks a lot, poyo.&lt;/p&gt;
&lt;h2 id=&#34;gpu-vendor-specific-fixes-and-changes&#34;&gt;GPU vendor specific fixes and changes&lt;/h2&gt;
&lt;p&gt;Recent Nvidia Geforce drivers (past the 446.14 version) introduced a performance regression mainly affecting &lt;code&gt;Paper Mario: The Origami King&lt;/code&gt; and &lt;code&gt;Super Smash Bros. Ultimate&#39;s&lt;/code&gt; menus, important enough that we had to recommend our users to stay on older driver versions until we could figure out what was going on. Turns out, the new drivers don&amp;rsquo;t seem to like how Qt handles VSync, so &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; fixed it by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4692&#34;&gt;calling &lt;code&gt;SwapBuffers&lt;/code&gt; from the emulation thread&lt;/a&gt;. This change means that Nvidia users are free to use the latest driver version without fearing low framerates.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./SSBU-broken.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./SSBU-fixed.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Just in time for Ampere, eh! Good luck getting one for now (Super Smash Bros. Ultimate)&lt;/p&gt;


&lt;p&gt;As mentioned in &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/&#34;&gt;July&amp;rsquo;s progress report&lt;/a&gt;, &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; continued to work on solving crashes only experienced with recent Nvidia Vulkan drivers in Linux. Thanks to work done by DXVK, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4724&#34;&gt;toast&amp;rsquo;s current implementation aims to be global&lt;/a&gt;, and so far we haven&amp;rsquo;t got any report on getting the issue or any sort of regression. Please feel free to contact us if you are still affected by this issue.&lt;/p&gt;
&lt;p&gt;Not a fix in yuzu&amp;rsquo;s code, but in fact a fix AMD implemented in their drivers. As mentioned in the previous &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/&#34;&gt;August progress report&lt;/a&gt;, &lt;code&gt;VK_EXT_extended_dynamic_state&lt;/code&gt; was giving problems on the AMD Vulkan Windows driver. This has been fixed in the latest 20.9.2 driver version, allowing &lt;a href=&#34;https://github.com/goldenx86&#34;&gt;yours truly&lt;/a&gt; to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4735&#34;&gt;remove the previously needed blacklisting.&lt;/a&gt; No more nightmares when playing &lt;code&gt;Super Mario Odyssey&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;Not much information can be given right now, but you all should know that &lt;a href=&#34;https://www.youtube.com/watch?v=zHalXjs0cDA&#34;&gt;Raptor&lt;/a&gt; is advancing at a very impressive speed. Our devs are so preoccupied with whether they can, they don&amp;rsquo;t stop to think if they should.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s all she wrote, folks! See you next time in the October progress report!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>New Feature Release - NVDEC emulation!</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-nvdec-emulation/</link>
      <pubDate>Tue, 29 Sep 2020 23:20:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-nvdec-emulation/</guid>
      <description>&lt;p&gt;Hello, yuzu fans!
Tired of broken cutscenes and having to mash your controller buttons in hopes of skipping them? Well, look no further!
Thanks to the efforts of &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt;, yuzu can now play (most of) your favorite in-game cutscene videos.
Jump right in to find out more!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello, yuzu fans!
Tired of broken cutscenes and having to mash your controller buttons in hopes of skipping them? Well, look no further!
Thanks to the efforts of &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt;, yuzu can now play (most of) your favorite in-game cutscene videos.
Jump right in to find out more!&lt;/p&gt;
&lt;p&gt; 

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/usvAZosD16o&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h1 id=&#34;nvdec---what-is-it&#34;&gt;NVDEC - What is it?&lt;/h1&gt;
&lt;p&gt;For a long time, one of the most noticeable missing features of yuzu was support for NVDEC. &lt;br&gt;
What is &lt;a href=&#34;https://en.wikipedia.org/wiki/Nvidia_NVDEC&#34;&gt;NVDEC&lt;/a&gt;?
NVDEC stands for &lt;strong&gt;Nvidia Video Decoder&lt;/strong&gt; and is a feature in Nvidia GPUs that performs video decoding.
And since the Switch has an Nvidia Tegra X1 SoC, it too makes use of its NVDEC module to offload all CPU intensive video decoding tasks to the GPU.&lt;/p&gt;
&lt;p&gt;NVDEC supports video codecs like &lt;code&gt;MPEG-2&lt;/code&gt;, &lt;code&gt;VC-1&lt;/code&gt;, &lt;code&gt;H.264 (AVC)&lt;/code&gt;, &lt;code&gt;H.265 (HEVC)&lt;/code&gt;, &lt;code&gt;VP8&lt;/code&gt;, and &lt;code&gt;VP9&lt;/code&gt;, but Nintendo only exposes &lt;code&gt;H.264&lt;/code&gt;, &lt;code&gt;H.265&lt;/code&gt;, &lt;code&gt;VP8&lt;/code&gt; and &lt;code&gt;VP9&lt;/code&gt;.
Most games seem to use &lt;code&gt;H.264&lt;/code&gt; because of its wide support and efficiency ratio.
But many first party games are known to use &lt;code&gt;VP9&lt;/code&gt; too - eg. Super Smash Bros. Ultimate, Pokémon: Let&amp;rsquo;s Go, Pikachu/Eevee!&lt;/p&gt;
&lt;p&gt;With NVDEC support, users no longer have to rely on old save files or crazy button mashing to bypass broken cutscenes.
Grab the latest yuzu Early Access build to try it out now!&lt;/p&gt;
&lt;p&gt; 

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/XsXpxZE2rcc&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h1 id=&#34;development&#34;&gt;Development&lt;/h1&gt;
&lt;p&gt;The Switch uses NVDEC along with VIC (Video Image Composer) in the GPU for video decoding.
Games are exposed to higher level APIs by Nintendo which abstract the configuration of these modules.&lt;/p&gt;
&lt;p&gt;NVDEC and VIC work together to decode incoming videos and the process usually goes like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- Allocate memory
- Place encoded video frame data in known memory location
- Decode and place frame data into GPU memory
- Clear intermediary allocated memory
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Although this seems fairly simple, implementing it was quite the task.
&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; began working on this by implementing the service/command calls to NVDEC and VIC.
It was decided to use the &lt;a href=&#34;https://github.com/FFmpeg/FFmpeg&#34;&gt;FFmpeg&lt;/a&gt; library to decode the frame data once we knew its codec (&lt;code&gt;H.264&lt;/code&gt; or &lt;code&gt;VP9&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt; 

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/EGDodmeKGWY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h3 id=&#34;vp9&#34;&gt;VP9&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;VP9&lt;/code&gt; was the biggest challenge as its decoding required knowledge on the different attributes of a specific frame.
Each frame carries two headers and raw frame data with it.
The headers contain the information as to which previous frame the current frame refers to or depends on.
Frames usually refer to previously decoded frames, along with transformations to be done on various parts of those, to compose new frames.
This is done in an effort to reduce the memory footprint of each frame.&lt;/p&gt;
&lt;p&gt;Here is where things got complicated.
On the Switch, these headers are parsed by the Nvidia library in the games; therefore, NVDEC never receives this data.
But for us to decode the frames using FFmpeg, we need to provide it with the full frame - Two headers and raw frame data from NVDEC.
And since NVDEC hardware doesn&amp;rsquo;t expose all of the data of the two &lt;code&gt;VP9&lt;/code&gt; headers, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; had to manually compose these headers from the provided information.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; took an interesting approach to this problem - he buffered two frames in advance.
As the frame data from NVDEC holds some data on previous frames, knowing two frames in advance was useful.
But this wasn&amp;rsquo;t sufficient as a few games resulted in issues with this approach.
We are currently researching these edge cases to properly fix it for all games.&lt;/p&gt;
&lt;p&gt; 

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/xHYYntEB05o&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h3 id=&#34;h264&#34;&gt;H.264&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;H.264&lt;/code&gt; was relatively easier compared to &lt;code&gt;VP9&lt;/code&gt;.
Each &lt;code&gt;H.264&lt;/code&gt; frame contains two headers and raw frame data with it.
Unlike &lt;code&gt;VP9&lt;/code&gt;, &lt;code&gt;H.264&lt;/code&gt; doesn&amp;rsquo;t have different headers for each frame but has same headers for entire video.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; had, long ago, already implemented &lt;code&gt;H.264&lt;/code&gt; support in his experimental branch.
&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; based his work off of &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt;&amp;rsquo;s and fixed a bug in it which caused distorted videos.
It turned out that &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; was using incorrect dimensions when writing the pixel location.&lt;/p&gt;
&lt;p&gt;Currently NVDEC operations are synchronous, but are asynchronous compatible.
This means that in the future, NVDEC operations can be made asynchronous thus yielding even better performance.
Also, thanks to the FFmpeg library, we have access to hardware acceleration for faster decoding.
And in the future, this will allow yuzu to offload video decoding to the host GPU (user&amp;rsquo;s GPU).&lt;/p&gt;
&lt;p&gt; 

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ImXim7BXl0E&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;h3 id=&#34;vp8--h265&#34;&gt;VP8 &amp;amp; H.265&lt;/h3&gt;
&lt;p&gt;The Switch officially supports &lt;code&gt;VP8&lt;/code&gt; and &lt;code&gt;H.265&lt;/code&gt; too, along with &lt;code&gt;VP9&lt;/code&gt; and &lt;code&gt;H.264&lt;/code&gt;.
However, we are yet to see games make use of these codecs for in-game videos and hence support for these codecs remains unimplemented for now.&lt;/p&gt;
&lt;h1 id=&#34;testing&#34;&gt;Testing&lt;/h1&gt;
&lt;p&gt;As development work progressed, there were a lot of challenges and issues with games.
&lt;strong&gt;Link&amp;rsquo;s Awakening&lt;/strong&gt;, for example, wasn&amp;rsquo;t providing the proper memory locations to write frame data to and
the NVDEC/VIC service/command calls were inaccurate as well.
This led to data corruption when we wrote frame data to wrong memory locations.&lt;/p&gt;
&lt;p&gt; 

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/4Lz1NqZsYlA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

 &lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; and our testers spent tens of hours testing various games in yuzu to make sure any minor issues were ironed out.
This rigorous testing also brought to our attention more games that exhibit weird edge cases.
Over the next couple of weeks, we plan to fix these bugs and make our decoding even more accurate.&lt;/p&gt;
&lt;p&gt;Huge shoutout to our testers for testing and compiling these lists.&lt;/p&gt;
&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Games that work&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        &lt;p&gt;The following games were tested by our team and work well with minor occasional glitches:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1-2-Switch&lt;/li&gt;
&lt;li&gt;AI: The Somnium Files&lt;/li&gt;
&lt;li&gt;Animal Crossing: New Horizons&lt;/li&gt;
&lt;li&gt;Attack on Titan 2&lt;/li&gt;
&lt;li&gt;Atelier Ryza: Ever Darkness &amp;amp; the Secret Hideout&lt;/li&gt;
&lt;li&gt;Bloodstained: Ritual of the Night&lt;/li&gt;
&lt;li&gt;Bulletstorm&lt;/li&gt;
&lt;li&gt;Children of Morta&lt;/li&gt;
&lt;li&gt;Dark Souls Remastered&lt;/li&gt;
&lt;li&gt;Deadly Premonition Origins&lt;/li&gt;
&lt;li&gt;Devil May Cry&lt;/li&gt;
&lt;li&gt;Devil May Cry 2&lt;/li&gt;
&lt;li&gt;Devil May Cry 3&lt;/li&gt;
&lt;li&gt;Disgaea 5 Complete&lt;/li&gt;
&lt;li&gt;Donkey Kong Country: Tropical Freeze&lt;/li&gt;
&lt;li&gt;Dragon&amp;rsquo;s Dogma&lt;/li&gt;
&lt;li&gt;Dragon Quest Builders&lt;/li&gt;
&lt;li&gt;Dragon Quest XI:S&lt;/li&gt;
&lt;li&gt;Dragons: Dawn Of New Riders&lt;/li&gt;
&lt;li&gt;Fairy Tail&lt;/li&gt;
&lt;li&gt;Final Fantasy IX&lt;/li&gt;
&lt;li&gt;Fire Emblem: Three Houses&lt;/li&gt;
&lt;li&gt;Fire Emblem Warriors&lt;/li&gt;
&lt;li&gt;Go Vacation&lt;/li&gt;
&lt;li&gt;Hollow Knight&lt;/li&gt;
&lt;li&gt;Huntdown&lt;/li&gt;
&lt;li&gt;Hyrule Warriors: Definitive Edition&lt;/li&gt;
&lt;li&gt;Indivisible&lt;/li&gt;
&lt;li&gt;Just Dance 2020&lt;/li&gt;
&lt;li&gt;Kirby Star Allies&lt;/li&gt;
&lt;li&gt;LEGO City Undercover&lt;/li&gt;
&lt;li&gt;Mario Kart 8 Deluxe&lt;/li&gt;
&lt;li&gt;Marvel Ultimate Alliance&lt;/li&gt;
&lt;li&gt;Monster Boy and the Cursed Kingdom&lt;/li&gt;
&lt;li&gt;ŌKAMI HD&lt;/li&gt;
&lt;li&gt;Paper Mario: The Origami King&lt;/li&gt;
&lt;li&gt;Pokkén Tournament DX&lt;/li&gt;
&lt;li&gt;Psyvariar Delta&lt;/li&gt;
&lt;li&gt;Resident Evil&lt;/li&gt;
&lt;li&gt;Resident Evil 0&lt;/li&gt;
&lt;li&gt;Resident Evil 4&lt;/li&gt;
&lt;li&gt;Resident Evil 5&lt;/li&gt;
&lt;li&gt;Resident Evil 6&lt;/li&gt;
&lt;li&gt;Resident Evil Revelations&lt;/li&gt;
&lt;li&gt;Resident Evil Revelations 2&lt;/li&gt;
&lt;li&gt;Ring Fit Adventure&lt;/li&gt;
&lt;li&gt;Rune Factory 4 Special&lt;/li&gt;
&lt;li&gt;Shantae and the Seven Sirens&lt;/li&gt;
&lt;li&gt;Star Ocean First Departure R&lt;/li&gt;
&lt;li&gt;Steins;Gate Elite&lt;/li&gt;
&lt;li&gt;Super Mario 3D All-Stars&lt;/li&gt;
&lt;li&gt;Super Mario Odyssey&lt;/li&gt;
&lt;li&gt;Super Smash Bros. Ultimate&lt;/li&gt;
&lt;li&gt;TLOZ - Breath of the Wild&lt;/li&gt;
&lt;li&gt;Tokyo Mirage Sessions #FE Encore&lt;/li&gt;
&lt;li&gt;Trials of Mana&lt;/li&gt;
&lt;li&gt;Xenoblade Chronicles Definitive Edition&lt;/li&gt;
&lt;li&gt;Yu-Gi-Oh: Legacy of the Duelist&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
&lt;/article&gt;

&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Games with known issues&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        &lt;p&gt;The following games are known to have issues, and we are actively working on fixing them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Alien: Isolation&lt;/li&gt;
&lt;li&gt;Ni no Kuni: Wrath of the White Witch&lt;/li&gt;
&lt;li&gt;Onimusha: Warlords&lt;/li&gt;
&lt;li&gt;Persona 5 Scramble&lt;/li&gt;
&lt;li&gt;Resident Evil 0&lt;/li&gt;
&lt;li&gt;TLOZ: Link&amp;rsquo;s Awakening&lt;/li&gt;
&lt;li&gt;The Legend of Heroes: Trails of Cold Steel III&lt;/li&gt;
&lt;li&gt;Final Fantasy VIII Remastered&lt;/li&gt;
&lt;li&gt;Pokémon Let&amp;rsquo;s Go&lt;/li&gt;
&lt;li&gt;Pokémon Sword&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
&lt;/article&gt;

&lt;h1 id=&#34;fin&#34;&gt;Fin&lt;/h1&gt;
&lt;p&gt;As always, we would like to remind users that the features released on Early Access are still being worked on.
Hence not all games might behave in the way we want them to.
If you come across more games (other than the ones mentioned above) that encounter bugs or issues, feel free to
reach out to us on our &lt;a href=&#34;https://discord.com/invite/u77vRWY&#34;&gt;Discord server&lt;/a&gt; and share your findings.&lt;/p&gt;
&lt;p&gt;See you next time, &lt;br&gt;
- yuzu development team!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report August 2020</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/</link>
      <pubDate>Sun, 30 Aug 2020 12:00:00 -0300</pubDate>
      <author>flamboyant_ham</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=s28a3nVHCLo&#34;&gt;Yahallo&lt;/a&gt; yuz-ers! We hope you are doing well. This monthly report has a few critical topics to cover. Yet another major rewrite is done, some graphical bugs are fixed, the UI is further refined, and ghosts from our past are expelled. Here we go!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=s28a3nVHCLo&#34;&gt;Yahallo&lt;/a&gt; yuz-ers! We hope you are doing well. This monthly report has a few critical topics to cover. Yet another major rewrite is done, some graphical bugs are fixed, the UI is further refined, and ghosts from our past are expelled. Here we go!&lt;/p&gt;
&lt;h2 id=&#34;project-mjölnir&#34;&gt;Project Mjölnir&lt;/h2&gt;
&lt;h3 id=&#34;part-1---input-rewrite&#34;&gt;Part 1 - Input Rewrite&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s start with the biggest change. One of yuzu&amp;rsquo;s weakest aspects was its input support. It was riddled with bugs, not very intuitive, and lacked several critical features. Earlier this year, &lt;a href=&#34;https://github.com/jroweboy&#34;&gt;jroweboy&lt;/a&gt; and &lt;a href=&#34;https://github.com/Its-Rei&#34;&gt;Rei&lt;/a&gt; decided to start working on what would end up a complete rewrite of the input UI and its internal workings, dubbed &lt;code&gt;Project Aphrodite&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./oldinput.png&#34; title=&#34; Never gonna give you up&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/oldinput_huac776aa75bbe8a9c6284a2d763f8fe45_16651_402x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Never gonna give you up&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Never gonna give you up&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;As you can see in the following images, the original draft lacked some of the features we have working right now and some that we plan to add in the future. No code is ever complete, better ideas and new implementations can always be achieved. So that&amp;rsquo;s exactly what happened, Rei continued to iterate on the concept design that is inspired by &lt;a href=&#34;https://github.com/RPCS3/rpcs3&#34;&gt;RPCS3&amp;rsquo;s&lt;/a&gt; controller UI.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./concept.png&#34; title=&#34; The first draft, in all its glory&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/concept_hu317c07a073a3eb14c24c64d838270ad8_137086_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The first draft, in all its glory&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The first draft, in all its glory&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;With this concept in mind, jroweboy implemented an automapping feature which correctly maps all the inputs upon selecting an input device.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./automap.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Finally, no more spending hours mapping controls!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Since jroweboy&amp;rsquo;s departure from emulator development, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; continued his legacy and picked up where he left off, not wanting to have all this work go to waste. With renewed hope, both Morph and Rei have taken the reins and are continuously refining the UI to achieve the best user experience possible. Their efforts have culminated in the UI we have today.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./light.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/light_hub11f8a5bdd4e035499395f7b367d8e78_68473_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The fruits of our labor, the triforce of themes is complete!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./dark.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/dark_hufba4d97bf10ab1b481899c3aab01ca6d_74841_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The fruits of our labor, the triforce of themes is complete!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./midnightblue.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/midnightblue_hu6a4f3f57668abe15217cf9406d0a02bd_81625_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The fruits of our labor, the triforce of themes is complete!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The fruits of our labor, the triforce of themes is complete!&lt;/p&gt;


&lt;p&gt;The user experience would not be complete unless a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/issues/2906&#34;&gt;long standing issue where updating controllers in the UI will not update them in game&lt;/a&gt; is fixed. Knowing this, Morph decided to find out what is causing this issue and fix it along with the UI changes. With some guidance from the shark &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt;, he discovered that 1. The frontend was not signalling to the backend when a controller changes configuration and 2. &lt;code&gt;StyleSetChangedEvents&lt;/code&gt; were not being signalled on a controller change. By fixing these two issues, he managed to fix input issues in a wide array of games and allowed users to change their controller and input devices while in game without needing to restart yuzu.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./controllerselect.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Smash players rejoice!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The games that demonstrated the most benefit from these fixes are &lt;code&gt;Pokemon Let&#39;s Go: Pikachu&lt;/code&gt; and &lt;code&gt;Pokemon Let&#39;s Go: Eevee&lt;/code&gt;, as single joycons can now be properly detected in game, bringing us one step closer to hardware accuracy.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./plgjoycon.png&#34; title=&#34; Professor Oak! Input is now in working order!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/plgjoycon_hu8dd131a9d55dd5193bc0f12b056af319_715365_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Professor Oak! Input is now in working order!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Professor Oak! Input is now in working order!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h3 id=&#34;part-2---controller-applet&#34;&gt;Part 2 - Controller Applet&lt;/h3&gt;
&lt;p&gt;Morph began on &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4597&#34;&gt;Part 2&lt;/a&gt; knowing that yuzu lacked an implementation of a Controller Applet, which is crucial for a lot of multiplayer games such as &lt;code&gt;Super Mario Maker 2&lt;/code&gt;, &lt;code&gt;Kirby Star Allies&lt;/code&gt;, &lt;code&gt;Hyrule Warriors: Definitive Edition&lt;/code&gt; and many more. It had previously been &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/1940&#34;&gt;attempted&lt;/a&gt; by &lt;a href=&#34;https://github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt; but was riddled with issues due to the immature input implementation at the time. Therefore, Morph decided that it was time to implement it after gaining knowledge of and fixing HID in &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4530&#34;&gt;Part 1&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While Morph was completing the backend implementation of the applet, Rei was designing the UI that was inspired by DarkLordZach&amp;rsquo;s initial implementation, with an error box showing all the issues with the current controller configuration as shown.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./firstapplet.png&#34; title=&#34; The very first concept of the Controller Applet inspired by DarkLordZach&amp;#39;s initial implementation&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/firstapplet_hu429f9128a53ee58f934d4302edc2013a_30690_429x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The very first concept of the Controller Applet inspired by DarkLordZach&amp;#39;s initial implementation&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The very first concept of the Controller Applet inspired by DarkLordZach&amp;#39;s initial implementation&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;After taking a look at this first concept, they decided that it wasn&amp;rsquo;t very intuitive for the user. One morning, as Morph was about to finish the backend implementation, &lt;a href=&#34;https://github.com/Its-Rei&#34;&gt;Rei&lt;/a&gt; had an epiphany to replicate the Switch&amp;rsquo;s native UI for the &lt;code&gt;Controller Applet&lt;/code&gt; and whipped up the concept design you see below:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./secondapplet.png&#34; title=&#34; The one that started it all&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/secondapplet_hue87b2dc649a879ee2eeadaae57336395_55679_852x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; The one that started it all&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; The one that started it all&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;As you can see, this was much closer to the design we have now, but was lacking some features such as the number of supported controllers, LED pattern, border color, and explain text.
Wanting to get as close to the Switch&amp;rsquo;s design as possible, Morph implemented these features one by one, and the frontend UI was adapted by Rei to include these features, bringing us to the final design we have now.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./supportedplayers.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/supportedplayers_hu95e0e689b9d348b6411e866150343d34_46503_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ledpatterns.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/ledpatterns_hucbfbd3aa669ad5189c086f21b133a127_67097_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;





&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bordercolor.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/bordercolor_hu5829a1639729c7fd792b703e13d76c8f_30514_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s all coming together now&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./explaintext.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/explaintext_hufa0243c3b409c757204d36a4dd6dfa6f_36477_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;It&amp;#39;s all coming together now&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;It&amp;#39;s all coming together now&lt;/p&gt;


&lt;p&gt;As the design was now complete, Morph hooked up all of these features from the backend to the frontend and produced these clean and pretty results!&lt;/p&gt;
&lt;p&gt;Below are comparisons between the Nintendo Switch&amp;rsquo;s and yuzu&amp;rsquo;s Controller Applets:&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mariokart8deluxe-switch.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/mariokart8deluxe-switch_huf0d9286e767b5fbd90360b1f690819e6_634740_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mario Kart 8 Deluxe&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mariokart8deluxe-yuzu.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/mariokart8deluxe-yuzu_hu140f144cd3481949765887021a123481_973312_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mario Kart 8 Deluxe&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Mario Kart 8 Deluxe&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kirbystarallies-switch.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/kirbystarallies-switch_hua797bc24ba1b5d3ebb115aaa828596f1_362296_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Kirby Star Allies&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kirbystarallies-yuzu.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/kirbystarallies-yuzu_huc0b5078c892bbe16104f5ee6d222a0f6_349246_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Kirby Star Allies&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Kirby Star Allies&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smm2-switch.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/smm2-switch_hu11e66a375114d406580736546aead0d5_394708_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Maker 2&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smm2-yuzu.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/smm2-yuzu_hu38418bc988ae78b07679e30958d70dba_161034_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Maker 2&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Maker 2&lt;/p&gt;


&lt;h3 id=&#34;there-is-still-more-to-come&#34;&gt;There is still more to come!&lt;/h3&gt;
&lt;p&gt;There is always room for improvement, keep your eyes peeled for future additions and features!&lt;/p&gt;
&lt;p&gt;As we cannot fit in all the changes present in both parts, our more tech savvy users can read about all the changes in the following PRs: &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4530&#34;&gt;[Mjölnir Part 1]&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4597&#34;&gt;[Mjölnir Part 2]&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;bugfixes-and-improvements&#34;&gt;Bugfixes and improvements&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.khronos.org/&#34;&gt;Khronos&lt;/a&gt; recently added the new &lt;code&gt;VK_EXT_extended_dynamic_state&lt;/code&gt; extension to the Vulkan API, and driver support is slowly being completed by the vendors. Per the norm with newly supported extensions, you can expect stuff to be in a &lt;em&gt;non-perfect&lt;/em&gt; state, or as we like to say, &amp;ldquo;Expect Dragons.&amp;rdquo; AMD recently added support for this extension in the 20.8.3 Windows driver, but part of it is glitched, resulting in graphical errors in games like &lt;code&gt;Super Mario Odyssey&lt;/code&gt;. &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; temporarily solved this by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4599&#34;&gt;blacklisting the extension on the AMD Windows drivers until it is fixed&lt;/a&gt;. Intel doesn&amp;rsquo;t support &lt;code&gt;VK_EXT_extended_dynamic_state&lt;/code&gt; at the time of writing this, and Nvidia had already fixed their issues with the extension.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smobug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/smobug_hu29d76e0c715b33afd6b9e504c7eb35d9_2019254_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mario stared into the abyss, and the abyss stared back (Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smofix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/smofix_hu92d4ae83699bc956b8c57e242e8352f0_1963968_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mario stared into the abyss, and the abyss stared back (Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Mario stared into the abyss, and the abyss stared back (Super Mario Odyssey)&lt;/p&gt;


&lt;p&gt;Continuing with &lt;code&gt;VK_EXT_extended_dynamic_state&lt;/code&gt;, a glitch affecting &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;, and others, was discovered when using this new extension. Attack sprites were missing during gameplay, but &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; was able to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4555&#34;&gt;solve the issue on all compatible drivers&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./smashbug.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./smashfix.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Master Sword can&amp;#39;t just look like a regular sword (Super Smash Bros. Ultimate)&lt;/p&gt;


&lt;p&gt;Thumbnail pictures in in-game save slots were a black rectangle for most games up until now. By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4453&#34;&gt;fixing block linear copies&lt;/a&gt;, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; prevented users from loading up the wrong save or course by mistake in games such as &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; and &lt;code&gt;Super Mario Maker 2&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smm2bug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/smm2bug_hu4b2b5525ad852db99ed63b5fd60e203f_155389_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ohh, this one was my good course! (Super Mario Maker 2)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smm2fix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/smm2fix_hu6a2b714de5241d9e6287f4ba3636e3a8_471917_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ohh, this one was my good course! (Super Mario Maker 2)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Ohh, this one was my good course! (Super Mario Maker 2)&lt;/p&gt;


&lt;h2 id=&#34;precision-has-a-cost&#34;&gt;Precision has a cost&lt;/h2&gt;
&lt;p&gt;Up until now, CPUs lacking the FMA instruction set had to run generic code as fallback. After a lot of work, &lt;a href=&#34;https://github.com/MerryMage&#34;&gt;Merry&lt;/a&gt; added &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4541&#34;&gt;optimizations intended for CPUs lacking the &lt;code&gt;FMA instruction set&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This means that users with CPUs from the AMD Phenom II series or older, Intel 3rd generation Core-i series or older, and all Pentium, Celeron and Atom CPUs can now select the &amp;ldquo;Unsafe&amp;rdquo; setting and see major performance improvements in almost all games. Don&amp;rsquo;t bother to try this setting on CPUs that have FMA, as it will not improve your performance in that case.&lt;/p&gt;
&lt;p&gt;However, due to being a less precise alternative, expect emulation inaccuracies if you decide to enable it. Here be dragons, as they say.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./fma.png&#34; title=&#34; You can find it here&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/fma_huc55a6b6bb383e5106b7b84f50541fb5e_18124_887x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; You can find it here&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; You can find it here&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;ui-changes&#34;&gt;UI Changes&lt;/h2&gt;
&lt;p&gt;As part of the input rewrite, &lt;a href=&#34;https://github.com/Its-Rei&#34;&gt;Rei&lt;/a&gt; fixed several consistency bugs affecting the &lt;code&gt;Midnight Blue&lt;/code&gt; UI theme. You can see the results below.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./input_before.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/input_before_huae35c3e4ebf6b3b945d5eb6272e9cbda_107980_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Input window fixes, before (left) and after (right)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./input_after.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/input_after_hubc1e2a048c0e0fd36709ef298ea74692_108721_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Input window fixes, before (left) and after (right)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Input window fixes, before (left) and after (right)&lt;/p&gt;


&lt;p&gt; &lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./main_before.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/main_before_hu132fb3f1c52866edb312316c6981b879_74016_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Gamelist fixes, before (left) and after (right)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./main_after.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/main_after_hu4d07e450fcd465eecebfe6f8e98db147_61441_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Gamelist fixes, before (left) and after (right)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Gamelist fixes, before (left) and after (right)&lt;/p&gt;


&lt;p&gt;Both of our dark themes (Dark and Midnight Blue) had a transparency bug affecting the per-game settings pop-up window. &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; made the necessary changes to fix this by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4420&#34;&gt;setting QLabel background color to transparent&lt;/a&gt;. You can see the changes below.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./darkbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/darkbug_hu8d5b89c3bb8baa90072867a0e6e6dc2e_204301_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Dark theme, before (left) and after (right)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./darkfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/darkfix_hu8d5b89c3bb8baa90072867a0e6e6dc2e_204610_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Dark theme, before (left) and after (right)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Dark theme, before (left) and after (right)&lt;/p&gt;


&lt;p&gt; &lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./midnightbug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/midnightbug_hu77c5d9fb6bbc6f4df2a87400cca42e4d_196395_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Midnight Blue theme, before (left) and after (right)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./midnightfix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/midnightfix_hu77c5d9fb6bbc6f4df2a87400cca42e4d_196818_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Midnight Blue theme, before (left) and after (right)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Midnight Blue theme, before (left) and after (right)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; also added an option to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4515&#34;&gt;access game specific settings while playing.&lt;/a&gt; This makes it easy to change graphics accuracy or other settings on the fly.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pergame.png&#34; title=&#34; Found it!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-aug-2020/pergame_hu2da4860b6af3545cca95d1f456df4353_1054381_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Found it!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Found it!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Force 30FPS&lt;/code&gt; was an option that was used for debugging, and as an emergency brake for the old days when yuzu lacked a proper frame limiter. The fate of this tick-box was undecided for long, moving it to the &lt;code&gt;Debug&lt;/code&gt; tab was considered at one point. But in the end, it was finally &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4446&#34;&gt;removed by&lt;/a&gt; &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt;. This option was no longer functional after the changes of &lt;code&gt;Project Prometheus&lt;/code&gt; took effect, so this was a necessary sacrifice.&lt;/p&gt;
&lt;p&gt;Our users reported that some checkboxes were duplicated after the addition of Vulkan. These were &lt;code&gt;Dump Decompressed NRO&lt;/code&gt; and &lt;code&gt;Dump ExeFS&lt;/code&gt; which could be found both in &lt;code&gt;General &amp;gt; Debug&lt;/code&gt; and &lt;code&gt;System &amp;gt; Filesystem &amp;gt; Patch Manager&lt;/code&gt;. &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;Tobi&lt;/a&gt; put an end to this clone war, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4429&#34;&gt;removing the duplicates in Debug&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future Projects&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; is working on a universal, GPGPU (General-Purpose GPU) accelerated method to decode ASTC textures. We shall hear more of this after the Texture Cache rewrite is finished.&lt;/p&gt;
&lt;p&gt;Whispers of more audio changes have been heard, and a certain shark will be responsible for this.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=D8zlUUrFK-M&#34;&gt;Devs uh&amp;hellip; find a way.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s all for now folks! See you again in the September progress report!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report July 2020</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/</link>
      <pubDate>Tue, 04 Aug 2020 12:00:00 -0300</pubDate>
      <author>Morph</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/</guid>
      <description>&lt;p&gt;Hey yuz-ers, what is up and welcome back to the… progress report. In this monthly report, we offer you major rewrites to critical components, another successful attack on shader compilation times, tons of game fixes, and the promise of a very bright future ahead. Let’s get started!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey yuz-ers, what is up and welcome back to the… progress report. In this monthly report, we offer you major rewrites to critical components, another successful attack on shader compilation times, tons of game fixes, and the promise of a very bright future ahead. Let’s get started!&lt;/p&gt;
&lt;h2 id=&#34;paper-mario-the-origami-king-fixes&#34;&gt;Paper Mario: The Origami King fixes&lt;/h2&gt;
&lt;p&gt;To begin with, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; implemented several fixes to make &lt;code&gt;Paper Mario: The Origami King&lt;/code&gt; playable:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4359&#34;&gt;clamping the host’s compute shared memory limit&lt;/a&gt;, the game doesn’t get stuck when trying to start rendering.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./pmm.png&#34; title=&#34; Now in A4 format! (Paper Mario: The Origami King)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/pmm_hu987f401940ede79e0951bed96f6bc4a0_1495468_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Now in A4 format! (Paper Mario: The Origami King)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Now in A4 format! (Paper Mario: The Origami King)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Some graphical artifacts affecting OpenGL can be fixed in GLASM by executing the shader instruction &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4360&#34;&gt;BAR inside control flow&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pmcastlebug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/pmcastlebug_hu827e28dd90285eb2040982dec78946b3_2149990_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That is one big sheet of paper! (Paper Mario: The Origami King)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pmcastlefix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/pmcastlefix_hu360cef78d7c65342ef057d3e5bc85944_2829702_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That is one big sheet of paper! (Paper Mario: The Origami King)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;That is one big sheet of paper! (Paper Mario: The Origami King)&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;Lighting issues were fixed by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4361&#34;&gt;implementing the S2R.LaneId instruction in the shader decoder&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pmintrobug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/pmintrobug_hu69a53ee47d310d59a8e4cc0a9d3987d1_544685_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Lights, please! (Paper Mario: The Origami King)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pmintrofix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/pmintrofix_hu0ebf7999b3d82f8ee7076669f7436835_2896246_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Lights, please! (Paper Mario: The Origami King)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Lights, please! (Paper Mario: The Origami King)&lt;/p&gt;


&lt;h2 id=&#34;new-gpu-virtual-memory-manager&#34;&gt;New GPU Virtual Memory Manager&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; brings the big guns. The complete &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4430&#34;&gt;rewrite of the &lt;code&gt;GPU Virtual Memory Manager&lt;/code&gt;&lt;/a&gt; fixes &lt;em&gt;several&lt;/em&gt; bugs in many games, with the two strongest examples being &lt;code&gt;Mario Kart 8 Deluxe&lt;/code&gt; and &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;. Now several graphical bugs are fixed in Mario Kart 8, including tracks that show invisible terrain or missing graphics. In Smash&amp;rsquo;s case, there are no more vertex explosions now.&lt;/p&gt;
&lt;p&gt;This rewrite also should reduce committed memory a bit, hopefully reducing the size of the required page file, and opens the possibility to implement new features in the future. We have to clarify that this doesn&amp;rsquo;t fix the high VRAM usage in Vulkan.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mk8bug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/mk8bug_hufa8bbb3175015e6912e205fc787d04a5_1735813_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That&amp;#39;s not what I meant when I said Anti-Gravity! (Mario Kart 8 Deluxe)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mk8fix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/mk8fix_huef951a87af1cfe81fd7d29faac0c1242_1593594_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;That&amp;#39;s not what I meant when I said Anti-Gravity! (Mario Kart 8 Deluxe)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;That&amp;#39;s not what I meant when I said Anti-Gravity! (Mario Kart 8 Deluxe)&lt;/p&gt;


&lt;h2 id=&#34;bug-fixes-and-improvements&#34;&gt;Bug fixes and improvements&lt;/h2&gt;
&lt;p&gt;Accompanying the recent addition of 32-bit emulation support, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; implemented &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4292&#34;&gt;support for the creation of random and default Miis&lt;/a&gt;. This does not include full support for custom ones for now.
With Miis in place, games like &lt;code&gt;Mario Kart 8 Deluxe&lt;/code&gt; and &lt;code&gt;New Super Mario Bros. U Deluxe&lt;/code&gt; can now get past their menus and become playable.&lt;/p&gt;
&lt;p&gt;For this service to work, the user needs to dump the system archives from their Nintendo Switch. The process requires the &lt;a href=&#34;https://github.com/XorTroll/Goldleaf&#34;&gt;Goldleaf homebrew&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To obtain the files, you must open Goldleaf from the Homebrew menu, select &amp;ldquo;Console and Goldleaf settings,&amp;rdquo; select &amp;ldquo;Firmware and updates,&amp;rdquo; pick &amp;ldquo;Export update,&amp;rdquo; confirm on the &amp;ldquo;Directory&amp;rdquo; option, and the files will be dumped in the &lt;code&gt;switch\Goldleaf\dump\update&lt;/code&gt; location. After that, just copy the files to &lt;code&gt;%AppData%\yuzu\nand\system\Contents\registered&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./mk8.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/mk8_hu7df8f6209c40d3672ff6da59df478cdf_3205127_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ports, ports everywhere! (Mario Kart 8 Deluxe &amp;amp; New Super Mario Bros. U Deluxe)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smbud.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/smbud_huffafb9b53a612d65514b10b8943faa4c_2064400_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ports, ports everywhere! (Mario Kart 8 Deluxe &amp;amp; New Super Mario Bros. U Deluxe)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Ports, ports everywhere! (Mario Kart 8 Deluxe &amp;amp; New Super Mario Bros. U Deluxe)&lt;/p&gt;


&lt;p&gt;This is tradition by now. &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; fixed another bug in &lt;code&gt;Kirby Star Allies&lt;/code&gt;, this time by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4082&#34;&gt;implementing MirrorOnceClampOGL&lt;/a&gt;. This is done by using the &lt;code&gt;GL_EXT_texture_mirror_clamp&lt;/code&gt; extension on the OpenGL drivers that support it. The Intel driver doesn’t, so, with those GPUs, yuzu falls back to &lt;code&gt;GL_MIRROR_CLAMP_TO_EDGE&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Improvements to the texture cache by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4176&#34;&gt;implementing additional checks&lt;/a&gt;, done by &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt;, fixed crashing issues on Turing GPUs (RTX 2000 and GTX 1600 series) in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;. Now you can load saves normally! So get moving and save the princess!&lt;/p&gt;
&lt;p&gt;Our GLASM users experienced black textures on top of the vegetation in &lt;code&gt;The Legend of Zelda: Link’s Awakening&lt;/code&gt;. By using the extensions &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4168&#34;&gt;&lt;code&gt;NV_shader_buffer_load&lt;/code&gt; and &lt;code&gt;NV_shader_buffer_store&lt;/code&gt;&lt;/a&gt;, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; solved this issue for good.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./zlabug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/zlabug_hu88d2cc18a8384ae40768a2ccd2946843_2824223_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Beware of the dark weeds, legend says rupoors lay there (The Legend of Zelda: Link&amp;#39;s Awakening)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./zlafix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/zlafix_hude97f95c428121c9bde3836e25bae6db_2983057_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Beware of the dark weeds, legend says rupoors lay there (The Legend of Zelda: Link&amp;#39;s Awakening)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Beware of the dark weeds, legend says rupoors lay there (The Legend of Zelda: Link&amp;#39;s Awakening)&lt;/p&gt;


&lt;p&gt;We talked about this in the previous June progress report, and we&amp;rsquo;re happy to announce that &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; finished &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4150&#34;&gt;implementing support for &lt;code&gt;VK_EXT_extended_dynamic_state&lt;/code&gt;&lt;/a&gt;. This fixes the “triangle glitch” that affects &lt;code&gt;Super Mario Odyssey&lt;/code&gt; on all Vulkan drivers that support this new extension.&lt;/p&gt;
&lt;p&gt;Thanks to help from &lt;a href=&#34;https://github.com/gdkchan&#34;&gt;gdkchan&lt;/a&gt; and &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; added support for &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4242&#34;&gt;copying 2D arrays of pixels into 3D voxels&lt;/a&gt;, fixing rendering bugs in games like &lt;code&gt;LEGO Marvel Super Heroes 2&lt;/code&gt; and possibly others.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt;, along with &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt;, started preliminary work to fix crashes only happening in recent Nvidia Linux Vulkan drivers. Through trial and error, it was found that &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4283&#34;&gt;increasing the Vulkan device allocable size&lt;/a&gt; mitigates this issue on most GPUs, but some still remain affected for now.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; is working on &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4137&#34;&gt;implementing support for GameCube adapters&lt;/a&gt;, allowing players to use original GameCube controllers! Veteran Smash players will surely enjoy it.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-prometheus/&#34;&gt;&lt;code&gt;Project Prometheus&lt;/code&gt;&lt;/a&gt; introduced so many changes that we are still working on reaching feature parity with the original single-core implementation. &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4219&#34;&gt;improved the audio timing&lt;/a&gt;, fixing audio bugs that were introduced with the implementation of the new multicore and single-core emulation methods.&lt;/p&gt;
&lt;p&gt;Since its introduction, enabling multicore was the only way to reach stable gameplay on Linux systems, as the single-core option would lead to a crash in every game. Thanks to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/issues/4424&#34;&gt;comex&amp;rsquo;s report&lt;/a&gt;, &lt;a href=&#34;https://github.com/lioncash&#34;&gt;Lioncache&lt;/a&gt; fixed it by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4426&#34;&gt;using the return value of Lock() in the nvflinger surface compositor&lt;/a&gt;. Thanks to this fix, games that are not yet stable with multicore, like &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt;, can now be safely played in the Tux OS (Linux).&lt;/p&gt;
&lt;h2 id=&#34;project-kobra&#34;&gt;Project Kobra&lt;/h2&gt;
&lt;p&gt;Six months ago, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; proposed an &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3385&#34;&gt;implementation of a batch installer to yuzu&lt;/a&gt;, which allowed users to install many updates and DLCs at the same time. This was a boon for many users, but it remained in Early Access for a long time due to several issues and anticipation of a new VFS implementation dubbed &lt;code&gt;Project Viper&lt;/code&gt;. With renewed hope and motivation from the shark (&lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt;), &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; went on to fix all of its remaining issues, allowing it to finally be merged into the master/Mainline branch of yuzu.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./batch_install.png&#34; title=&#34; I can finally install all the DLCs of Super Smash Bros. Ultimate!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/batch_install_hu63a799c8d95c6fab22f6a0ed998e43b5_34019_908x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; I can finally install all the DLCs of Super Smash Bros. Ultimate!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; I can finally install all the DLCs of Super Smash Bros. Ultimate!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Additionally, as &lt;code&gt;Project Viper&lt;/code&gt; has been delayed until further notice, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; took it upon himself to fix the list of Virtual File System (VFS) bugs that had been plaguing yuzu.&lt;/p&gt;
&lt;p&gt;It was well known that yuzu had problems with installing Updates and DLC into the NAND and reading them correctly. Due to the inability to easily remove individual game files, users had to delete all their installed game files just to ensure that their new Update or DLC got detected properly.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./uninstall_before_fix.png&#34; title=&#34; Not again, my precious write cycles! *sobs*&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/uninstall_before_fix_hu51e2103eb7c182883fe1a3d1d83247dc_24255_872x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Not again, my precious write cycles! *sobs*&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Not again, my precious write cycles! *sobs*&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Upon closer inspection of the inner workings of the VFS, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; found that the previous Updates or DLC were not removed when a newer one was being installed, leading to issues with the detection of these files in yuzu. He solved this by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4249&#34;&gt;properly removing the previous update or DLC if it exists on installation&lt;/a&gt;. In addition to this, he also &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4250&#34;&gt;corrected a small oversight in the way yuzu stores autogenerated titlekeys&lt;/a&gt;. Now invalid titlekeys will no longer be written into the &lt;code&gt;title.keys_autogenerated&lt;/code&gt; file, ensuring that only valid ones are written. If your game, update or DLC is not being detected by yuzu, ensure you have the latest key files dumped from your switch, as newer game updates and DLC require newer firmware keys to decrypt.
With these fixes in place, yuz-ers no longer have to delete all installed game files to install a newer update or DLC as this properly overwrites the previously installed ones.&lt;/p&gt;
&lt;p&gt;Next, he looked into fixing one of the oldest and well known VFS bugs - the &lt;code&gt;Luigi&#39;s Mansion 3&lt;/code&gt; autosave issue. Every time an autosave was triggered, the game would softlock. This had also affected other games such as &lt;code&gt;KATANA KAMI: A Way of the Samurai Story&lt;/code&gt; and &lt;code&gt;Okami HD&lt;/code&gt;. Building upon the initial research by theboy181 (the creator of the mod that bypassed the Luigi&amp;rsquo;s Mansion saving issue), Morph dug into the VFS code and found that files were not closed prior to being renamed or moved, leading to a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4265&#34;&gt;simple fix&lt;/a&gt; for any games that use this function.&lt;/p&gt;
&lt;p&gt;Keeping the ball rolling, he went on to find out why &lt;code&gt;Diablo III: Eternal Collection&lt;/code&gt; was not able to get past the EULA screen and thus needing a save file to bypass it. It turned out that an &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/1012&#34;&gt;old PR&lt;/a&gt; was causing &lt;em&gt;folders&lt;/em&gt; instead of &lt;em&gt;files&lt;/em&gt; to be created. After this discovery, the PR was immediately removed from Mainline/Early Access and closed as it was no longer needed.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./diablo3fixed.png&#34; title=&#34; EULAs can&amp;#39;t stop me! (Diablo III)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/diablo3fixed_hu10e64b98b28bac0166e21aa745286656_1763068_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; EULAs can&amp;#39;t stop me! (Diablo III)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; EULAs can&amp;#39;t stop me! (Diablo III)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Looking for the next meal, Morph took a bite at the saving issues of the Bioshock Trilogy. These games were unable to save due to checking for free space prior to saving. This was fixed by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4282&#34;&gt;ensuring that the NAND partition sizes were set to their defaults&lt;/a&gt; and are read correctly by the relevant filesystem service commands.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bioshock_out_of_space.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/bioshock_out_of_space_hu27a759dcd4e232efd777666696676110_1688424_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Game saves are for the weak! (Bioshock Remastered)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bioshock_saved.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/bioshock_saved_hu63f34347933b616d2bb367e4911c2dc2_2282830_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Game saves are for the weak! (Bioshock Remastered)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Game saves are for the weak! (Bioshock Remastered)&lt;/p&gt;


&lt;p&gt;After this little treat, the Kirby embarked on an adventure to fix the last remaining issues with the VFS. After 3 days of debugging the Pokemon Sword and Shield RomFS weather bug, he discovered that these games contained a 0 byte file called &lt;code&gt;global_setting.bin&lt;/code&gt; which caused the file right after it called &lt;code&gt;weather_data.bin&lt;/code&gt; to be skipped entirely. And you may have guessed by now - this file contains all the data for weather and without it, no weather can be generated within the game! This eureka moment led to an extremely simple fix which &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4309&#34;&gt;accommodates for 0 byte files during RomFS building&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./swsh_weather.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/swsh_weather_hu03c6af4947b5d45044574a72bedd06d6_3610393_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Let it snow, let it snow, let it snow! (Pokemon Sword and Shield)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./swsh_weather2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/swsh_weather2_hu27c3ba76c13a8e9410882ac1f9806635_2571972_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Let it snow, let it snow, let it snow! (Pokemon Sword and Shield)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Let it snow, let it snow, let it snow! (Pokemon Sword and Shield)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&amp;rsquo;s&lt;/a&gt; adventures have led him to save &lt;del&gt;Zelda&lt;/del&gt; Link from the eternal softlocks after awakening from his slumber, seems like Ganon may have known Zelda&amp;rsquo;s plan after all. Our Kirby traveled to the shattered Kingdom of Hyrule and foiled Ganon&amp;rsquo;s plans by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4345&#34;&gt;creating the save subdirectories&lt;/a&gt; that would allow Link to save his progress. Finally, he can save the princess without wasting his time eternally stuck after his slumber.&lt;/p&gt;
&lt;p&gt;Hearing stories of Nook Inc&amp;rsquo;s deserted islands, Kirby flew off to visit some of them, only to be met by a barrier preventing access to the other realms. He managed to bypass the barrier by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4456&#34;&gt;stubbing two filesystem service commands&lt;/a&gt; which were blocking access to the islands. Now he can view all the latest treats added in the islands since the last update.&lt;/p&gt;
&lt;p&gt;Wrapping up his adventures, he went and brought peace to Dreamland once again by adding an option to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4372&#34;&gt;remove individual NAND or SDMC installed games, updates, and DLCs&lt;/a&gt; and fixing the last remaining issues with the game list, such as &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4381&#34;&gt;opening the Save/Mod Data Location of installed titles&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4450&#34;&gt;game list subdirectory scanning&lt;/a&gt;, and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4448&#34;&gt;game list metadata detection&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./title_removal.png&#34; title=&#34; Removal of installed game files has never been easier!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/title_removal_hu87408c56235a287b976e4d5f7e7185c8_12694_461x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Removal of installed game files has never been easier!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Removal of installed game files has never been easier!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;the-old-guard&#34;&gt;The old guard&lt;/h2&gt;
&lt;p&gt;When yuzu started using &lt;a href=&#34;https://conan.io/&#34;&gt;Conan&lt;/a&gt;, most of yuzu&amp;rsquo;s dependencies were migrated to it. Unfortunately, our audio decoding dependency, Opus, had bad settings in the Conan version. These settings forced the use of the &lt;code&gt;AVX/AVX2 instruction set&lt;/code&gt; even on old CPUs that don&amp;rsquo;t support it, such as AMD Phenom CPUs or any Intel Pentium, Celeron, or Atom CPU. This caused some games to crash when processing audio on the affected CPUs. &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; fixed this by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4218&#34;&gt;replacing our included Opus version&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/MerryMage&#34;&gt;Merry&lt;/a&gt; finished the preliminary work needed to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4294&#34;&gt;fix a performance regression affecting CPUs that lack the &lt;code&gt;FMA instruction set&lt;/code&gt;&lt;/a&gt;. This includes AMD Phenom series or older, Intel 3rd generation Core-i series or older, and all Pentium, Celeron and Atom CPUs. For now this shows up as a debug CPU configuration in yuzu’s settings. We recommend that our users not play with these settings, as altering them will only produce a worse experience than the default settings.&lt;/p&gt;
&lt;h2 id=&#34;ui-changes&#34;&gt;UI changes&lt;/h2&gt;
&lt;p&gt;A very requested feature from our users. &lt;a href=&#34;https://github.com/lat9nq&#34;&gt;toastUnlimited&lt;/a&gt; rose to the challenge and decided to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4098&#34;&gt;add per-game configurations&lt;/a&gt; to yuzu! For now it lacks support for input settings, but this will be added in the future. To access this new feature,  right click a game in yuzu&amp;rsquo;s game list and select Properties.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./settings.png&#34; title=&#34; No need to remember specific settings before booting a game!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/settings_hu3dd9986a0c65624dbf50bfd8804df04a_197501_802x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; No need to remember specific settings before booting a game!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; No need to remember specific settings before booting a game!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; added &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4377&#34;&gt;a new theme for our anti-light themes users&lt;/a&gt;, &lt;code&gt;Midnight Blue&lt;/code&gt;! You can access it in Configuration &amp;gt; General &amp;gt; UI.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./midnight.png&#34; title=&#34; Oooh, Spooky&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/midnight_hu9b4e4d1d8256f104eec62c8b80029473_102848_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Oooh, Spooky&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Oooh, Spooky&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Fixing small annoyances is something that is overlooked most of the time, but very appreciated when done. &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;Tobi&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4297&#34;&gt;removed the need to confirm which Switch profile to use when there is only a single one created&lt;/a&gt;. Thank you so much Tobi.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./profile.png&#34; title=&#34; Bye little fella!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/profile_hud9870886460edec56c277a5f39213e68_5556_552x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Bye little fella!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Bye little fella!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;the-sharkman-episode-one&#34;&gt;The Sharkman, episode one&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; has been working for a long time on a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4310&#34;&gt;major audio rewrite&lt;/a&gt; for yuzu. To avoid a very long explanation of the complexity of Nintendo’s audio renderer systems, we recommend our more tech savvy readers to read the Pull Request’s description where you will find more detailed information.&lt;/p&gt;
&lt;p&gt;This is “Part 1,” several fixes and more complex (or annoying to code) features will be finished at a later date. Right now the results speak for themselves. Tons of games with broken audio of any kind - like missing sound effects, fading music, mixing errors, crackling or even no sound at all - are either running perfectly or are starting to sound a lot more like the native hardware. Some bugs are to be expected for now, for example, &lt;code&gt;Shovel Knight&lt;/code&gt; and &lt;code&gt;Fast RMX&lt;/code&gt; experience choppy audio, and the voices in &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; will play from only one ear.&lt;/p&gt;
&lt;p&gt;You would think that this is enough, but &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; has another fantastic gift for us. Up until now, when several new shaders had to be built during gameplay, they could only be done one at a time. Thanks to some good help provided by &lt;a href=&#34;https://github.com/Exzap&#34;&gt;Exzap&lt;/a&gt;, Cemu&amp;rsquo;s lead developer, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4273&#34;&gt;yuzu can now decode shaders asynchronously!&lt;/a&gt; This means that, depending on the amount of threads your CPU has, the shader compilation will happen on several threads at the same time. Thus cutting down shader build time significantly, especially if you can also use assembly shaders.&lt;/p&gt;
&lt;p&gt;To top it off, &lt;a href=&#34;https://github.com/ameerj&#34;&gt;epicboy&lt;/a&gt; added &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4443&#34;&gt;async shader support for Vulkan&lt;/a&gt;!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./async.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Thanks to BSoD Gaming for the video comparison (Super Smash Bros. Ultimate)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Due to limitations in the AMD Windows OpenGL driver, we recommend that you avoid using asynchronous shaders in OpenGL if you have a Radeon GPU, as it will only produce frame skipping and lead to a very poor gameplay experience. The Linux OpenGL drivers are unaffected by this, as well as any of the Vulkan drivers.&lt;/p&gt;
&lt;p&gt;The number of threads used for asynchronous shader compilation (along with example CPUs to illustrate the number of CPU threads) are as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;CPU Threads&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Shader Threads&lt;/th&gt;
&lt;th&gt;Example CPUs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1 - 7&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td&gt;R3-1200, i3-6100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8 - 11&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td&gt;R3-3300X, i7-7700K&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;12 - 15&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td&gt;R5-3600, i7-8700K&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;16+&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td&gt;R7-3700X, i7-10700K&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; started rewriting the Texture Cache and once the work is finished, this should positively affect both OpenGL and Vulkan by introducing bug fixes, better performance, and a better experience in Vulkan in particular.&lt;/p&gt;
&lt;p&gt;There are also some other yet undisclosed but very impressive projects that we will reveal soon enough. Stay tuned!&lt;/p&gt;
&lt;p&gt;That’s all for now, folks! Until the August progress report!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./starallies.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jul-2020/starallies_hu10b5aa621bf1577972948936f0eeae9e_776878_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report June 2020</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/</link>
      <pubDate>Wed, 01 Jul 2020 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/</guid>
      <description>&lt;p&gt;Hello fellow yuz-ers! We hope you are doing well. Once again, we&amp;rsquo;re here to tell you about some of the exciting changes that were implemented last month in both yuzu Mainline and Early Access.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello fellow yuz-ers! We hope you are doing well. Once again, we&amp;rsquo;re here to tell you about some of the exciting changes that were implemented last month in both yuzu Mainline and Early Access.&lt;/p&gt;
&lt;p&gt;In this episode, we have lots of fixes and optimizations, a feature many have been requesting, and as always, some hints of what the future will bring.&lt;/p&gt;
&lt;h2 id=&#34;bug-fixes-and-improvements&#34;&gt;Bug fixes and improvements&lt;/h2&gt;
&lt;p&gt;How should we start? Oh, I know! With &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; fixing another Kirby issue of course! By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4092&#34;&gt;reserving 4 image bindings&lt;/a&gt; in the fragment stage, instead of just one as before, he was able to fix several shader compilation errors that affected both &lt;code&gt;GLSL&lt;/code&gt; and &lt;code&gt;GLASM&lt;/code&gt; in &lt;code&gt;Kirby Star Allies&lt;/code&gt;. Check out the results below, &lt;a href=&#34;https://www.youtube.com/watch?v=ObHK_K853k4&#34;&gt;Poyo!&lt;/a&gt;&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./Kirby_before.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/Kirby_before_hu0dc5c48af48215b4aef1fe2d4be64677_2112795_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Here you can see the bug affecting an attack (Kirby Star Allies)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kirby_after.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/kirby_after_hu5d3758d4475af7eff58b88900809be07_2277619_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Here you can see the bug affecting an attack (Kirby Star Allies)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Here you can see the bug affecting an attack (Kirby Star Allies)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kirby_before2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/kirby_before2_hua99c554f90980fcee61c1891ef46ec01_2164296_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;And here affecting terrain (Kirby Star Allies)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kirby_after2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/kirby_after2_hua2ec9ccc744fdbb50ba0129368f133ce_2307171_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;And here affecting terrain (Kirby Star Allies)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;And here affecting terrain (Kirby Star Allies)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; fixed a bug that previously manifested as random black flickering by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4064&#34;&gt;marking vertex buffers as dirty after a cache invalidation&lt;/a&gt;. This issue primarily affected &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt;, but the bugfix should affect a lot of other games as well. Feel free to share any other games you discover that benefit from this!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./acnh.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Now that doesn&amp;#39;t look nice, does it? (Animal Crossing: New Horizons)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;A very elusive bug in &lt;code&gt;Super Mario Odyssey&lt;/code&gt;, dubbed the &amp;ldquo;triangle glitch,&amp;rdquo; had been tormenting us for ages. &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; managed to solve the issue, but only in OpenGL with Nvidia GPUs due to the exclusive &lt;code&gt;NV_vertex_buffer_unified_memory&lt;/code&gt; extension. However, due to both a yuzu and driver bug, we&amp;rsquo;re unable to use this extension on Turing based GPUs (RTX 2000 and GTX 1600 series) for the moment.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo-bug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/smo-bug_hu31de0ab1d3fd4e9b758afc1bc843a3f5_2845758_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Dark and glitchy (Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo-fix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/smo-fix_hub425b565030904fd2ce5a691434ee207_1780191_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Dark and glitchy (Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Dark and glitchy (Super Mario Odyssey)&lt;/p&gt;


&lt;p&gt;We are working on a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4150&#34;&gt;universal implementation in Vulkan&lt;/a&gt; that requires the &lt;code&gt;VK_EXT_extended_dynamic_state&lt;/code&gt; extension, but it is not yet available in all the GPU vendors&amp;rsquo; drivers. At the time of writing, only the Intel Mesa &lt;code&gt;ANV&lt;/code&gt; Linux driver and the latest Nvidia Vulkan Beta driver support it.&lt;/p&gt;
&lt;p&gt;A rare bug was affecting &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt;, causing fantastic vertex explosions on time-of-day transitions. &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; managed to solve the issue by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4194&#34;&gt;improving the shader cache&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc2-bug.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/xc2-bug_hu286068597869ec7079314fac6990bf2e_1116284_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Exactly the same spot (Xenoblade Chronicles 2)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xc2-fix.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/xc2-fix_hu1979630a1f33784b67740e8f69b599ba_2563638_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Exactly the same spot (Xenoblade Chronicles 2)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Exactly the same spot (Xenoblade Chronicles 2)&lt;/p&gt;


&lt;p&gt;By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4080&#34;&gt;implementing RendererInfo&lt;/a&gt; into yuzu’s audio emulation, &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; solved the softlocks affecting the credit sequence in &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; and the softlocks in several areas of &lt;code&gt;The Legend of Zelda: Link&#39;s Awakening&lt;/code&gt;. Now you can enjoy both games without the fear of getting stuck, and even listen to some newly working sound effects!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./acnh-credits.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/acnh-credits_hu26eec7177a2526557682ca2a9fd1a6fe_598028_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Nothing to report! (Animal Crossing: New Horizons &amp;amp; The Legend of Zelda: Link&amp;#39;s Awakening)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./zla-mermaid.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/zla-mermaid_huffa22ed650f37f1ebb1df0bd7439b75d_3269213_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Nothing to report! (Animal Crossing: New Horizons &amp;amp; The Legend of Zelda: Link&amp;#39;s Awakening)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Nothing to report! (Animal Crossing: New Horizons &amp;amp; The Legend of Zelda: Link&amp;#39;s Awakening)&lt;/p&gt;


&lt;p&gt;Also thanks to &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt;, &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; no longer needs the crash-fix patch we were distributing in our compatibility article for the game. This was done by &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4070&#34;&gt;improving the emulation of the Tegra X1 GPU drivers&lt;/a&gt;. As a bonus, this also fixed T-posing on the later updates in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;Not all games are native to the Nintendo Switch, with a portion of its library consisting of ported games from other consoles or the PC. Up until now, yuzu failed to run PC game ports that were originally developed for &lt;code&gt;Direct3D&lt;/code&gt; (a Windows graphics API), even though they ran perfectly fine in &lt;code&gt;NVN&lt;/code&gt; (a Switch exclusive graphics API). However, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; found a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4049&#34;&gt;way to translate this behavior&lt;/a&gt; to yuzu’s OpenGL and Vulkan implementations, resulting in tons of western games going in-game. This change was also accompanied by a shader cache invalidation.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./bioshock.png&#34; title=&#34; Would you kindly? (BioShock Remastered)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/bioshock_huc304775e99420f20d3217072e41d9e44_1579589_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Would you kindly? (BioShock Remastered)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Would you kindly? (BioShock Remastered)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;By implementing a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4005&#34;&gt;missing texture format&lt;/a&gt;, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; fixed dark surface glitches that appear in &lt;code&gt;Xenoblade Chronicles Definitive Edition&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xcde_before.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/xcde_before_hu35a29192b0edb89b76161127168adf7b_1562178_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This is the Monado&amp;#39;s power!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xcde_after.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/xcde_after_hud3fbb58df331203c0d926e3f181bd44f_1884327_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;This is the Monado&amp;#39;s power!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;This is the Monado&amp;#39;s power!&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xcde_before2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/xcde_before2_hu5a6564292039b2dd1dd3f8dc6bcbc387_529964_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;(Xenoblade Chronicles Definitive Edition)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./xcde_after2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/xcde_after2_hue07302a9d4775ad2ca26b2f2ddb4b756_3061350_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;(Xenoblade Chronicles Definitive Edition)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;(Xenoblade Chronicles Definitive Edition)&lt;/p&gt;


&lt;p&gt;Intel used to have a bug in their OpenGL driver causing many games using &lt;code&gt;Compute Shaders&lt;/code&gt; to crash or render effects incorrectly. This forced us to disable them on any supported Intel GPU, which introduced adverse effects in many games. One game of note is &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;, wherein compute shaders are used to render character model animations and without them, character models will be in a &lt;code&gt;T-pose&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Additionally, Intel&amp;rsquo;s OpenGL &lt;code&gt;Geometry Shader&lt;/code&gt; implementation (unlike AMD&amp;rsquo;s and Nvidia&amp;rsquo;s one) lacks an OpenGL extension called &lt;code&gt;GL_ARB_shader_viewport_layer_array&lt;/code&gt;. This forces us to re-evaluate yuzu&amp;rsquo;s implementation of it.&lt;/p&gt;
&lt;p&gt;By &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4025&#34;&gt;re-enabling Compute Shaders&lt;/a&gt; and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4031&#34;&gt;changing the way yuzu handles Geometry Shaders&lt;/a&gt;, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; closed a big box of issues that previously affected only our Intel GPU users.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./octopath-before.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/octopath-before_hud55d48f2c127b11a9dd6bba46d47b902_1596660_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Gone are the rainbows on Intel (Octopath Traveler)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./octopath-fixed.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/octopath-fixed_hub42d2039d1e7ef4a0cb7003a158084e9_625273_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Gone are the rainbows on Intel (Octopath Traveler)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Gone are the rainbows on Intel (Octopath Traveler)&lt;/p&gt;


&lt;p&gt; &lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ssbu-tpose.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/ssbu-tpose_hu4225895ef550d0a7ad7056bd02219c59_2351348_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more T-posing (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ssbu-fixed.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/ssbu-fixed_hu57a961147091bf633988fc3707416833_2342888_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No more T-posing (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;No more T-posing (Super Smash Bros. Ultimate)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/VolcaEM&#34;&gt;Volca&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4032&#34;&gt;stubbed an input instruction&lt;/a&gt; allowing &lt;code&gt;Minecraft: Nintendo Switch Edition&lt;/code&gt; to go in-game.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./minecraft.png&#34; title=&#34; Don&amp;#39;t dig too deep! (Minecraft: Nintendo Switch Edition)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/minecraft_hu489609e1246540616df7ecff7260258b_983391_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Don&amp;#39;t dig too deep! (Minecraft: Nintendo Switch Edition)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Don&amp;#39;t dig too deep! (Minecraft: Nintendo Switch Edition)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Not all games have to be in 3D. &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4081&#34;&gt;replaced the default texture filtering behaviour&lt;/a&gt; to achieve crisp graphics in 2D games like &lt;code&gt;Undertale&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./undertale-before.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/undertale-before_hu6d3d4968df527bbcaa1cb9fc81543511_74102_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Crisp, just the way I like it&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./undertale-after.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/undertale-after_hu438855e46f38770052fd0253d7171efb_11627_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Crisp, just the way I like it&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Crisp, just the way I like it&lt;/p&gt;


&lt;p&gt;Now on to our final bug fix of last month. Old AMD GPUs from 2012 lack the OpenGL &lt;code&gt;GL_EXT_texture_shadow_lod&lt;/code&gt; extension, leading to shaders that failed to build in &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt;. As described &lt;a href=&#34;https://github.com/KhronosGroup/SPIRV-Cross/issues/207&#34;&gt;here&lt;/a&gt;, by using the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4129&#34;&gt;textureGrad function&lt;/a&gt;, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; achieved similar results, improving compatibility with such old devices.&lt;/p&gt;
&lt;h2 id=&#34;vulkan-improvements&#34;&gt;Vulkan improvements&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;OCTOPATH TRAVELER&lt;/code&gt; got some Vulkan love thanks to &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt;. By implementing a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4033&#34;&gt;missing image format&lt;/a&gt; and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4034&#34;&gt;storage texels and atomic image operations&lt;/a&gt;, the game can now reach in-game status in Vulkan, and with some very beautiful visuals!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./octopath.png&#34; title=&#34; This is how nostalgia makes us remember the SNES era (OCTOPATH TRAVELER)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/octopath_hu9341315c0438b29f58b59153162d15c4_4308990_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; This is how nostalgia makes us remember the SNES era (OCTOPATH TRAVELER)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; This is how nostalgia makes us remember the SNES era (OCTOPATH TRAVELER)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; also worked on &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4110&#34;&gt;multiple&lt;/a&gt; &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4111&#34;&gt;performance&lt;/a&gt; optimizations for the Vulkan API. This results in lower frametimes and higher framerates on average.&lt;/p&gt;
&lt;h2 id=&#34;user-interface-changes&#34;&gt;User Interface changes&lt;/h2&gt;
&lt;p&gt;An old misconception our users had with yuzu had to do with the &lt;code&gt;Internal Resolution&lt;/code&gt; option in the graphics settings. This was carried over from &lt;a href=&#34;https://citra-emu.org/&#34;&gt;Citra&amp;rsquo;s&lt;/a&gt; UI, but it wasn&amp;rsquo;t coded to do anything in yuzu. So, lots of users set it up at higher values expecting an image quality increase that could never happen. &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; decided it was time to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3966&#34;&gt;remove it for good&lt;/a&gt;, and so he did.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./res-scaler-removed.png&#34; title=&#34; Until we meet again, Internal Resolution!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/res-scaler-removed_hubbaba8fa7c285c60e738f7bfca2b80bf_8489_549x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Until we meet again, Internal Resolution!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Until we meet again, Internal Resolution!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Thanks to users requesting it, &lt;a href=&#34;https://github.com/VolcaEM&#34;&gt;Volca&lt;/a&gt; added &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4136&#34;&gt;Open Mods&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4166&#34;&gt;FAQ, and Quickstart&lt;/a&gt; shortcuts to yuzu&amp;rsquo;s interface. This is a great way for users to find helpful information on how to use the emulator — you just need to click on &lt;code&gt;Help&lt;/code&gt;!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./volca-ui.png&#34; title=&#34; Just an easier way. Thanks Volca!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/volca-ui_huc719ab8e90628c11cd46beef4f6060bd_3336_184x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Just an easier way. Thanks Volca!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Just an easier way. Thanks Volca!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Continuing with UI changes, &lt;a href=&#34;https://github.com/Kewlan&#34;&gt;Kewlan&lt;/a&gt; added a &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4164&#34;&gt;mute audio hotkey&lt;/a&gt;. They also fixed a bug with the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4182&#34;&gt;fullscreen hotkey&lt;/a&gt;, where the default hotkey would still function even when changed.&lt;/p&gt;
&lt;h2 id=&#34;dreams-and-reality&#34;&gt;Dreams and reality&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Project Maribel Hearn&lt;/code&gt; has been released, and is available in Mainline too! Native 32-bit Switch games are now starting to work, with some of them even being fully playable! This means that games like &lt;code&gt;New Super Mario Bros. U Deluxe&lt;/code&gt; and &lt;code&gt;Captain Toad: Treasure Tracker&lt;/code&gt; work almost perfectly and with great performance, while games like &lt;code&gt;Mario Kart 8 Deluxe&lt;/code&gt; still need more work.&lt;/p&gt;
&lt;p&gt;This has been a highly requested feature for a very long time, but implementing it required a major rewrite of the kernel, and official support for ARMv7 was needed in &lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;Dynarmic&lt;/a&gt;, our ARM JIT recompiler. This took a tremendous amount of work from several of our developers, including, but not limited to: &lt;a href=&#34;https://github.com/MerryMage&#34;&gt;Merry&lt;/a&gt;, &lt;a href=&#34;https://github.com/lioncash&#34;&gt;Lioncache&lt;/a&gt;, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt;, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt;, &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;Tobi&lt;/a&gt;, &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt;, &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt;, and many others. Special mention goes to Merry and Lioncache: they are the soul of this project, and without them we couldn&amp;rsquo;t have even started it. Several of their pull requests are &amp;ldquo;too technical&amp;rdquo; to be included in the progress reports, but it should be known that Merry and Lioncache are the main code contributors at the heart of yuzu.&lt;/p&gt;
&lt;p&gt;You may not have noticed that four months ago, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; and &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;Tobi&lt;/a&gt; laid down the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3478&#34;&gt;initial framework&lt;/a&gt; towards 32-bit support in yuzu.&lt;/p&gt;
&lt;p&gt;They accomplished this by refactoring the ARM interface to support 32-bit and 64-bit JIT backends, implementing a 32-bit ARM interface based on Citra&amp;rsquo;s ARMv6 dynarmic backend by adding CP15 coprocessor support, and implementing several 32-bit SVCs such as &lt;code&gt;GetThreadPriority32&lt;/code&gt;, &lt;code&gt;WaitSynchronization32&lt;/code&gt;, and many more.&lt;/p&gt;
&lt;p&gt;While rewriting the kernel for Prometheus, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; and &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; saw an excellent opportunity to include support for 32-bit ARMv7 CPU instructions and services. With this spark of motivation, they worked with &lt;a href=&#34;https://github.com/MerryMage&#34;&gt;Merry&lt;/a&gt; and &lt;a href=&#34;https://github.com/lioncash&#34;&gt;Lioncache&lt;/a&gt; to make the dream of 32-bit support a reality, by ramping up the implementation of various ARMv7 instructions such as &lt;code&gt;VPADD&lt;/code&gt;, &lt;code&gt;VCVT&lt;/code&gt;,  and &lt;code&gt;VSHL&lt;/code&gt; in Dynarmic, and 32-bit SVCs such as &lt;code&gt;CreateTransferMemory32&lt;/code&gt;, &lt;code&gt;MapSharedMemory32&lt;/code&gt;, and &lt;code&gt;CreateThread32&lt;/code&gt; in yuzu. There are many other ARMv7 instructions and SVCs that we cannot cover here, but the culmination of this work allowed us to get the very first 32-bit games up and running!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./toad.png&#34; title=&#34; Good performance even on low-end hardware!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-jun-2020/toad_hua53a037795929c754e1f60c8c829602c_2243215_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Good performance even on low-end hardware!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Good performance even on low-end hardware!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Additionally, the merge of this work into the Master branch also means that Multicore support is now working in Mainline! Thanks &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; for all your hard work on this! Please refer to our previous &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/&#34;&gt;May progress report&lt;/a&gt; and the dedicated &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-prometheus/&#34;&gt;Project Prometheus article&lt;/a&gt; to read more about this crucial new feature.&lt;/p&gt;
&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;With Multicore finally in Master, some of the ideas we have &amp;ldquo;in the oven&amp;rdquo; can start to take shape. &lt;code&gt;Project Apollo&lt;/code&gt; is starting to be nice and sound. And finally, I&amp;rsquo;ve heard &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; is up to something, &lt;em&gt;again&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;That’s all for now, folks! We hope to see you in our July progress report!
Special thanks to gidoly for providing screenshots.&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report May 2020</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/</link>
      <pubDate>Sun, 07 Jun 2020 03:15:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/</guid>
      <description>&lt;p&gt;Hello yuz-ers! How are you all doing?&lt;/p&gt;
&lt;p&gt;In this monthly episode of &amp;ldquo;yuzu — Trials and Tribulations,&amp;rdquo; we offer you: major rewrites, massive performance gains,
stability improvements, bug fixes and graphical corrections.
&lt;em&gt;More after the commercial break.&lt;/em&gt;&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello yuz-ers! How are you all doing?&lt;/p&gt;
&lt;p&gt;In this monthly episode of &amp;ldquo;yuzu — Trials and Tribulations,&amp;rdquo; we offer you: major rewrites, massive performance gains,
stability improvements, bug fixes and graphical corrections.
&lt;em&gt;More after the commercial break.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-worst-kept-secret&#34;&gt;The worst kept secret&lt;/h2&gt;
&lt;p&gt;It has its own &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-prometheus/&#34;&gt;article&lt;/a&gt;, and it had been guessed to hell and back before the official announcement.
&lt;code&gt;Project Prometheus&lt;/code&gt; is a proper multithreaded emulation of the 4 CPU cores the Nintendo Switch offers.
This brings a massive performance boost to users with CPUs with 4 physical cores or more, but for this to happen, a lot of groundwork was needed.
Besides changes previously discussed in past reports, old external libraries (which yuzu needs to operate) needed to be updated,
and with that, some changes were needed for our Linux users.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/jroweboy&#34;&gt;jroweboy’s&lt;/a&gt; work, yuzu now uses &lt;a href=&#34;https://conan.io/&#34;&gt;Conan&lt;/a&gt;,
helping the project &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3735&#34;&gt;manage dependencies&lt;/a&gt;, and letting Linux distributions use their native ones when possible.&lt;/p&gt;
&lt;p&gt;With the previous VMM rewrite reducing memory use, the dependencies updated, and all the groundwork done, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;
pressed the metaphorical nuclear launch button and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3955&#34;&gt;released Project Prometheus&lt;/a&gt;.
yuzu can now use up to 6 or 7 CPU threads (in ideal conditions)
compared to the previous 2 or 3. You should expect a performance boost in a lot of games, but still see some titles perform mostly the same due to being coded to only use a single thread.&lt;/p&gt;
&lt;p&gt;Now, some clarifications are needed for this change. Multicore support can’t be merged into our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-mainline&#34;&gt;Mainline&lt;/a&gt; release for now due to incompatibilities between Multicore and the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;Master&lt;/a&gt; branch of yuzu. Work is being done to resolve the conflicts, but please have patience.
Additionally, users with 2 cores, and either 2 or 4 threads, should not enable multicore as it will most likely result in a performance
loss for them due to the lack of physical cores on their CPUs. Our &lt;a href=&#34;https://yuzu-mirror.github.io/help/quickstart/#hardware&#34;&gt;hardware recommendations&lt;/a&gt;
have been updated accordingly.&lt;/p&gt;
&lt;h2 id=&#34;unreal-engine-fixes&#34;&gt;Unreal Engine fixes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; implemented &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4027&#34;&gt;rendering more than one slice of 3D textures&lt;/a&gt;, fixing the most glaring
issue in Unreal Engine 4 games, known as “the Rainbow”. This also improves the previous implementation that was used in
Xenoblade games.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./01.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/01_hu68c02814a9c40805a6f6276911f7bd80_2255367_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Your Excellency (OCTOPATH TRAVELER)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./02.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/02_hu46b9a796253ad79e835e0857de220e84_1139184_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Your Excellency (OCTOPATH TRAVELER)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Your Excellency (OCTOPATH TRAVELER)&lt;/p&gt;


&lt;h2 id=&#34;animal-crossing-new-horizons-changes&#34;&gt;Animal Crossing: New Horizons changes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; fixed &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; terrain borders in Vulkan by implementing
&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3930&#34;&gt;constant attributes&lt;/a&gt;. This is not a native extension, constant attributes have to be emulated in Vulkan as there is currently no official support for it.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./04.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/04_huaf039df4fe51f25751a4dbe9f895ebff_2342374_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Beautiful beaches, now in Vulkan too (Animal Crossing: New Horizons)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./05.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/05_hue38c3a6b0b2c360419e88546b0f46b38_2584961_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Beautiful beaches, now in Vulkan too (Animal Crossing: New Horizons)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Beautiful beaches, now in Vulkan too (Animal Crossing: New Horizons)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; implemented &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3909&#34;&gt;time zone support&lt;/a&gt;, and Windows users will find that yuzu automatically detects their time zone. For those not on Windows (or want to spice up their life), you can manually change your system time via the &amp;ldquo;Custom RTC&amp;rdquo; option in the System settings. Previously, yuzu always assumed the user was located in the GMT+0 time zone.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; also improved the &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3665&#34;&gt;saving mechanism&lt;/a&gt;. Most games save their data in each user profile, but &lt;code&gt;Animal Crossing: New Horizons&lt;/code&gt; does it via a “device” profile, so yuzu had to accommodate for that.&lt;/p&gt;
&lt;h2 id=&#34;xenoblade-specific-fixes&#34;&gt;Xenoblade specific fixes&lt;/h2&gt;
&lt;p&gt;Rendering bugs are abundant in Xenoblade games due to the complexity of their engine, and they are not trivial to solve.
However, with the help of &lt;a href=&#34;https://github.com/gdkchan&#34;&gt;gdkchan&lt;/a&gt; and using this &lt;a href=&#34;https://github.com/Ryujinx/Ryujinx/pull/1277&#34;&gt;Pull Request&lt;/a&gt; from &lt;a href=&#34;https://github.com/Ryujinx/Ryujinx&#34;&gt;Ryujinx&lt;/a&gt;, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; fixed one of the major rendering issues in &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; related to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3996&#34;&gt;front face flipping&lt;/a&gt;. Additional &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3991&#34;&gt;improvements to texture depth samplings&lt;/a&gt; resolved some rendering glitches, such as the clouds and start menu. Additionally, a better handling of &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4012&#34;&gt;mipmap overlaps&lt;/a&gt; solved the constantly moving textures the games previously had. You can see the results below.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./06.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/06_hu08449bb71dd3e3a414afd604db068078_732247_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Who said yuzu can’t run JRPGs? (Xenoblade Chronicles 2)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./07.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/07_hu983d50849e9dcebc8188ba9bf67cb49b_2231832_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Who said yuzu can’t run JRPGs? (Xenoblade Chronicles 2)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Who said yuzu can’t run JRPGs? (Xenoblade Chronicles 2)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; also optimized the performance in Xenoblade games, one method of which was &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3999&#34;&gt;profiling the texture cache&lt;/a&gt; line by line and finding where it bottlenecks. By improving the code, you get a faster frametime, which translates
to better performance.&lt;/p&gt;
&lt;p&gt;Another way, and not an expected one, was to &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4007&#34;&gt;log less information&lt;/a&gt;. This avoids saturating the GPU thread, giving more room to
actual processing and rendering.&lt;/p&gt;
&lt;h2 id=&#34;general-performance-improvements&#34;&gt;General performance improvements&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; wrote a new &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4009&#34;&gt;Macro JIT&lt;/a&gt; (Just-in-Time) to improve the performance of games that spend too
much time in the macro interpreter. This should be a global performance boost independent of GPU vendor or API.&lt;/p&gt;
&lt;p&gt;When &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; improved yuzu’s ASTC decoding, he also added a rule to use native
hardware decoding whenever possible. The Nvidia driver tells yuzu it supports ASTC decoding, but as it turns out, they actually use an internal software decoder that is much slower than our own implementation. &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/4014&#34;&gt;Ignoring the Nvidia driver-level software decoder&lt;/a&gt; produced a massive
performance improvement when facing the dreaded ASTC texture format in games. It will still be immediate with Intel GPUs,
as no software optimizations will beat a dedicated hardware decoder.&lt;/p&gt;
&lt;h2 id=&#34;bug-fixes-and-improvements&#34;&gt;Bug fixes and improvements&lt;/h2&gt;
&lt;p&gt;Vulkan development is an ongoing process in yuzu, and it has stability problems as expected of a relatively new and complex feature.
&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; made a couple of &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3905&#34;&gt;critical changes to Vulkan and Asynchronous GPU&lt;/a&gt;, improving stability
considerably.&lt;/p&gt;
&lt;p&gt;Speaking of Vulkan, many 2D games had their sprites flipped or completely wrong, and once again, we currently lack the
extension required to fix this. Therefore, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; implemented &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3885&#34;&gt;support for &lt;code&gt;NV_viewport_swizzle&lt;/code&gt;&lt;/a&gt;.
This Nvidia-exclusive extension is the only way to solve this problem in a clean manner for now, but a universal method is being
developed.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./10.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/10_hu5bc37863ae395e8f63b469db84011c07_84752_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Quack (Duck Game)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./11.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/11_huc121b961c859fb588ca03fd6434d8bcd_118199_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Quack (Duck Game)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Quack (Duck Game)&lt;/p&gt;


&lt;p&gt;The updated libraries (that the migration to Conan brought us) also gave us a new version of the &lt;a href=&#34;https://github.com/kinetiknz/cubeb&#34;&gt;cubeb&lt;/a&gt; audio engine which adds
support for 6 channel audio, allowing &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; to add &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3827&#34;&gt;support for surround sound&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our good shark, &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt;, also fixed &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3926&#34;&gt;keyboard emulation support&lt;/a&gt;, so expect compatible games to have proper direct input from your keyboards now.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; implemented the missing support for &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3839&#34;&gt;&lt;code&gt;R8G8UI&lt;/code&gt; textures&lt;/a&gt;, fixing both the performance problems and saving crashes that &lt;code&gt;The Walking Dead&lt;/code&gt; games experienced.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./08.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/08_hu2ca46b7ecc062c4514f50dddad426bb5_2093679_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Thank you Toxa for the screenshot (The Walking Dead: The Final Season)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Thank you Toxa for the screenshot (The Walking Dead: The Final Season)&lt;/p&gt;


&lt;p&gt;Although objectively a small issue, the mouse cursor didn&amp;rsquo;t hide when running yuzu in full screen, causing a subjectively significant annoyance. Thankfully, &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;Tobi&lt;/a&gt; implemented an &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3892&#34;&gt;option to automatically hide the mouse&lt;/a&gt; once it has been inactive after some time.&lt;/p&gt;
&lt;h2 id=&#34;an-elegant-feature-of-a-more-civilized-age&#34;&gt;An elegant feature of a more civilized age&lt;/h2&gt;
&lt;p&gt;Recently released in the Early Access build, and coming soon to Mainline, is support for &lt;code&gt;assembly shaders&lt;/code&gt; (&lt;code&gt;GLASM&lt;/code&gt;), usually
referred to as &lt;code&gt;ARB shaders&lt;/code&gt;.
 &lt;/p&gt;
&lt;p&gt;A couple decades ago, there was no common language for the then newly added programmable shading units in GPUs, so the &lt;code&gt;OpenGL Architecture Review Board&lt;/code&gt; decided to create a proper standardised shading language they called &lt;code&gt;GLASM&lt;/code&gt;. In broader terms, this is an assembly language used to communicate with the GPU. This makes it very difficult to work with, and the difficulty is only exacerbated by the limited set of debugging tools available. Furthermore, the language was developed with the hardware limitations of the time in mind.
In the present, &lt;code&gt;GLASM&lt;/code&gt; has been mostly deprecated in favour of easier-to-work-with, high-level shader representations like &lt;code&gt;GLSL&lt;/code&gt; or &lt;code&gt;SPIR-V&lt;/code&gt;.
While this means faster results for game developers due to less time spent looking at the code, it also has the disadvantage of being far slower for emulators that have to constantly intercept, decode, and recompile shaders on the fly.
 &lt;/p&gt;
&lt;p&gt;In the beginning, support for &lt;code&gt;GLASM&lt;/code&gt; started as just an experiment. Armed with &lt;a href=&#34;https://apitrace.github.io/&#34;&gt;apitrace&lt;/a&gt; as his only debug tool, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; set to his task.
Luckily, and for no apparent sane reason, Nvidia still maintains support for such an old feature, even on the latest OpenGL versions. As such, support for &lt;code&gt;GLASM&lt;/code&gt; soon became a reality and with this initial &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/3964&#34;&gt;assembly shading&lt;/a&gt; support in place, Nvidia OpenGL users can enjoy extremely fast shader compilation times.
 &lt;/p&gt;
&lt;p&gt;Due to being closer to the native hardware of the Nintendo Switch, we can also expect some precision fixes, with more coming in the future.
 &lt;/p&gt;
&lt;p&gt;Unfortunately, &lt;code&gt;GLASM&lt;/code&gt; has some limitations. To list some of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This is an Nvidia and OpenGL only feature — other vendors (AMD and Intel) only offer support for the specific assembly shaders that old games require and this is highly unlikely to change in the future.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Currently, some games experience bugs that will need to be ironed out, such as: &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt;, &lt;code&gt;Astral Chain&lt;/code&gt;, and &lt;code&gt;The Legend of Zelda: Link’s Awakening&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are architecture specific bugs; a Pascal GPU may face different issues than a Turing or Kepler GPU.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./12.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/12_hu6c5aba462fd289696cbda2635b51a0b8_43219_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;You can see the progress from simple things… (Cave Story)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./13.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/13_hu7cfea12d61672bf73678f7207d1e252d_234117_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;You can see the progress from simple things… (Cave Story)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;You can see the progress from simple things… (Cave Story)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./14.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-may-2020/14_hu122ce749756c68d2d01df4646c083c54_1773825_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;To more complex tests (Fire Emblem Warriors)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;To more complex tests (Fire Emblem Warriors)&lt;/p&gt;



&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Oj5ntdszfyQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;future-projects&#34;&gt;Future projects&lt;/h2&gt;
&lt;p&gt;I can’t say much here, but there is something going on with both &lt;code&gt;Project Viper&lt;/code&gt; and &lt;code&gt;Project Hearn&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;That’s all for now, folks! See you in the June article!
Special thanks to BSoD Gaming for the comparative &lt;code&gt;GLASM&lt;/code&gt; video, and Toxa for providing some screenshots.&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report April 2020</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/</link>
      <pubDate>Thu, 28 May 2020 12:00:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/</guid>
      <description>&lt;p&gt;Hello awesome yuz-ers! We hope you are all doing well.
We have lots of material to cover in this April progress report: some new additions, bug and regression fixes, and the groundwork for future improvements that affect both Mainline and Early Access. But first, let&amp;rsquo;s discuss a few really big changes.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello awesome yuz-ers! We hope you are all doing well.
We have lots of material to cover in this April progress report: some new additions, bug and regression fixes, and the groundwork for future improvements that affect both Mainline and Early Access. But first, let&amp;rsquo;s discuss a few really big changes.&lt;/p&gt;
&lt;h2 id=&#34;the-big-changes&#34;&gt;The Big Changes&lt;/h2&gt;
&lt;p&gt;This month brought us huge improvements to compatibility, fidelity and resource management.
Our master of serendipity, &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt;, fixed a softlock in &lt;code&gt;FINAL FANTASY VIII Remastered&lt;/code&gt;.
What he didn’t know at the time is that this small fix also made &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; playable. Thanks to this, you can now enjoy local multiplayer battles with your friends, either locally or even via Parsec!&lt;/p&gt;
&lt;p&gt;For quite a while, Nvidia Turing users (GTX 16 series and RTX 20 series GPUs) had to deal with several rendering bugs, like black and white terrain in &lt;code&gt;Fire Emblem: Three Houses&lt;/code&gt;, or black areas in &lt;code&gt;Super Monkey Ball: Banana Blitz HD&lt;/code&gt;.
&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; fixed most of them by improving the accuracy of the shader decoder. This also fixes some bugs on older Nvidia GPUs too.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./29.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/29_hu1c387f36a7b26f5836f1311f502b7a95_730796_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Monochrome no more (Fire Emblem: Three Houses)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./30.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/30_hu772b32b3317bb80b3b6d5eb83dbb52d6_2666273_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Monochrome no more (Fire Emblem: Three Houses)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Monochrome no more (Fire Emblem: Three Houses)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./27.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/27_hu8e85566b403055c51a5288990c23023a_1687805_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No greasy black peels (Super Monkey Ball: Banana Blitz HD)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./28.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/28_hue1c1ad1e83b6735416912c0127e48f00_2207792_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;No greasy black peels (Super Monkey Ball: Banana Blitz HD)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;No greasy black peels (Super Monkey Ball: Banana Blitz HD)&lt;/p&gt;


&lt;p&gt;Speaking of shader decoding accuracy, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; improved the precision of the &lt;code&gt;HADD2&lt;/code&gt; and &lt;code&gt;HMUL2&lt;/code&gt; instructions, fixing some long standing bugs like the fog in &lt;code&gt;Fire Emblem: Three Houses&lt;/code&gt; and the excessive brightness in most maps in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./33.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/33_hu6acd07259f34cae7f0101f5e27c7a505_2829551_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;You can now take off your sunglasses (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./34.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/34_hu18d1f8715d32b90e92241497a222210f_3213871_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;You can now take off your sunglasses (Super Smash Bros. Ultimate)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;You can now take off your sunglasses (Super Smash Bros. Ultimate)&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./15.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/15_hu829916c4e1efc27c2b6ea7afea89f263_1252717_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From steampunk, to the proper medieval fantasy setting (Fire Emblem: Three Houses)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./16.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/16_hu7e57abd66240737ffb6c54023f7b4570_1676323_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From steampunk, to the proper medieval fantasy setting (Fire Emblem: Three Houses)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;From steampunk, to the proper medieval fantasy setting (Fire Emblem: Three Houses)&lt;/p&gt;


&lt;p&gt;We talked about this in its own &lt;a href=&#34;https://www.patreon.com/posts/35856792&#34;&gt;article&lt;/a&gt;, but it deserves a mention here:
&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; rewrote the Virtual Memory Manager (known internally as &lt;code&gt;Project Epimetheus&lt;/code&gt;), which drastically reduced the amount of RAM games use, and helped Multicore support (also known as&lt;code&gt;Project Prometheus&lt;/code&gt;) become a reality.&lt;/p&gt;
&lt;p&gt;One of the features in yuzu, and a common one in other emulators, is the ability to separate the rendering thread from the main emulation thread. This makes better use of the CPU&amp;rsquo;s resources, while also helping deliver better performance.
That is exactly what Asynchronous GPU does in yuzu. Thanks to &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;, our Emulated GPU improved drastically, achieving better performance, stability, and accuracy.
These changes introduce the option to adjust the GPU accuracy level while playing.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./31.png&#34; title=&#34; Performance may be reduced with more accurate levels&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/31_hu874a6b174b586e4799eca14c8c0a620a_14302_635x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Performance may be reduced with more accurate levels&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Performance may be reduced with more accurate levels&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./v1.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./v2.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Normal accuracy (left) and High accuracy (right) (Super Mario Odyssey)&lt;/p&gt;


&lt;h2 id=&#34;one-line-to-fix-em-all&#34;&gt;One Line to Fix &amp;rsquo;em All&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Toki Tori&lt;/code&gt; had sound problems that were related to a floating point instruction, and while investigating the issue,
&lt;a href=&#34;https://github.com/MerryMage&#34;&gt;Merry&lt;/a&gt; and &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; were worried that it may be a problem in &lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;Dynarmic&lt;/a&gt;, our ARM to x64 recompiler.
It turns out the problem was just a bad default value in yuzu’s Dynarmic configuration.
Remember what we said about bunnei and serendipity? With a simple one line change, a plethora of bugs were resolved! A special mention goes to &lt;code&gt;Pokémon Sword/Shield&lt;/code&gt;, as that single line fixed the softlock that plagued us for months and made the game fully playable!&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s only a &lt;em&gt;partial&lt;/em&gt; list of fixes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Pokémon Sword/Shield&lt;/code&gt; - All softlocks fixed, running in tall grass fixed, hair salons fixed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;The Legend of Zelda&lt;/code&gt;: Link&amp;rsquo;s Awakening - Miniature placing fixed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Toki Tori&lt;/code&gt;, &lt;code&gt;Final Fantasy 7&lt;/code&gt;, &lt;code&gt;Diablo 3&lt;/code&gt;, &lt;code&gt;Project DIVA MegaMix&lt;/code&gt; - Distorted audio fixed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Team Sonic Racing&lt;/code&gt; - Physics fixed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Onimusha Warriors&lt;/code&gt;, &lt;code&gt;Tales of Vesperia&lt;/code&gt;, &lt;code&gt;The Messenger&lt;/code&gt; - Game logic fixed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Skyrim&lt;/code&gt; - Audio looping fixed, game progresses further&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Oninaki&lt;/code&gt; - Elevator softlock fixed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;All Unreal Engine 4 games&lt;/code&gt; - Motion jitter fixed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt; - Fighter select jitter / flickers fixed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Starlink&lt;/code&gt; - Softlock fixed, game progresses further&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./32.png&#34; title=&#34; This sofa is no longer our enemy (Pokémon Sword/Shield)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/32_hu00d73d1c5fefdcd338d5aa6f12727654_2125108_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; This sofa is no longer our enemy (Pokémon Sword/Shield)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; This sofa is no longer our enemy (Pokémon Sword/Shield)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;bug-fixes-and-improvements&#34;&gt;Bug fixes and improvements&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; used some Kirby magic and implemented the first steps to get World of Light
working in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;.
Even though it doesn’t work yet, the first step is always the most important one!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Kewlan&#34;&gt;Kewlan&lt;/a&gt; strikes once again with more quality-of-life UI improvements.
This time, they&amp;rsquo;ve fixed the placement of button mappings in the input settings for single joycons.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./03.png&#34; title=&#34; From this&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/03_hu357ec922ff78c325504c869013d98453_4149_369x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; From this&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; From this&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./05.png&#34; title=&#34; To this&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/05_hue994b5aea6167cafbf51207b2347098d_3907_365x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; To this&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; To this&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Not stopping there, Kewlan added a slider for the analog stick modifier, allowing keyboard users to half press the emulated
sticks. Additionally, the sliders now show percentages, making them easier to read.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./07.png&#34; title=&#34; Precision&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/07_hu031754dc94e2eaf02f8c86aab7420009_12194_391x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Precision&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Precision&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;And to top it off, he also added a way to restore the default value for a hotkey. An important part of the user experience is having a tidy and useful interface.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./08.png&#34; title=&#34; More customization&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/08_hu082283d31a9f1bb2515d6b460b2f5a5e_18327_457x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; More customization&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; More customization&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;Tobi&lt;/a&gt; fixed some of the internal workings of the input settings, and improved the games list sorting process. He also reworded some of our error and warning popups to be more user friendly.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./19.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/19_hu2e74790b89be0a5abc517fcc17d7bf16_13362_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The old errors&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./21_b.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/21_b_hu88916568adb7a043d3f5269192d71c7f_8808_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The old errors&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The old errors&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./20_b.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/20_b_huf49f42fdd1283251a8d91751553f4d7a_8155_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The new errors&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./22_b.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/22_b_hu734d13a26ac7a5aca7a017500560473f_7489_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The new errors&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The new errors&lt;/p&gt;


&lt;p&gt;Waluigi is not part of Smash, yet, but that doesn&amp;rsquo;t mean he can&amp;rsquo;t enjoy some limelight.
&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; decided to help the purple fellow and fixed the shadows in &lt;code&gt;Mario Tennis Aces&lt;/code&gt;.
The border color of textures in this game are in sRGB format, and we had some small precision errors.
Now you can enjoy those intense matches!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./09.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/09_hu2cd678affd34c60a8c1532f398dbe061_2304772_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;WAA! (Mario Tennis Aces)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./10.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/10_hu5075ef5a11e40e650ecfb5b4aeb72520_2462206_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;WAA! (Mario Tennis Aces)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;WAA! (Mario Tennis Aces)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; added indexed QUADS to Vulkan, this brings major graphical fixes to &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; and &lt;code&gt;Fast RMX&lt;/code&gt;! Some barrier fixes are still required to get &lt;code&gt;Xenoblade Chronicles 2&lt;/code&gt; rendering properly, but work on these rendering fixes is on-going.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./23.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/23_hu03958a2d5124a68158ceb78d6a42239e_20631_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From a dark void to RPG (Xenoblade Chronicles 2)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./24.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/24_hue36bd19c2254c20522554c6d81776f87_3177617_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;From a dark void to RPG (Xenoblade Chronicles 2)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;From a dark void to RPG (Xenoblade Chronicles 2)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; implemented some optimizations to the GPU command list, improving performance
in Diablo 3 and many other games.
He also ported a &lt;a href=&#34;https://github.com/Ryujinx/Ryujinx&#34;&gt;Ryujinx&lt;/a&gt; hack made by &lt;a href=&#34;https://github.com/gdkchan&#34;&gt;gdkchan&lt;/a&gt;, &lt;code&gt;Fast GPU Time&lt;/code&gt;. This helps force games to render at their maximum resolution, when they would otherwise dynamically lower it due to not hitting their target framerate. Some examples include &lt;code&gt;ARMS&lt;/code&gt;, &lt;code&gt;Super Mario Odyssey&lt;/code&gt;, &lt;code&gt;Splatoon 2&lt;/code&gt;, &lt;code&gt;Luigi’s Mansion 3&lt;/code&gt;, and &lt;code&gt;Mario Tennis Aces&lt;/code&gt;.
This is not only a graphical improvement, but also a way to avoid very high memory usage in dynamic resolution games.
We still recommend the use of resolution mods, but if such mods are not available for your game, Fast GPU Time will help you.
A good example of this is &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; with the latest 1.6.0 update.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./35_b.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/35_b_hu9d0923b791931155ddc089fb60ae6566_2704204_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Milk baths are over Link, go save Zelda or something (Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./36_b.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/36_b_huf4216eaae252d312688400257e01b494_3303545_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Milk baths are over Link, go save Zelda or something (Legend of Zelda: Breath of the Wild)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Milk baths are over Link, go save Zelda or something (Legend of Zelda: Breath of the Wild)&lt;/p&gt;


&lt;h2 id=&#34;fixed-regressions&#34;&gt;Fixed regressions&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Its-Rei&#34;&gt;Rei&lt;/a&gt; found a 3D texture regression in the Wooden Kingdom of &lt;code&gt;Super Mario Odyssey&lt;/code&gt; that was affecting both Vulkan and OpenGL.
&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; investigated it and found that there was a bug in the texture cache.
Now it works as intended again, with no more fog stripes on trees.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./17.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/17_hu939536a217955857c4f75e3d7b91a28f_1143396_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;As it should be (Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./18.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/18_hue7802322f4cfe58e9d60ec68535c9d43_988284_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;As it should be (Super Mario Odyssey)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;As it should be (Super Mario Odyssey)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; fixed a regression found in &lt;code&gt;Puyo Puyo Tetris&lt;/code&gt; while running in OpenGL.
With it in place, character portraits have their proper white border rendered.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./01.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/01_hua42d190de8642d5f029bd6b98b2e77a8_100257_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Better, right? (Puyo Puyo Tetris)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./02.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/02_hu74420c7672f04a87ea1fa8bc32ead37c_81105_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Better, right? (Puyo Puyo Tetris)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Better, right? (Puyo Puyo Tetris)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; also fixed a regression in &lt;code&gt;Kirby Star Allies&lt;/code&gt;, which restored the shading and life to this cute game.
Kirby deserves a colorful world for his adventures!&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./25.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/25_hue5f718bcb836a91df26c2104dd4b6527_3897531_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Poyo! (Kirby Star Allies)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./26.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-apr-2020/26_hu134fd2fb7363546a46cf2142d7b178be_3938667_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Poyo! (Kirby Star Allies)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Poyo! (Kirby Star Allies)&lt;/p&gt;


&lt;h2 id=&#34;future-plans&#34;&gt;Future plans&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; also removed the need to have a Qt build with Vulkan support in Linux, which will help get Vulkan support in our Ubuntu pre-built packages.&lt;/p&gt;
&lt;p&gt;That’s all for now, folks! See you in the May report!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>New Feature Release - Prometheus</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-prometheus/</link>
      <pubDate>Sat, 09 May 2020 05:37:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-prometheus/</guid>
      <description>&lt;p&gt;Hello there, yuzu fans!
We are very excited to share the news of another major feature release.
Thanks to the efforts of our dev Blinkhawk, yuzu now supports &lt;code&gt;Multicore CPU emulation&lt;/code&gt;.
Hop right in, to read more about it!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hello there, yuzu fans!
We are very excited to share the news of another major feature release.
Thanks to the efforts of our dev Blinkhawk, yuzu now supports &lt;code&gt;Multicore CPU emulation&lt;/code&gt;.
Hop right in, to read more about it!&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;In Greek mythology, Prometheus is a Titan that aided humanity by teaching how to make fire.
In modern society, it symbolizes the strive for scientific knowledge.
The Prometheus Project is about that - the journey to new emulation techniques.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Since we cannot really show performance boosts in pictures, here is a video by BSoD Gaming that takes you through all the improvements.

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/rbNd67vIO78&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;what-is-multicore-cpu-emulation&#34;&gt;What is Multicore CPU emulation?&lt;/h2&gt;
&lt;p&gt;As many of you might know, yuzu is considered a HLE (high level emulation) emulator.
This means that instead of running the real Switch OS (known as &lt;code&gt;Horizon&lt;/code&gt;), yuzu has recreated its own version of the OS, built entirely from the ground up.
Like your PC, the Switch has multiple cores (4, actually), and the &lt;code&gt;Horizon OS&lt;/code&gt; can run multiple tasks in parallel on these cores using a kernel construct known as a &lt;a href=&#34;https://simple.wikipedia.org/wiki/Thread_(computer_science)&#34;&gt;thread&lt;/a&gt;.
However, due to limitations of our old kernel design taken from Citra, yuzu was actually emulating this behavior using a single core on your host PC!
This had led to an absurdly high CPU requirement for users.&lt;/p&gt;
&lt;p&gt;So, what is &lt;code&gt;&amp;quot;Multicore CPU emulation&amp;quot;&lt;/code&gt;?
Put simply, instead of emulating the CPU on a single thread yuzu will now emulate the CPU using multiple threads; &lt;code&gt;4&lt;/code&gt; to be precise - one for each Switch CPU core.
Although it might sound simple or easy, it is nevertheless the biggest undertaking this project has seen up until now.&lt;/p&gt;
&lt;h2 id=&#34;yuzu-cpu-emulation&#34;&gt;yuzu CPU emulation&lt;/h2&gt;
&lt;p&gt;yuzu&amp;rsquo;s initial CPU emulation and kernel were heavily based on Citra&amp;rsquo;s.
The kernel emulated the external behavior of the Switch&amp;rsquo;s kernel but vastly differed from the Switch OS.
Instead of saving contexts and switching from one guest thread to another within the kernel, we used a mechanism within Citra&amp;rsquo;s kernel that emulated the same behavior but with a complex system of &lt;code&gt;stops&lt;/code&gt; and &lt;code&gt;callbacks&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Not only that, but in the typical tradition of previous emulators, yuzu used something called a &lt;code&gt;cycle timer&lt;/code&gt;.
A cycle timer is a mechanism to emulate &lt;code&gt;time&lt;/code&gt; on consoles by counting each guest instruction executed and adding it to global &lt;code&gt;CPU ticks&lt;/code&gt;.
These ticks can then be transformed into time units like nanoseconds by using the guest&amp;rsquo;s CPU frequency.&lt;/p&gt;
&lt;h3 id=&#34;drawbacks&#34;&gt;Drawbacks&lt;/h3&gt;
&lt;p&gt;Citra&amp;rsquo;s model was perfectly fine for single core emulation.
It was accurate, simple, and worked perfectly for the 3DS as it used only one of its two cores for apps/games.
However, in the case of yuzu, this wouldn&amp;rsquo;t hold true.&lt;/p&gt;
&lt;p&gt;The Switch is a much more complicated and modern system that pushes 4 CPU cores, where 3 are used for apps/games.
Not only that, but the scheduling is more robust and can be used in some more interesting and more complicated ways.
Using Citra&amp;rsquo;s model for scheduling was all possible in yuzu but it had a few flaws of its own:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The code didn&amp;rsquo;t match the Switch OS and even though it had the same behavior, it was hard to keep track of changes and replicate them.&lt;/li&gt;
&lt;li&gt;The code was very complex as there was a callback for everything and was hard to maintain.&lt;/li&gt;
&lt;li&gt;This model would be extremely hard to run on multiple host threads.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smash.png&#34; title=&#34; Super Smash Bros. Ultimate&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-prometheus/smash_hu101f8f5629c33cc11c22bc644a6e8b48_1889482_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Super Smash Bros. Ultimate&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Super Smash Bros. Ultimate&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;prometheus&#34;&gt;Prometheus&lt;/h2&gt;
&lt;p&gt;You might&amp;rsquo;ve heard rumors and whispers about this in the community recently.
&lt;code&gt;Prometheus&lt;/code&gt; is the internal codename for this feature&amp;rsquo;s development and it is a total rework of three things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kernel scheduling&lt;/li&gt;
&lt;li&gt;Boot management&lt;/li&gt;
&lt;li&gt;CPU management&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Prometheus&lt;/code&gt; aims to ensure that emulation behaves the same as on the Switch while matching the code with the Switch&amp;rsquo;s original OS code.
And, as a by-product, host multicore support using host timing has been added to yuzu.
Host timing is just yuzu using the host&amp;rsquo;s (user&amp;rsquo;s) internal clock for timing.&lt;/p&gt;
&lt;p&gt;The multicore feature of &lt;code&gt;Prometheus&lt;/code&gt; is a beast in terms of thread handling.
Originally yuzu used at best &lt;code&gt;2&lt;/code&gt; threads: one for the CPU and one for the emulated GPU.
Technically we also use a thread each for the UI, logging, the host GPU driver, and the host audio driver, but let&amp;rsquo;s ignore them for the time being.&lt;/p&gt;
&lt;p&gt;With multicore, there are now &lt;code&gt;6&lt;/code&gt; threads in use: four for the CPU, one for the timer, and one for the emulated GPU.
It is worth noting that CPU core 4 is rarely used.
Of these 6, effectively 5 threads have considerable use but not all will be running constantly.&lt;/p&gt;
&lt;h3 id=&#34;planning&#34;&gt;Planning&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Prometheus&lt;/code&gt; was a big undertaking that was set in two phases: planning phase and development phase.
The planning phase was all about studying our current setup to make it work under this new scheme.
This happened roughly over 8 months, and was mostly just research and brainstorming.&lt;/p&gt;
&lt;p&gt;During this phase, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; encountered multiple challenges and considerations for development.
He started studying other emulators that already did multicore emulation such as Cemu, RPCS3, and Ryujinx.&lt;/p&gt;
&lt;p&gt;These emulators all differed in their approaches to multicore.
Some used Fibers for guest threads, 1:1 guest-host kernel threads, cycle timing, or host timing.
In computer science, Fibers are lightweight threads of execution (&lt;a href=&#34;https://en.wikipedia.org/wiki/Fiber_(computer_science)&#34;&gt;Wikipedia&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For yuzu, we initially planned to use Fibers and cycle timers.
We chose Fibers over kernel threads because changing a Fiber is at worst 50 host CPU cycles, whereas a kernel thread can be thousands of cycles and there&amp;rsquo;s no guarantee that the host OS will start running it right away.&lt;/p&gt;
&lt;p&gt;In the case of cycle timers for yuzu multicore, they ended up being quite a pain.
Cycle timers have many advantages over host timers:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;They are deterministic,&lt;/li&gt;
&lt;li&gt;They don&amp;rsquo;t leak the host state, and&lt;/li&gt;
&lt;li&gt;They always advance for every instruction that Cycle timers are run.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We tried many theoretical models for multicore cycle timers and they all were pretty hard to set up while still having flaws.
Sadly, cycle timers don&amp;rsquo;t work too great for multicore settings, because it is very hard to keep all the cores advancing at the same pace and to emulate idling accurately.
For all these reasons, we opted for host timing instead.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bayo.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-prometheus/bayo_hu19299866e2cf58365e376d05984f745f_2432767_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Bayonetta 2&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bayo2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-prometheus/bayo2_hu675859afa04abcaf1cd2c00333877b20_1663252_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Bayonetta 2&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bayo3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-prometheus/bayo3_hue187bf6f8d5b0cd2a83687ca303a3bd3_2726965_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Bayonetta 2&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Bayonetta 2&lt;/p&gt;


&lt;h3 id=&#34;development---issues&#34;&gt;Development - Issues&lt;/h3&gt;
&lt;p&gt;Development started on February 1st of 2020.
The first thing &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; did was to implement &lt;a href=&#34;https://en.wikipedia.org/wiki/Spinlock&#34;&gt;Spinlocks&lt;/a&gt;, Fibers, and host timing.
Afterwards, he went ahead with the massive overhaul.&lt;/p&gt;
&lt;p&gt;As he started the overhaul, the first issue he encountered was that for some reason yuzu was creating and destroying JITs (just-in-time compilers).
Thus, whenever we resumed code from a guest thread and it went back to the JIT, it would hard crash.
This was fixed by caching the JITs depending on the state of the page table, instead of creating a JIT every time.
This way we could also avoid creating more JITs than necessary.&lt;/p&gt;
&lt;p&gt;The second issue occurred on booting the first homebrew on multicore, where we found that guest vsync was messed up.
By redesigning the server session we were able to identify the cause and fix it.&lt;/p&gt;
&lt;p&gt;Here is where things started getting interesting.
&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; implemented Condition Variables and Mutexes, which are the base syncing mechanisms in any multithreaded environment, and found an issue with how our JIT functions.
Our JIT was heavily designed to work like Citra&amp;rsquo;s and it expected that on any &lt;code&gt;SVC (Supervisor call)&lt;/code&gt; call to kernel, the code returned back afterwards.&lt;/p&gt;
&lt;p&gt;Under the new architecture, a thread could easily call an &lt;code&gt;SVC&lt;/code&gt; and be paused there, while another thread started running on that same JIT, thus causing a conflict.
The easy solution was that instead of making a JIT per core, we would make a JIT per thread.
This solution, however, costs us additional memory usage.&lt;/p&gt;
&lt;p&gt;After fixing these issues, we were finally able to boot &lt;em&gt;Super Mario Odyssey&lt;/em&gt; on multicore, but many games were still soft-locking due to an old bug we thought eradicated: &lt;code&gt;Mutex Corruption&lt;/code&gt;.
Mutex Corruption happens due to issues with exclusive memory handling in ARMv8.
As it turned out, &lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;dynarmic&lt;/a&gt; had to be modified to fix it.&lt;/p&gt;
&lt;p&gt;After looking into it, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; realized exclusive memory in &lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;dynarmic&lt;/a&gt; was prone to a race condition when the exclusive address was written by a non-exclusive write.
The solution was to save the current value on exclusive read and then atomic exchange it with a new value on exclusive write.
By fixing this, most of the games were able to go in-game and many of them were fully playable.&lt;/p&gt;
&lt;p&gt;Two games had interesting bugs on multicore: &lt;code&gt;Luigi&#39;s Mansion 3&lt;/code&gt; &amp;amp; &lt;code&gt;Hyrule Warriors&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Luigi&#39;s Mansion 3&lt;/code&gt; had an issue in which two threads, &lt;code&gt;A&lt;/code&gt; &amp;amp; &lt;code&gt;B&lt;/code&gt;, were running on cores 0 and 1 and after some scheduling, &lt;code&gt;B&lt;/code&gt; was rescheduled to core 0 and &lt;code&gt;A&lt;/code&gt; to core 1.
But a thread cannot start running on a new core until it is liberated (freed).
So core 0 scheduler was holding &lt;code&gt;A&lt;/code&gt; and waiting for &lt;code&gt;B&lt;/code&gt; to be freed, while core 1 scheduler was holding &lt;code&gt;B&lt;/code&gt; and waiting for &lt;code&gt;A&lt;/code&gt; to be freed, thereby causing a deadlock.
The solution was that instead of exchanging threads on scheduling switch, we free the current thread and switch to an “intermediary” thread and then from there proceed to the next thread.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./lm3.png&#34; title=&#34; Luigi&amp;#39;s Mansion 3&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-prometheus/lm3_hubad3a22faa814b510ae136b0698635f6_1703373_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Luigi&amp;#39;s Mansion 3&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Luigi&amp;#39;s Mansion 3&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Hyrule Warriors&lt;/code&gt; had an issue that was caused by host timing.
Our host timing implementation was based on Cemu&amp;rsquo;s approach and used x64 architecture&amp;rsquo;s hardware timer directly.
This timer is way more accurate than ARMv8&amp;rsquo;s hardware timer present in the Switch.&lt;/p&gt;
&lt;p&gt;The game soft locked at a point because a thread infinitely looped on a &lt;code&gt;TimedWait&lt;/code&gt; of 30 nanoseconds.
This function did some time calculations and later checked with the current time.
If the timeout wasn&amp;rsquo;t reached at that moment, an &lt;code&gt;SVC&lt;/code&gt; was called which paused the thread for some time and let the next thread run, effectively causing a &lt;code&gt;yield&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the Switch&amp;rsquo;s hardware, the timer&amp;rsquo;s accuracy isn&amp;rsquo;t too great and a &lt;code&gt;TimedWait&lt;/code&gt; of 30 nanoseconds always resulted in the thread calling the &lt;code&gt;SVC&lt;/code&gt;.
Our host timer, however, was way more accurate and that function would never call the &lt;code&gt;SVC&lt;/code&gt;.
The solution, ironically, was to reduce the accuracy of our host timer a bit, to better match actual hardware.&lt;/p&gt;
&lt;p&gt;Another interesting challenge was implementing pausing/resuming in multicore.
As you know, you can pause and resume yuzu in our current versions.
This was simple before because emulation occurred in steps and you just had to stop on the next step.
But on multicore, emulation is continuous and unmanaged in the same sense.&lt;/p&gt;
&lt;p&gt;Thus, implementing this was very hard due to how multicore scheduling worked.
The original solution was to modify scheduling to support it but that proved very complicated to do.
After a while, we figured out a pretty easy solution without having to modify anything.
We would create a kernel thread for each core and make that kernel thread pass control from and to the CPU Manager to the emulation.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./acnh.png&#34; title=&#34; Animal Crossing: New Horizons&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-prometheus/acnh_hud544a227aae853be9bb13f0d81072e1f_1500385_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Animal Crossing: New Horizons&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Animal Crossing: New Horizons&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;what-to-expect-with-games&#34;&gt;What to expect with games?&lt;/h2&gt;
&lt;p&gt;Many of you may be eager for multicore but have in mind that there are other bottlenecks as well.
Not every game utilizes multithreading effectively and makes the most use of the Switch&amp;rsquo;s CPU.
Some games, like &lt;code&gt;Super Mario Odyssey&lt;/code&gt;, barely use cores 1 &amp;amp; 2, by doing all processing in core 0, effectively making them gain nothing from multicore.
However, games like &lt;code&gt;Breath of The Wild&lt;/code&gt; see &lt;em&gt;some&lt;/em&gt; performance boost but are still bottlenecked by the emulated GPU.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-prometheus/botw_1_huc53f1013d404a2d6a3fba25ccf9772c1_1937783_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-prometheus/botw_2_hubf29e1a8ac456615b9efd479b77587de_1891626_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda: Breath of the Wild&lt;/p&gt;


&lt;p&gt;The emulated GPU depends on four things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Your CPU&amp;rsquo;s single-core speed.
A single host CPU core translates all the commands from guest GPU (Switch) into host GPU (User) commands.
So, having a CPU with great single-core speeds is most beneficial.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your GPU Bus Speed.
yuzu heavily relies on the bandwidth available in the GPU bus.
This is the speed at which data is uploaded to and from your GPU and this varies depending on PCIe generation and allocated lanes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The quality of your GPU drivers.
AMD&amp;rsquo;s drivers for OpenGL are terrible while NVIDIA&amp;rsquo;s are great.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your host GPU itself, be it NVIDIA, AMD, or Intel.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Lastly, be aware that RAM speed, amount of RAM, and the type of processor in your system, will also influence your experience.
The initial release may use additional memory (100mb to 3Gb depending on the game).
We are currently stability-testing a fix for this additional memory usage.&lt;/p&gt;
&lt;h3 id=&#34;current-known-issues&#34;&gt;Current Known Issues&lt;/h3&gt;
&lt;p&gt;Getting multicore to run perfectly is a big deal and in our internal testing we found that &lt;code&gt;audio&lt;/code&gt; can be slower in multicore.
Activate &lt;code&gt;Audio Stretching&lt;/code&gt; to mitigate the issue.
If you come across any softlock or bug that is not present in mainline but present in early access, notify us and include the following data with it.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;* Game name
* Version of the game
* Game savefile
* Steps to reproduce the softlock
* Whether the softlock is random or consistent (always happens in the same spot)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report March 2020</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2020/</link>
      <pubDate>Mon, 20 Apr 2020 07:11:00 -0300</pubDate>
      <author>GoldenX86</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2020/</guid>
      <description>&lt;p&gt;How are you doing in this quarantine, yuzu fans? We hope you are all staying in your homes safe and sound.
Today, we are bringing you a report on a few changes from the past month for both the Early Access and regular Mainline versions of yuzu.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;How are you doing in this quarantine, yuzu fans? We hope you are all staying in your homes safe and sound.
Today, we are bringing you a report on a few changes from the past month for both the Early Access and regular Mainline versions of yuzu.&lt;/p&gt;
&lt;p&gt;We have on our plate a couple of bug fixes, some graphical improvements, the first “performance win” for Intel GPUs, a really serious case of serendipity, and some groundwork for amazing improvements that will be coming to you in a “near-ish” future.&lt;/p&gt;
&lt;h2 id=&#34;bug-fixes-and-improvements&#34;&gt;Bug fixes and improvements&lt;/h2&gt;
&lt;p&gt;After some intensive debugging by &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt;, an OpenGL rendering bug in &lt;em&gt;ARMS&lt;/em&gt; (that was with us since the game started to boot), was solved by simply updating our buildbot virtual machine from Visual Studio 2017 to the latest 2019 version.
Thanks to &lt;a href=&#34;https://github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt; for the change!&lt;/p&gt;
&lt;p&gt;PSA - Please update to or install the latest &lt;a href=&#34;https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads&#34;&gt;Visual C++ 2019 x64 redistributable&lt;/a&gt;, or else you won’t be able to open yuzu, as it will complain that the library &lt;code&gt;VCRUNTIME140.dll&lt;/code&gt; cannot be found.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./03.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2020/03_huba731c05b2030af474625a750c3c6b98_1508838_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Better, right?&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./04.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2020/04_huba731c05b2030af474625a750c3c6b98_2290030_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Better, right?&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Better, right?&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/perillamint&#34;&gt;perillamint&lt;/a&gt; and &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; stubbed (this means to send a fake &lt;code&gt;everything’s OK&lt;/code&gt; signal so the game can continue) some VR related services.
These changes are needed for version 1.6.0 of &lt;em&gt;The Legend of Zelda: Breath of the Wild&lt;/em&gt;, 1.3.0 of &lt;em&gt;Super Mario Odyssey&lt;/em&gt;, and versions 3.1.0 and above of &lt;em&gt;Super Smash Bros. Ultimate&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Commercial games aren&amp;rsquo;t everything.
&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; decided to give homebrew lovers and old-school gamers something to play with by implementing some attributes from the old OpenGL 1.X and 2.X days.
It’s now possible to run &lt;code&gt;Xash3D&lt;/code&gt;, so you can frag in Counter-Strike, or follow G-Man’s orders in Half-Life!
Currently, this needs to be manually built with newer dependencies, but that should be solved for good in the near future.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Margen67&#34;&gt;Margen67&lt;/a&gt; and &lt;a href=&#34;https://github.com/Morph1984&#34;&gt;Morph&lt;/a&gt; wanted to improve the graphics for games and so they added Anisotropic Filtering (AF) to yuzu.
With this feature in place, distant textures now look much sharper, improving game quality even over what the original Switch can produce!
Games like &lt;em&gt;Pokémon Sword&lt;/em&gt;, &lt;em&gt;Pokémon Shield&lt;/em&gt;, and &lt;em&gt;Fire Emblem: Three Houses&lt;/em&gt; benefit a lot from this; however, some other games don’t respond well to this new feature, one example being &lt;em&gt;Astral Chain&lt;/em&gt;.
Feel free to experiment with it!&lt;/p&gt;
&lt;p&gt;An example in &lt;em&gt;Pokémon Sword&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./15.png&#34; title=&#34; AF Off&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2020/15_hub6fd0ed88b11c739593d60d9d70227d6_2376597_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; AF Off&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; AF Off&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./14.png&#34; title=&#34; AF 16x&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2020/14_hu47323c1785615f481e268616f3cef3a8_2619321_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; AF 16x&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; AF 16x&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;And another example in &lt;em&gt;Fire Emblem: Three Houses&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./01.png&#34; title=&#34; AF Off&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2020/01_hu64956838eccc65f162b2fcdc624c92ab_4230166_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; AF Off&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; AF Off&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./02.png&#34; title=&#34; AF 8x&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2020/02_huab724fcd5e66b238ff86d06cc451908d_4567500_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; AF 8x&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; AF 8x&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Shader cache invalidations are something our users don’t like at all.
We don&amp;rsquo;t either, but it’s all part of the process of improving yuzu to achieve better performance and accuracy.
For example, one of our recent invalidations was needed to fix the reflections in &lt;em&gt;Luigi’s Mansion 3&lt;/em&gt;, making certain parts of the game playable.&lt;/p&gt;
&lt;p&gt;Because the art of dancing is important, &lt;a href=&#34;https://github.com/namkazt&#34;&gt;namkazt&lt;/a&gt; and &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; have been fighting with the code, allowing us to enjoy 3D graphics in &lt;em&gt;Hatsune Miku: Project DIVA MEGA39&amp;rsquo;s&lt;/em&gt;, and as collateral, fixed some rendering issues in &lt;em&gt;Bayonetta 1&lt;/em&gt; and &lt;em&gt;Super Smash Bros. Ultimate&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./07.png&#34; title=&#34; Miku Miku Dance!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2020/07_hub3fcad4e816063b14bc5f4cec2e99abb_1031672_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Miku Miku Dance!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Miku Miku Dance!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./08.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2020/08_huf23a89b7915fd5e96bfc51719849d6bb_452459_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Smash Bros. Ultimate&amp;#39;s menu (Before &amp;amp; After)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./09.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2020/09_hu59139d71bd9dea5c1ee169483351f4a3_670564_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Smash Bros. Ultimate&amp;#39;s menu (Before &amp;amp; After)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Smash Bros. Ultimate&amp;#39;s menu (Before &amp;amp; After)&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/Kewlan&#34;&gt;Kewlan&lt;/a&gt;, a regular in our Discord Server, submitted a small change to our input mapping GUI, changing the position of the shoulder buttons so they no longer make anyone angry.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./11.png&#34; title=&#34; Incorrect.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2020/11_huba87b04d42b97d6b1ad0d7366d6c2fd6_3249_192x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Incorrect.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Incorrect.&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./12.png&#34; title=&#34; Much better.&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-mar-2020/12_hu132b5e3351c683c044b063a9e9bd8921_2793_193x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Much better.&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Much better.&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;We also have a cool improvement by &lt;a href=&#34;https://github.com/FearlessTobi&#34;&gt;Tobi&lt;/a&gt;.
The Switch is a surround sound compatible console and our implementation of downmixing removed any channel that wasn’t left or right.
By keeping the extra channels and mixing them in the left and right stereo outputs, the sound in tons of games, including &lt;em&gt;Luigi’s Mansion 3&lt;/em&gt;, &lt;em&gt;Sonic Forces&lt;/em&gt;, and &lt;em&gt;Bayonetta&lt;/em&gt;, has been improved.&lt;/p&gt;
&lt;h2 id=&#34;a-peculiar-case-of-even-a-broken-clock-is-right-twice-a-day&#34;&gt;A peculiar case of &amp;ldquo;Even a broken clock is right twice a day!&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;The Nintendo Switch supports &lt;code&gt;ASTC&lt;/code&gt;, a type of texture format generally used in mobile hardware, such as phones and tablets, in order to reduce bandwidth usage (a limited resource in those devices).
Since it&amp;rsquo;s a heavily compressed format, decoding it via the CPU, like it is normally done on PC, is a time-consuming task.&lt;/p&gt;
&lt;p&gt;To give an example, Astral Chain is a game that uses &lt;code&gt;ASTC&lt;/code&gt; very extensively and in bizarre ways, as previous fixes and optimizations have shown.
On NVIDIA and AMD graphics hardware, the first scene of a new game typically takes &lt;code&gt;17&lt;/code&gt; seconds to load. The GPU has to wait for the CPU to decode all the &lt;code&gt;ASTC&lt;/code&gt; textures, and thus slowing down the whole process.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&amp;rsquo;s&lt;/a&gt; research, it was discovered that on any recent Intel GPU this same operation is immediate and occurs with no delay, due to it being the only vendor providing a native &lt;code&gt;ASTC&lt;/code&gt; decoder in their hardware.
That’s right, the best way to experience Astral Chain in yuzu is with a small, and typically inferior, iGPU (like the ones that come in any desktop or notebook CPU from Intel).&lt;/p&gt;
&lt;p&gt;On the topic of formats, implementing the &lt;code&gt;RG32&lt;/code&gt; and &lt;code&gt;RGB32&lt;/code&gt; vertex formats fixed a room that refused to load in The Legend of Zelda: Link’s Awakening in Vulkan.
Great work, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt;!&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./13.PNG&#34; title=&#34; It works!&#34;&gt;&lt;img src=&#34;./13.PNG&#34; alt=&#34; It works!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; It works!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;paving-the-road-for-even-bigger-changes&#34;&gt;Paving the road for even bigger changes&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt;&amp;rsquo;s initial work on &lt;code&gt;Transform Feedback&lt;/code&gt; has concluded and is now partially working.
This has already helped games like POKKÉN Tournament DX, Donkey Kong Country: Tropical Freeze and Xenoblade Chronicles.&lt;/p&gt;
&lt;p&gt;An optimization by &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; reduced the use of RAM by 1GB.
When talking about RAM usage, less is best!&lt;/p&gt;
&lt;p&gt;Now, for an important but also astonishing fix; one that nobody expected, not even our project leader &lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt;.
While he was working on fixing what seemed to be a simple bug on Final Fantasy VIII, he also accidentally fixed Super Smash Bros. Ultimate fights!
This case of serendipity, is without a doubt, a surprise, but a welcome one.&lt;/p&gt;
&lt;p&gt;Now all users can brawl to their hearts&amp;rsquo; content thanks to a measly 5-line change in yuzu’s code!
However, keep in mind that any Super Smash Bros. Ultimate update newer than 3.1.0 will work, but will also make the characters T-pose, resulting in hilarious fights and victory screens.
We’re working on resolving this, but for now, stick to update 3.1.0 or older!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; fixed audio crackling in various games like Crash Team Racing and Super Mario Odyssey.
We are slowly but surely improving our audio quality.
He also implemented initial support for &lt;code&gt;32-bit ARM&lt;/code&gt; emulation.
Nothing tangible can be tested yet, but thanks to this, it will be possible in the future to run &lt;code&gt;32-bit&lt;/code&gt; games like Mario Kart 8 Deluxe.&lt;/p&gt;
&lt;p&gt;And last but not least, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; has been making some serious changes to yuzu&amp;rsquo;s GPU emulation, while also laying the foundation for the recent rework of yuzu&amp;rsquo;s Virtual Memory Manager (codename: Project Epimetheus).&lt;/p&gt;
&lt;p&gt;These, in turn, will help further advance the development of Project Prometheus, one of the super-secret Projects our devs are currently working on to bring some considerable changes to yuzu’s performance and hardware requirements.
Stay tuned to hear more about them in the future!&lt;/p&gt;
&lt;p&gt;That’s all for now folks, see you in the April report.&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>New Feature Release - Vulkan</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-vulkan/</link>
      <pubDate>Tue, 03 Dec 2019 21:17:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-vulkan/</guid>
      <description>&lt;p&gt;A very good day to all you yuz-ers out there.
The curtains are up and the most awaited feature of yuzu is finally here!
The Vulkan renderer for yuzu is now available for users on Early Access.
To find out more about it, jump right in!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;A very good day to all you yuz-ers out there.
The curtains are up and the most awaited feature of yuzu is finally here!
The Vulkan renderer for yuzu is now available for users on Early Access.
To find out more about it, jump right in!&lt;/p&gt;
&lt;h2 id=&#34;vulkan-for-yuzu&#34;&gt;Vulkan for yuzu&lt;/h2&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vulk_smo.png&#34; title=&#34; Super Mario Odyssey&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_smo_hu8cd9cc4430f2f9b2fa2caabb14f35697_2047322_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Super Mario Odyssey&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vulk_astral.png&#34; title=&#34; Astral Chain&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_astral_huc5bd5ce52d09c0f12b37480978ecc03a_1015632_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Astral Chain&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Astral Chain&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vulk_zla_1.png&#34; title=&#34; Link&amp;#39;s Awakening&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_zla_1_hu54046471266d12fa48299d33cb3e6d50_1700823_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Link&amp;#39;s Awakening&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Link&amp;#39;s Awakening&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vulk_botw.png&#34; title=&#34; Breath of the Wild&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_botw_hub1593c4000ffd165749ae4f8cea9943e_1375163_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Breath of the Wild&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Breath of the Wild&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;For the past year, the most awaited and requested feature for yuzu has been the Vulkan Renderer.
Many users, especially those with AMD GPUs, have been patiently waiting for this day. &lt;br&gt;
Download the latest &lt;a href=&#34;https://yuzu-mirror.github.io/help/early-access/&#34;&gt;Early Access&lt;/a&gt; build via the installer now to try it out!
After you download the build, go to &lt;code&gt;Emulation -&amp;gt; Configure -&amp;gt; Graphics&lt;/code&gt; and select &lt;code&gt;Vulkan&lt;/code&gt; in the API dropdown.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Vulkan_GUI.png&#34; title=&#34; yuzu Configuration&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/Vulkan_GUI_hub8ee885c80f97483703f814752312c0a_11470_573x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; yuzu Configuration&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; yuzu Configuration&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p style=&#34;color:lawngreen;&#34;&gt;&lt;b&gt;We highly recommend using the latest drivers, or beta drivers, as vendors are actively fixing bugs in their Vulkan drivers. Nvidia appears to encounter the least bugs, but it is still strongly recommended to keep your drivers up to date.&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;how-it-all-started&#34;&gt;How It All Started&amp;hellip;&lt;/h2&gt;
&lt;p&gt;Barely a year had passed since the Nintendo Switch launched, but there it was, &lt;code&gt;yuzu - The Nintendo Switch Emulator&lt;/code&gt; - already running several games with stellar performance and stunning graphics.
But it came with a caveat; to deliver that performance, yuzu exclusively needed an Nvidia GPU among several other hardware requirements.&lt;/p&gt;
&lt;p&gt;This was mainly due to the low performance on AMD GPUs OpenGL Windows drivers.
For AMD users, this meant that they either had to start using Linux, where the drivers were a &lt;em&gt;&lt;strong&gt;little&lt;/strong&gt;&lt;/em&gt; better, or had to buy an Nvidia GPU, and neither of those was an easy choice.
Thus we quickly realized the need for a way to deliver the same performance to our AMD users, and Vulkan seemed to be the answer!&lt;/p&gt;
&lt;p&gt;To tackle this, one of our resident GPU emulation experts - &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; (aka ReinUsesLisp) - set out to master Vulkan and implement a renderer in yuzu using this API.
&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; started experimental work on the Vulkan renderer, with the customary &lt;code&gt;Hello World&lt;/code&gt; - by rendering a &lt;code&gt;RED screen&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;He used existing switch homebrew like &lt;code&gt;SpaceNX&lt;/code&gt; and &lt;code&gt;Push A button&lt;/code&gt;, and later wrote his own homebrew app of a &lt;code&gt;blinking screen&lt;/code&gt; and got them to render using the Vulkan renderer successfully.
With some progress, it was now time for him to implement shaders on the Vulkan renderer.
(If you are interested, you can check out the homebrew &lt;a href=&#34;./clear-color.nro&#34;&gt;here&lt;/a&gt;.) &lt;br&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h4 id=&#34;before-we-get-into-deeper-technical-details-we-need-to-understand-a-few-things&#34;&gt;Before we get into deeper technical details, we need to understand a few things:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The Nintendo Switch has an Nvidia GPU and games can use either OpenGL or NVN API (Nvidia proprietary API), to communicate with the GPU and render visuals. (Games might use Vulkan, but we are yet to see any games using it)&lt;/li&gt;
&lt;li&gt;GPUs use small programs called shaders to control the GPU rendering pipeline. &lt;a href=&#34;https://www.khronos.org/opengl/wiki/Rendering_Pipeline_Overview&#34;&gt;For more info, read here.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Shaders have instructions inside them for the GPU to perform various types of operations.&lt;/li&gt;
&lt;li&gt;yuzu decodes these shader instructions from games to guest GPU (Switch), turns them into GLSL (OpenGL Shading Language) code, and then rebuilds those shaders to work on the Host GPU (User GPU) to get games rendering.&lt;/li&gt;
&lt;li&gt;SPIR-V is an intermediate language for defining shaders in Vulkan, which is sort of similar to OpenGL&amp;rsquo;s GLSL. &lt;a href=&#34;https://www.khronos.org/registry/spir-v/&#34;&gt;For more info, read here.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h4 id=&#34;now-that-we-have-some-context-lets-dive-deeper&#34;&gt;Now that we have some context, let&amp;rsquo;s dive deeper!&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; wrote &lt;a href=&#34;https://github.com/ReinUsesLisp/sirit&#34;&gt;&lt;strong&gt;Sirit&lt;/strong&gt;&lt;/a&gt; - a runtime SPIR-V assembler to generate SPIR-V code easily.
Basically, there isn&amp;rsquo;t a built-in way to generate SPIR-V code.
Most game developers actually use a high level shader language and compile them statically.
And as yuzu could only convert the game shaders to GLSL, he used &lt;code&gt;Sirit&lt;/code&gt; to generate SPIR-V shaders, instead of GLSL, for Vulkan.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p style=&#34;color:lawngreen;&#34;&gt;&lt;b&gt;Game developers usually write shaders using GLSL or HLSL and compile it to SPIR-V with a compiler and send that to the driver.
&lt;/blockquote&gt;
&lt;p&gt;However, yuzu Vulkan generates SPIR-V on the go and sends that to the driver.&lt;/b&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;When development began, yuzu didn&amp;rsquo;t have a shader IR (intermediate representation).
As a result, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; had to copy and adapt many parts of the code, to the point that it became bug ridden and unmaintainable.
At this stage, we decided to write a shader IR that would allow us to share the shader decoding logic on both GLSL and SPIR-V.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vulk_bork1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_bork1_hu6aebe2672ab3c54937577d1315462b2e_695111_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Vulkan experiments - Super Mario Odyssey (broken)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vulk_bork2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_bork2_hu82f36afe6f115b95e868b5b351dda87b_451524_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Vulkan experiments - Super Mario Odyssey (broken)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Vulkan experiments - Super Mario Odyssey (broken)&lt;/p&gt;


&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;What is shader IR?&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        An IR (intermediate representation) is a representation of the program &amp;ldquo;between&amp;rdquo; source and target languages. A shader IR in yuzu&amp;rsquo;s context would be the representation of game shaders decoded from their actual form and before they were rebuilt for GLSL or SPIR-V.
    &lt;/div&gt;
&lt;/article&gt;

&lt;p&gt;In regards to Shader IR, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; rewrote how guest shaders are analysed in control flow (the code that tells how a shader diverges in execution) from the ground up.
He created a decompiler that removes stack based branches which result in under performant shaders in Intel and AMD, and created a more advanced decompiler that could convert all the branches in the shaders into higher level structures (ifs, loops, etc).
He also corrected control flow in SPIR-V shaders and fixed some crashes that occurred on AMD due to unoptimized control flow structures.&lt;/p&gt;
&lt;p&gt;Simply put, he redid the whole system on which shader IR is based, after &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; converted most of the instructions into IR and setup the foundation. &lt;br&gt;&lt;/p&gt;
&lt;p style=&#34;color:lawngreen;&#34;&gt;&lt;b&gt;&lt;i&gt;Kind of like reorganizing a messy closet, after segregating its contents.&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;While the shader IR was being worked on, &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; was parallelly working on the Vulkan renderer, and managed to get more homebrew working, but soon ran into further issues.
As a result, development of Vulkan didn&amp;rsquo;t continue for a few months, and quite some time was spent implementing the Shader IR.&lt;/p&gt;
&lt;h2 id=&#34;problems-and-solutions&#34;&gt;Problems and Solutions&amp;hellip;&lt;/h2&gt;
&lt;h4 id=&#34;problem-1-texture-cache&#34;&gt;Problem 1: Texture Cache&lt;/h4&gt;
&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;What is a Texture Cache?&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        The texture cache handles everything related to texture management.
When a game asks to sample a texture, we create a texture like the game wants and we fill its texels (pixels) from guest data.
When the game wants to render to a texture, we do the same process.
The texture cache is full of border cases that need to be properly handled.
    &lt;/div&gt;
&lt;/article&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; and &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;, our GPU emulation experts, had just started working on the shader IR and &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; ran into issues with the Vulkan renderer.
Upon investigation, they realized that the existing texture cache was too heavily embedded in OpenGL and there was no easy way to make it API agnostic.
In other words, they found it was very difficult to decouple the texture cache&amp;rsquo;s backend logic from the frontend, so that they could use it for both OpenGL and Vulkan.&lt;/p&gt;
&lt;p&gt;Though &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; (with some help from &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;) implemented a primitive texture cache on Vulkan to get &lt;code&gt;Sonic Mania&lt;/code&gt; &amp;amp; &lt;code&gt;Cave Story+&lt;/code&gt; rendering, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; saw the need for a better approach to solve this problem.
He (&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt;) then reimplemented the texture cache from scratch, using some of &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&amp;rsquo;s&lt;/a&gt; ideas and some inspiration from the original texture cache.
This is a generic texture cache that is able to handle all of the border cases, in generic code that can be implemented on both OpenGL and Vulkan.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/phz9zJqAv2I&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h4 id=&#34;problem-2-buffer-cache&#34;&gt;Problem 2: Buffer cache&lt;/h4&gt;
&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;What is a Buffer Cache?&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        A buffer cache stores &amp;amp; caches most guest GPU memory objects (like vertex data, index data, constant buffers, global memory and others) into host GPU memory objects, thus avoiding having to continuously upload/download data in between Host &amp;amp; Guest GPUs.
This is needed because the Host GPU can&amp;rsquo;t normally use Guest GPU&amp;rsquo;s data directly.
&lt;code&gt;Host GPU = yuzu user&#39;s GPU&lt;/code&gt; &amp;amp;  &lt;code&gt;Guest GPU = Switch GPU&lt;/code&gt;
    &lt;/div&gt;
&lt;/article&gt;

&lt;p&gt;yuzu&amp;rsquo;s original buffer cache was a stream based buffer, which was brought from Citra.
&lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; observed that this buffer cache couldn&amp;rsquo;t handle large buffers properly.
So he made a dual cache - with a stream buffer for small buffers and a single buffer for large buffers, which allowed him to handle memory more easily on Vulkan.&lt;/p&gt;
&lt;p&gt;Later, &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; took over and sought to improve it further by using ideas from texture cache.
While it worked as an experiment, it had some performance issues.
So, he rewrote the buffer cache from scratch, based on a completely new approach, so that it was compatible with both OpenGL and Vulkan.
This new approach for the buffer cache was to map 1:1 guest GPU memory with host GPU memory i.e., yuzu will now automatically allocate GPU memory chunks depending on the game&amp;rsquo;s utilization and a single chunk on guest memory will be mapped to a single chunk on host memory.&lt;/p&gt;
&lt;h4 id=&#34;benefits-of-a-buffertexture-cache&#34;&gt;Benefits of a buffer/texture cache&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Improves performance significantly,&lt;/li&gt;
&lt;li&gt;reduces syncing between Guest/Emulated GPU and Host GPU,&lt;/li&gt;
&lt;li&gt;allows controlling host memory capacity, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p style=&#34;color:lawngreen;&#34;&gt;&lt;b&gt;&lt;i&gt;Trivia: The Buffer Cache is what got animations working on Smash Ultimate (along with compute shaders)&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;vulkan-continued&#34;&gt;Vulkan Continued&amp;hellip;&lt;/h2&gt;
&lt;p&gt;As a result of fixing the aforementioned problems, we had managed to abstract away the OpenGL backend from the frontend.
This was very crucial for the progress of Vulkan development, as it allowed us to narrow down issues from &lt;code&gt;something is broken and I don&#39;t know what it is&lt;/code&gt; to &lt;code&gt;this is a Vulkan exclusive bug&lt;/code&gt;.
Along the way, we fixed many long standing bugs on popular games like fog and water interactions in Super Mario Odyssey, and found new ones, like broken shadows in the same game.&lt;/p&gt;
&lt;h4 id=&#34;now-lets-get-to-the-part-that-everyone-cares-about&#34;&gt;Now, let&amp;rsquo;s get to the part that everyone cares about:&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;How is the performance compared to OpenGL?&lt;/code&gt; &lt;br&gt;
With Vulkan on yuzu, AMD GPUs now perform mostly on par with Nvidia GPUs.
As an added benefit, Intel onboard graphics now have better or around the same overall performance too.
On average, the performance is still a bit lower than what you&amp;rsquo;d observe on OpenGL, but that could change very soon with future optimisations.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p style=&#34;color:lawngreen;&#34;&gt;&lt;b&gt;&lt;i&gt;Note 1: &lt;br&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some games don&amp;rsquo;t yet work with Vulkan on Nvidia GPUs. This is a known issue and we are investigating. &lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Vulkan_AMD.png&#34; title=&#34; yuzu Vulkan vs OpenGL (on AMD GPU)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/Vulkan_AMD_hud71a87c48a0f8c2131b7ab69eb4dad65_140642_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; yuzu Vulkan vs OpenGL (on AMD GPU)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; yuzu Vulkan vs OpenGL (on AMD GPU)&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Vulkan_Nvidia.png&#34; title=&#34; yuzu Vulkan vs OpenGL (on Nvidia GPU)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/Vulkan_Nvidia_hu8452ad24c87958cd484d58762741d7c3_145720_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; yuzu Vulkan vs OpenGL (on Nvidia GPU)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; yuzu Vulkan vs OpenGL (on Nvidia GPU)&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Vulkan_Intel.png&#34; title=&#34; yuzu Vulkan vs OpenGL (on Intel iGPU)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/Vulkan_Intel_hud71a87c48a0f8c2131b7ab69eb4dad65_137767_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; yuzu Vulkan vs OpenGL (on Intel iGPU)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; yuzu Vulkan vs OpenGL (on Intel iGPU)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p style=&#34;color:lawngreen;&#34;&gt;&lt;b&gt;&lt;i&gt;Note 2: &lt;br&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some games perform worse with Vulkan due to how they change framebuffers. &lt;br&gt;
This is a result of how the games were developed, and might change with vendor driver improvements.&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vulk_intel.png&#34; title=&#34; yuzu Vulkan (on Intel iGPU)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_intel_hu11acb9a2630ae145a45e09e9654cd2d6_1461191_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; yuzu Vulkan (on Intel iGPU)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; yuzu Vulkan (on Intel iGPU)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;One noticeable improvement is the shader build times.
We didn&amp;rsquo;t profile the others, but Nvidia&amp;rsquo;s SPIR-V compiler is surprisingly fast.
Where some effects on OpenGL GLSL may take 4 to 5 seconds to build, Vulkan SPIR-V may take only a few milliseconds.&lt;/p&gt;
&lt;p&gt;yuzu&amp;rsquo;s OpenGL and Vulkan backends are now close in feature parity, but both still lack some features the other has.
&lt;a href=&#34;https://github.com/Rodrigo&#34;&gt;Rodrigo&lt;/a&gt; has been recently experimenting with adding tessellation shaders to Vulkan instead of OpenGL, since the Vulkan codebase is better laid out which makes things easier to implement for him.
Vulkan also lacks a few texture formats that we have yet to add, since we haven&amp;rsquo;t seen games using them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p style=&#34;color:lawngreen;&#34;&gt;&lt;b&gt;&lt;i&gt;Fun Fact: Tessellation shaders are used in the recently released Luigi&#39;s Mansion 3!&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./vulk_tess.png&#34; title=&#34; Testing Tessellation shaders in Vulkan&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_tess_hu6f420012e14f2fba372bc812f6f69214_151839_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Testing Tessellation shaders in Vulkan&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Testing Tessellation shaders in Vulkan&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;behold---vulkan-in-all-its-glory&#34;&gt;Behold - Vulkan in All It&amp;rsquo;s Glory!&lt;/h2&gt;
&lt;p&gt;Here are a few screenshots taken with yuzu using the Vulkan renderer.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vulk_smo_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_smo_1_hu02af87b290c05c51dd9bd6b66cf5abca_1806095_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vulk_smo_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_smo_2_hua0b76da85fe5c66b4937c41ba51bba02_2253210_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vulk_smo_3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_smo_3_hu9ec2fa93e98883fd362d7f02a2d2d5f6_1535979_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vulk_smo_4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_smo_4_hu4c0a853d451edaa2e4e42b9d264c0313_4858627_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vulk_zla_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_zla_2_hubea012bfd620d288d9ba30c3eac16dbf_4938941_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Link&amp;#39;s Awakening&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vulk_zla_3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_zla_3_hu8dc95f068d7031160d70c10964e84bbd_5987753_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Link&amp;#39;s Awakening&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vulk_zla_4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_zla_4_hu67af7c6d92f29c294d653f8680a42d66_4967353_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Link&amp;#39;s Awakening&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./vulk_zla_5.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_zla_5_hu16e635b5b6950195c4d4cf0319c56b9d_3189181_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Link&amp;#39;s Awakening&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Link&amp;#39;s Awakening&lt;/p&gt;



  &lt;div class=&#34;columns is-img-preview&#34;&gt;
      
      
      
      
      
      
      
      &lt;div class=&#34;column has-text-centered&#34;&gt;
          
              &lt;a href=&#34;./vulk_marvel.png&#34; title=&#34; Marvel Ultimate Alliance 3&#34;&gt;
                  
                  
                  &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_marvel_hufb06a06f4f6102042da2631d58d96d38_2607665_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Marvel Ultimate Alliance 3&#34;&gt;&lt;/a&gt;
          
          
              &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Marvel Ultimate Alliance 3&lt;/p&gt;
          
      &lt;/div&gt;
      
      
      
      
      
      
      
      &lt;div class=&#34;column has-text-centered&#34;&gt;
          
              &lt;a href=&#34;./vulk_oni_1.png&#34; title=&#34; Onimusha: Warlords&#34;&gt;
                  
                  
                  &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_oni_1_hu056751bd811bd707d35e36df80711465_3924551_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Onimusha: Warlords&#34;&gt;&lt;/a&gt;
          
          
              &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Onimusha: Warlords&lt;/p&gt;
          
      &lt;/div&gt;
      
      
      
      
      
      
      
      &lt;div class=&#34;column has-text-centered&#34;&gt;
          
              &lt;a href=&#34;./vulk_re4.png&#34; title=&#34; Resident Evil 4&#34;&gt;
                  
                  
                  &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_re4_hua2711e782e139970a5b16aeff3200812_4019003_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Resident Evil 4&#34;&gt;&lt;/a&gt;
          
          
              &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Resident Evil 4&lt;/p&gt;
          
      &lt;/div&gt;
      
  &lt;/div&gt;


  
  &lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
      
      
      
      
      
      
      
      &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
          
              &lt;a href=&#34;./vulk_sw_1.png&#34; title=&#34;&#34;&gt;
                  
                  &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_sw_1_hu16d2a398b1fa7635a7a0d42e739c3640_2214856_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon Sword/Shield&#34;&gt;&lt;/a&gt;
          
      &lt;/div&gt;
      
      
      
      
      
      
      
      &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
          
              &lt;a href=&#34;./vulk_sw_2.png&#34; title=&#34;&#34;&gt;
                  
                  &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-vulkan/vulk_sw_2_hu9221102cd49fc9a3745fa3cf5a27d657_2437614_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon Sword/Shield&#34;&gt;&lt;/a&gt;
          
      &lt;/div&gt;
      
  &lt;/div&gt;
  
  
  &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Pokémon Sword/Shield&lt;/p&gt;
  

&lt;h2 id=&#34;vulkan-and-its-shortcomings&#34;&gt;Vulkan and Its Shortcomings&lt;/h2&gt;
&lt;p&gt;While many uninformed users believe Vulkan to be a saviour and a single answer to all performance issues with OpenGL, even though their issues were because of their old hardware, Vulkan is not without any shortcomings.
To understand these, let us first understand the situation with the Nintendo Switch&amp;rsquo;s GPU.&lt;/p&gt;
&lt;p&gt;Maxwell and Pascal Nvidia GPUs are heavily optimized in hardware for D3D11 and OpenGL software.
It seems that whenever Nvidia gets a chance to put something in the hardware, they take it.
Since the Nintendo Switch&amp;rsquo;s GPU is a 2nd generation Maxwell GPU, it comes with additional features like &lt;a href=&#34;https://www.khronos.org/opengl/wiki/ASTC_Texture_Compression&#34;&gt;ASTC&lt;/a&gt; textures and efficient &lt;a href=&#34;https://en.wikipedia.org/wiki/Half-precision_floating-point_format&#34;&gt;half-precision float&lt;/a&gt; math.&lt;/p&gt;
&lt;p&gt;Nvidia&amp;rsquo;s OpenGL driver is a scary monstrosity, it&amp;rsquo;s &lt;code&gt;really&lt;/code&gt; fast.
And to achieve this Nvidia has, over the years, invested resources heavily to make their OpenGL software (the driver) and their hardware really efficient.
They have not only optimized their software to be fast for OpenGL, but also their hardware.&lt;/p&gt;
&lt;p&gt;Both NVN and OpenGL expose Nvidia&amp;rsquo;s Maxwell hardware at its greatest.
Lots of OpenGL features that are (sometimes wrongly) considered &amp;ldquo;legacy&amp;rdquo;, &amp;ldquo;old&amp;rdquo;, or even &amp;ldquo;emulated by the driver&amp;rdquo; are actually natively supported by the hardware (in the case of Nvidia).
The problem arises when Switch games use these features.&lt;/p&gt;
&lt;p&gt;Vulkan wasn&amp;rsquo;t designed with these features in mind.
Some of these features were intentionally left out of the standard and the committee does not want to add them (not even as extensions) unless they really have to, or big companies behind CAD software require it.
To sum it up, if a Switch game uses &lt;code&gt;X feature&lt;/code&gt; supported natively by the hardware, and this feature is not available on Vulkan; it has to be emulated with a slower path or not emulated at all.&lt;/p&gt;
&lt;p style=&#34;color:lawngreen;&#34;&gt;&lt;b&gt;Here is a reduced list of features that are supported by Nvidia Maxwell hardware - exposed in OpenGL, but not supported in Vulkan:&lt;/b&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;OpenGL Feature&lt;/th&gt;
&lt;th&gt;Games that use it&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Minus one to one depth space - &lt;code&gt;(-1 to +1)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Used in nearly all Nintendo games&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Quads, quad strips, polygons and line loops primitive topologies (e.g. rendering geometry with quads instead of triangles)&lt;/td&gt;
&lt;td&gt;Used by Xenoblade Chronicles 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bindless textures&lt;/td&gt;
&lt;td&gt;Used by Super Mario Party, Super Mario Odyssey and others&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Legacy varyings (vertex attributes from the D3D9 era, like front colors and fog coordinates)&lt;/td&gt;
&lt;td&gt;Used by Dragon Quest Builders&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GL_CLAMP&lt;/code&gt; texture filtering&lt;/td&gt;
&lt;td&gt;Used by Hollow Knight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;uint8&lt;/code&gt; indices (available as an extension, not supported on all vendors)&lt;/td&gt;
&lt;td&gt;Used by Pokémon Let&amp;rsquo;s Go: Eevee and many others&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Conditional rendering (available as an extension, but not exposed on AMD&amp;rsquo;s proprietary driver)&lt;/td&gt;
&lt;td&gt;Used by Super Mario Odyssey and others&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Copying depth images to color images and vice-versa (only on Nvidia)&lt;/td&gt;
&lt;td&gt;Used by Super Mario Odyssey, Zelda Breath of the Wild and others&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alpha testing (eliminating pixels with some transparency)&lt;/td&gt;
&lt;td&gt;Used by Smash Ultimate, Bayonetta and Astral Chain&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Not having these features forces the Vulkan renderer to emulate them with slower techniques.
At the moment of writing this article, features that are not known to be used by Switch games and some with extensions widely available, have been excluded from the above list.&lt;/p&gt;
&lt;p&gt;In addition to these, Vulkan also doesn&amp;rsquo;t yet support a feature that has been supported by OpenGL since 1992 - &lt;code&gt;a mutable pipeline state&lt;/code&gt;.
In Vulkan, to define how a triangle is going to be rendered, you create a PSO (Pipeline State Object).
For instance: &amp;ldquo;the clockwise side of a triangle is the front face&amp;rdquo;, &amp;ldquo;cull the back face of the triangle&amp;rdquo;, &amp;ldquo;render triangles&amp;rdquo;, &amp;ldquo;enable blending (transparency)&amp;rdquo;, &amp;ldquo;use these shaders&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;In case you want to change &lt;em&gt;&lt;strong&gt;any&lt;/strong&gt;&lt;/em&gt; of these attributes, an entire new pipeline has to be created.
This has the advantage of eliminating &amp;ldquo;shader recompilations&amp;rdquo; that cause micro-stutter at boot on some games.
The problem is that, again, Nvidia hardware can change this atomically.&lt;/p&gt;
&lt;p&gt;If you want to change what faces of a triangle to cull (to render shadows for instance); you just queue the change on the GPU and it&amp;rsquo;s done.
And on OpenGL too, it&amp;rsquo;s the same thing.
yuzu currently doesn&amp;rsquo;t take much advantage of this feature, but we do have plans to optimize the current OpenGL backend for this.&lt;/p&gt;
&lt;p&gt;In summary, for Switch emulation, OpenGL is the API to rule them all (unless Nvidia decides to release NVN on desktop, but that&amp;rsquo;s doubtful).
Vulkan is great to take advantage of hardware that is not OpenGL friendly and it receives more love from some vendors and the market, so better tools, more extensions and better driver support will appear in the future.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p style=&#34;color:cyan;&#34;&gt;&lt;b&gt;Vulkan is still EXPERIMENTAL!&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;The Vulkan renderer for yuzu is still experimental and doesn&amp;rsquo;t yet have all the features implemented.
In addition to that, the Vulkan renderer currently &lt;code&gt;DOES NOT&lt;/code&gt; support shader caches and the infamous &lt;code&gt;Resolution rescaler&lt;/code&gt; is not yet integrated into the Vulkan renderer.
While some games like Zelda: Link&amp;rsquo;s Awakening work really well on Vulkan, many games like ARMS, Crash Team Racing, and Luigi&amp;rsquo;s Mansion 3 crash on it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p style=&#34;color:lawngreen;&#34;&gt;&lt;b&gt;As this feature release is a monumental one, we want to make sure that all the rough edges are polished before making it available to normal users.
&lt;/blockquote&gt;
&lt;p&gt;And as such, the Vulkan release will take more time to become available on Mainline. We&amp;rsquo;ll be slowly rolling it out in December.&lt;/b&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;As always, we’re so thankful to our supporters.
Please enjoy testing out Vulkan on your own games, and remember to reach out to us with any feedback/bugs you experience on our Discord&amp;rsquo;s exclusive Patreon channels!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Introducing yuzu Early Access</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-early-access/</link>
      <pubDate>Sun, 01 Dec 2019 20:15:00 &#43;0530</pubDate>
      <author>bunnei</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-early-access/</guid>
      <description>&lt;p&gt;A very good day to you all out there!
Today, we are excited to announce a new yuzu official release channel for our Patreon subscribers — yuzu Early Access.
It comes with all the perks you&amp;rsquo;re already accustomed to and more.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;A very good day to you all out there!
Today, we are excited to announce a new yuzu official release channel for our Patreon subscribers — yuzu Early Access.
It comes with all the perks you&amp;rsquo;re already accustomed to and more.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;div style=&#34;text-align:center;&#34;&gt;
&lt;img src=&#34;./yuzu-banner-early-access-white.svg&#34; width=&#34;400&#34; height=&#34;150&#34;/&gt;
&lt;/div&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;This new release channel includes all the same daily yuzu updates that you are accustomed to, plus the early releases of features that you have typically seen in special Patreon releases!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;br&gt;
&lt;code&gt;Early Access&lt;/code&gt; builds are currently only available for &lt;code&gt;Windows&lt;/code&gt; users. &lt;br&gt;
&lt;code&gt;Linux&lt;/code&gt; users won&amp;rsquo;t have access to &lt;code&gt;Early Access&lt;/code&gt; builds due to limitations of the installer, and how we bundle the source with the binary. If enough users request a &lt;code&gt;Linux&lt;/code&gt; port, we may look into it in the future.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;what-does-it-mean-for-you&#34;&gt;What does it mean for you?&lt;/h2&gt;
&lt;p&gt;If you are a Patreon subscriber at the &lt;code&gt;Early Access tier&lt;/code&gt;, you will be able to install this new release channel.
You will not need to worry about manually checking in on the yuzu Patreon and downloading one-off releases — as these updates will be pushed directly to you through the installer.
You’ll also get all of the other daily updates with this release channel, so there will not be a need to switch back and forth between Patreon releases and daily releases.&lt;/p&gt;
&lt;p&gt;If you are not a Patreon subscriber and use the regular yuzu builds, not much will change!
You’ll still get the same daily yuzu updates, which will include new features and bug fixes once they are ready for mainstream use.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;br&gt;
All build downloads are bundled with the source code within in the download.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;how-do-i-install-yuzu-early-access&#34;&gt;How do I install yuzu Early Access?&lt;/h2&gt;
&lt;p&gt;Follow this detailed step-by-step guide, to install yuzu &lt;code&gt;Early Access&lt;/code&gt; via the Installer. &lt;br&gt;
&lt;a href=&#34;https://yuzu-mirror.github.io/help/early-access/&#34;&gt;&lt;strong&gt;Click here for the guide&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;why-did-we-make-this-change&#34;&gt;Why did we make this change?&lt;/h2&gt;
&lt;p&gt;Since February 2019, we&amp;rsquo;ve released a total of &lt;code&gt;8&lt;/code&gt; special Patreon preview builds alongside hundreds of daily regular releases.
Like many open source projects, we automate the entire build and release process for the application, so that our developers can spend more time working on the actual project and less time fiddling with building and releasing.
This way, the latest and greatest changes are delivered directly to you through the updater.&lt;/p&gt;
&lt;p&gt;When we made the first preview release, we figured that for a once-a-month preview build it isn&amp;rsquo;t worth the trouble to automate the process.
But recently, the process for building and releasing has started to really take up more time than acceptable.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./9.png&#34; title=&#34; (Credits: xkcd)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-early-access/9_huc94bc325b7b73fbdb6f6c6b5bb583d68_26403_404x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; (Credits: xkcd)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; (Credits: xkcd)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;!-- https://xkcd.com/1319/ --&gt;
&lt;p&gt;Each build was made by merging several different developers&amp;rsquo; code together, causing unforeseen errors due to different developers making changes to same sections of the code.
For a once-a-month build, we ended up needing to block out at least a week to prepare for the release; we needed time for internal testing, time for squashing every bug we found, and time for fixing any issues found after release.&lt;/p&gt;
&lt;p&gt;Over the past month, we rebuilt the build process for daily yuzu releases.
We built it in such a way that we can easily extend it to include &lt;code&gt;Early Access&lt;/code&gt; builds.
Today we are pleased to announce that we now have automated the build and release process for &lt;code&gt;Early Access&lt;/code&gt; from start to finish, meaning from today, you can now install the latest &lt;code&gt;Early Access&lt;/code&gt; build directly through the yuzu installer.&lt;/p&gt;
&lt;h2 id=&#34;so-ive-installed-early-access-now-what&#34;&gt;So I’ve installed Early Access, now what?&lt;/h2&gt;
&lt;p&gt;We’re rolling out the release of &lt;code&gt;Early Access&lt;/code&gt; softly — so you may not notice too many new features or bug fixes just yet.
This is to give us time to make sure the new release channel is stable, and work out any kinks.&lt;/p&gt;
&lt;p&gt;But rest assured — we have a really exciting feature coming, that many of you have been asking for, and it’s right around the corner!
This feature is &lt;code&gt;days away…&lt;/code&gt; not weeks… So, hang tight!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>yuzu Patreon Release October 2019</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/</link>
      <pubDate>Tue, 08 Oct 2019 04:00:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/</guid>
      <description>&lt;p&gt;Hey there &lt;em&gt;&lt;strong&gt;yuz-ers&lt;/strong&gt;&lt;/em&gt;!
Curious about what we have in store for you?
It&amp;rsquo;s the October Patreon preview release!
This build showcases the new game in town, &lt;strong&gt;The Legend of Zelda: Link&amp;rsquo;s Awakening&lt;/strong&gt;, in yuzu!
Hop right in to find out more.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey there &lt;em&gt;&lt;strong&gt;yuz-ers&lt;/strong&gt;&lt;/em&gt;!
Curious about what we have in store for you?
It&amp;rsquo;s the October Patreon preview release!
This build showcases the new game in town, &lt;strong&gt;The Legend of Zelda: Link&amp;rsquo;s Awakening&lt;/strong&gt;, in yuzu!
Hop right in to find out more.&lt;/p&gt;
&lt;h2 id=&#34;changelog&#34;&gt;Changelog&lt;/h2&gt;
&lt;p&gt;Since the last Patreon release, we&amp;rsquo;ve made great progress in the OS emulation and GPU emulation areas.
While some of the changes listed below are already in master or tagged for Canary, some are being released as early access to the patrons, with this build.&lt;/p&gt;
&lt;h3 id=&#34;os-emulation-os-hle&#34;&gt;OS Emulation (OS HLE)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Public Changes&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/2877&#34;&gt;#2877&lt;/a&gt; - Implemented &lt;code&gt;REV5 Audio&lt;/code&gt;&amp;rsquo;s frame count.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/2873&#34;&gt;#2873&lt;/a&gt; - Implemented &lt;code&gt;ioctl2&lt;/code&gt; &amp;amp; &lt;code&gt;ioctl3&lt;/code&gt; interfaces in &lt;code&gt;NVDRV&lt;/code&gt; (Nvidia Services).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/2912&#34;&gt;#2912&lt;/a&gt; - Fixes and Improvements to Asynchronous GPU:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New games boot with &lt;code&gt;Async&lt;/code&gt; - &lt;strong&gt;Fire Emblem: 3 Houses&lt;/strong&gt;, &lt;strong&gt;Cadence of Hyrule&lt;/strong&gt;, and &lt;strong&gt;Pokkén Tournament&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Fixed the issue where games would suddenly slowdown and report wrong framerates.&lt;/li&gt;
&lt;li&gt;Fixed the issue where some games would surpass frame limiting.&lt;/li&gt;
&lt;li&gt;Fixed the issue where dynamic resolution re-scaler would trigger in &lt;strong&gt;Super Mario Odyssey&lt;/strong&gt; with full-speed and wouldn&amp;rsquo;t trigger heavily for under-speed games.&lt;/li&gt;
&lt;li&gt;Removed artificial fence which limited &lt;code&gt;Async&lt;/code&gt; to &lt;code&gt;9 ms&lt;/code&gt;.
Now &lt;code&gt;Async&lt;/code&gt; will be limited by the game and this gives performance boosts in many graphic intensive games.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Patreon Changes&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Implemented a new &lt;code&gt;Fair Cycle Core Timer&lt;/code&gt; in order to spread work evenly on the four emulated cores.&lt;/li&gt;
&lt;li&gt;Improved the &lt;code&gt;New Scheduler&lt;/code&gt; even further, by fixing bugs and implementing &lt;code&gt;Thread Pre-emption&lt;/code&gt;.
These improvements to the scheduler have improved performance in games like &lt;strong&gt;Fire Emblem:3 Houses&lt;/strong&gt;, &lt;strong&gt;Hyrule Warriors&lt;/strong&gt; and &lt;strong&gt;Resident Evil 4&lt;/strong&gt;. &lt;br&gt;
It also has allowed &lt;strong&gt;Astral Chain&lt;/strong&gt; and other games to boot (&lt;em&gt;&lt;strong&gt;Not fully playable yet!&lt;/strong&gt;&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./AC%201.png&#34; title=&#34; Astral Chain&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/AC%201_hu98efe697c684150608b0fd61c795b91e_2014273_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Astral Chain&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Astral Chain&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./FE%201.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/FE%201_hu1ab527fdd07b20debd227765d04383c3_1506581_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fire Emblem: Three Houses&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./FE%202.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/FE%202_hu268eb570657cb54597c069541b9b2b68_1659427_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fire Emblem: Three Houses&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./FE%204.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/FE%204_hu8d1417ed8143c4c404726dd07100e578_1875947_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fire Emblem: Three Houses&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Fire Emblem: Three Houses&lt;/p&gt;



  
  &lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
      
      
      
      
      
      
      
      &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
          
              &lt;a href=&#34;./RE%204%20Title.png&#34; title=&#34;&#34;&gt;
                  
                  &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/RE%204%20Title_hueca4017c5f8d6fa5ac88b568aff7ee15_2394124_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Resident Evil 4&#34;&gt;&lt;/a&gt;
          
      &lt;/div&gt;
      
      
      
      
      
      
      
      &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
          
              &lt;a href=&#34;./RE%204.png&#34; title=&#34;&#34;&gt;
                  
                  &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/RE%204_huc63381ee93489f39ace15d61c31f621a_2486663_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Resident Evil 4&#34;&gt;&lt;/a&gt;
          
      &lt;/div&gt;
      
      
      
      
      
      
      
      &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
          
              &lt;a href=&#34;./RE%204%20II.png&#34; title=&#34;&#34;&gt;
                  
                  &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/RE%204%20II_hu282d9495ad5a7643b2e7f2dff07c7385_2310911_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Resident Evil 4&#34;&gt;&lt;/a&gt;
          
      &lt;/div&gt;
      
  &lt;/div&gt;
  
  
  &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Resident Evil 4&lt;/p&gt;
  

&lt;h3 id=&#34;gpu-emulation&#34;&gt;GPU Emulation&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Public Changes&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/2891&#34;&gt;#2891&lt;/a&gt; - Implemented &lt;code&gt;RGBX16F Format&lt;/code&gt; which is used by &lt;strong&gt;Rocket League&lt;/strong&gt; to render graphics.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/2870&#34;&gt;#2870&lt;/a&gt; - Implemented a &lt;code&gt;MME draw calls in-liner&lt;/code&gt; which accumulates draw calls from the Macro Interpreter Engine (MME) and sends them as a single unified draw call, thus improving performance significantly in some titles.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/2869&#34;&gt;#2869&lt;/a&gt;, &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/2878&#34;&gt;#2878&lt;/a&gt;, and &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/2855&#34;&gt;#2855&lt;/a&gt; - Implemented shader instructions: &lt;code&gt;SULD&lt;/code&gt;, &lt;code&gt;ICMP&lt;/code&gt;, &lt;code&gt;SHFL&lt;/code&gt;(Nvidia only) and &lt;code&gt;SUATOM&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/2872&#34;&gt;#2872&lt;/a&gt; - Fixed memory mapping so that it won&amp;rsquo;t call GPU flushing unnecessarily anymore.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/2868&#34;&gt;#2868&lt;/a&gt; - Fixed mipmap filtering.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/2833&#34;&gt;#2833&lt;/a&gt; - Fixed stencil testing.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/2914&#34;&gt;#2914&lt;/a&gt; - Corrected &lt;code&gt;Fermi2D&lt;/code&gt; to work within crop areas in order to avoid issues in Vulkan.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/2917&#34;&gt;#2917&lt;/a&gt; - Added deduction method for &lt;code&gt;blits&lt;/code&gt; which helps figure if a &lt;code&gt;blit&lt;/code&gt; is on depth textures.
This avoids using the fall-back method of buffer copy.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Patreon Changes&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Implemented &lt;code&gt;fast BRX&lt;/code&gt; and fixed &lt;code&gt;TXQ&lt;/code&gt;.
This fixes graphics in &lt;strong&gt;Crash Team Racing&lt;/strong&gt; &amp;amp; &lt;strong&gt;The Legend of Zelda: Link&amp;rsquo;s Awakening&lt;/strong&gt;, and also makes shaders a lot easier to be read by AMD and Intel drivers.&lt;/li&gt;
&lt;li&gt;Reworked shader cache system to support &lt;code&gt;fast BRX&lt;/code&gt; and &lt;code&gt;TXQ&lt;/code&gt; fixes.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./title.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/RE%204%20Title_hueca4017c5f8d6fa5ac88b568aff7ee15_2394124_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Link&amp;#39;s Awakening&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./intro_house.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/intro_house_hu6f9368b4b7885101a0976a243b42077b_1346550_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Link&amp;#39;s Awakening&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./no_blur_fox.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/no_blur_fox_hu4def2fdefe60334cdccd6c6e800b012a_1952192_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Link&amp;#39;s Awakening&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda: Link&amp;#39;s Awakening&lt;/p&gt;


&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Link&amp;#39;s Awakening needs some stuff!!&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        &lt;p&gt;&lt;strong&gt;The Legend of Zelda: Link&amp;rsquo;s Awakening&lt;/strong&gt; currently needs a few things to work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a save file, to skip the initial movie.&lt;/li&gt;
&lt;li&gt;set your controller settings to &lt;code&gt;Custom &amp;gt; Docked &amp;gt; Pro Controller&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;And &lt;code&gt;Async&lt;/code&gt; needs to be &lt;code&gt;OFF&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A save file is being linked here for users&amp;rsquo; convenience &lt;code&gt;--&amp;gt;&lt;/code&gt; &lt;a href=&#34;./savedata1.bin&#34;&gt;Click here to Download&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;
&lt;/article&gt;

&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Shader caches need to be regenerated!!&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        Because of the reworked shader cache system, all previously generated shader caches are &lt;code&gt;no longer valid&lt;/code&gt;.&lt;br&gt;
&lt;strong&gt;Users will have to regenerate their shader caches for all games.&lt;/strong&gt;
    &lt;/div&gt;
&lt;/article&gt;

&lt;h2 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;Here are some more screenshots from &lt;strong&gt;The Legend of Zelda: Link&amp;rsquo;s Awakening&lt;/strong&gt;, just for you.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./shield_get.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/shield_get_hu6e4d9c35aef124940abf0c51f37675ae_1627473_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sword.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/sword_hue276e9acfe51234605f95c6b74eb40f3_2236048_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sword_get.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/sword_get_hu99a6593cee8039ce67afca7f61144f1d_1664036_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./graveyard.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/graveyard_hu5a23ede2213fd54292be5266f66f427b_1376180_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./swamp.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/swamp_hu60bb6d071e45aa2c8f083fe0fbe11345_1299246_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./fairy.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/fairy_hu26381134e2dab93f5af23471bf288748_1443100_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./forest1.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/forest1_huecce6f73f4833b002299a39823a7d852_1643337_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./forest2.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/forest2_hu244f5eb54eeb200584fe76d7fbda50c5_1714307_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dungeon.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/dungeon_huf3cc91fa2647cc33f70e12460b2d4a2a_1214288_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dungeon1.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/dungeon1_hu11f11d2c7b03466d528704bf3c4b1e77_1395978_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dungeon_maker.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/dungeon_maker_hu469d2e2ddac5e2d865eeaa10f9835a88_2419247_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./dungeon_maker2.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-oct-2019/dungeon_maker2_hu940d9745079613b0dbdfec3823a7195d_1706733_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;et-al&#34;&gt;Et al.&lt;/h2&gt;
&lt;p&gt;Please remember that the early access features are still being worked on, so if you encounter any bugs or have any feedback, please don&amp;rsquo;t hesitate to share it with us in our patreon channels on our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As always, we are thankful to all our 450+ patrons for their continued support.
We will keep working diligently to bring you many more improvements, so that you can keep enjoying your favourite games on yuzu.&lt;/p&gt;
&lt;p&gt;Until next time, keep playing on yuzu! &lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;yuzu development team&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;If you&amp;rsquo;d like to try out this preview release, please head on over to our &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt; to get access!
Thank you again for your support!&lt;/strong&gt;&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>yuzu - The Migration</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-migration/</link>
      <pubDate>Mon, 07 Oct 2019 06:20:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-migration/</guid>
      <description>&lt;p&gt;A very good day to all the &lt;em&gt;&lt;strong&gt;yuz-ers&lt;/strong&gt;&lt;/em&gt; out there!
We are currently in the process of merging both the Canary and Nightly versions of yuzu into a single release channel.
Jump right in to find out more about this!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;A very good day to all the &lt;em&gt;&lt;strong&gt;yuz-ers&lt;/strong&gt;&lt;/em&gt; out there!
We are currently in the process of merging both the Canary and Nightly versions of yuzu into a single release channel.
Jump right in to find out more about this!&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;announcement&#34;&gt;Announcement&lt;/h2&gt;
&lt;article class=&#34;message&#34;&gt;
&lt;div class=&#34;message-header is-dropdown&#34;&gt;
&lt;p&gt;We are merging yuzu Nightly and yuzu Canary releases into a single &#34;yuzu&#34; release!&lt;/p&gt;
&lt;/div&gt;
&lt;/article&gt;
&lt;p&gt;Don&amp;rsquo;t fret, we are just doing some reorganization to make things easier for both the users and the developers.
Today marks the retirement of both yuzu Nightly and yuzu Canary release channels.
From tomorrow, yuzu will have only a single release channel, simply dubbed &amp;ldquo;yuzu&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Most of you might be thinking, &amp;ldquo;why are they doing this?&amp;rdquo; or &amp;ldquo;what does this mean for the users?&amp;rdquo;.
Let&amp;rsquo;s go back in time for a bit to understand the &amp;ldquo;why?&amp;rdquo; part.&lt;/p&gt;
&lt;h2 id=&#34;a-big-why&#34;&gt;A big &amp;ldquo;Why?&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;When yuzu was first forked from Citra and was setting up shop as a separate project, it borrowed a few things from Citra (apart from the code).
In those, were the general ideas about build releases, build generating infrastructure, and release channel naming convention.
For a good while, these ideas served the purpose - that is to generate builds and distribute them, but it was high time for some improvements.&lt;/p&gt;
&lt;p&gt;In the initial days of yuzu development, due to the large list of missing/unknown functionality, we had to add &lt;code&gt;asserts&lt;/code&gt; (or &lt;code&gt;assertions&lt;/code&gt;) wherever necessary in the codebase.
Assertions are statements used to test assumptions made by the programmers.
This allowed us to understand what functionality we were missing and which games used those, if we needed to test them.&lt;/p&gt;
&lt;p&gt;The philosophy behind the nightly channel was to have a release channel with asserts enabled, so that the developers keep getting data on what games were missing what functionality.
But having yuzu assert and crash while playing a game rendered it unusable for normal users.
To overcome this, we decided to release the canary builds with specific &lt;code&gt;IGNORE ASSERTS&lt;/code&gt; code included.&lt;/p&gt;
&lt;p&gt;This made yuzu ignore all those assertions and allowed normal users to test or play games on it.
But as yuzu progressed further, the canary builds gained increased popularity among the users as the nightly builds were absolutely unusable.
As a result, the developers had to concentrate more on the canary builds, so that they could get users to test their code and thus improve yuzu.&lt;/p&gt;
&lt;p&gt;As we were making good progress in reducing the assertions, the nightly release branch no longer had anything to offer to the developers or the users.
It was also redundant to have two &lt;code&gt;stable&lt;/code&gt; release channels for the same codebase.
Hence the reorganization.&lt;/p&gt;
&lt;h2 id=&#34;what-does-it-mean-for-the-users&#34;&gt;What does it mean for the users?&lt;/h2&gt;
&lt;article class=&#34;message&#34;&gt;
&lt;div class=&#34;message-header is-dropdown&#34;&gt;
&lt;p&gt;From the user&#39;s perspective, this doesn&#39;t change anything.&lt;/p&gt;
&lt;/div&gt;
&lt;/article&gt;
&lt;p&gt;We are just reorganizing things internally and it will not have &lt;code&gt;any&lt;/code&gt; impact for you, as end-users.
With this slight reorganization, instead of multiple branches, we will now have a single stable branch.
This will make it easier for new users to use yuzu, and with this new release channel, you will still get the same regular &lt;code&gt;new updates&lt;/code&gt; and &lt;code&gt;bug fixes&lt;/code&gt; that you&amp;rsquo;ve come to expect with the Canary builds.&lt;/p&gt;
&lt;p&gt;With the new release channel, we&amp;rsquo;ve migrated our CI from &lt;code&gt;Travis CI&lt;/code&gt; &amp;amp; &lt;code&gt;Appveyor CI&lt;/code&gt; to &lt;code&gt;Azure Dev Ops&lt;/code&gt;.
&lt;code&gt;Azure Dev Ops&lt;/code&gt; is a free and reliable service provided by Microsoft.
That means things like uptime and support are much better than &lt;code&gt;Travis&lt;/code&gt; or &lt;code&gt;Appveyor&lt;/code&gt;.
It is a single service which can generate builds for all of our platforms, which we didn&amp;rsquo;t have before.
We also get more dedicated resources and therefore builds are generated much faster with Azure.&lt;/p&gt;
&lt;p&gt;Starting today, users will be able to get the new and improved yuzu builds via the installer from our &lt;a href=&#34;https://yuzu-mirror.github.io/downloads/&#34;&gt;website&lt;/a&gt; or our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu-mainline/releases/&#34;&gt;GitHub&lt;/a&gt;.
And if you are already using our installer, you will be automatically migrated to the latest yuzu build.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./installer.png&#34; title=&#34;yuzu Installer (Updated)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-migration/installer_hu4361ee58d68492e7ac1a8c908a9551e1_44909_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;yuzu Installer (Updated)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;yuzu Installer (Updated)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>yuzu Patreon Preview Release September 2019</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-sept-2019/</link>
      <pubDate>Mon, 09 Sep 2019 01:18:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-sept-2019/</guid>
      <description>&lt;p&gt;Good Day yuz-ers! (&lt;em&gt;yeah, that&amp;rsquo;s sticking!&lt;/em&gt;)
Many of you thought that yuzu&amp;rsquo;s development slowed down, didn&amp;rsquo;t you?
Well, guess again - The team has been working tirelessly to bring you this exciting new feature!
What is it? Jump right in to find out!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Good Day yuz-ers! (&lt;em&gt;yeah, that&amp;rsquo;s sticking!&lt;/em&gt;)
Many of you thought that yuzu&amp;rsquo;s development slowed down, didn&amp;rsquo;t you?
Well, guess again - The team has been working tirelessly to bring you this exciting new feature!
What is it? Jump right in to find out!&lt;/p&gt;
&lt;hr&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smm2-1.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./smm2-1.jpg&#34; alt=&#34;Super Mario Maker 2 - Rescaled to 6k&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smm2-2.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./smm2-2.jpg&#34; alt=&#34;Super Mario Maker 2 - Rescaled to 6k&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smm2-3.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./smm2-3.jpg&#34; alt=&#34;Super Mario Maker 2 - Rescaled to 6k&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Maker 2 - Rescaled to 6k&lt;/p&gt;


&lt;p&gt;We hope everyone had an enjoyable and relaxing summer.
While you may have noticed a bit of a lull during August, make no mistake that our team was still hard at work!
Behind the scenes, our GPU team has been investing a ton of time and talent into bringing about this patreon releases&amp;rsquo; biggest feature: &lt;code&gt;Resolution Rescaler!&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;you-can-download-this-release-on-our-patreonhttpswwwpatreoncompostsseptember-2019-29811265&#34;&gt;You can download this release on our &lt;a href=&#34;https://www.patreon.com/posts/september-2019-29811265&#34;&gt;Patreon&lt;/a&gt;!&lt;/h3&gt;
&lt;p&gt;As you might expect from the name, this feature increases native resolution through a set of rules enforced by a profile, very similar to other emulators such as Cemu.
You can select &lt;code&gt;Profile Scanner (Native)&lt;/code&gt; option in the &lt;code&gt;Internal Resolution&lt;/code&gt; drop-down list.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When this option is selected, yuzu will continuously learn more about your specific games rendering methods, and will help create a resolution profile for that game.&lt;/li&gt;
&lt;li&gt;Once a profile is generated or obtained, the user can then select what multiplier they would like to increase their resolution by (2x, 4x, etc).&lt;/li&gt;
&lt;li&gt;You can find these rescaling profiles under &lt;code&gt;%APPDATA%/yuzu/rescaling/&lt;/code&gt; on Windows and &lt;code&gt;~/.local/share/yuzu-emu/rescaling/&lt;/code&gt; on Linux, or you can right-click the game on the UI and click on &lt;code&gt;Open Rescaling Profile&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./config.png&#34; title=&#34;Configuration Option&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-sept-2019/config_hu8feeee3ebcec5c198c77d76f2a96f9d9_18745_576x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Configuration Option&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Configuration Option&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This of course doesn&amp;rsquo;t come without a few kinks that need to be ironed out.
For now, some of the dev teams known issues include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Super Mario Odyssey&lt;/code&gt; and &lt;code&gt;The Legend of Zelda: Breath of the Wild&lt;/code&gt; won&amp;rsquo;t rescale correctly on the edges due to a hardcoded AA shader that those games have. &lt;br&gt;
The game itself will still look better and more accurate, but you&amp;rsquo;ll noticed the jagged edges typically associated with hardcoded AA games.&lt;/li&gt;
&lt;/ul&gt;

 
 &lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
     
     
     
     
     
     
     
     &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
         
             &lt;a href=&#34;./botw-1.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./botw-1.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild - Rescaled to 6k&#34;&gt;&lt;/a&gt;
         
     &lt;/div&gt;
     
     
     
     
     
     
     
     &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
         
             &lt;a href=&#34;./botw-2.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./botw-2.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild - Rescaled to 6k&#34;&gt;&lt;/a&gt;
         
     &lt;/div&gt;
     
     
     
     
     
     
     
     &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
         
             &lt;a href=&#34;./botw-3.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./botw-3.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild - Rescaled to 6k&#34;&gt;&lt;/a&gt;
         
     &lt;/div&gt;
     
 &lt;/div&gt;
 
 
 &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda: Breath of the Wild - Rescaled to 6k&lt;/p&gt;
 

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Pokémon: Let&#39;s Go&lt;/code&gt; and some other games have small rendering artefacts when rescaled, such as the flames on Charizard&amp;rsquo;s tail do not render.&lt;/li&gt;
&lt;/ul&gt;

 
 &lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
     
     
     
     
     
     
     
     &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
         
             &lt;a href=&#34;./smo-1.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./smo-1.jpg&#34; alt=&#34;Super Mario Odyssey - Rescaled to 6k&#34;&gt;&lt;/a&gt;
         
     &lt;/div&gt;
     
     
     
     
     
     
     
     &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
         
             &lt;a href=&#34;./smo-2.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./smo-2.jpg&#34; alt=&#34;Super Mario Odyssey - Rescaled to 6k&#34;&gt;&lt;/a&gt;
         
     &lt;/div&gt;
     
     
     
     
     
     
     
     &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
         
             &lt;a href=&#34;./smo-3.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./smo-3.jpg&#34; alt=&#34;Super Mario Odyssey - Rescaled to 6k&#34;&gt;&lt;/a&gt;
         
     &lt;/div&gt;
     
 &lt;/div&gt;
 
 
 &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey - Rescaled to 6k&lt;/p&gt;
 

&lt;p&gt;That&amp;rsquo;s not all that has changed, other notable fixes include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sRGB has been fixed. This essentially corrects some games that looked lighter than usual.&lt;/li&gt;
&lt;li&gt;Viewport and scissor testing have been corrected, which fixes a ton of issues in many different games, most notably in &lt;code&gt;Hyrule Warriors&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hw-1.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./hw-1.jpg&#34; alt=&#34;Hyrule Warriors - Rescaled to 6k&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hw-2.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./hw-2.jpg&#34; alt=&#34;Hyrule Warriors - Rescaled to 6k&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hw-3.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./hw-3.jpg&#34; alt=&#34;Hyrule Warriors - Rescaled to 6k&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Hyrule Warriors - Rescaled to 6k&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;Tons of refactoring changes, to better prepare us for our Vulkan backend and other future improvements.&lt;/li&gt;
&lt;li&gt;Reworked GPU buffer cache is now more accurate and faster, which lead to fixes in &lt;code&gt;Super Smash Bros. Ultimate&lt;/code&gt;, &lt;code&gt;Onimusha Warlords&lt;/code&gt;, and many other titles.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ssbu-1.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./ssbu-1.jpg&#34; alt=&#34;Super Smash Bros. Ultimate - Rescaled to 6k&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ssbu-2.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./ssbu-2.jpg&#34; alt=&#34;Super Smash Bros. Ultimate - Rescaled to 6k&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./ssbu-3.jpg&#34; title=&#34;&#34;&gt;&lt;img src=&#34;./ssbu-3.jpg&#34; alt=&#34;Super Smash Bros. Ultimate - Rescaled to 6k&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Smash Bros. Ultimate - Rescaled to 6k&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;Corrected our shader code to help set up preparation for &lt;code&gt;Fire Emblem: Three Houses&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Several fixes for &lt;code&gt;Xenoblade 2&lt;/code&gt; - character models look better and most vertex explosions are gone.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./xenoblade.png&#34; title=&#34;Xenoblade 2&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-sept-2019/xenoblade_hu35b03a317bd737a67a98836b5b0dacb8_2205509_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Xenoblade 2&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Xenoblade 2&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;This is a huge release for our testing purposes.
The &lt;code&gt;Resolution Rescaler&lt;/code&gt; is still being thoroughly worked on, so if you come across any bugs that weren&amp;rsquo;t mentioned above, or have any feedback, please don&amp;rsquo;t hesitate to share it with us in our patreon channels on our discord server.&lt;/p&gt;
&lt;p&gt;Once again thank you for your patronage, and we look forward to hearing back from you all! &lt;br&gt;
Cheers, &lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;yuzu development team&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;If you&amp;rsquo;d like to try out this preview release, please head on over to our &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt; to get access!
Thank you again for your support!&lt;/strong&gt;&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Mini-Series - Dev Interview #2</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-mini-dev-2/</link>
      <pubDate>Fri, 09 Aug 2019 11:48:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-mini-dev-2/</guid>
      <description>&lt;p&gt;Good day, yuz-ers (&lt;del&gt;bad pun, I know&lt;/del&gt;)!
While our devs are hard at work trying to bring you more performance improvements and game compatibility, we are back again with something a little bit more interesting - &lt;strong&gt;Dev Interview #2&lt;/strong&gt;.
Jump right in, to find out who we&amp;rsquo;re interviewing this time.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Good day, yuz-ers (&lt;del&gt;bad pun, I know&lt;/del&gt;)!
While our devs are hard at work trying to bring you more performance improvements and game compatibility, we are back again with something a little bit more interesting - &lt;strong&gt;Dev Interview #2&lt;/strong&gt;.
Jump right in, to find out who we&amp;rsquo;re interviewing this time.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Welcome to part 2 of our previously announced &lt;code&gt;Developer Interviews&lt;/code&gt; segment.
We are extremely proud that we were once again successful in dragging one of our developers away from programming to answer a few questions.
This time, it is an interview with one of our resident GPU emulation experts: &lt;em&gt;&lt;strong&gt;Rodrigo&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Rodrigo (a.k.a &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;ReinUsesLisp&lt;/a&gt;) is best known for his massive contributions to yuzu in the GPU emulation area.
His various contributions have improved the user&amp;rsquo;s visual experience, and his shader disk caches improved the performance of many games on yuzu.
He is also the guy who is currently working on implementing the Vulkan API.
Below, you&amp;rsquo;ll find an informative conversation we had that should also help you all understand more about what he&amp;rsquo;s doing behind the scenes.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Q: Hi Rodrigo! Wanna tell our patrons a little about yourself?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;R:&lt;/strong&gt; Hi! I&amp;rsquo;m some random guy from Argentina working on emulating the Nintendo Switch&amp;rsquo;s GPU, (&lt;em&gt;and I&amp;rsquo;m totally not ripping off Lioncash with this presentation&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Right now, I am a school teacher and don&amp;rsquo;t have a formal programming background, but I&amp;rsquo;d like to get a computer science job in the future. I&amp;rsquo;m also interested in languages (both spoken &amp;amp; programming) and software development.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: You are entirely self taught?! So, what made you get into emulation?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;R:&lt;/strong&gt; Yes. See, I always used to play games in my childhood through emulators, mostly 90s console emulators (SNES and Genesis). Later on, I remember playing &lt;code&gt;Twilight Princess&lt;/code&gt; on Hyrule Fields with Dolphin at &lt;strong&gt;3 FPS&lt;/strong&gt;, it was just awesome.&lt;/p&gt;
&lt;p&gt;Around 7 years ago, I learnt to program small RPGs in plain C++ (and then C), but that never got beyond the prototyping stages, mainly because of boredom and the lack of artistic resources.&lt;/p&gt;
&lt;p&gt;What got me into emulation mainly was yuzu&amp;rsquo;s very &lt;a href=&#34;https://www.youtube.com/watch?v=1VzyIHMTA2Q&#34;&gt;first video&lt;/a&gt; of three commercial games booting (Cave Story, Isaac Afterbirth and Puyo Puyo Tetris).
&lt;strong&gt;There it was!&lt;/strong&gt; &amp;ndash; an emulator of a console, that I thought was a successful piece of hardware: A tablet with a somewhat desktop GPU? That would have been madness some years ago.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./first.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-2/first_hu1a5066c6b19d4199d2184b5decfc9f62_190724_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Cave Story&amp;#43; (First yuzu build) - We&amp;#39;ve come a long way from that!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Cave Story&amp;#43; (First yuzu build) - We&amp;#39;ve come a long way from that!&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;Q: That&amp;rsquo;s really interesting to hear. Before yuzu and Switch emulation, have you ever worked on other older emulators?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;R:&lt;/strong&gt; No, I&amp;rsquo;ve never worked on a non-Switch emulator. The closest thing I did related to emulation was a clone of Pico-8 Celeste for the NES in 6502 assembly.
It was a fun experience because I learnt the curse, and blessing, that it is to work that close to the hardware; it showed me what a pain it was to program classics like Super Mario Bros. 3.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: Let&amp;rsquo;s get a bit technical. What areas of Switch emulation have you worked on the most, and why? Which other areas keep you interested?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;R:&lt;/strong&gt; I&amp;rsquo;ve worked on the graphics, and compute departments of Switch emulation.
Emulating a modern GPU (Tegra) by using other modern GPUs (user end) is my area of interest.
Here&amp;rsquo;s a cool fact for those that don&amp;rsquo;t know: the Switch&amp;rsquo;s GPU is an Nvidia Tegra X1, and it utilizes the same architecture of a GTX 960+.&lt;/p&gt;
&lt;p&gt;As for why I like it, it&amp;rsquo;s because GPUs nowadays are like mini sub-computers inside a machine.
The list of functionality present in the Tegra X1 grows bigger the more we look into it; since it’s a Nvidia device, it can execute CUDA kernels (programs that run some computations in the GPU, primarily used for scientific calculations or accelerated computations).
It has the 5 traditional shader stages, an extra vertex shader stage, and compute shaders; while at the same time, it supports the supposedly deprecated features from the D3D9 (Direct3D) era, like rendering with quads and alpha testing.&lt;/p&gt;
&lt;p&gt;From time to time, I try to get into Core emulation, but it never ends up with good results. Funnily enough, while I was investigating the SSBU (Super Smash Bros. Ultimate) crash, I totally thought I made a breakthrough  - only to find out I was disassembling the wrong module. (LOL)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: What are some of the challenges you generally face when working on GPU emulation?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;R:&lt;/strong&gt; One of biggest challenges is the inherent variable state of Nvidia GPUs.
Sometimes, graphics APIs like OpenGL and Vulkan have requirements that are the &amp;ldquo;common ground&amp;rdquo;, something that&amp;rsquo;s needed by the lowest denominator.
We have to write very annoying workarounds to get that functionality working in the emulator.&lt;/p&gt;
&lt;p style=&#34;color:cyan&#34;&gt;&lt;b&gt;&lt;i&gt;Here are some sneak peeks from my Vulkan test build. It&#39;s still missing a lot of things, but it&#39;s not too bad either.&lt;/b&gt;&lt;/i&gt;&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./botw.png&#34; title=&#34;The Legend of Zelda - Breath of the Wild&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-2/botw_hu2f3d8639263ce1cf75e97f6883b98d6b_1264331_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda - Breath of the Wild&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda - Breath of the Wild&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./onepiece.png&#34; title=&#34;One Piece - Unlimited World&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-2/onepiece_hu05ee499615279f2c8815885d30394e65_1619135_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;One Piece - Unlimited World&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;One Piece - Unlimited World&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smo.png&#34; title=&#34;Super Mario Odyssey&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-2/smo_hud1d23ab3f053045469a44d30a1066667_667906_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Q: What motivates you every day to keep working on this stuff?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;R:&lt;/strong&gt; Emulating modern GPU features, on hardware with those same features, is something that has only been possible in the recent times, due to the increasing similarities in hardware between consoles and desktops.
Slowly understanding how some known functionality is implemented by the hardware, and then re-implementing it on the emulator afterwards, really motivates me.&lt;/p&gt;
&lt;p&gt;There are two things that I enjoy the most:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;seeing games run faster, and better than how they ran before.&lt;/li&gt;
&lt;li&gt;seeing games getting closer and closer to how they look on the console.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And if I manage to get these improvements by writing better code, it&amp;rsquo;s an added bonus.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: Can you tell us a little about what you are currently working on? A sneak-peek perhaps?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;R:&lt;/strong&gt; That&amp;rsquo;s classified information :P
I&amp;rsquo;ve recently worked on an improved &amp;amp; generic texture cache.
&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; helped by cleaning up my bugs to get the thing working, and he&amp;rsquo;s done an awesome job.
A generic texture cache allows us to share the complex part of it across graphics APIs.
That means that we will have the same overall logic for OpenGL and Vulkan, making it easier to maintain and improve.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not as good as Dolphin&amp;rsquo;s VideoCommon, one of the better examples for generic graphics code, but it&amp;rsquo;s still better than having to copy-paste code everywhere.
This is one of the last prerequisites for the Vulkan API.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve also been working on implementing various compute shader related instructions: shared memory (ARB_compute_shader), atomic operations, memory shuffles (NV_shader_thread_shuffle), votes (NV_gpu_shader5, NV_shader_thread_group), surface operations (SUATOM, SULD).
These are all features from the D3D11/12 era, meaning that we are reaching interesting complexity on the shaders we find in recently released games.
I am also investigating how to implement some missing functionality in yuzu, but that&amp;rsquo;s a story for another time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: Would you like to say something to our audience?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;R:&lt;/strong&gt; Well, there are three things I&amp;rsquo;d like to say.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;First and foremost...&lt;/code&gt; most of our GPU work has been possible thanks to research done by the people working on nouveau (mesa&amp;rsquo;s Nvidia free driver) and libnx&amp;rsquo;s nouveau port to Switch. They have been of huge help.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Second...&lt;/code&gt; many people believe that Vulkan will bring lots of performance improvements to the emulator&amp;hellip; I was one of those too. Don&amp;rsquo;t get me wrong, it might boost performance on some hardware vendors, but the main issue resides in Vulkan&amp;rsquo;s design.
It is designed in a way that the programmer cooks and reuses its resources, but in emulation you can&amp;rsquo;t easily know what&amp;rsquo;s going to happen in the future. On the other hand, OpenGL, by design, works without backing its commands.&lt;/p&gt;
&lt;p&gt;Some people might ask, why would we want two APIs? I think one API is going to perform better on two vendors, while the other API is prevalent on the other vendor.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;And last, but not least...&lt;/code&gt; We have a console that&amp;rsquo;s just two years old, and it&amp;rsquo;s still lacking the mainstream entries for most Nintendo IPs: Metroid, Donkey Kong Country, the announced Gen 8 Pokémon, Star Fox, Mario Kart, F-Zero (who knows? maybe they will find a way to refresh the franchise) and the end-of-cycle Zelda.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m really excited about what&amp;rsquo;s to come, and how good Switch emulators will perform with these games. Emulation has been surprisingly faster in the last few years. Let&amp;rsquo;s look forward to a wonderful future&amp;hellip;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This has been absolutely wonderful.
Huge thanks to &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; for taking time off his busy schedule to give us a brief insight into his life.
We wish you success in all your future endeavours. Keep making yuzu awesome!&lt;/p&gt;
&lt;p&gt;We hope you all enjoyed it, and we will be back soon with another featured yuzu dev to bring you behind the curtain again.
Until then, thank you for your support and stay tuned!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>yuzu Patreon Preview Release July 2019</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-july-2019/</link>
      <pubDate>Tue, 02 Jul 2019 21:55:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-july-2019/</guid>
      <description>&lt;p&gt;Hey there, people! You won’t believe what we’ve got in store for you this time!
The new Patreon preview has a big surprise waiting for you.
Hop in now, to find out more details.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey there, people! You won’t believe what we’ve got in store for you this time!
The new Patreon preview has a big surprise waiting for you.
Hop in now, to find out more details.&lt;/p&gt;
&lt;p&gt;For the past couple of weeks, the team has been hard at work getting some important services and functions implemented.
It’s thanks to these specific services and functions that you all will now get to play &lt;code&gt;Super Mario Maker 2&lt;/code&gt; on yuzu!&lt;/p&gt;
&lt;p&gt;Yes, you heard right, &lt;code&gt;Super Mario Maker 2&lt;/code&gt; now boots and goes in-game, and is mostly playable on yuzu.
Grab our latest - Patreon preview build now, to check it out.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./SMM2.png&#34; title=&#34;Super Mario Maker 2 (Title screen)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-july-2019/SMM2_hu2dc1fadc38e48b4a2aa5c735853c7e08_1688101_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Maker 2 (Title screen)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Maker 2 (Title screen)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h4 id=&#34;you-can-download-this-release-on-our-patreonhttpswwwpatreoncomyuzuteam&#34;&gt;You can download this release on our &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;/h4&gt;
&lt;h3 id=&#34;patreon-release-changelog&#34;&gt;Patreon Release Changelog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;LR Assignment Mode&lt;/code&gt; by &lt;a href=&#34;https://www.github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; – This handles the press LR to bind controllers screen.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SwapNpadAssignment&lt;/code&gt; by &lt;a href=&#34;https://www.github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; – A crucial HID command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Audren&lt;/code&gt; Event and Audio Fixes by &lt;a href=&#34;https://www.github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Prepo SaveReport&lt;/code&gt; by &lt;a href=&#34;https://github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Filesystem Access Logging by &lt;a href=&#34;https://www.github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Boost Mode by &lt;a href=&#34;https://www.github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt; – &lt;br&gt;
&lt;code&gt;Note: does NOT make yuzu faster! We do not overclock yuzu.&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SetInterfaceVersion&lt;/code&gt; by &lt;a href=&#34;https://www.github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt; – Another crucial HID command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OSS Mii Model by &lt;a href=&#34;https://www.github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt; – An HLE implementation of the Mii Model system archive.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Several GPU bug fixes by &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt; and &lt;a href=&#34;https://github.com/Subv&#34;&gt;Subv&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Implementing Conditional Rendering by &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;BlinkHawk&lt;/a&gt; – GPU will now execute, manage, and administer queries, avoiding code paths that are not necessary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New Shader Scanner by &lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;BlinkHawk&lt;/a&gt; – A new, faster, and more reliable shader scanner that’s less prone to crashing and corrupting shader caches. This also fixes a bug with fonts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And the baseline &lt;code&gt;Canary version 2425&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;Phew, that’s quite a few new implementations.
It’s thanks to the hard work of the yuzu development team, that all of these functions are now ready for testing.
A big shout out to Hexagon12 for hunting down all of the service functions that were necessary to get &lt;code&gt;Super Mario Maker 2&lt;/code&gt; in game, and also to &lt;a href=&#34;https://www.github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt; for orchestrating the entire project.&lt;/p&gt;
&lt;p&gt;Here are some in-game screenshots from the Patreon preview build, just for you guys.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./SMM2_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-july-2019/SMM2_1_hu6942963c63efb79e4a31ed37477180dd_241474_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Maker 2 in-game screenshots&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./SMM2_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-july-2019/SMM2_2_hu31412893c9c6c2ec6f622985f0ef28ed_1623363_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Maker 2 in-game screenshots&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Maker 2 in-game screenshots&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./SMM2_3.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-july-2019/SMM2_3_hu4356fe6113e6dff9379c2abea766f042_1864402_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./SMM2_4.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-july-2019/SMM2_4_huf169488d077a8d4bd2d07cadb9bad227_1866808_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note: All these screenshots have been taken using the Patreon preview. We removed the yuzu title-bar, to keep the beauty of images intact.&lt;/strong&gt;&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./SMM2_5.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-july-2019/SMM2_5_hufce1df7cf71c20af067623bca684f496_1701942_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;More Super Mario Maker 2 in-game screenshots&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./SMM2_6.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-july-2019/SMM2_6_hu7171da7c348fb6ebc65bd89e8f2528a1_118552_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;More Super Mario Maker 2 in-game screenshots&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;More Super Mario Maker 2 in-game screenshots&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./SMM2_7.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-july-2019/SMM2_7_hucefe4cc920a78cb3b3401013b8f4ea62_434888_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./SMM2_8.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-july-2019/SMM2_8_huf480997f88a7ca0c341363884fbf992e_415178_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;del&gt;&lt;strong&gt;Note: Currently saving levels causes yuzu to crash, due to a swkbd (software keyboard) issue. But rest assured, we are working on a fix.&lt;/strong&gt;&lt;/del&gt;
The issue with the software keyboard has now been fixed. Please download the latest build from our patreon page.&lt;/p&gt;
&lt;p&gt;As always, we bring this to you as a &lt;code&gt;thank you&lt;/code&gt; for your patronage and dedication to our team!
Please hop on Discord and use the Patreon channels to report any new bugs, or to just say Hi and discuss the new features.
We will keep working diligently to improve yuzu and deliver you with the best possible experience while playing.&lt;/p&gt;
&lt;p&gt;Until next time, keep playing on yuzu and have fun! &lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;yuzu development team.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If you&amp;rsquo;d like to try out this preview release, please head on over to our &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt; to get access!
Thank you again for your support!&lt;/strong&gt;&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Mini-Series - Dev Interview #1</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-mini-dev-1/</link>
      <pubDate>Sun, 16 Jun 2019 23:00:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-mini-dev-1/</guid>
      <description>&lt;p&gt;Hey there, people!
This is a new mini-series of dev interviews, with which we sneak a peek into the lives of our developers.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Hey there, people!
This is a new mini-series of dev interviews, with which we sneak a peek into the lives of our developers.&lt;/p&gt;
&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Disclaimer&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        This mini-series has already been underway for our Patreon supporters and we realized that you all deserve this too. So, here it is. Enjoy.
    &lt;/div&gt;
&lt;/article&gt;

&lt;p&gt;We already know and I guess most of you would agree, when we say our devs are awesome!
They are modern day wizards and the work they do is nothing short of magic.
But as they don&amp;rsquo;t interact much with normal users, you guys might not know much about them.
This needs to change and we are here to fix that!&lt;/p&gt;
&lt;p&gt;So to start off this new mini-series, let&amp;rsquo;s interview - &lt;em&gt;&lt;strong&gt;The Silent Guardian, The Watchful Protector, and The Amazing - Lioncache!!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./lion.png&#34; alt=&#34;Lioncache&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lioncash/&#34;&gt;Lioncache&lt;/a&gt; has been in the emulation scene for ages.
You may also know him from the Nintendo GameCube/Wii emulator &lt;a href=&#34;https://dolphin-emu.org/&#34;&gt;Dolphin&lt;/a&gt;, as he is one of the core maintainers there as well!
&lt;a href=&#34;https://github.com/lioncash/&#34;&gt;Lioncache&lt;/a&gt; has also worked on other emulators like &lt;a href=&#34;https://citra-emu.org/&#34;&gt;Citra&lt;/a&gt;, and even dabbling with Commodore 64 emulation!
We managed to pull him away from programming for a few minutes so that he could sit down and talk with us.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Q: Hi Lioncache! Could you tell our audience a little bit about yourself?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;L:&lt;/strong&gt; Heya! I&amp;rsquo;m Lioncache. I&amp;rsquo;m some rando Canadian that likes working on system emulators because I find them fun.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: So what got you into emulation in the first place?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;L:&lt;/strong&gt; Honestly, it just looked fun.
CPU&amp;rsquo;s are really cool (when they&amp;rsquo;re not being silly) and reverse engineering looked cool (turns out, it really is).
You genuinely learn quite a bit about software and hardware by working on emulation-related things.
It also helps out with one of the many facets of game preservation, which is always nice.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: Speaking of game preservation, why is that so important to you?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;L:&lt;/strong&gt; It&amp;rsquo;s important mainly because without external preservation, there&amp;rsquo;s no guarantee that certain games will always be available.
Companies aim to turn a profit from backwards compatibility when they re-release older games from previous consoles on newer hardware.&lt;/p&gt;
&lt;p&gt;Businesses generally aim to strive for a profit (welcome to Econ-101, y&amp;rsquo;all).
So what this usually means is that only the most popular games with a sizable demand will generally have official re-releases considered for them.
I may not totally agree with that, but it&amp;rsquo;s generally the way things are.
This is generally, why you&amp;rsquo;ll see re-releases of Mario games, Legend of Zelda, etc, but certain other games will, &amp;ldquo;fall through the cracks of time&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;For example, consider &lt;code&gt;Marvelous: Mōhitotsu no Takarajima&lt;/code&gt; for the SNES.
This is a fantastic RPG released in 1996, which was directed by &lt;code&gt;Eiji Aonuma&lt;/code&gt; (who went on to become the series producer for &lt;code&gt;The Legend of Zelda&lt;/code&gt;).
The game itself reused the engine that was made for &lt;code&gt;The Legend of Zelda: A Link to the Past&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./marv_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-1/marv_1_hud83859be302e6ce43dc222a268a33896_19869_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Marvelous: Mōhitotsu no Takarajima (SNES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./marv_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-1/marv_2_hub9440d3d49f22da45bdf371ed8801811_22667_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Marvelous: Mōhitotsu no Takarajima (SNES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./marv_3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-1/marv_3_hub9440d3d49f22da45bdf371ed8801811_19080_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Marvelous: Mōhitotsu no Takarajima (SNES)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Marvelous: Mōhitotsu no Takarajima (SNES)&lt;/p&gt;


&lt;p&gt;So, much of the movement and characteristics are similar but it also had its own unique party system and other things that made it it&amp;rsquo;s own distinct game, and it was really fun to play.
To my knowledge, it hasn&amp;rsquo;t had a re-release in any capacity, nor was it ever localized.
However in 2016 an English fan translation of the game was released, making the game accessible to the English-speaking community.&lt;/p&gt;
&lt;p&gt;Another popular game, which is kind of infamous for not actually being localized and released in North America or Europe during the era of the GameBoy Advance was &lt;code&gt;Mother 3&lt;/code&gt;.
Plans were initially made to localize it, but it never occurred&amp;ndash;plans fell through.
This too, also had an English fan translation made for it.
Which would have been difficult, had the game not been preserved in some form.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./m3_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-1/m3_1_huba5992bf45c10e3e5820cc7655ab3359_30153_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mother 3 (GBA)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./m3_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-1/m3_2_huab87e54867de37a2cf0edc143894362a_26854_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mother 3 (GBA)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./m3_3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-mini-dev-1/m3_3_hu37ddbcbcc14d6a2613738522317b6e2d_35156_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mother 3 (GBA)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Mother 3 (GBA)&lt;/p&gt;


&lt;p&gt;When you have preserved games (in any capacity), along with emulators, it allows potentially doing more with that game.
Consider the scenario where all known cartridges of the game have bit rotten to the degree that they&amp;rsquo;re no longer playable: the game would be considered lost (as far as the public is concerned).&lt;/p&gt;
&lt;p&gt;No one would be able to experience that game, no one would have been able to start a fan translation and made such a great game accessible to those that know English, but not Japanese.
Preservation makes sure that the effort people put into making a game is not lost, while allowing being transformative with the game itself.
It prevents an experience from completely vanishing.&lt;/p&gt;
&lt;p&gt;Game preservation also acts as a secondary backup in the event the actual owning body of the game screws up.
Companies, development teams, anything with a human (or other animal :P) is prone to making mistakes.
Without other people preserving those games, you essentially have a single-point of failure.
No preserved dumps of the game, no emulators, and someone accidentally deletes the source code for said game? Gone.
Forever (unless it&amp;rsquo;s completely remade).
This is why I find game preservation and archiving important.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: This is some really great insight and we appreciate you sharing with us! Well let&amp;rsquo;s get into the meat and potatoes. Can you tell us what you&amp;rsquo;ve been working on for yuzu?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;L:&lt;/strong&gt; I mostly bounce all over the place because I prefer staging all my changes as their own PR, so I usually end up waiting on stuff to be merged, so I have a few areas I work on stuff:&lt;/p&gt;
&lt;h4 id=&#34;display&#34;&gt;Display&lt;/h4&gt;
&lt;p&gt;You&amp;rsquo;ve probably seen me breaking out stuff into classes and reorganizing things there.
That&amp;rsquo;s all the busywork before I can actually start implementing things.&lt;/p&gt;
&lt;p&gt;These are the main display services and what they do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vi:u&lt;/code&gt;: the application level display services—this is what general applications (as the name suggests) will access for basic display stuff.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vi:m&lt;/code&gt;: the manager level services—this is what something running in the background, like a compositor, would use. It can fiddle around with display layers and stuff. This service has the most access to everything out of all vi: services. It has no restrictions.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vi:s&lt;/code&gt;: the system level services—this is used by, well, the system. This service is like vi:u, except it can also retrieve info about various things related to the display.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Handling this stuff properly would be nice, since we can properly see how games are trying to interact with displays in a nicer manner.&lt;/p&gt;
&lt;h4 id=&#34;audio&#34;&gt;Audio&lt;/h4&gt;
&lt;p&gt;Inputs go in, bangin&amp;rsquo; tunes come out.
We need more of the &amp;ldquo;bangin&amp;rsquo; tunes&amp;rdquo; portion.
So basically I just try to implement things that make audio-related functionality work much nicer.&lt;/p&gt;
&lt;h4 id=&#34;cpu&#34;&gt;CPU&lt;/h4&gt;
&lt;p&gt;Our recompiler, dynarmic, isn&amp;rsquo;t complete.
The 64-bit side of things almost is, but it&amp;rsquo;s not totally complete.
We&amp;rsquo;re missing some instructions, but they&amp;rsquo;re instructions where it doesn&amp;rsquo;t really make sense to use them from a performance standpoint if you&amp;rsquo;re a game dev.
So most of the time users of yuzu don&amp;rsquo;t need to care about it.
However, until we implement all of them, we can&amp;rsquo;t kick our interpreter library (unicorn) into the sun.
So over time I&amp;rsquo;ll be working on that.
We also still need to support 32-bit games, that&amp;rsquo;ll come after the 64-bit side of things is all done.&lt;/p&gt;
&lt;h4 id=&#34;kernel&#34;&gt;Kernel&lt;/h4&gt;
&lt;p&gt;We don&amp;rsquo;t implement everything the kernel is able to do, so this is quite a large area all on its own.
It&amp;rsquo;s also one of the most fundamental parts of Switch emulation, given it drives almost everything else in the emulator in terms of backing functionality (emulated processes, threads, memory mappings, etc).
There&amp;rsquo;s no real specific part of the kernel that I focus on.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s more of a cascading effect when working on it:
&lt;code&gt;Oh, so I make [x] work right, then, with that in place, I can follow up with making [y] work properly.&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: Phew, is that all you do? Just kidding! Do you ever find time to eat during all of this?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;L:&lt;/strong&gt; Hit me with that phat spicy Japanese food any day or any spicy food in general.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Big thanks to &lt;a href=&#34;https://github.com/lioncash/&#34;&gt;Lioncache&lt;/a&gt;, for sitting with us for this interview and also to special thanks to Jon S. for being the interviewer.
We hope you guys enjoyed it, and we will be back soon with another featured Yuzu dev to bring you guys behind the curtain again.
Until then, thank you for your support and stay tuned!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>yuzu Patreon Preview Release June 12th</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-jun-12/</link>
      <pubDate>Wed, 12 Jun 2019 03:48:00 &#43;0530</pubDate>
      <author>flamesage</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-patreon-preview-jun-12/</guid>
      <description>&lt;p&gt;Good day, yuzu fans! Today we bring you another exciting yuzu update with the June 2019 Patreon Preview Release! We heard your feedback - this time around, we have some major graphical fixes!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Good day, yuzu fans! Today we bring you another exciting yuzu update with the June 2019 Patreon Preview Release! We heard your feedback - this time around, we have some major graphical fixes!&lt;/p&gt;
&lt;p&gt;The team has been hard at work to constantly improve yuzu, and these additions are extremely important in painting the whole picture.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You can download this release on our &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-youll-find-in-this-new-build&#34;&gt;What you&amp;rsquo;ll find in this new build:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;A brand new Texture Cache:&lt;/strong&gt; As certain members of our yuzu team inch ever closer to a Vulkan implementation, they realized the current OpenGL backend has an old yet heavily modified (for yuzu) texture cache that would be incompatible with Vulkan. There were also several bugs in our current cache and not everything was being emulated correctly. Now, we have a brand new API-agnostic texture cache that works with both OpenGL (and will work with Vulkan once we complete that renderer)! It&amp;rsquo;s much more accurate and performant over the old/current implementation, and should also provide several graphical fixes!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Basic GPU Sync Mechanisms:&lt;/strong&gt; We&amp;rsquo;re well aware the current Async GPU emulation has major issues. The problem was that our current implementation lacked the real syncing mechanisms used by the Nintendo Switch, thus making it very unstable and caused crashes. With this new implementation, you can expect games to work much better with Async enabled!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Swap Interval Emulation:&lt;/strong&gt; yuzu will now properly emulate the swap interval between window&amp;rsquo;s refresh times, allowing us to correctly detect a games actual refresh rate. What this basically means is that if a game natively runs at 30fps, you will no longer need the option to &amp;ldquo;force 30fps&amp;rdquo; and yuzu automatically detects the games refresh rate! We still however provide this option, as it&amp;rsquo;s useful to emulate some games at lower framerates when a full 60fps cannot be achieved.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As always, we look to our dedicated Patrons to not only enjoy this new build, but to report how the build&amp;rsquo;s new features are working for you. Find us on the Patreon section of discord to report issues, or just drop in to leave a comment. We look forward to continuing to lead the way in proper Switch emulation, and we again thank you for your continued support!&lt;/p&gt;
&lt;p&gt;All the best,
yuzu Development Team&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you&amp;rsquo;d like to try out this preview release, please head on over to our &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt; to get access!
Thank you again for your support!&lt;/strong&gt;&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>New Feature - Boxcat</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-boxcat/</link>
      <pubDate>Thu, 23 May 2019 23:00:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-boxcat/</guid>
      <description>&lt;p&gt;Good day, yuzu fans!
Today we bring you another exciting Switch feature which will create opportunities, for new in-game content across various games!
Without further ado, let&amp;rsquo;s get started!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Good day, yuzu fans!
Today we bring you another exciting Switch feature which will create opportunities, for new in-game content across various games!
Without further ado, let&amp;rsquo;s get started!&lt;/p&gt;
&lt;h3 id=&#34;what&#34;&gt;What?&lt;/h3&gt;
&lt;p&gt;Yes, you heard that correctly.
New in-game content across various games, with events held occasionally.&lt;/p&gt;
&lt;h3 id=&#34;how&#34;&gt;How?&lt;/h3&gt;
&lt;p&gt;The Nintendo Switch has a network service called &lt;code&gt;BCAT&lt;/code&gt;, using which games can add new content dynamically, i.e. new content without updating the game itself.
Nintendo can push new content to various games via this service, whenever it wants.
Some examples of this type of content would be - Super Mario Odyssey hints, Super Mario Odyssey costumes, and Splatoon 2 items.&lt;/p&gt;
&lt;p&gt;&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Note&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        &lt;strong&gt;Users should possess the following versions of the games at minimum.&lt;/strong&gt; &lt;br&gt;
SMO - &lt;code&gt;1.2.0&lt;/code&gt; || BOTW - &lt;code&gt;1.1.0&lt;/code&gt; || Splatoon 2 - &lt;code&gt;3.2.0&lt;/code&gt;
    &lt;/div&gt;
&lt;/article&gt;

&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Surprise!&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        &lt;em&gt;The Legend of Zelda - Breath of The Wild, now boots with updates and DLC enabled.&lt;/em&gt;
    &lt;/div&gt;
&lt;/article&gt;
&lt;/p&gt;
&lt;h3 id=&#34;then&#34;&gt;Then?&lt;/h3&gt;
&lt;p&gt;Thanks to the efforts of our developer &lt;a href=&#34;https://github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt;, we now have an open source replacement of the service in yuzu.
By emulating the &lt;code&gt;BCAT&lt;/code&gt; service at a high-level, yuzu is able to intercept the game&amp;rsquo;s calls to Nintendo&amp;rsquo;s servers and reroute them to yuzu&amp;rsquo;s servers.
This means that games running on yuzu, will now check for new content on yuzu&amp;rsquo;s servers instead of Nintendo&amp;rsquo;s.&lt;/p&gt;
&lt;p&gt;This allows us to add new in-game content for games that use this service.
For the inaugural run, our team members have added some cool content across different games which you can check out &lt;a href=&#34;https://yuzu-mirror.github.io/help/feature/boxcat/&#34;&gt;here&lt;/a&gt;.
We will have new events occasionally, so users will have even more fun while playing games on yuzu.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./boxcat.png&#34; title=&#34;Boxcat Settings Configuration&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-boxcat/boxcat_hucffa826a9f0df672451c592ed63a979a_54596_635x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Boxcat Settings Configuration&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Boxcat Settings Configuration&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h3 id=&#34;when&#34;&gt;When?&lt;/h3&gt;
&lt;p&gt;We will be testing this feature in our Patreon preview builds first and it will be available to Canary users in the near future.&lt;/p&gt;
&lt;p&gt;We would like to take this opportunity to ask that our users show their support by subscribing to our &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By subscribing to our Patreon, you will be creating more incentive for developers to spend even more time working on yuzu.
For example - Using Patreon funds, several internal bounties have been setup, which have lead to various new features or fixes you might have seen on our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt; or our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt;
&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Want more information on Boxcat?&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        Refer to our help page for Boxcat.
&lt;a href=&#34;https://yuzu-mirror.github.io/help/feature/boxcat/&#34;&gt;https://yuzu-mirror.github.io/help/feature/boxcat/&lt;/a&gt;
    &lt;/div&gt;
&lt;/article&gt;

&lt;h3 id=&#34;fin&#34;&gt;Fin!&lt;/h3&gt;
&lt;p&gt;We thank all of our 300+ patrons for their continued love and support.
We thank the entire yuzu community for the love and support they have shown to the project.
We will be working even more diligently to bring many more new, and exciting features in the future. &lt;br&gt;
Keep playing on yuzu, and have fun!&lt;/p&gt;
&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>yuzu Patreon Preview Release</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-patreon-preview/</link>
      <pubDate>Mon, 11 Feb 2019 03:48:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-patreon-preview/</guid>
      <description>&lt;p&gt;A very good day to all you yuzu fans out there!
Today we are here to share with you some very exciting news for our biggest supporters!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;A very good day to all you yuzu fans out there!
Today we are here to share with you some very exciting news for our biggest supporters!&lt;/p&gt;
&lt;h2 id=&#34;foreword&#34;&gt;Foreword&lt;/h2&gt;
&lt;p&gt;As a start, let&amp;rsquo;s talk about how emulator development works from a bird&amp;rsquo;s-eye view.
We all know that developing emulators requires significant reverse-engineering and programming knowledge, as well as lots of coding, testing, and bug fixing.
That&amp;rsquo;s the &lt;strong&gt;technical&lt;/strong&gt; stuff.
But before we can even get there, we need people who have the required skills and are willing to invest their time and effort into the project.
These people, our Developers, work tirelessly to keep Switch emulation progressing.
They work mostly in their free time and are very passionate about the project.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smo-2.png&#34; title=&#34;Super Mario Odyssey&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview/smo-2_hu02347dcc430ed080637b8e814a1b599b_2662642_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;code&gt;Wait a second, you guys probably already know all this stuff.&lt;/code&gt;
What you might not know is that, most of the time these developers work for free.
They don&amp;rsquo;t get paid for their efforts nor do they ask to be paid.
In addition to our development costs (Switch consoles and games, web services, etc.), some of our developers are in situations that would really benefit from even a small amount of income from this project.&lt;/p&gt;
&lt;p&gt;As you probably know, we created a &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt; to address this need.
We have asked the community to help us by subscribing and they heard.
We now have over 200 patrons who collectively contribute to our project!
We would like to sincerely thank them for their love, support, and contributions!&lt;/p&gt;
&lt;p&gt;When we decided to create a Patreon, we promised our patrons that they would get access to exclusive content as a thank you.
Until now, we have only partially fulfilled our promise - by means of exclusive Discord support.
It&amp;rsquo;s about time we fulfilled on our promise.&lt;/p&gt;
&lt;h2 id=&#34;big-news&#34;&gt;Big News&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;As a token of our thanks, we are announcing today that we will be releasing a special Preview of yuzu to our patrons!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve made lots of incredible progress that we&amp;rsquo;d like to share first with the folks who have been our biggest supporters and fans.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Starting today, patrons with donations of 5$/month and above (Patreon Roles: Supporter, Member, VIP) will get early access to new features via a &lt;strong&gt;yuzu Patreon Preview&lt;/strong&gt;, before this content becomes available in our Nightly and Canary releases.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Features found in this preview are not exclusive and will definitely be available for regular users within a few days.
In accordance with our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/blob/master/license.txt&#34;&gt;open source license&lt;/a&gt;, the source code for these previews will be made available to our patrons.&lt;/p&gt;
&lt;p&gt;This is just a preview release and is not similar to our Nightly or Canary builds - which get updated daily.
We may do similar releases like this in the future as we have more exciting new features to share, but not with any set regularity.
Support for this preview version will be given exclusively via the Patreon channels on our &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;Discord server&lt;/a&gt;.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview/botw_hu29bf85342407fe01fef2913587279d91_2727510_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda - Breath of the Wild&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw-1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview/botw-1_hue5aef65a3bbdc69e0cd159dbd0fd61b7_3420834_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda - Breath of the Wild&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda - Breath of the Wild&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview/smo_hu1bfdf14dda55b9d1adc7b742ef16d223_2796137_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo-1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-patreon-preview/smo-1_huffeae7701a7c1a0c9b6198c4e01a39f6_2313974_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;If you&amp;rsquo;d like to try out this preview release, please head on over to our &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt; to get access!
Thank you again for your support!&lt;/strong&gt;&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report 2018 Part 4</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/</link>
      <pubDate>Mon, 03 Dec 2018 04:00:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/</guid>
      <description>&lt;p&gt;Sorry for keeping you guys waiting!
A whole slew of new updates and a ton of progress await you.
Let&amp;rsquo;s not waste anymore time and get the party started.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;Sorry for keeping you guys waiting!
A whole slew of new updates and a ton of progress await you.
Let&amp;rsquo;s not waste anymore time and get the party started.&lt;/p&gt;
&lt;p&gt;These past couple of months have been absolutely fantabulous.
If you were following us closely on &lt;a href=&#34;https://twitter.com/yuzuemu&#34;&gt;twitter&lt;/a&gt;, you might have seen a few tweets but, strictly speaking, they don&amp;rsquo;t even come close to describing the amount of work that has been accomplished.&lt;/p&gt;
&lt;p&gt;Also, a new remake was released on the Switch a few days back and with it a bunch of contributors raced to fix some of the new issues it uncovered.
We will be covering that in a separate section, so hold on to your seats and enjoy the ride.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./lgpe.png&#34; title=&#34;Pokémon: Let&amp;#39;s Go, Eevee!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/lgpe_hub90f35d784dfb67992007de09962f74c_1562148_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon: Let&amp;#39;s Go, Eevee!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Pokémon: Let&amp;#39;s Go, Eevee!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;cpu--core&#34;&gt;CPU / Core&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/MerryMage&#34;&gt;MerryMage&lt;/a&gt; has added a lot of new ARMv8 instructions to &lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;dynarmic&lt;/a&gt;, our ARM dynamic recompiler, which further reduce our fallbacks to &lt;a href=&#34;https://www.unicorn-engine.org/&#34;&gt;unicorn&lt;/a&gt;.
Code generation has also been improved by making use of more recent CPU instructions (e.g. SSE4.1, AVX, AVX512, etc).
We are slowly moving towards completely phasing out unicorn in favor of dynarmic, with nearly 85% of the work done.
While there are still a few missing instructions in dynarmic, we didn&amp;rsquo;t observe any games hitting them.&lt;/p&gt;
&lt;p&gt;Support for Linux &lt;code&gt;perf&lt;/code&gt; command has been added, which allows us to profile the time we spend in recompiled game code.
In simple terms, it helps us identify areas of code which are being used by games frequently, so that we can optimize those areas.
For more info on &lt;code&gt;perf&lt;/code&gt;, visit &lt;a href=&#34;https://perf.wiki.kernel.org/index.php/Main_Page&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lioncash&#34;&gt;Lioncash&lt;/a&gt; found and fixed a bug in dynarmic&amp;rsquo;s &lt;code&gt;ExclusiveWrite128()&lt;/code&gt; function.
Due to this bug, when the second half of the value was being written, it would overwrite the first half.
Thankfully this wasn&amp;rsquo;t a bug that was being encountered, as the function is currently unused.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/botw_hu24e037a757197f2a05e5a3f91fd9dc74_1944526_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda - Breath of the Wild&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw-1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/botw-1_hua40f04b72d673b2dd6ed01b14526d5f8_2422246_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda - Breath of the Wild&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw-2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/botw-2_hu39497b9b5d3b2244e9ae64c13d760bf9_1878791_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda - Breath of the Wild&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda - Breath of the Wild&lt;/p&gt;


&lt;h2 id=&#34;general-improvements&#34;&gt;General Improvements&lt;/h2&gt;
&lt;p&gt;To ensure general feature parity between the sister projects, whenever we have new features implemented in &lt;a href=&#34;https://citra-emu.org/&#34;&gt;Citra&lt;/a&gt;, we port them to yuzu and vice versa.
Recently we have had new features like Joystick Hot-plugging support and Touch Input handling implemented in Citra.
While Joystick hot-plugging allows us to connect/disconnect controllers on-the-go, without crashing the emulator, Touch Input handling allows us to use a physical touch screen for input, in the place of a mouse.&lt;/p&gt;
&lt;p&gt;Web Services &amp;amp; Telemetry features are used to gather anonymous user statistics and for other backend stuff like user authentication.
We now have a &lt;a href=&#34;https://yuzu-mirror.github.io/game/&#34;&gt;Compatibility Database&lt;/a&gt; which lists the playability information for various games.
Mind you that this list is a work-in-progress and is community driven.
Play games on yuzu and while playing, go to &lt;code&gt;Help -&amp;gt; Report Compatibility&lt;/code&gt; and submit info to help improve the database.
&lt;code&gt;Discord Rich Presence&lt;/code&gt;, a novelty feature, was also added so that yuzu fans could show off in their discord statuses.&lt;/p&gt;
&lt;p&gt;Apart from these, we&amp;rsquo;ve also had a few minor improvements like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unsupported OpenGL extensions pop-up - which tells you if your GPU isn&amp;rsquo;t suitable for yuzu.&lt;/li&gt;
&lt;li&gt;Background color changer - to change background color.&lt;/li&gt;
&lt;li&gt;Fixed logging initialization, default &lt;code&gt;username&lt;/code&gt;, and default language in our SDL frontend.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The Multi-core option has been temporarily removed, due to inaccuracies in our kernel and scheduler.
We will likely support multi-core at some point in the future.&lt;/p&gt;
&lt;h2 id=&#34;audio&#34;&gt;Audio&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/fearlesstobi&#34;&gt;FearlessTobi&lt;/a&gt; and MerryMage teamed up to bring audio-stretching to yuzu!
While the implementation shares a lot in common with audio-stretching in Citra, it&amp;rsquo;s been tuned and optimized for yuzu to decrease the performance impact on emulation and reduce delay and crackling as much as possible.&lt;/p&gt;
&lt;p&gt;If fixes are more your thing, &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt; fixed an annoying softlock in Super Mario Odyssey (SMO).
This game expects various Effect States (for sound effects) to be initialized, even if they aren&amp;rsquo;t updated.
Because SMO hasn&amp;rsquo;t been observed to actually update these states, assertions have been placed to see if they are ever updated.
For now though, his changes mean that various hangs in SMO are fixed, making the game much easier to play.&lt;/p&gt;
&lt;h2 id=&#34;gpu&#34;&gt;GPU&lt;/h2&gt;
&lt;p&gt;Thanks to tons of contributions the past few months, yuzu&amp;rsquo;s GPU core has seen a lot of fixes, optimizations and new features making emulated games look a lot more like their console experience.
At the forefront of these efforts is getting the sublime 3D platformer, Super Mario Odyssey, to playable status.&lt;/p&gt;
&lt;h4 id=&#34;super-mario-odyssey-smo&#34;&gt;Super Mario Odyssey (SMO)&lt;/h4&gt;
&lt;p&gt;As you probably know, while yuzu technically could boot Super Mario Odyssey, it was neither able to properly render graphics nor run the game at decent speeds.
To get the game working, was like an exciting challenge to the developers which, at the end, held a hidden treasure.
So, they set out on a journey - to dig deeper into the internal workings of the game, as well as the console.&lt;/p&gt;
&lt;p&gt;But, as with any treasure hunt, you need clues to start somewhere.
The only way to move forward was to try fixing the existing bugs and graphical issues, which could give more insight into what else might be broken.
And thus started the journey, with 2 goals in mind - to fix issues in SMO and to make it run at playable speeds in yuzu.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./SMO-2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/SMO-2_hu8171c30d957d27d8ccff2b7e02302b32_905716_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./SMO.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/SMO_huc75cf6737fc23d5ca9677d66c91f97ba_898909_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./SMO-1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/SMO-1_hu9abbd01631f76a16c6e5b03f49d7c21e_1219029_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey&lt;/p&gt;


&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt; and &lt;a href=&#34;https://github.com/Subv&#34;&gt;Subv&lt;/a&gt; together implemented &lt;code&gt;multiple color attachments&lt;/code&gt; for the framebuffers.
A color attachment is a texture, which attaches to a framebuffer as a render target and is used for off-screen rendering.
These are used in several techniques including reflection, refraction, and deferred shading.&lt;/p&gt;
&lt;p&gt;A render buffer, or render target, is any specially created single buffer to which part of rendering may be directed.
Some examples would be color buffers and depth buffers.
A framebuffer is a bound collection of several such render buffers.
While all of these changes fixed many graphical issues in SMO and other games, performance still left a lot to be desired.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What if, for a change, instead of fixing bugs, we try to improve rendering in the game?&lt;/strong&gt;
bunnei independently set out to scrutinize the way we were rendering graphics and found out that we could improve the accuracy of how we cached and copied our framebuffers.
And the result was improved rendering in SMO&amp;rsquo;s Ruined Kingdom, without even having to use the &lt;code&gt;Accurate Framebuffers&lt;/code&gt; setting in yuzu.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smo-1295-b.png&#34; title=&#34;Before&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/smo-1295-b_hue32881e8cc368d961f67b12247ba614d_220172_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Before&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Before&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smo-1295-a.png&#34; title=&#34;After&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/smo-1295-a_huc3c41afeff2618892ce394c8d27dfb8d_756136_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;After&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;After&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Our further efforts to improve rendering led to the fact that we needed to properly provide textures to shaders.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A texture is an OpenGL Object that contains one or more images that all have the same image format.
A texture can be used in two ways - it can either be the source of a texture access from a Shader, or it can be used as a render target.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are a number of different types of textures in OpenGL and not all of them are 2D - some are arrays and some are cubemaps.
These are special kinds of textures generally called Layered Textures.
&lt;a href=&#34;https://github.com/FernandoS27&#34;&gt;Blinkhawk&lt;/a&gt; found that we were incorrectly reading these special textures, which was causing various graphical glitches in games.
He then reworked the code to account for size of mipmaps and made sure that we read these textures properly.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Mipmap&#34;&gt;Mipmaps&lt;/a&gt; are generally pre-calculated, optimized sequences of images, each of which is a progressively lower resolution representation of the same image.
If the image to be rendered is big or close to the camera, the renderer uses a bigger texture map, while if it is smaller or farther away, then smaller textures are used.&lt;/p&gt;
&lt;p&gt;The absence of these mipmaps was yet another reason for glitchy rendering in several games.
Blinkhawk identified this, and implemented mipmaps and texture processing modes - which are needed to access said mipmaps.
Mipmaps are intended to increase rendering speed and reduce aliasing artifacts, while texture processing modes change the way games access a texture&amp;rsquo;s mipmaps.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smo-mip.png&#34; title=&#34;Before&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/smo-mip_hu80b73dd9c075af31373980c2841be77d_755027_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Before&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Before&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smo-map.png&#34; title=&#34;After&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/smo-map_hu5654db4c7bd2deab63f7336e94182610_915568_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;After&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;After&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Another missing texture type was Cubemaps.
Cubemaps aren&amp;rsquo;t unique to Super Mario Odyssey - in fact most games use cubemaps.
Essentially, a cubemap is a texture that contains six individual 2D textures that form each side of a textured cube.
The thing that sets SMO apart in this case is &lt;em&gt;how&lt;/em&gt; it uses cubemaps in an unusual way.
As with emulation, it&amp;rsquo;s easy to emulate &lt;em&gt;expected&lt;/em&gt; behaviors, but when a game uses a feature for something unanticipated, it can trip up an incomplete implementation.
SMO tends to use a single render target for all six sides of the cubemap surface, necessitating yuzu to allow copying between render targets and cubemaps for correct emulation.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./metro1-b.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/metro1-b_hud78500119ba29173362f1fdd3da305ba_1422697_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Before&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sand1-b.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/sand1-b_hu49d181e2baf1544b0f11262f71050a52_858528_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Before&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Before&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./metro1-a.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/metro1-a_hue8e40f4df7a7f5899dd120add0a8bfec_1498591_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;After&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./sand1-a.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/sand1-a_hufd1d4c27e61e14af6d2f5dc8ec47010e_864543_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;After&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;After&lt;/p&gt;


&lt;p&gt;Blinkhawk also implemented 3D textures, which are used for global illumination caching and to enable correct coloring.
3D textures work like regular textures, but they are truly 3D and are usually used for volumetric effects like smoke, fire, light rays, realistic fog, etc.
The way in which Switch games create these is very interesting from an emulation perspective.
It turns out that most games compute them on loading, instead of having them pre-computed and they are generated through some sort of hack over Nvidia&amp;rsquo;s memory layout.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo-1505-1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/smo-1505-1_hua8be62c8c6f9f38306716058437776cf_663231_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;After 3D textures&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo-1505-2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/smo-1505-2_hu36f3a6d7edcc4ae551fcf2abf470ddca_1110664_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;After 3D textures&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;After 3D textures&lt;/p&gt;


&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;XtraByte&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        The game tries to render 2d textures with a block depth of 16, (block depth should only be used on 3d textures), then overlaps them in a specific order of rendering and reinterprets that as a 3d texture.
The solution we came up with was, to flush all textures in that memory area in the order of modification from last modified to newest and then read that memory as a 3D Texture.
    &lt;/div&gt;
&lt;/article&gt;

&lt;p&gt;While all the others were trying to fix graphical bugs, bunnei was still searching for ways to optimize performance of the game.
He and Subv identfied a major issue - that we weren&amp;rsquo;t flushing data properly.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Flushing is the process of taking render buffers that were modified in the host-GPU and write them back to the guest RAM (Host - hardware, Guest - Switch).
If you modify render buffers that were cached on the host-GPU but never flush them, then the games won&amp;rsquo;t see the latest version of those render buffers when they try to access them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;bunnei, over a couple of weeks, implemented flushing in the rasterizer cache and also for DMA transfers.
Along with these, he also implemented accelerated Fermi2D copies.
Fermi2D is one of the engines inside the GPU.
It is like a 2D transformation engine, where you feed it 2D images and you can do a bunch of transformations on it in the GPU.
With accelerated copies, the surface copying was now simpler and faster and as an additional bonus, it fixed several things like the ice effect in SMO and the blur effect in One Piece.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smo-ice.png&#34; title=&#34;Super Mario Odyssey&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/smo-ice_huf4800aac8da81abe052ea46949966a89_2150971_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./op-blur.png&#34; title=&#34;One Piece&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/op-blur_hu6fb91679e6dbd566c54c1cc13ec73a11_1808009_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;One Piece&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;One Piece&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Days went by without any new findings but then we finally hit a jackpot.
Code investigation and reverse engineering led us to an issue where &lt;code&gt;macros&lt;/code&gt; could be skipped.
&lt;code&gt;macros&lt;/code&gt; are command sequences sent to the guest GPU and since they were being skipped, it led to distant objects not being rendered in SMO.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smo-1622-b.png&#34; title=&#34;Before&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/smo-1622-b_hu162abb123aec68a88480ab6f7797fc56_1109864_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Before&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Before&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smo-1622-a.png&#34; title=&#34;After&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/smo-1622-a_hu59da17bb3168dbc3d1603db109639c83_1151213_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;After&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;After&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;bunnei fixed this by restructuring the way we uploaded these macros to the guest GPU.
Instead of piping macro code into separate memory for each program, we now write it to a single macro memory region and then execute macros via the specified offset into this region.
He also found a bug in our memory manager, where buffers were being mapped over memory which was already in use.
By fixing that, we fixed the rendering when changing areas in SMO.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo-1630-1b.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/smo-1630-1b_hucb0a0cc43bdb5affef712ce70e9787fa_57009_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Before&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo-1630-2b.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/smo-1630-2b_hu2948e888d0959bd3704cf917933a2dc6_93452_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Before&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Before&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo-1630-1a.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/smo-1630-1a_hub4118632d34200560bdfbf944e6d894c_1711079_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;After&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo-1630-2a.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/smo-1630-2a_hu420496a912de68cae1316de64bb14dd8_1177467_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;After&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;After&lt;/p&gt;


&lt;h4 id=&#34;new-features-optimizations-and-fixes&#34;&gt;New Features, Optimizations, and Fixes&lt;/h4&gt;
&lt;p&gt;But &lt;del&gt;SMOzu&lt;/del&gt; yuzu isn&amp;rsquo;t a Super Mario Odyssey emulator, it&amp;rsquo;s a Nintendo Switch emulator.
And as such, any efforts to fix or improve a single game will definitely impact other games too and thus many other games are reaping the benefits of sustained work.&lt;/p&gt;
&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Back-to-School&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        &lt;p&gt;Let&amp;rsquo;s go back to school for a bit.
&lt;strong&gt;What is rendering and how does it work on modern GPUs?&lt;/strong&gt;
Rendering is a very generic term which is basically can be defined as &amp;ldquo;creating an image&amp;rdquo;, which can be, obviously, created in many ways.&lt;/p&gt;
&lt;p&gt;In modern GPUs, say if you want to render a triangle, you supply triangle coordinates to GPU and also load a shader to GPU.
Then the GPU starts rendering the data you supplied, it is executing your shader on every triangle vertex (vertex shader) and every triangle pixel (pixel shader).
Shaders are simple programs that describe the traits of either a vertex or a pixel.
In the shader, you basically transform coordinates (vertex) and change color (pixel) of your final image.
Shaders are very powerful and very fast, most effects in modern games are possible because of shaders.&lt;/p&gt;
&lt;p&gt;But, how does the shader know to transform given data to our exact requirements?
That&amp;rsquo;s because the shaders are programs that can be written using shader languages.
There are a number of such shader languages, but we use a C-like language GLSL (OpenGL Shader Language).
Modern GPUs make use of shader instruction sets, to pass commands to the individual programmable shader units and make them do the work.&lt;/p&gt;

    &lt;/div&gt;
&lt;/article&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kirby.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/kirby_hue124d98fdcc56825f1d9dc59f645f797_1116110_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Kirby Star Allies&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kirby-1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/kirby-1_hu133b31170ec3e5859097b114152357ac_1328124_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Kirby Star Allies&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Kirby Star Allies&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kirby-2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/kirby-2_hu7d89c9a7754b19c474e862bd6f0f8100_363328_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;In Game&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kirby-3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/kirby-3_huf0f26484eaebc5232c8f25ffd0192468_608742_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;In Game&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;In Game&lt;/p&gt;


&lt;p&gt;The Nvidia Tegra X1 - which is the brain of the Switch, houses a Maxwell architecture based GPU.
Like all other Nvidia GPUs, this too utilizes Nvidia&amp;rsquo;s shader instruction sets to make the shaders render graphics.
Unlike most other parts of our code base, which is HLE (High Level Emulation), our GPU emulation is LLE (Low Level Emulation).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LLE just translates the native code and is the traditional way of emulating.
Simply put, in LLE we interpret the &lt;code&gt;macros&lt;/code&gt; sent to the GPU and then read the registers to render stuff.
And to do that, we need to emulate the shader instructions that the GPU uses.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Our developer Blinkhawk took it upon himself to try and implement the shader instructions in our GPU emulation.
He refactored the existing &lt;code&gt;IPA&lt;/code&gt; shader instruction, implemented the shader instructions &lt;code&gt;TMML&lt;/code&gt;, &lt;code&gt;LEA&lt;/code&gt;, &lt;code&gt;PSET&lt;/code&gt;, properly implemented &lt;code&gt;TXQ&lt;/code&gt; and fixed &lt;code&gt;TLDS&lt;/code&gt;, &lt;code&gt;FSETP&lt;/code&gt;, &lt;code&gt;FSET&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;He implemented Cube Arrays, implemented &lt;code&gt;3 coordinate array&lt;/code&gt; in &lt;code&gt;TEXS&lt;/code&gt; instruction - which is used by Breath of the Wild, improved shader accuracy on Vertex and Geometry shaders, and improved GPU Cache&amp;rsquo;s lookup Speed - which resulted in better overall performance.&lt;/p&gt;
&lt;p&gt;Another developer &lt;a href=&#34;https://github.com/ReinUsesLisp&#34;&gt;Rodrigo&lt;/a&gt;, also lent a hand by independently researching the shader instructions we were missing and implementing them.
He implemented a few instructions like &lt;code&gt;VMAD&lt;/code&gt; &amp;amp; &lt;code&gt;VSETP&lt;/code&gt;- which are complex instructions used in Geometry Shaders, &lt;code&gt;PBK&lt;/code&gt; &amp;amp; &lt;code&gt;BRK&lt;/code&gt; - which are flow instructions used by some games, and also implemented the whole set of &amp;ldquo;Half-Float&amp;rdquo; instructions - &lt;code&gt;HADD2&lt;/code&gt;, &lt;code&gt;HMUL2&lt;/code&gt;, &lt;code&gt;HFMA2&lt;/code&gt;, &lt;code&gt;HSET2&lt;/code&gt;, and &lt;code&gt;HSETP2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Most games use 32-bit floats, but some use half floats (16-bit floats).
These instructions can execute two operations at once and it&amp;rsquo;s easier for the game to send half the data.
Games like Xenoblade, Hyrule Warriors and L.A. Noire were found to be using these.
As these are not used by &lt;a href=&#34;https://nouveau.freedesktop.org/wiki/&#34;&gt;nouveau&lt;/a&gt;, it required a bit of hardware testing and help from the nouveau team to implement these.
For those of you who don&amp;rsquo;t know, the nouveau project develops and builds open source drivers for Nvidia GPUs on Linux.&lt;/p&gt;
&lt;p&gt;In the meantime, Blinkhawk, in his research efforts, found out that some shader information was going missing.
This was because, not all the info of an Nvidia shader is saved in the registers and some can be sent to a temporary shader memory too.
By implementing a shader local memory, we now began emulating such memory and thus fixed many graphical issues in games like ARMS and Splatoon 2, among others.
He also implemented fast layered copy - which fixed performance regressions in ARMS and Splatoon 2, while improving loading performance in many other games.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./arms.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/arms_hu263730a3a6466737a0108a3e5c819045_1116803_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;ARMS&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./arms-1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/arms-1_hu8eeb445a787f9e0a61a933f25f6168fa_1142540_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;ARMS&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./arms-2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/arms-2_hu8ea0a16bdb1cf81022a5bc8ad4664b3f_1821330_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;ARMS&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;ARMS&lt;/p&gt;


&lt;p&gt;Generally in OpenGL, rendering is done sequentially in multiple steps.
It is called the &lt;a href=&#34;https://www.khronos.org/opengl/wiki/Rendering_Pipeline_Overview&#34;&gt;Rendering Pipeline&lt;/a&gt;.
While we had a working implementation of vertex shaders, we were still missing the geometry shaders.
The geometry shader is an optional shader stage, that sits between the vertex and fragment shaders.&lt;/p&gt;
&lt;p&gt;Rodrigo did lots of research and finally did a basic implementation of geometry shaders.
This shader has the unique ability to create new geometry on-the-fly, using the output of the vertex shader as input.
Geometry shaders in Maxwell architecture do not specify input topology anywhere, they just receive the data as is.
It doesn&amp;rsquo;t care if it&amp;rsquo;s a point or a triangle list.
But in OpenGL, GS requires that input topology is in their source.&lt;/p&gt;
&lt;p&gt;The implementation isn&amp;rsquo;t complete yet, but gets the job done.
Most games that use GS will find correct behavior depending to what extent the games use GS.
It still has scope for improvements and is also missing a few features like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;built-in types of output.&lt;/li&gt;
&lt;li&gt;buffer streams.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rodrigo found the cause and fixed the infamous &amp;ldquo;half-screen rendering&amp;rdquo; bug on Intel GPUs (Windows).
The cause of the bug was an expression, carried from Citra&amp;rsquo;s GPU emulation code.
Because of setting a default clip distance, the render was being cut to half.
Removing that expression, fixed rendering on Intel GPUs.&lt;/p&gt;
&lt;p&gt;Also, he optimized our GPU emulation by using &lt;code&gt;ARB_multi_bind&lt;/code&gt; for uniform buffers and sampler bindings, and implemented &lt;code&gt;quads&lt;/code&gt; topology.
The &lt;code&gt;ARB_multi_bind&lt;/code&gt; is an OpenGL extension, which reduces OpenGL invokes by binding multiple objects to a single call.
&lt;code&gt;quads&lt;/code&gt; are rendered using OpenGL core and are used by some indie games and Xenoblade.
A &lt;code&gt;quad&lt;/code&gt; is a 4 vertex quadrilateral primitive and is not exposed in the modern OpenGL API.
So as a workaround, we render &lt;code&gt;quads&lt;/code&gt; with a pair of triangles.&lt;/p&gt;
&lt;p&gt;On a hunch that he could improve performance, Blinkhawk researched swizzling techniques and algorithms.
Unsurprisingly, he found out that yuzu&amp;rsquo;s initial implementations were grossly inefficient and took up the task of optimizing the various swizzling techniques.
He implemented 3D swizzling and also optimized texture swizzling, fast swizzle, and legacy swizzle.
The new Swizzling algorithm is about 6~12 times faster than the old one and adds functionality to read and interpret 3D Textures.
For the users, this meant improved performance and FPS boosts.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In order to load textures, we must convert them from a guest optimized format to linear format i.e., an Nvidia internal format into a linear format for OpenGL to read them. This process is called Swizzling.
The opposite to this i.e., converting the linear format textures to guest optimized format, is called UnSwizzling.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bandicoot.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/bandicoot_huc18c579a187b5e0134b47c76042302cd_1828324_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Crash Bandicoot&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bandicoot-1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/bandicoot-1_hu78cd0f31784a9f3434e858cda88092f5_1620544_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Crash Bandicoot&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Crash Bandicoot&lt;/p&gt;


&lt;p&gt;Furthermore, he implemented the Scissor test, Alpha test - using shader emulation, depth compare, and shadow samplers.
The Scissor test is a per-sample processing operation that discards fragments that fall outside of a certain rectangular portion of the screen.
Alpha test is a hardware feature to skip certain pixels.
The Alpha channel tells OpenGL which parts of image are transparent and which parts are opaque.
Alpha test is used to discard pixels which fall outside of a certain range of alpha values.
Depth Compare &amp;amp; Shadow Samplers are used to implement occlusion in games.
By adding support for them, games will be able to detect where shadows go by checking a depth texture through a shadow sampler.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Tinob&#34;&gt;Tinob&lt;/a&gt;, well known for Ishiiruka Dolphin, also contributed to the GPU emulation.
He implemented &lt;code&gt;sRGB&lt;/code&gt; framebuffers and improved OpenGL state handling to reduce redundant state changes and ensure default state to avoid driver implementation issues.
Also, he researched and implemented various missing OpenGL states, added tweaks to reduce state handling redundancy, and added support for various registers.
These fixed many small graphical bugs in SMO and other games.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/degasus&#34;&gt;degasus&lt;/a&gt; fixed few bugs and optimized GPU emulation wherever possible by reducing the overhead per draw call.
His optimization of the shader cache resulted in a significant performance boost across all games.
&lt;a href=&#34;https://github.com/FreddyFunk&#34;&gt;FreddyFunk&lt;/a&gt;, while profiling yuzu, recognized that in some scenarios a lot of time is taken by allocating memory in calls of &lt;code&gt;CopySurface&lt;/code&gt; and optimized it for better performance.&lt;/p&gt;
&lt;h4 id=&#34;pokémon-lets-go-pikachu--eevee&#34;&gt;Pokémon: Let&amp;rsquo;s Go, Pikachu! / Eevee!&lt;/h4&gt;
&lt;p&gt;The Pokémon franchise has been and always will be one of Nintendo&amp;rsquo;s most successful and profitable franchises.
And their newest iteration of games for the Nintendo Switch are Pokémon: Let&amp;rsquo;s Go, Pikachu! &amp;amp; Let&amp;rsquo;s Go, Eevee! - remakes of good old Pokémon Yellow from the GameBoy days.
For the developers, the thought of booting and emulating a hot new game on release day was very exciting.
And thus began the rush - to test the games, fix issues, and essentially make it playable on day one.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./lgpe-1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/lgpe-1_huead22ab7e594b419f26861f3ce1ae38f_1334383_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon: Let&amp;#39;s Go, Pikachu!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./lgpe-2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/lgpe-2_huf9309a56cf04c38bcbc4b092014ad323_1265050_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon: Let&amp;#39;s Go, Pikachu!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./lgpe-3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/lgpe-3_hud3d4c34fb814e6fa14fed18607071298_1565628_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon: Let&amp;#39;s Go, Pikachu!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Pokémon: Let&amp;#39;s Go, Pikachu!&lt;/p&gt;


&lt;p&gt;ogniK was the first to get the game, thanks to time zones, and he immediately began his RE (reverse engineering) work.
He found out that the games checked for the &lt;code&gt;Poké Ball Plus&lt;/code&gt; controller on boot and since we didn&amp;rsquo;t support it, the game wasn&amp;rsquo;t booting in yuzu.
After further research, he implemented a small set of commands and functions used by the bluetooth driver, which got us to the title screen.&lt;/p&gt;
&lt;p&gt;And just when we thought that was it, &lt;em&gt;&lt;strong&gt;a wild softlock appeared!&lt;/strong&gt;&lt;/em&gt;
ogniK identified the cause of this to be in &lt;code&gt;HWOpus&lt;/code&gt; and simultaneous RE efforts from &lt;a href=&#34;https://github.com/gdkchan&#34;&gt;gdkchan&lt;/a&gt; of Ryujinx, revealed more info.
It seems that the ordering of output parameters within a &lt;code&gt;HWOpus&lt;/code&gt; function - &lt;code&gt;DecodeInterleaveWithPerformance&lt;/code&gt; was wrong and fixing that resulted in audio output for both the Let&amp;rsquo;s Go games.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./lgpe-4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/lgpe-4_huae7f4fb4ff87987d321515ef3ca0212c_1648438_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon: Let&amp;#39;s Go, Eevee!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./lgpe-5.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/lgpe-5_huef19b8f375da9a6e8707719eeb81cfb0_1249999_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon: Let&amp;#39;s Go, Eevee!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./lgpe-6.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/lgpe-6_hu9704082e155e4627ddf9270e1c4e552b_1257312_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokémon: Let&amp;#39;s Go, Eevee!&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Pokémon: Let&amp;#39;s Go, Eevee!&lt;/p&gt;


&lt;p&gt;Hexagon12 implemented a missing predicate comparison, which fixed trainer battle crashes in the games.
With these, yuzu was finally able to boot into the game properly but it still crashed when naming the characters.
Because the software keyboard applet wasn&amp;rsquo;t implemented in yuzu, the games couldn&amp;rsquo;t load the applet and hence crashed.
&lt;a href=&#34;https://github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt; was already working on implementing the applet and with a bit of research and testing, he was able to complete his implementation.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./swkbd.png&#34; title=&#34;Software Keyboard in Pokémon: Let&amp;#39;s Go, Eevee!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/swkbd_hu7b4045d51c4ac413be9f4a9cec35102a_6356_479x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Software Keyboard in Pokémon: Let&amp;#39;s Go, Eevee!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Software Keyboard in Pokémon: Let&amp;#39;s Go, Eevee!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Provided that your PC hardware is strong enough to handle yuzu, the new Pokémon games are playable, with a few caveats.
Currently, some of the graphics render well, but there are still a lot of flaws - like fonts missing everywhere.
But hey! the audio works decently, although you still need a save file to bypass softlocks in the beginning.
Even with all these, there are random crashes everywhere - which require more in-depth testing to fix.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pokken.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/pokken_hu135f7d2502d25dc39b7591a4c10bd2a9_606635_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokkén Tournament&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pokken-1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/pokken-1_huc2e1b707c7b8780e9ac8c3b46fa9f728_1190339_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokkén Tournament&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./pokken-2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/pokken-2_hub879e20b61cd2e1e74ac2c4173598574_94159_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Pokkén Tournament&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Pokkén Tournament&lt;/p&gt;


&lt;p&gt;Apart from these, there were multiple minor improvements and fixes done by our team and other contributors, which helped us get further into accurate GPU emulation.
We also updated the OpenGL&amp;rsquo;s backend version from 3.3 to 4.3 and removed pre 4.3 &lt;code&gt;ARB&lt;/code&gt; extensions.
With this, the minimum required OpenGl version for yuzu has been bumped up to 4.3 as well.&lt;/p&gt;
&lt;h2 id=&#34;operating-system---hle&#34;&gt;Operating System - HLE&lt;/h2&gt;
&lt;p&gt;In regards, to the operating system, kernel, and various service modules, we have made a lot of progress here as well.
Lioncash has been absolutely phenomenal in fixing and optimizing our HLE (High-level emulation) kernel implementation.
He spent dozens of hours in RE (reverse engineering), to debug our kernel and made sure that everything was proper.
Most of his work in this regard has been:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding missing error codes in the kernel.&lt;/li&gt;
&lt;li&gt;Handling error cases within memory related functions.&lt;/li&gt;
&lt;li&gt;Handling &amp;ldquo;invalid address&amp;rdquo; cases within SVC (Supervisor Call) functions.&lt;/li&gt;
&lt;li&gt;Adding missing address range checks in &lt;code&gt;MapMemory&lt;/code&gt; &amp;amp; &lt;code&gt;UnMapMemory&lt;/code&gt; functions.&lt;/li&gt;
&lt;li&gt;Fix VMA (Virtual Memory Access) boundary check in &lt;code&gt;svcQueryMemory&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Added missing Korean font in our open-source implementation fallback.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./octo.png&#34; title=&#34;Octopath Traveler&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/octo_hu1a9eae6ee954920950c3e477ee218c9b_1463279_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Octopath Traveler&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Octopath Traveler&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./donkey-kong.png&#34; title=&#34;Donkey Kong&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/donkey-kong_hu71f663eee18867987395e2f90accb799_2465611_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Donkey Kong&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Donkey Kong&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;He implemented an svc function - &lt;code&gt;svcGetThreadContext&lt;/code&gt; - which retrieves the the context backing a thread, or the state of the thread at that given moment, and writes it to a provided buffer.
The thread context contains the state of CPU execution - such as general purpose registers, stack pointer, program counter, and several other fields.
This thread context can be used by the executable for debugging purposes, or to save and reuse it later, or anything else entirely depending on the executable.&lt;/p&gt;
&lt;p&gt;He also made changes in our virtual memory manager, to load NPDM metadata.
NPDM is the Switch equivalent of 3DS exheader.
Previously we were never loading NPDM metadata in the event that it was available and it meant that we&amp;rsquo;d be making assumptions about the address spaces.
With this, he de-hardcoded our assumption of a 36-bit address space, given that it&amp;rsquo;s possible for a game to demand a 39-bit one or 32-bit one and we can now derive the parameters from supplied NPDM metadata, if the supplied executable supports it.&lt;/p&gt;
&lt;p&gt;Apart from these notable changes, Lioncash made several other contributions to yuzu.
He updated the function tables for various services - based on latest documentation from &lt;a href=&#34;http://switchbrew.org&#34;&gt;Switchbrew&lt;/a&gt;, fixed minor bugs in various svc functions, worked tirelessly on maintaining proper C++ style across the code-base, and made performance optimizations wherever possible.&lt;/p&gt;
&lt;p&gt;While Lioncash has been handling the kernel stuff, our Switch RE expert - ogniK has been busy fixing and implementing more service functions.
ogniK properly implemented the &lt;code&gt;fatal:u&lt;/code&gt; service, stubbed the &lt;code&gt;IRS&lt;/code&gt; service, and added many missing functions across various services.
He reworked the &lt;code&gt;nifm&lt;/code&gt; service stubs - which were found to be incorrect, fixed an &lt;code&gt;acc&lt;/code&gt; service stub - which allowed us to boot the Nintendo Switch Online NES emulator, implemented a few missing functions in &lt;code&gt;AudRen&lt;/code&gt; and &lt;code&gt;HwOpus&lt;/code&gt; services - which fixed audio for Sonic Ages.
(Although Nintendo Switch Online NES emulator boots, it doesn&amp;rsquo;t mean users can play online.)&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nso-nes.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/nso-nes_hu30067545b03472f32cc89306767481f3_248483_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Nintendo Switch Online - NES emulator&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./nso-nes-1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/nso-nes-1_hu4517bbc33ed2c445b1c5c56e2eb94c5d_4093055_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Nintendo Switch Online - NES emulator&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Nintendo Switch Online - NES emulator&lt;/p&gt;


&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;XtraByte&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        Stubbing means that these services return &lt;code&gt;ok&lt;/code&gt; with no errors, so that the games think that the function succeeded and it can continue on without getting back any valid data. As the games boot further and further, we need to start intercepting these function calls and provide a more meaningful response.
    &lt;/div&gt;
&lt;/article&gt;

&lt;p&gt;He added the ability to switch between docked and undocked mode while in-game, added support for Amiibo files &amp;amp; uncompressed NSOs, and fixed a few minor bugs in various service functions.
Although, this isn&amp;rsquo;t complete Amiibo support just yet.
Only a few games work and more support will be added in the future.&lt;/p&gt;
&lt;p&gt;ogniK reworked and refactored the entire &lt;code&gt;HID&lt;/code&gt; service implementation, dubbed &lt;code&gt;Better HID&lt;/code&gt;, and vastly improved it.
He replaced lot of stubbed functions with actual implementations and fixed our &lt;code&gt;HID layouts&lt;/code&gt;.
This allowed the registration of multiple user controllers &lt;strong&gt;AND&lt;/strong&gt; different &lt;strong&gt;TYPES&lt;/strong&gt; of controllers (handheld, joycon left, joycon right, pro controller), except for &lt;code&gt;tabletop mode&lt;/code&gt; - wireless dual joycons.&lt;/p&gt;
&lt;p&gt;DarkLordZach hasn&amp;rsquo;t been sitting quietly either.
He picked up from where ogniK&amp;rsquo;s &lt;code&gt;HID&lt;/code&gt; rework left off and made further improvements.
He added full UI support to change the connectivity, type/layouts and buttons for all eight players, the handheld controller, the debug controller, mouse, keyboard, and finally touchscreen.&lt;/p&gt;
&lt;p&gt;He also made many new improvements to the file system and added new features as well.
His other notable works include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added support for &lt;code&gt;LayeredFS&lt;/code&gt; mods - which brings infinite possibilities for games in yuzu.&lt;/li&gt;
&lt;li&gt;Added support for packed updates - which are basically &lt;code&gt;XCI&lt;/code&gt; files with both base game and updates.&lt;/li&gt;
&lt;li&gt;Implemented DLC loading.&lt;/li&gt;
&lt;li&gt;Added support for full key-derivation, so that you don&amp;rsquo;t need 3rd party tools for dumping keys, only our &lt;a href=&#34;https://yuzu-mirror.github.io/help/quickstart/&#34;&gt;quickstart&lt;/a&gt; guide.&lt;/li&gt;
&lt;li&gt;Added support for loading IPS patches.&lt;/li&gt;
&lt;li&gt;Added support for the more easier IPSwitch format patches.&lt;/li&gt;
&lt;li&gt;Implemented save data types - &lt;code&gt;TemporaryStorage&lt;/code&gt; and &lt;code&gt;DeviceSaveData&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Added UI for multiple user profiles (emulated).&lt;/li&gt;
&lt;li&gt;And many more minor bug fixes and optimizations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;bunnei implemented the &lt;code&gt;loadNRO&lt;/code&gt; functions from the &lt;code&gt;ldr:ro&lt;/code&gt; service.
This was a basic implementation of the functions which allowed us to boot Super Mario Party.
DarkLordZach later completed the &lt;code&gt;ldr:ro&lt;/code&gt; service implementation, based on research done by bunnei, Subv, and the folks at Atmosphere.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;The improvements we&amp;rsquo;ve covered here are only the major ones.
In addition to these, we have had many minor bug fixes &amp;amp; feature implementations done by our valuable contributors.
Many thanks to our contributors and also to the devs from various communities who have indirectly helped us progress forward.
Special thanks to our patrons who have showed their continued support for our efforts in this project.
Also, another special thanks to JMC47 - one of the authors for dolphin-emu blog, for all his inputs and criticism regarding this article.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./splatoon2.png&#34; title=&#34;Splatoon 2&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/splatoon2_hu9fd36cf0cc8f01f349d675587d89c3ba_1043593_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Splatoon 2&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Splatoon 2&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sonic-forces.png&#34; title=&#34;Sonic Forces&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/sonic-forces_hue9e2901d674f9e40db09b6a48a9e18f3_2068754_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Sonic Forces&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Sonic Forces&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sonic-forces-1.png&#34; title=&#34;Sonic Forces (In game)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p4/sonic-forces-1_hu5647d1d3f6149d1f931bad4d06300fd5_70215_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Sonic Forces (In game)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Sonic Forces (In game)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Note&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        &lt;p&gt;All these screenshots have been taken in docked mode of yuzu, using a PC with the following specs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU - Intel i3 6100&lt;/li&gt;
&lt;li&gt;GPU - Nvidia GTX 750ti&lt;/li&gt;
&lt;li&gt;RAM - 12 GB DDR3&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
&lt;/article&gt;

&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report 2018 Part 3</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/</link>
      <pubDate>Tue, 11 Sep 2018 22:00:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s only been over a month since our last report, and we have made so much progress already that we simply can&amp;rsquo;t wait to share it with you guys.
Without further ado, let&amp;rsquo;s dive in.&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;It&amp;rsquo;s only been over a month since our last report, and we have made so much progress already that we simply can&amp;rsquo;t wait to share it with you guys.
Without further ado, let&amp;rsquo;s dive in.&lt;/p&gt;
&lt;p&gt; 

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smo.png&#34; title=&#34;Super Mario Odyssey (Title screen)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/smo_hu7812af92d5a5269518ff8fdaee26d84a_712239_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (Title screen)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey (Title screen)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;
&lt;/p&gt;
&lt;h2 id=&#34;cpu--core&#34;&gt;CPU / Core&lt;/h2&gt;
&lt;p&gt;On the CPU emulation front, &lt;a href=&#34;https://github.com/MerryMage&#34;&gt;MerryMage&lt;/a&gt; and &lt;a href=&#34;https://github.com/lioncash&#34;&gt;Lioncash&lt;/a&gt; have been absolutely phenomenal.
They have implemented a lot of missing ARMv8 instructions to &lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;Dynarmic&lt;/a&gt;, our ARM recompiler, and also fixed many bugs in the existing ones.
Because of this, the number of times yuzu has to fallback to &lt;a href=&#34;http://www.unicorn-engine.org/&#34;&gt;Unicorn&lt;/a&gt; has been reduced and has improved the overall performance of yuzu.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./arms.png&#34; title=&#34;Title screen&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/arms_hu03753d3ea23a14a1d34f0af9eb1b2d39_1739123_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;ARMS&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./arms_1.png&#34; title=&#34;Info&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/arms_1_hud22fed21b0490cf0afc8a194fede4c35_259896_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;ARMS&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;ARMS&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./arms_2.png&#34; title=&#34;Menu&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/arms_2_hu6798de800964c421bf8044579f2de621_823292_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Menu&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Menu&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./arms_3.png&#34; title=&#34;In-game&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/arms_3_huaaeb07098288c828f887931b21978154_1300974_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;In-game&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;In-game&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/Hedges&#34;&gt;Hedges&lt;/a&gt;, the previously Unicorn-only GDBStub now works with Dynarmic as well.
GDBStub is a debugging tool which helps the developers find errors/bugs in the code.
&lt;a href=&#34;https://github.com/Subv&#34;&gt;Subv&lt;/a&gt; fixed a bug in dynarmic which was causing issues with CPU state management, by preventing writing data to a register.&lt;/p&gt;
&lt;h2 id=&#34;general-improvements&#34;&gt;General Improvements&lt;/h2&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./octo.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/octo_hu39ce4230b9fcb0b42b7f5f959f1e79c1_38942_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Octopath Traveller&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./octo_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/octo_1_hucf9a9016aad7632db7e8e56e4c18f94e_21143_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Octopath Traveller&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./octo_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/octo_2_hubfc6d3624c6332281c3ddca8537944b0_62509_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Octopath Traveller&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Octopath Traveller&lt;/p&gt;


&lt;p&gt;As both Citra and yuzu share common code, &lt;a href=&#34;https://github.com/fearlesstobi&#34;&gt;FearlessTobi&lt;/a&gt; ported over various changes made in Citra to yuzu.
Here are some of the things he ported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logging the yuzu version - to help us identify yuzu version from log file.&lt;/li&gt;
&lt;li&gt;Added &amp;ldquo;Continue/Pause&amp;rdquo; &amp;amp; &amp;ldquo;Toggle Speed limit&amp;rdquo; hotkeys.&lt;/li&gt;
&lt;li&gt;Updated Dark theme to latest version.&lt;/li&gt;
&lt;li&gt;Added &amp;ldquo;Build-date&amp;rdquo; info to the &amp;ldquo;About&amp;rdquo; dialog.&lt;/li&gt;
&lt;li&gt;Fixes for Travis CI environment.&lt;/li&gt;
&lt;li&gt;Added Game Compatibility List to yuzu.&lt;/li&gt;
&lt;li&gt;Many more code optimizations and minor bug fixes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt; implemented the display of game-title in the window title bar.
&lt;a href=&#34;https://github.com/CaptV0rt3x&#34;&gt;CaptV0rt3x&lt;/a&gt; ported over the display of version number in the title bar.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./puyo.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/puyo_hu0ce1abe99a6b8c0bd5bfb02895f13c77_888363_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Puyo Puyo TETRIS&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./puyo_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/puyo_1_hu391a213220bf6a2719575f6f3dca49cf_607120_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Puyo Puyo TETRIS&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Puyo Puyo TETRIS&lt;/p&gt;


&lt;h2 id=&#34;os&#34;&gt;OS&lt;/h2&gt;
&lt;p&gt;Lioncash fixed a potential data race condition in the kernel object, by ensuring that the class handles its reference counts atomically.&lt;/p&gt;
&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Info&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        A race condition, is an undesirable situation that occurs when a device or system attempts to perform two or more operations at the same time, but because of the nature of the device or system, the operations must be done in the proper sequence to be done correctly.
    &lt;/div&gt;
&lt;/article&gt;



&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bayo.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/bayo_hu22612c0be3621826b165feadb0d6669d_501774_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Bayonetta&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bayo_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/bayo_1_hu99dc714e60391943d8009e4a7f396619_526300_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Bayonetta&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./bayo_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/bayo_2_hud7499b9647e97377d34900c6d3b57b1b_2107321_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Bayonetta&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Bayonetta&lt;/p&gt;


&lt;p&gt;The atomicity ensures that the change to the reference count is visible to all threads between operations and thus ensuring a race never happens.
And since that object class is inherited by all of the kernel objects in yuzu, this pretty much affected every kernel object.
Apart from this, he also optimized the code in the kernel scheduler and thread queue list.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./boi.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/boi_huf5f15570818a0840e0a5cea3c6eb0140_652931_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Binding of Issac&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./boi_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/boi_1_hu824263e2ec3bafbdef40392061d43b20_271029_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Binding of Issac&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Binding of Issac&lt;/p&gt;


&lt;h2 id=&#34;gpu&#34;&gt;GPU&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/degasus&#34;&gt;degasus&lt;/a&gt;, who was responsible for the stream buffer implementation in Citra, replaced the existing stream buffer in yuzu with Citra&amp;rsquo;s.
For the uninitiated, stream buffers are used for uploading vertex data to the GPU.
He has also been doing quite a lot of GPU code profiling and making optimizations.
Because of this, we are getting to the point where GPU emulation is not much of a bottleneck anymore.&lt;/p&gt;
&lt;p&gt;In addition,he&amp;rsquo;s implemented a buffer cache, to avoid redundant uploads, and a VAO (Vertex Array Object) cache, to cache VAO objects.
Buffer cache works by caching the uploaded buffers within the stream_buffer and just reusing the old pointers.
VAO cache works by caching VAO objects instead of re-emitting all pointers per draw call.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./disg.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/disg_hu867ee525d1034fd3a66f03fbeb03818a_76316_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Disgaea 5&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./disg_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/disg_1_huc6c7573a68ac5d672f9920ca81f4dcf1_1729097_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Disgaea 5&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Disgaea 5&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./disg_2.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/disg_2_hu702c2b624081631f71196e135b0c952e_1699854_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./disg_3.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/disg_3_hub18e3b779b1cd922a559f6aa9035b7d7_1537846_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt;, &lt;a href=&#34;https://github.com/Subv&#34;&gt;Subv&lt;/a&gt;, &lt;a href=&#34;https://github.com/ogniK&#34;&gt;ogniK&lt;/a&gt;, and &lt;a href=&#34;https://github.com/greggameplayer&#34;&gt;greggameplayer&lt;/a&gt; have implemented many missing texture formats, pixel formats, and render targets.
These implementations allowed us to proceed further in a lot of games like One Piece, Fate Extella, Go Vacation, and Xenoblade.
Subv also implemented a few depth buffer formats and added support for depth buffer testing.
Depth buffers are used for specifying the depth of each pixel, thereby creating various visual effects.&lt;/p&gt;
&lt;p&gt;bunnei implemented a couple of vertex attributes, added more texture wrap modes, implemented shader instructions like &lt;code&gt;TLDS&lt;/code&gt; &amp;amp; &lt;code&gt;SEL&lt;/code&gt;, fixed &lt;code&gt;TEXS&lt;/code&gt; shader instruction, implemented &lt;code&gt;TEXS&lt;/code&gt; masks, and fixed texture unswizzle.
He also made various improvements to the rasterizer cache and improved its performance by avoiding superfluous copies.
This fixed rendering issues in Cave Story+, Disgaea 5, and Binding of Issac.
ogniK fixed &lt;code&gt;glVertexAttribFormat&lt;/code&gt; for integers - which fixed exploding vertices in One Piece Unlimited World.
Lioncash refactored, cleaned and made improvements / optimizations to the GPU code.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./doom.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/doom_hudd7b39bbad75b7acb1e29a7f0b83615d_24288_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;DOOM&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./doom_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/doom_1_huca5d12cf04a36e4a904473c7fa8a42f2_819972_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;DOOM&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;DOOM&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./fe-w.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/fe-w_hu455490eb52f3b9265c0f57b7cf561a82_121846_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fire Emblem - Warriors&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./fe-w_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/fe-w_1_hu67d4aaec83cd32927adbd328ea7908b1_1130895_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fire Emblem - Warriors&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Fire Emblem - Warriors&lt;/p&gt;


&lt;h2 id=&#34;service-hle&#34;&gt;Service HLE&lt;/h2&gt;
&lt;p&gt;With the latest documentation available on &lt;a href=&#34;https://switchbrew.org/index.php/Main_Page&#34;&gt;Switchbrew&lt;/a&gt;, we have made various bug fixes to our service implementations and also added new services as well.
Lioncash, &lt;a href=&#34;https://github.com/mailwl&#34;&gt;mailwl&lt;/a&gt;, and Hexagon12 worked on stubbing the &lt;code&gt;HID&lt;/code&gt; (Human Interface Devices) service and also made a few improvements there as well.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;HID&lt;/code&gt; service basically manages the controllers.
It stores all sorts of information related to controllers in a shared memory region, which we read from.
ogniK and bunnei fixed the &lt;code&gt;Friend&lt;/code&gt; service, which fixed a crash in Splatoon 2 and also got Retro City Rampage booting.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hb-h.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/hb-h_hu02533d1c8e27b72d0817f48be1818751_2122988_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Has-Been Heroes&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hb-h_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/hb-h_1_hu40cf3495639e86c16a597beb93fda31a_1328165_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Has-Been Heroes&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Has-Been Heroes&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./hb-h_2.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/hb-h_2_huc7df36579cd7e3dff1c47abe9299e869_1143147_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./hb-h_3.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/hb-h_3_hu3bb0ae2ad768f4960f3f472a755d7c66_947931_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;Friend&lt;/code&gt; service is mainly for your Nintendo Online friends, your friend list etc.
In this current implementation, we are always offline and we send the same response (offline) to the system and games as well.
The crash in Splatoon 2 was fixed because it was requesting the friend list and we returned a response of &lt;code&gt;Zero (0) Friends&lt;/code&gt; to it.
It is not exactly an accurate replication of Switch&amp;rsquo;s behavior, but games seem to accept that response.&lt;/p&gt;
&lt;p&gt;Similarly, we got Retro City Rampage booting because it was trying to get the User&amp;rsquo;s Presence and we added a stub in place of it.
mailwl added more stubs for the &lt;code&gt;Account&lt;/code&gt; service.
Lastly, the &lt;code&gt;Account&lt;/code&gt; service is mainly for management of your local account or registered users on the system.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./fh.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/fh_hufed2e915dc4b51c4575a171ca6024415_2534951_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fantasy Hero&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./fh_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/fh_1_huc003a0dbaeda1725d96893f5e3438278_1053697_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Fantasy Hero&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Fantasy Hero&lt;/p&gt;


&lt;p&gt;Each user has an unique UUID (Universally Unique Identifier), which is generated when an account is made, and they each have some information about their profile.
This info is typically referenced when saving games.
ogniK worked on the necessary foundation to support multiple user accounts and their management, in the future.
He also implemented functions to allow setting the username and locale of the Switch.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hyrule.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/hyrule_hu9e2fd1c06dedb9103f0dd9617b2d16b6_413536_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hyrule Warriors&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./hyrule_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/hyrule_1_hufed2acae5d2c42445ae617eefcf2f087_2018219_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hyrule Warriors&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Hyrule Warriors&lt;/p&gt;


&lt;p&gt;ogniK also implemented support for loading shared fonts in the &lt;code&gt;pl:u&lt;/code&gt; service.
As we now support loading system &lt;code&gt;bfttf&lt;/code&gt; fonts, users who have installed their system nand dumps to yuzu will automatically get shared fonts.
For other users, you can now load shared fonts from &lt;code&gt;ttf&lt;/code&gt; files as well.&lt;/p&gt;
&lt;p&gt;Fearlesstobi, by taking inspiration from Citra&amp;rsquo;s implementation, integrated open-source shared fonts into yuzu.
This can clearly be observed in above screenshots from the game - Hyrule Warriors.&lt;/p&gt;
&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Info&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        &lt;p&gt;The fonts need to be named as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FontStandard.ttf&lt;/li&gt;
&lt;li&gt;FontChineseSimplified.ttf&lt;/li&gt;
&lt;li&gt;FontExtendedChineseSimplified.ttf&lt;/li&gt;
&lt;li&gt;FontChineseTraditional.ttf&lt;/li&gt;
&lt;li&gt;FontKorean.ttf&lt;/li&gt;
&lt;li&gt;FontNintendoExtended.ttf&lt;/li&gt;
&lt;li&gt;FontNintendoExtended2.ttf&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
&lt;/article&gt;

&lt;p&gt;Lioncash implemented the skeletons for various new services like &lt;code&gt;time:a&lt;/code&gt;, &lt;code&gt;es&lt;/code&gt;, &lt;code&gt;pm&lt;/code&gt;, &lt;code&gt;erpt&lt;/code&gt;, &lt;code&gt;eupld&lt;/code&gt;, &lt;code&gt;ldr&lt;/code&gt;, and many more.&lt;/p&gt;
&lt;h2 id=&#34;file-system&#34;&gt;File System&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt; added support for various features like loading encrypted NCA files and XCI files, displaying game icons, parsing metadata, and made error handling more descriptive.&lt;/p&gt;
&lt;p&gt;Encrypted &lt;code&gt;NCA&lt;/code&gt; files are just game files in a container.
&lt;code&gt;XCI&lt;/code&gt; files are basically raw gamecard dumps. Gamecards have 3 major partitions.
An &lt;code&gt;Update&lt;/code&gt; Partition - which stores system updates, a &lt;code&gt;Secure&lt;/code&gt; Partition - which has the game &lt;code&gt;NCAs&lt;/code&gt;, and a &lt;code&gt;Normal&lt;/code&gt; Partition - which just stores miscellaneous files.
What we want is the &lt;code&gt;Secure&lt;/code&gt; Partition. It contains the game &lt;code&gt;NCAs&lt;/code&gt; and other metadata as well, which is very useful.
&lt;code&gt;XCI&lt;/code&gt; files are relatively easy to dump compared to other methods and are very useful.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./game_list.png&#34; title=&#34;Gamelist showing games and updates&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/game_list_hu9bb034da2d362bf1e34f1fe3632b480d_118034_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Gamelist showing games and updates&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Gamelist showing games and updates&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;By adding support for loading &lt;code&gt;NCAs&lt;/code&gt; and &lt;code&gt;XCIs&lt;/code&gt;, it removes a lot of unnecessary steps when you dump your games.
Before, you had to dump your &lt;code&gt;XCI&lt;/code&gt;, then extract the &lt;code&gt;Secure&lt;/code&gt; partition, and then extract the &lt;code&gt;NCA&lt;/code&gt; into the format for yuzu.
This left you with nearly 8 different files, which are binaries and a romfs file.
Now with this feature, you can directly open your &lt;code&gt;NCA&lt;/code&gt; files or, better yet, your &lt;code&gt;XCI&lt;/code&gt; files.
And because &lt;code&gt;XCI&lt;/code&gt; files come with additional metadata, you can also get game icons from them.
The icons can be configured to display at various sizes within yuzu.&lt;/p&gt;
&lt;p&gt;DarkLordZach went a step ahead and implemented support for &lt;code&gt;NAX&lt;/code&gt; (Nintendo AesXts) archives.
With this, you can load your games from your Switch&amp;rsquo;s SD card &lt;em&gt;&lt;strong&gt;directly&lt;/strong&gt;&lt;/em&gt; by connecting it to your PC.
He also fixed a few issues with our earlier VFS implementation and made further improvements to it as well.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./runner3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/runner3_huc593916dda20e289841d10b9337f531f_160882_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Runner 3&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./runner3_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/runner3_1_hu9976f602948844e427a1c7947235ff58_905352_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Runner 3&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Runner 3&lt;/p&gt;


&lt;p&gt;He also added support for the &lt;code&gt;NSP&lt;/code&gt; (Nintendo Submissions Package) file format, &lt;code&gt;BKTR&lt;/code&gt; format, and added an option to set custom NAND/SD directories.
As &lt;code&gt;NSP&lt;/code&gt; support will likely become the new format of choice for advanced dumper homebrew and other tools, adding support means less steps while dumping.
&lt;code&gt;NSPs&lt;/code&gt; contain all the metadata and can contain game updates / DLCs as well.
With added support for &lt;code&gt;BKTR&lt;/code&gt; format, you can now install game updates from yuzu NAND or SD directly via the UI.
He and Lioncash also worked on refactoring the File System code and made optimizations wherever possible.&lt;/p&gt;
&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Warning&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        &lt;p style=&#34;color:#eb152e&#34;&gt;&lt;b&gt;&lt;i&gt;Keep in mind that, all types of files will still need their decryption keys.&lt;/b&gt;&lt;/i&gt;
    &lt;/div&gt;
&lt;/article&gt;

&lt;h2 id=&#34;audio&#34;&gt;Audio&lt;/h2&gt;
&lt;p&gt;As yuzu was progressing at an incredibly fast pace, one of the most sought out features was audio output.
We discussed this in our earlier report that the Switch has 2 methods of audio output &lt;code&gt;AudRen&lt;/code&gt; and &lt;code&gt;AudOut&lt;/code&gt;.
First, bunnei emulated &lt;code&gt;AudOut&lt;/code&gt; without actually producing audio output.
This was used for only a handful of games like One Piece, Snipperclips, Minecraft etc.&lt;/p&gt;
&lt;p&gt;Emulating &lt;code&gt;AudOut&lt;/code&gt; state without actually outputting audio was sufficient to get these games to go into actual game play.
This was because games often wait for signaling to indicate that an audio clip has finished playing.
We can properly signal this state without actually playing the sound, allowing these games to continue running.
Later he added audio output, based on &lt;a href=&#34;https://github.com/kinetiknz/cubeb&#34;&gt;cubeb&lt;/a&gt;, for games that used the &lt;code&gt;AudOut&lt;/code&gt; service.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./humanff.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/humanff_huf62aa96df21c21fbaf0727ee64ac6437_424983_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Human Fall Flat&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./humanff_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/humanff_1_hu40343b8e44141344ddd4e27262bf6538_768470_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Human Fall Flat&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./humanff_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/humanff_2_hua48623962ca3b470dfc740aefb07c997_338407_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Human Fall Flat&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Human Fall Flat&lt;/p&gt;


&lt;p&gt;ogniK did the reverse engineering and helped with the HLE (High Level Emulation) implementations of &lt;code&gt;Audout&lt;/code&gt; and &lt;code&gt;AudRen&lt;/code&gt; services.
He also added opus library and implemented &lt;code&gt;hwopus&lt;/code&gt; service functions, which uses &lt;code&gt;AudOut&lt;/code&gt; and &lt;code&gt;AudRen&lt;/code&gt;, which fixed Pokemon Quest and Touhou.
Since we didn&amp;rsquo;t have &lt;code&gt;AudRen&lt;/code&gt; yet, it only worked with games using &lt;code&gt;AudOut&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It took a while but bunnei finally implemented the &lt;code&gt;Audren&lt;/code&gt; method, which got audio output for most games like Cave Story+, Binding of Issac, Super Mario Odyssey, Puyo Puyo Tetris and many more.
bunnei&amp;rsquo;s original implementation of audio output, with cubeb backend, only supported two-channel 48000Hz - which is the most common audio output format.
This works well for &lt;code&gt;AudOut&lt;/code&gt; games, but games that use &lt;code&gt;AudRen&lt;/code&gt; could use variable sample rates.
Because we were always playing all sounds at 48000Hz, even though it was working properly, the sounds would be audible but would often sound sped-up or with incorrect pitch.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./opuw.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/opuw_hu5a67d9144ad692efce8a3f3f8f4aafad_1432892_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;One Piece Unlimited World&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./opuw_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/opuw_1_hud189f32c797b9884a1a4a504cd145850_972207_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;One Piece Unlimited World&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;One Piece Unlimited World&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./opuw_2.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/opuw_2_huc042e0cc1ffb6d53bec0f9ce3dc31cb8_2194744_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./opuw_3.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/opuw_3_hu6b0536aa92dacee55c4d258ffc045146_2095852_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;MerryMage fixed this problem by implementing audio interpolation and filtering, which allowed us to resample these sounds from their original sample rate to 48000Hz.
Audio Interpolation is a method of making digital audio sound better than it actually is and filtering helps reduce artifacts that arise when resampling the audio.
She also found and fixed threading issues with the cubeb backend.
Lioncash did lots of refactoring and made multiple improvements / optimizations to Audio code.&lt;/p&gt;
&lt;h2 id=&#34;super-mario-odyssey&#34;&gt;Super Mario Odyssey&lt;/h2&gt;
&lt;p&gt;As it turns out, Super Mario Odyssey (SMO) has actually been capable of going in-game for quite a while.
However, due to really bad performance and some occasional emulator crashes, no one was really testing it.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./smo_3.png&#34; title=&#34;Super Mario Odyssey&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/smo_3_hu7bcd28ee584836da9186975e78b0054d_1111036_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;bunnei made a major breakthrough by using save games (dumped from a Switch Console) which enabled him to get in game much quicker, fix crashes, and improve rendering.
By being able to expedite this process, the team was quickly able to get the first 3D rendering working in SMO - Mario&amp;rsquo;s head in the title screen.
From there, we were able to get in-game rendering working, although with very glitchy graphics and lots of variation depending on the kingdom.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/smo_1_hu0d5d68e334806a93b9b89475e2259784_884757_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (In-game)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/smo_2_hu157ff6500a8d8169b83f7cc4352dd23b_1784759_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (In-game)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey (In-game)&lt;/p&gt;


&lt;p&gt;bunnei and &lt;a href=&#34;https://github.com/khang06&#34;&gt;khang06&lt;/a&gt; implemented various render targets and texture formats necessary to get it booting.
bunnei implemented the &lt;code&gt;XMAD&lt;/code&gt; shader instruction, improved handling of the &lt;code&gt;KIL&lt;/code&gt; shader instruction, improved handling of unknown vertex attributes in shaders, added more accurate floats for shaders, fixed the constbuffer size, added a few vertex attribute types, and stubbed the &lt;code&gt;AM&lt;/code&gt; HLE service functions.&lt;/p&gt;
&lt;p&gt;Subv implemented the &lt;code&gt;SSY&lt;/code&gt; and &lt;code&gt;SYNC&lt;/code&gt; shader instructions, implemented alternative blending factors, and improved handling of invalid or unset vertex attributes.
&lt;code&gt;SSY&lt;/code&gt; and &lt;code&gt;SYNC&lt;/code&gt; are instructions for control flow in the shaders.
&lt;code&gt;SSY&lt;/code&gt; tells the shader execution unit where to jump when a &lt;code&gt;SYNC&lt;/code&gt; is executed.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo_4.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/smo_4_hudaff7400175795e082b4a3adbcf531fa_1784912_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (In-game)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo_5.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/smo_5_huad37b36f56a8239805faa49d51514e57_1488652_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (In-game)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./smo_6.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/smo_6_hu3f01b51ceb9335a775f7003df3e0ba32_1551218_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Super Mario Odyssey (In-game)&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Super Mario Odyssey (In-game)&lt;/p&gt;


&lt;p&gt;Currently SMO goes in game and the menus are running at full speed.
However, in-game speeds can vary based on what&amp;rsquo;s in view and your PC&amp;rsquo;s hardware specifications.
It is very glitchy, but you &lt;em&gt;&lt;strong&gt;can&lt;/strong&gt;&lt;/em&gt; play it.
Audio output works well when at full speed. Using a save game helps a lot.
There are random softlocks when transitioning to new areas; therefore, a play-through is not possible.&lt;/p&gt;
&lt;h2 id=&#34;breath-of-the-wild&#34;&gt;Breath of the Wild&lt;/h2&gt;
&lt;p&gt;The Legend of Zelda: Breath of the Wild, is a particularly interesting and exciting game to emulate in yuzu.
While you can already play this game on cemu using Wii U emulation, we think its important to also have an open source alternative.
Furthermore, BotW is a very graphically complicated game to emulate, so it&amp;rsquo;s exciting to use it as an opportunity to improve our rendering.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/botw_hu2a3e8cf4bec5af355d6870e0c37ed408_1661878_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/botw_1_hu9fa8156d33ee75f0cadfeda5cf516a21_56276_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda: Breath of the Wild&lt;/p&gt;


&lt;p&gt;Random crashing was one of the main issues we faced while trying to get this game working.
Upon debugging, we found out that there were a few issues with threading in the kernel.
For example, there were a bunch of race conditions when running in multi-core mode, our core timing was inaccurate for multiple cores, and there was a chance of threads being duplicated.&lt;/p&gt;
&lt;p&gt;Subv fixed these issues by removing most of the race conditions, using approximated amount of ticks when advancing core timing, and added more validation asserts to make sure the threads weren&amp;rsquo;t being duplicated.
Before the changes, the four cores incremented the global &lt;code&gt;ticks&lt;/code&gt; counter independently, which caused it to be approximately 4 times more than what it should have been.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw_2.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/botw_2_hu6f8d8a6892efcfee41f86a52a907fcc6_1773621_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./botw_3.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/botw_3_hub07aecd06575126248db65f205bc9320_166237_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;The Legend of Zelda: Breath of the Wild&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;The Legend of Zelda: Breath of the Wild&lt;/p&gt;


&lt;p&gt;This made games think that the timing was malfunctioning.
The reason for this was that the ticks counter was not thread-safe and we were incrementing it more than we should have.
This was fixed by amortizing the tick increases by dividing each increment by the number of cores (4).
This is not entirely accurate, as not all cores are active all the time, but it should be better than before.&lt;/p&gt;
&lt;p&gt;bunnei implemented a few necessary render targets, texture formats, vertex attribute types, and some primitive topologies.
Currently, BotW goes in-game but has massively broken graphics.
The map, items, 3D models of Divine Beasts, and Hyrule Castle are properly displayed though.&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Finally, we would like to thank all of our valuable &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/graphs/contributors?from=2018-07-20&amp;amp;to=2018-08-31&amp;amp;type=c&#34;&gt;contributors&lt;/a&gt; who have worked hard to improve yuzu.
yuzu needs contributors like them to become the best it can be.
We would also love to thank our generous &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;patrons&lt;/a&gt; for supporting our efforts in this project.&lt;/p&gt;


&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kamiko.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/kamiko_hub87041fb59505cc4572d5f311142347d_140993_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Kamiko&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./kamiko_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/kamiko_1_huf116936f6fb316503a7ff625082ef97a_88176_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Kamiko&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Kamiko&lt;/p&gt;




&lt;div class=&#34;columns is-img-preview is-bottom-marginless&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./soldam.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/soldam_hu4533aebacf569c0ba8706bed5ad4c4ef_594991_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Soldam&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column is-bottom-paddingless&#34;&gt;
        
            &lt;a href=&#34;./soldam_1.png&#34; title=&#34;&#34;&gt;
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/soldam_1_hua2c918d9e4f371fceea837b8e8b7a512_401795_800x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Soldam&#34;&gt;&lt;/a&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Soldam&lt;/p&gt;



&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./mta.png&#34; title=&#34;Mario Tennis Aces&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/mta_hued9933d5b2d2adb29e0d719d60a30989_2446161_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Mario Tennis Aces&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Mario Tennis Aces&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./kirby.png&#34; title=&#34;Kirby Star Allies&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/kirby_hu2c4cdcbc1ad4cad398a4d9e80f02e71d_1111570_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Kirby Star Allies&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Kirby Star Allies&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./splatoon2.png&#34; title=&#34;Splatoon 2&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/splatoon2_hubfce7b09794fe94120a0acc1c6a8024a_878147_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Splatoon 2&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Splatoon 2&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./hwknight.png&#34; title=&#34;Hollow Knight&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p3/hwknight_huef49646c552feb3d1e41a57ebaee2ebc_763074_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Hollow Knight&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Hollow Knight&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;article class=&#34;message&#34;&gt;
    &lt;div class=&#34;message-header is-dropdown&#34;&gt;
        &lt;p&gt;Note&lt;/p&gt;

        &lt;span class=&#34;icon&#34;&gt;
            &lt;i class=&#34;fas fa-lg fa-arrow-circle-down&#34;&gt;&lt;/i&gt;
        &lt;/span&gt;
    &lt;/div&gt;
    &lt;div class=&#34;message-body is-dropdown-target&#34;&gt;
        &lt;p&gt;All these screenshots have been taken in handheld mode of yuzu, using a PC with the following specs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU - Intel i3 6100&lt;/li&gt;
&lt;li&gt;GPU - Nvidia GTX 750ti&lt;/li&gt;
&lt;li&gt;RAM - 12 GB DDR3&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
&lt;/article&gt;

&lt;p&gt; 
&lt;h4 style=&#34;text-align:center;&#34;&gt;
&lt;b&gt;Please consider supporting us on &lt;a href=&#34;https://www.patreon.com/yuzuteam&#34;&gt;Patreon&lt;/a&gt;!&lt;br&gt;
If you would like to contribute to this project, check out our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu&#34;&gt;GitHub&lt;/a&gt;!&lt;/b&gt;
&lt;/h4&gt;
&lt;/p&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report 2018 Part 2</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/</link>
      <pubDate>Sat, 21 Jul 2018 20:00:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/</guid>
      <description>&lt;p&gt;We bring you part 2 of the extensive coverage on yuzu&amp;rsquo;s tremendous progress. So buckle up for an
exciting ride, cause its gonna blow your mind!
 &lt;/p&gt;
&lt;h5 style=&#34;text-align: center;&#34;&gt;
***Haven&#39;t read the first part yet? Read it [here](https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1)***
&lt;/h5&gt;</description>
      <content:encoded>&lt;p&gt;We bring you part 2 of the extensive coverage on yuzu&amp;rsquo;s tremendous progress. So buckle up for an
exciting ride, cause its gonna blow your mind!
 &lt;/p&gt;
&lt;h5 style=&#34;text-align: center;&#34;&gt;
***Haven&#39;t read the first part yet? Read it [here](https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1)***
&lt;/h5&gt;
&lt;h2 id=&#34;general-improvements&#34;&gt;General Improvements&lt;/h2&gt;
&lt;p&gt;Software development best practices dictate that one should reuse code whenever possible.
In line with this rule, yuzu began as a fork of the Citra code base with the core emulation code stripped out.
This allows yuzu to focus on the core switch emulation while still having a very functional user interface, but after some time, the code for the user interface will slowly start to diverge.
Several people chipped in to bringing the improvements over from Citra, most notably &lt;a href=&#34;https://github.com/lioncash&#34;&gt;Lioncash&lt;/a&gt;, who over a period of time, has made many number of changes to bring yuzu up to date.
We also ported over some of Citra&amp;rsquo;s recent features like the new fmtlib-based logging backend (thanks to &lt;a href=&#34;https://github.com/jroweboy&#34;&gt;jroweboy&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/daniellimws&#34;&gt;daniellimws&lt;/a&gt; ), &amp;lsquo;About&amp;rsquo; dialog, full-screen rendering support, and themes support.&lt;/p&gt;
&lt;p&gt;We have also implemented features like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added decrypted NCA support.&lt;/li&gt;
&lt;li&gt;OpenGL extensions support - checking, to ensure system requirements are met.&lt;/li&gt;
&lt;li&gt;64-bit games - checking, to ensure unsupported 32-bit games aren&amp;rsquo;t launched.&lt;/li&gt;
&lt;li&gt;Switch-specific &lt;em&gt;&lt;strong&gt;Docked mode&lt;/strong&gt;&lt;/em&gt; configuration setting.&lt;/li&gt;
&lt;li&gt;Improved FPS counter.&lt;/li&gt;
&lt;li&gt;And many more.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these improvements were only possible because of the efforts of many contributors.&lt;/p&gt;
&lt;h2 id=&#34;cpu-emulation&#34;&gt;CPU emulation&lt;/h2&gt;
&lt;p&gt;The Nintendo Switch is powered by a custom Nvidia Tegra SoC.
For the uninitiated, a SoC (system-on-chip) integrates components like CPU, GPU, memory, input/output ports, storage, etc., on a single chip.
The Switch&amp;rsquo;s SoC (Nvidia ODNX02-A2), is a Tegra X1 chip, has 4 ARM Cortex-A57 CPU cores and 4 ARM Cortex-A53 CPU cores.
The CPU is based on the ARM architecture, which has already been well documented.
We first used &lt;a href=&#34;http://www.unicorn-engine.org/&#34;&gt;Unicorn&lt;/a&gt; for the CPU emulation.
However Unicorn is meant to assist developers that are debugging code, and isn&amp;rsquo;t capable of running games at an acceptable framerate.
Truth be told, &lt;a href=&#34;https://github.com/lioncash&#34;&gt;Lioncash&lt;/a&gt; even back-ported relevant changes to Unicorn to make AArch64 emulation more complete.
Our version of Unicorn (QEMU 2.12.50) is miles ahead of actual mainline Unicorn (QEMU 2.2.1).&lt;/p&gt;
&lt;p&gt;No one, dev and user alike, wants their emulator to be slow.
So our talented developers &lt;a href=&#34;https://github.com/MerryMage&#34;&gt;MerryMage&lt;/a&gt; and Lioncash are working tirelessly to bring ARMv8 support to &lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;Dynarmic&lt;/a&gt;, the dynamic recompiler that Merry wrote for Citra.
Dynarmic was designed from the beginning to be reusable for many different ARM CPUs, so when we needed a fast and stable recompiler, we already knew what we would use.
Thanks to their efforts Dynarmic now supports many ARMv8 instructions and we have shifted to using Dynarmic for CPU emulation.
They are currently working to implement complete ARMv8 support in the near future.&lt;/p&gt;
&lt;p&gt;Dynarmic is generally fast, but it is still missing implementations of a few instructions.
When dynarmic hits a missing instruction, it has to fallback to Unicorn, and falling back to using Unicorn is even slower than just using Unicorn directly!
In order to fallback to Unicorn, we need to copy all the CPU state from Dynarmic to Unicorn, execute Unicorn, and then copy the state back to Dynarmic.
These fallbacks are really slow.
Once we implement all instructions in Dynarmic, we will no longer need these and our CPU emulation will be much faster than it is now.
The most recent update to Dynarmic has vastly improved performance in almost all games, with games going up to 60FPS in some cases.&lt;/p&gt;
&lt;h2 id=&#34;gpu-emulation&#34;&gt;GPU emulation&lt;/h2&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./hmbrewgfx.png&#34; title=&#34;Testing (yuzu)&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/hmbrewgfx_hud6cef65aee04137f6b0a00ed7a85416b_12931_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Testing (yuzu)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Testing (yuzu)&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./hmbrewgfx_nx.jpg&#34; title=&#34;Actual (Switch)&#34;&gt;&lt;img src=&#34;./hmbrewgfx_nx.jpg&#34; alt=&#34;Actual (Switch)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Actual (Switch)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;We got to the point where commercial games were running on yuzu around February 2018.
We could tell that they were almost ready to draw because they were submitting a command list to the emulated Nvidia GPU services.
For a brief explanation, command lists are how games configure the GPU hardware and let the game know that it is ready to start rendering.
Subv did a lot of work figuring out how the GPU register writes happen and on the communication protocols to get it working.&lt;/p&gt;
&lt;p&gt;As mentioned earlier, the Switch uses a Nvidia Tegra Soc which houses a GPU based on Maxwell architecture.
Nvidia&amp;rsquo;s hardware is proprietary and has no public documentation on how it works.
Fortunately, Maxwell based GPUs were released 3 years ago and there are millions of devices using these GPUs.
The people from Linux community and various other places tried to create open source drivers for these GPUs, despite it being proprietary hardware.
They did a lot of leg work on finding out how these GPUs work.
The &lt;a href=&#34;https://nouveau.freedesktop.org/wiki/&#34;&gt;Nouveau&lt;/a&gt; project creates these open source Linux drivers for Nvidia GPUs and Tegra family of SoCs.
Although Linux drivers for desktop/laptop GPUs aren&amp;rsquo;t the same as the GPU driver for a console like Switch, which runs its own OS, there is a fair amount of overlap.
There were also tools like &lt;a href=&#34;https://github.com/envytools/envytools&#34;&gt;envytools&lt;/a&gt; and its submodule envydis (disassembler), which did a lot of research into shader decoding.
envydis doesn&amp;rsquo;t have any documentation about actual workings of each shader instruction, it just has the name, decoding and parameters.
The work done by these projects helped us in bringing initial emulation of GPU.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sonic_glitch.png&#34; title=&#34;Sonic Mania - Then&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/sonic_glitch_hufdcb4fbaa3c1387a1190faa15bcb61e8_218242_817x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Sonic Mania - Then&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Sonic Mania - Then&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./sonicmania.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Sonic Mania - Now&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;With the help of these projects we made good progress in GPU emulation and got games to submit drawing calls, not just configuring the hardware but actually writing to registers, indicating that they were ready to draw triangles on the screen.
Even the simplest 2D games are no longer just 2D.
As the Switch uses a modern GPU, there is no hardware for drawing 2D.
So games instead make 2 triangles in the shape of a rectangle, and then render the current screen as a texture and blits it to the 2 triangles.
This way, the game is still a flexible 2D game, but can take advantage of the fast 3D rendering capabilities that the GPU offers.&lt;/p&gt;
&lt;p&gt;The first game to show graphics was &amp;ldquo;Puyo Puyo Tetris&amp;rdquo; around late February - early March.
The game calls this kind of generic &lt;code&gt;write&lt;/code&gt; to drawing registers indicating that it was done rendering a batch of triangles.
So we knew that we were drawing and we now had to figure out how to decode these triangles and render them on screen.
At the end of the day, Switch uses a modern GPU and like most modern GPUs it relies on a programmable pipeline.
A programmable pipeline gives game developers the power to control some of the graphics pipeline with a full featured programming language, and these programs that they write are called shaders.
Game developers will write shaders in languages such as GLSL and HLSL, and the graphics driver will compile these into a GPU specific assembly language.
Shaders are really useful to give game developers the ability to change how the geometry is drawn, and even how the pixels are colored on the screen.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./debug.png&#34; title=&#34;Behind the scenes!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/SMO_debug_hu35bc4c3521104030c4ec846ff3b9eea3_695450_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Behind the scenes!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Behind the scenes!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Because of how much shaders influence the whole scenes, GPU emulation development is not just a matter of handling triangles its also about handling shaders.
We had to actually implement the shader programs to get more graphics output, meaning we needed to decompile each shader instruction.
In case you were wondering, Nintendo Switch games are built with precompiled shader binaries, so we can&amp;rsquo;t just run the original program.
Instead we have to analyze the shader instructions and figure out novel ways to get convert it back to a high level shader code again.
Figuring out what each shader instruction means wasn&amp;rsquo;t an easy task, as this was all Nvidia&amp;rsquo;s proprietary code.
We worked a lot with &lt;a href=&#34;https://github.com/gdkchan&#34;&gt;gdkchan&lt;/a&gt;, as he had made a bit of progress with this, and quickly learned how to decode GPU data based on nouveau and envytools.
envytools and envydis (disassembler) did the reverse engineering of how shaders work in Maxwell based GPUs, so we already know most of the disassemblies of the instructions, but not always what they do.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sonic_1.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/sonic_1_hu980a03fb888b9996bd20865fe304049f_1412311_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sonic_2.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/sonic_2_hu12e94855088089fc15ff1a7da97ea99a_231146_776x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sonic_3.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/sonic_3_hue6e99d43a3dc176ed1ed09c1cdc8b4bb_110688_781x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sonic_4.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/sonic_4_hu4c2eba2a952733c66639354d6241ac92_225245_736x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sonic_5.png&#34; title=&#34;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/sonic_5_hu1bd682b2ba1f779a79c1ca7b2cb1cb99_425045_769x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/a&gt;
        
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;For actual shader implementation in yuzu, we decided to base it on a recent addition to Citra, a shader recompiler that converts the emulated 3DS shaders into GLSL so they can be run on the host GPU.
Instead of running all these shader programs (which have to run for thousands of vertices) on the CPU, we translate these shaders into OpenGL GLSL and upload the program directly as is to GPU.
This is better as GPUs are designed to run these programs in parallel for thousands of vertices, whereas CPUs are not.
In Citra, we were running the fragment shaders on the GPU since at least 2015, but the vertex and geometry shaders were run on the CPU.
The 3DS vertex and geometry shaders have some very hard to account for corner cases, and it took many years to make sure that our reverse engineering efforts were correct.
That way we didn&amp;rsquo;t have to waste effort working on something we couldn&amp;rsquo;t be sure was possible.
If you would like to read more about the feature in Citra, check out the blog post about it (&lt;a href=&#34;https://citra-emu.org/entry/improvements-to-hardware-renderer/&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;However this isn&amp;rsquo;t an option in case of yuzu, as Switch&amp;rsquo;s GPU is modern and way too powerful for doing this in software.
Around April 2018, we were able to get enough of shader instructions implemented to get &amp;ldquo;Puyo Puyo Tetris&amp;rdquo; to show a bit of graphics.
It wasn&amp;rsquo;t much, just rendered &lt;code&gt;SEGA logo&lt;/code&gt; and &lt;code&gt;Tetris logo&lt;/code&gt;, and pretty much hung after that.
Furthermore, we were able to get a few other simple 2D games like &amp;ldquo;Cave Story&amp;rdquo; and &amp;ldquo;The Binding of Issac&amp;rdquo; booting as well.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./splatoon2.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Splatoon 2 - Then&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./splatoon2_work.png&#34; title=&#34;Splatoon 2 - Now&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/splatoon2_work_hu05c9b51f67062ef8cc5110b8c9a835c2_363560_823x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Splatoon 2 - Now&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Splatoon 2 - Now&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Another new feature which we implemented was shader &lt;code&gt;constbuffer&lt;/code&gt; support by Subv.
We have shader programs that we want to reuse for a bunch of different triangles for features like the UI or 3D models.
It isn&amp;rsquo;t efficient to have individual shaders for every single thing, instead we can have a couple of shader programs that can be reused for everything.
So, shader &lt;code&gt;constbuffer&lt;/code&gt; support is the equivalent of OpenGL &lt;code&gt;uniform&lt;/code&gt; and &lt;code&gt;uniform buffer objects (UBO)&lt;/code&gt;.
Uniforms in general are a way to provide constant data to shaders and can also be used to reconfigure the shader as well.&lt;/p&gt;
&lt;p&gt;Initial rendering support and blending support were done by bunnei.
Blending is used for alpha transparency - translating Switch GPU register writes to OpenGL calls.
It fixed a bug in &amp;ldquo;Puyo Puyo Tetris&amp;rdquo;, where the &lt;code&gt;Saving...&lt;/code&gt; icon in the top left corner had a weird box around it.
Initial texture support was done by Subv and mainly involved reading a texture from memory, decoding it, and uploading it to OpenGL.&lt;/p&gt;
&lt;p&gt;Coming to rasterizer cache, its computationally expensive to upload a texture from the emulated Switch memory to the host GPU every time it&amp;rsquo;s used.
The texture will need to be decoded and unswizzled before its uploaded, and then the memory will need to be copied from the CPU RAM into the GPU RAM.
It&amp;rsquo;s much more efficient to just keep texture in the GPU memory, similar to how it works on hardware with normal PC games, but is a little bit trickier for emulation.
This is because we don&amp;rsquo;t know when the game might change the texture or modify it.
bunnei did most of the work to cache these textures, so when a texture is uploaded to OpenGL it is saved in GPU memory and we keep track of it.
When the CPU or our emulated Switch kernel reads or writes to the memory address that the texture was uploaded to, we check to see what we need to do, and reload the texture only if necessary.
This also applies to framebuffers because in some cases, games can use them as textures.
If this caching wasn&amp;rsquo;t existent, we&amp;rsquo;d essentially have to upload every texture to OpenGL memory (host GPU space) on every draw, copy the final framebuffer back to emulated Switch memory (CPU space) so that the game could potentially use it for framebuffer.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./SMO_astc.png&#34; title=&#34;Testing Super Mario Odyssey&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/SMO_astc_huea4c317be2a84e48a81f8fc5c6a24133_22614_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Testing Super Mario Odyssey&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Testing Super Mario Odyssey&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./SMO.png&#34; title=&#34;Inverted render&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/SMO_hu71e63b6275b517287ad472c3566d69e8_506852_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Inverted render&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Inverted render&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./SMO_2.png&#34; title=&#34;Inverted render&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/SMO_2_hu0e1690a64cb2977d3a327e994902f2a6_452071_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Inverted render&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Inverted render&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./SMO_debug.png&#34; title=&#34;Debugging&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/SMO_debug_hu35bc4c3521104030c4ec846ff3b9eea3_695450_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Debugging&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Debugging&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./SMO_work.png&#34; title=&#34; Proper render&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/SMO_work_hue73d60864b60e406a615333fc6b4f14e_971943_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Proper render&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Proper render&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./SMO_2_work.png&#34; title=&#34; Proper render&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/SMO_2_work_hub3c0d23a4d57e4661157b2317266e475_1078903_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Proper render&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Proper render&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;We had a couple of fixes to our rasterizer cache mainly because it was based on Citra&amp;rsquo;s rasterizer cache.
Because the compressed texture formats that the 3DS uses are not commonly supported by desktop GPUs, Citra&amp;rsquo;s rasterizer cache decodes any compressed textures before uploading and caching them.
But since the Switch GPU supports many of the same texture formats that desktop OpenGL does, we sped things up by uploading them without decoding them.
At the start, this support was just hacked into Citra&amp;rsquo;s cache, which didn&amp;rsquo;t end up working correctly all the time.
One example was the squid texture in &amp;ldquo;Splatoon 2&amp;rdquo;, which was identified and fixed by Subv.
We also implemented texture color swizzling, a way to swap color components, which is used by &amp;ldquo;Splatoon 2&amp;rdquo; to swap colors for intro background texture.
So, before we implemented this the colors were all wrong.
We fixed YUV2 video playback in our shader support, which fixed the previously busted &amp;ldquo;Sonic Mania&amp;rdquo; intro.
We had to implement a field parameter called component masks in &lt;code&gt;TEX/TEXS&lt;/code&gt; shader instructions, to properly decode &lt;code&gt;YUV2&lt;/code&gt; videos.
We also implemented texture wrap modes, which gives the ability to specify whether a texture on a triangle is mirrored or repeating etc.&lt;/p&gt;
&lt;p&gt;There are lots of other things already implemented and many more that have to be implemented.
As the Switch&amp;rsquo;s GPU is quite advanced, we have dozens of texture formats, vertex formats, lots of registers, different configuration modes, shader instructions that need to be implemented.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./onepiece.png&#34; title=&#34;One Piece - Then&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/onepiece_huaf772a61919fe733bfe426286683d5ac_894607_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;One Piece - Then&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;One Piece - Then&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./onepiece_work.png&#34; title=&#34;One Piece - Now&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/onepiece_work_hu0d817ea96862751b968ab112fa0f99b0_2359158_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;One Piece - Now&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;One Piece - Now&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./steam_world.png&#34; title=&#34;Steam World Dig 2&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/steam_world_hu29e93ea3b2aeac1cdf73e14df87e91d6_617522_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Steam World Dig 2&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Steam World Dig 2&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Apart from the above mentioned stuff, there have been many more modifications made to yuzu&amp;rsquo;s GPU HLE (high level emulation).
These bug fixes or modifications were done on a per-game experimentation basis and as we progress further we will continue to fix our implementations and improve the accuracy of emulation in yuzu.
All of the progress we have made until now is thanks to the efforts of yuzu&amp;rsquo;s contributors and the good people from Switch hacking communities.&lt;/p&gt;
&lt;h2 id=&#34;virtual-file-system-vfs-by-darklordzachhttpsgithubcomdarklordzach-herehttpsgithubcomyuzu-emuyuzupull676&#34;&gt;Virtual File System (VFS) by &lt;a href=&#34;https://github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt; (&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/676&#34;&gt;here&lt;/a&gt;)&lt;/h2&gt;
&lt;p&gt;A Virtual File System (VFS) is an abstraction layer which allows us to hide the details of where the actual files are stored.
The purpose of a VFS is to enable the emulated Switch file system to read and write to many different types of backends, without changing anything in the emulated FS code.
In layman&amp;rsquo;s terms, the game will still think its reading and writing to a file on the Switch, but in reality it could be reading from a zip file, or from a custom mod that the user adds.
This makes further support for Updates, DLC, new formats, encryption, etc., a little bit easier to implement. &lt;a href=&#34;https://github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt; single-handedly worked on VFS for a couple of weeks and successfully implemented it.&lt;/p&gt;
&lt;h2 id=&#34;touch-screen-support-by-darklordzachhttpsgithubcomdarklordzach-herehttpsgithubcomyuzu-emuyuzupull683&#34;&gt;Touch-Screen Support by &lt;a href=&#34;https://github.com/DarkLordZach&#34;&gt;DarkLordZach&lt;/a&gt; (&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/683&#34;&gt;here&lt;/a&gt;)&lt;/h2&gt;
&lt;p&gt;DarkLordZach has been working very actively on various bug fixes, features and has also been lending a hand in testing games too.
His latest contribution comes in the form of touch-screen support for yuzu.
With this feature, yuzu now emulates mouse clicks to touch inputs and if you happen to have a physical touch screen, that can be used as a input device too.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./12switch.png&#34; title=&#34;1-2-Switch&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/12switch_hu5943fcc48ef58a8feeaba4fa91573cc2_1561507_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;1-2-Switch&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;1-2-Switch&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./arms.png&#34; title=&#34;ARMS&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/arms_hu7a0fddefc8dcb12ec377c9f8e7f63a72_48505_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;ARMS&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;ARMS&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./celeste.png&#34; title=&#34;Celeste&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/celeste_hu311a023d6fcc022eecfdaba64af14289_1339807_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Celeste&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Celeste&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./doom.png&#34; title=&#34; Doom&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/doom_hu126a98f7186d74794b810ff434fde879_1040395_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34; Doom&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt; Doom&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./farming.png&#34; title=&#34;Farming Simulator&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/farming_hu448fa3cba308d87914dc5da254770030_1967677_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Farming Simulator&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Farming Simulator&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./Lildew.png&#34; title=&#34;Ittle Dew&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/Lildew_hu3a7c36d21e5e3fa52ff16079a1fc20c6_237144_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Ittle Dew&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Ittle Dew&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./minecraft.png&#34; title=&#34;Minecraft Story Mode&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/minecraft_hu27e10c8c707ff1f2b36000df43eb5767_1507903_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Minecraft Story Mode&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Minecraft Story Mode&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./picross.png&#34; title=&#34;Picross&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/picross_hue3a288f6a70592db8ac9e207f4dfdd87_422434_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Picross&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Picross&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./minecraft.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Our first 3D rendered game - Minecraft&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;miscellaneous&#34;&gt;Miscellaneous&lt;/h2&gt;
&lt;p&gt;Apart from these improvements, we have had multiple PRs which fixed bugs and deadlocks in various games.
We got graphics output in Super Mario Odyssey, fixed saves related issues, launched many new games to the title screen, booted into few networked dependent games like Doom, implemented few SVCs and shader instructions, fixed a major performance regression with controller support, optimized logging system and did many more optimizations.
We thank all the contributors for their valuable contributions and applaud their efforts.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./seiken.png&#34; title=&#34;Seiken Densetsu Collection&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/seiken_huee7cb9958d903dc908fef7b449c3d000_2067867_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Seiken Densetsu Collection&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Seiken Densetsu Collection&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./setsuna.png&#34; title=&#34;I am Setsuna&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/setsuna_hu87643c50d4857a160ba2f8d5d65e63ab_38452_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;I am Setsuna&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;I am Setsuna&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./sm&amp;#43;.png&#34; title=&#34;Sonic Mania Plus&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/sm&amp;#43;_hu9ee7a4d5adeda0f541e9c5d3e1a17b13_594606_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Sonic Mania Plus&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Sonic Mania Plus&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./snipper.png&#34; title=&#34;Snipperclips Plus&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2/snipper_hu76b41e8472127447aba499d79b3f7fbd_738517_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Snipperclips Plus&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Snipperclips Plus&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h3 style=&#34;text-align: center;&#34;&gt;
&lt;b&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/&#34;&gt;Contributions are always welcome !&lt;/a&gt;&lt;/b&gt;
&lt;/h3&gt;</content:encoded>
    </item>
    
    <item>
      <title>Progress Report 2018 Part 1</title>
      <link>https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/</link>
      <pubDate>Sat, 14 Jul 2018 08:00:00 &#43;0530</pubDate>
      <author>CaptV0rt3x</author>
      <guid>https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s been a bumpy ride. We have had lots of stuff happen to yuzu and we are excited to share that
with you. Let&amp;rsquo;s get started!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;It&amp;rsquo;s been a bumpy ride. We have had lots of stuff happen to yuzu and we are excited to share that
with you. Let&amp;rsquo;s get started!&lt;/p&gt;
&lt;p&gt;After months of research and countless hours of coding, the developers who gave you &lt;a href=&#34;https://citra-emu.org&#34;&gt;Citra&lt;/a&gt;,
an emulator for the Nintendo 3DS, now bring to you yuzu – an experimental emulator for the Nintendo
Switch. yuzu is based off of Citra&amp;rsquo;s code, with many changes tailored towards the Switch made. It
gives me great pleasure to welcome you all into the world of yuzu.&lt;/p&gt;
&lt;h2 id=&#34;backstory&#34;&gt;Backstory&lt;/h2&gt;
&lt;p&gt;The Switch is the 7&lt;sup&gt;th&lt;/sup&gt; major video game console from Nintendo. As the Wii U had struggled
to gain external support, leaving it with a weak software library, Nintendo opted to use more standard
electronic components to make development for the console easier.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bunnei&#34;&gt;bunnei&lt;/a&gt;, the lead developer of Citra, saw that the Switch hacking scene
was very active and that there were signs of the Switch&amp;rsquo;s operating system, called &lt;em&gt;Horizon&lt;/em&gt;, being
based on the 3DS&amp;rsquo;s operating system. The Switch hacking communities (&lt;a href=&#34;https://reswitched.tech/&#34;&gt;ReSwitched&lt;/a&gt;
and &lt;a href=&#34;http://switchbrew.org&#34;&gt;Switchbrew&lt;/a&gt;) had many people working on hacking and documenting the system.
Being &lt;em&gt;a huge Nintendo fan&lt;/em&gt;, bunnei was very excited at the prospect of an emulator for Switch. Using
the available documentation, he worked on yuzu privately for a few months before other Citra developers
joined him. They made some progress and finally went public on 14 January, 2018.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;video preload=&#34;auto&#34; autoplay=&#34;autoplay&#34; muted=&#34;muted&#34; loop=&#34;loop&#34; webkit-playsinline=&#34;&#34;&gt;
                &lt;source src=&#34;./homebrew.mp4&#34; type=&#34;video/mp4&#34;&gt;
                Your browser doesn&#39;t support mp4 video. :(
            &lt;/video&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Before (Colors are wrong)&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./homebrew_work.jpg&#34; title=&#34;After (fixed)&#34;&gt;&lt;img src=&#34;./homebrew_work.jpg&#34; alt=&#34;After (fixed)&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;After (fixed)&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./homebrew_game.png&#34; title=&#34;Very first homebrew on yuzu, Space Game !!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/homebrew_game_hud73a92ce8939123ca6ff643805fbc161_32171_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Very first homebrew on yuzu, Space Game !!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Very first homebrew on yuzu, Space Game !!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;baby-steps&#34;&gt;Baby Steps&lt;/h2&gt;
&lt;p&gt;yuzu shares the same common and core code, with much of the same OS (operating system) HLE, with Citra
(as both OSs are similar). For the uninitiated, with HLE (high level emulation), parts of the OS are
re-implemented in the emulator, which the emulated game can call directly. This contrasts with low-level
emulation (LLE), where the hardware is emulated, and the real OS bits are run within the emulator.
Initially, bunnei worked hard to get the Citra code base working for Switch emulation. He updated the
core emulation and Citra&amp;rsquo;s memory management to work with 64-bit addresses (as Citra emulates 32-bit
apps), did lots of OS HLE, added a loader for the Switch games/homebrew, and integrated &lt;a href=&#34;http://www.unicorn-engine.org/&#34;&gt;Unicorn&lt;/a&gt;
into yuzu for CPU emulation. Unicorn was chosen at that time and not &lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;Dynarmic&lt;/a&gt;
(which is used in Citra) because the Switch has an ARMv8 CPU (64-bit) and dynarmic only had support
for ARMv6 at that time. He got some basic SVC (Supervisor Call) implementation hooked up to begin
booting some homebrew applications and very simple games. At this time, there was no graphical output
yet.&lt;/p&gt;
&lt;p&gt;Later, &lt;a href=&#34;https://github.com/Subv&#34;&gt;Subv&lt;/a&gt;, another Citra veteran, joined him and together they both got
framebuffer rendering support for basic homebrew. It was at this point that yuzu was announced publicly
and went open-source. As the project became open-source, many developers and reverse engineers joined
the team and as of today, yuzu is able to run 12 games. This fast paced progress is a result of the
highly active Switch hacking scene. When bunnei first started Citra (in 2014), the 3DS was already
3 years old, homebrew was barely starting to happen, and game dumps were still encrypted. Contrary
to this, Switch has a much more active hacking scene, much earlier on in the console&amp;rsquo;s life-cycle
(few months). It is believed that, fueled by the successes with 3DS hacking, a lot of the same teams
and people have started working on the Switch hacking as well.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./puyo_boot.png&#34; title=&#34;First game rendering triangles (actually SEGA logo) !!&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/puyo_boot_hu192b623cac99dc7ca25c1e872bb3802c_40313_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;First game rendering triangles (actually SEGA logo) !!&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;First game rendering triangles (actually SEGA logo) !!&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;h2 id=&#34;pit-crew--their-efforts-so-far&#34;&gt;Pit Crew &amp;amp; Their Efforts So Far&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Rivalry of scholars advances wisdom&lt;/strong&gt;&lt;/em&gt;. This proverb is highly accurate in terms of emulators. The
clash of knowledge between peers helps mutual growth. During its early days, Citra had a peer too,
&lt;a href=&#34;https://github.com/plutooo/3dmoo&#34;&gt;3dmoo&lt;/a&gt;. In the case of Switch emulation, we have &lt;a href=&#34;https://github.com/gdkchan/Ryujinx&#34;&gt;Ryujinx&lt;/a&gt;.
Our developers have worked with &lt;a href=&#34;https://github.com/gdkchan&#34;&gt;gdkchan&lt;/a&gt; (the main developer of Ryujinx) on
reverse engineering (RE), figuring out how games work, and how the Switch GPU works.&lt;/p&gt;
&lt;p&gt;Subv worked on initial framebuffer rendering support, and then went on to do lots of OS reverse
engineering and bug fixes. Lately, bunnei and him have been working on GPU emulation. &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt;
(from the &lt;a href=&#34;https://reswitched.tech/&#34;&gt;ReSwitched&lt;/a&gt; team) also joined us and is one of our RE experts.
He has done a lot of Switch OS RE, which helps us to get yuzu booting games further. He has contributed
a lot, mostly in audio, kernel, and services.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/shinyquagsire23&#34;&gt;shinyquagsire&lt;/a&gt;, another Citra developer, came forward and implemented
user input and various other things. &lt;a href=&#34;https://github.com/lioncash&#34;&gt;Lioncash&lt;/a&gt; and &lt;a href=&#34;https://github.com/merrymage&#34;&gt;MerryMage&lt;/a&gt;
worked tirelessly on adding ARMv8 support to dynarmic, and thanks to their efforts we are now using
&lt;a href=&#34;https://github.com/MerryMage/dynarmic&#34;&gt;dynarmic&lt;/a&gt; for CPU emulation. Apart from these people, there
are more than a dozen contributors for yuzu who have worked on minor things. It&amp;rsquo;s because of their
invaluable efforts that yuzu now proudly boasts it&amp;rsquo;s ability to boot several commercial games like ARMS,
Splatoon 2, One Piece Unlimited Red Deluxe, Cave Story+, and many more. As of now, a few games are
actually playable on yuzu – Binding of Isaac, Sonic Mania, Stardew Valley, etc.&lt;/p&gt;
&lt;h2 id=&#34;reverse-engineering-re&#34;&gt;Reverse Engineering (RE)&lt;/h2&gt;
&lt;p&gt;The RE process of yuzu is very similar to that of Citra. We collaborate with the hacking communities,
for documenting the workings of Switch and do some RE ourselves as well. It&amp;rsquo;s a mix of learning and
implementing things ourselves, using community documentation to validate or guide our process. The
fact that the Switch is based on off-the-shelf Tegra SoC does not necessarily make the process easier,
because, similar to the PICA200 (3DS GPU), the Maxwell GPU architecture isn&amp;rsquo;t publicly documented.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./setup.jpg&#34; title=&#34;ogniK&amp;#39;s janky RE setup&#34;&gt;&lt;img src=&#34;./setup.jpg&#34; alt=&#34;ogniK&amp;#39;s janky RE setup&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;ogniK&amp;#39;s janky RE setup&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;That said, there are more resources and non-Switch related projects (&lt;a href=&#34;https://nouveau.freedesktop.org/wiki/&#34;&gt;Nouveau&lt;/a&gt;,
&lt;a href=&#34;https://github.com/envytools/envytools&#34;&gt;envytools&lt;/a&gt;, etc.) that we can use. Switch&amp;rsquo;s GPU is many times
more advanced/powerful than 3DS&amp;rsquo;, and so are the challenges in its RE. RE on the OS HLE side of things
has otherwise been the same and is moving at the same pace. We currently have a graphics renderer,
based off of Citra&amp;rsquo;s graphics renderer, which uses OpenGL 4.1.&lt;/p&gt;
&lt;p&gt;Mind you, yuzu is at a very young stage in its development. As such, any progress we make would be
only possible if we have a proper direction. Right now, most of our development is being done in a
trial-and-error manner. Simply put, we are working on making games boot and then we fix our implementations
based on further RE and any other new found info.&lt;/p&gt;
&lt;h2 id=&#34;os-emulation&#34;&gt;OS emulation&lt;/h2&gt;
&lt;p&gt;The Switch&amp;rsquo;s OS (operating system), called Horizon, is based on the 3DS&amp;rsquo;s OS. This was a silver lining,
as it meant that Citra&amp;rsquo;s OS HLE code could be largely reused. A point to remember, is that both Citra
and yuzu are high level emulators. In both of these, we are trying to implement the software rather
than the hardware of the consoles.&lt;/p&gt;
&lt;p&gt;As an emulator, the first necessity in yuzu would be to load the Switch game dumps. So, bunnei started
working on a loader and file system service for yuzu. Citra&amp;rsquo;s loader and file system frameworks were
reused and modified heavily to support Switch game dump files (&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/123&#34;&gt;here&lt;/a&gt;).
Further fixes and improvements to the loader were done by &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt;,
&lt;a href=&#34;https://github.com/Rozelette&#34;&gt;Rozelette&lt;/a&gt;, &lt;a href=&#34;https://github.com/gdkchan&#34;&gt;gdkchan&lt;/a&gt;, and
&lt;a href=&#34;https://github.com/shinyquagsire23&#34;&gt;shinyquagsire&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Next, we would need a way for games to read or load save data. Subv believed that the save data in
the Switch has a similar behavior as the save data in the 3DS. He implemented the file system and save
data behaviors, which allowed games to read and write files to the save data directory
(&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/pull/216&#34;&gt;here&lt;/a&gt;). This implementation allowed us to boot further
in &amp;ldquo;Puyo Puyo Tetris&amp;rdquo; and &amp;ldquo;Cave Story&amp;rdquo;.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./cavestory_boot.png&#34; title=&#34;First boot - Cave Story&amp;#43;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/cavestory_boot_hu25b0e5e4e0e375cd089327abb2a0b6c1_57129_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;First boot - Cave Story&amp;#43;&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;First boot - Cave Story&amp;#43;&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./cavestory_work.png&#34; title=&#34;Now - Cave Story&amp;#43;&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/cavestory_work_huc9bc30a6d1dacaed14ffb35c54d1b581_169539_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Now - Cave Story&amp;#43;&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Now - Cave Story&amp;#43;&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./tetris.png&#34; title=&#34;First boot - Puyo Puyo Tetris&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/tetris_hua3aec80e7212fcea0f3cd4d7bb01dd8b_81707_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;First boot - Puyo Puyo Tetris&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;First boot - Puyo Puyo Tetris&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./tetris_work.png&#34; title=&#34;Now - Puyo Puyo Tetris&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/tetris_work_hu9e28229626aa1ab8a5f20dba7977b4a4_737250_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Now - Puyo Puyo Tetris&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Now - Puyo Puyo Tetris&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;Often, the best way to debug or RE any functionality is to use homebrew. For the uninitiated, homebrew
is a popular term used for applications that are created and executed on a video game console by hackers,
programmers, developers, and consumers. The good folks at Switchbrew created &lt;code&gt;libnx&lt;/code&gt;, a userland library
to write homebrew apps for the Nintendo Switch. To support homebrew apps, written using libnx, our
developers bunnei and shinyquagsire made various fixes and finally yuzu now supports loading libnx apps.&lt;/p&gt;
&lt;p&gt;The Switch&amp;rsquo;s OS uses a lot of &amp;lsquo;services&amp;rsquo; to provide the games with functionality which allows it to do
things like getting user input, audio output, graphics output, etc. However since the Switch hasn&amp;rsquo;t
been completely reverse engineered, we still don&amp;rsquo;t know how to implement some of these services.
Currently, some service calls, which we are fairly confident can be ignored, are being stubbed. Stubbing
means that these services return &lt;code&gt;ok&lt;/code&gt; with no errors, so that the games think that the function
succeeded and it can continue on without getting back any valid data. As the games boot further and
further, we need to start intercepting these function calls and provide a more meaningful response.&lt;/p&gt;
&lt;p&gt;Switch IPC (Inter-process communication) is how the OS communicates between the various services running.
This was much more robust and complicated than the 3DS&amp;rsquo;s, for a lot of reasons. First of all, it does
lot more validation on responses. This means that both our service HLEs or stubs need to have the
responses be exactly what it expects with exactly right number of output parameters at right offsets,
results have to be at right offsets, data needs to be at right offsets, and a couple of other magic
fields need to be present.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./stardew.png&#34; title=&#34;First boot - Stardew Valley&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/stardew_hu92fde1a6347d80cb0d587b3f2eecf314_95022_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;First boot - Stardew Valley&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;First boot - Stardew Valley&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./stardew_2.png&#34; title=&#34;in-game - bugs&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/stardew_2_hu2e893bd3ece27b75a616c39e1d1e9f8c_159751_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;in-game - bugs&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;in-game - bugs&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./stardew_work.png&#34; title=&#34;Now - Stardew Valley&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/stardew_work_huac633a0637f15cac843d04af9e7bce25_150225_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Now - Stardew Valley&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Now - Stardew Valley&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;In addition to this, we have a couple of different command modes, a typical IPC request response, and
something called a &lt;em&gt;Domain&lt;/em&gt;. Once a IPC session is opened to a service, the game can use this command
to turn that session into what&amp;rsquo;s called a Domain. This is a more efficient way to do lots of service
calls. Our implementations were mostly iterations of learning how the IPC worked and implementing it.
After facing many issues and fixing them, we finally got things working. We then wrote a wrapper code
around this, which allows us to implement service functions without needing intricate knowledge of
how the IPC system works.&lt;/p&gt;
&lt;p&gt;A lot of our work is based on background research the ReSwitched team did with their Switch
debug emulators, &lt;a href=&#34;https://github.com/reswitched/CageTheUnicorn&#34;&gt;CageTheUnicorn&lt;/a&gt; (python) and &lt;a href=&#34;https://github.com/reswitched/mephisto&#34;&gt;Mephisto&lt;/a&gt;(C-lang).
These emulators were designed for debugging and they implemented the Switch IPC and did most of the
work to figure that out. We thank the ReSwitched team for CageTheUnicorn and Mephisto, and a special
thanks to &lt;a href=&#34;https://github.com/daeken&#34;&gt;daeken&lt;/a&gt; and &lt;a href=&#34;https://github.com/misson20000&#34;&gt;misson20000&lt;/a&gt;, for
without their help with reverse engineering and bug fixing along the way, we wouldn&amp;rsquo;t have gotten as
far as we have.&lt;/p&gt;
&lt;p&gt;The Nvidia services configure the video driver to get the graphics output. Nintendo re-purposed the
Android graphics stack and used it in the Switch for rendering. We had to implement this even to get
homebrew applications to display graphics. The Switch is very different from older systems, where we
could find a physical or virtual address of the framebuffer in memory and start writing to it to get
quick output. Here, we actually have to configure the OS to create a render surface and we can start
writing to it. Even the simplest homebrew had to implement this graphics layering for rendering. Subv
did most of the work to get the initial framebuffer working.&lt;/p&gt;
&lt;p&gt;Coming to Kernel OS threading, scheduling, and synchronization fixes, most of the OS HLE for yuzu was
ported from Citra&amp;rsquo;s OS implementation. As the Switch RE progressed and we learned things, we made
multiple fixes to yuzu&amp;rsquo;s OS implementation. The Switch&amp;rsquo;s scheduler is almost identical (if not
identical) to the 3DS&amp;rsquo;s. We had to make several changes to support Switch&amp;rsquo;s different synchronization
primitives but the rest if it (thus far) has been very similar and has used a similar SVC interface.
Hence we&amp;rsquo;ve reused Citra&amp;rsquo;s code here as well.&lt;/p&gt;

&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./1-2-switch.png&#34; title=&#34;First boot - 1-2-Switch&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/1-2-switch_huee910661cd639ca6d195553f3ea5ee70_819094_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;First boot - 1-2-Switch&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;First boot - 1-2-Switch&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./1-2-switch_jap.png&#34; title=&#34;Wrong Language&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/1-2-switch_jap_hu4fbdabbd5d5b0472d1d5514c685372fc_1110216_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Wrong Language&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Wrong Language&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./1-2-switch_work.png&#34; title=&#34;Now - 1-2-Switch&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/1-2-switch_work_hu6905c62dcbaf9f420bac3b04b5a0010f_2336745_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Now - 1-2-Switch&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Now - 1-2-Switch&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;


&lt;div class=&#34;columns is-img-preview&#34;&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./boi_2.png&#34; title=&#34;First boot - The Binding of Issac&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/boi_2_hu5b87409152cfda0d5d80f37f829b7e42_75496_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;First boot - The Binding of Issac&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;First boot - The Binding of Issac&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./boi.png&#34; title=&#34;in-game - first renders&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/boi_hud5431ae3818e2525f162ba61079b1070_648682_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;in-game - first renders&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;in-game - first renders&lt;/p&gt;
        
    &lt;/div&gt;
    
    
    
    
    
    
    
    &lt;div class=&#34;column has-text-centered&#34;&gt;
        
            &lt;a href=&#34;./boi_work.png&#34; title=&#34;Now - The Binding of Issac&#34;&gt;
                
                
                &lt;img src=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p1/boi_work_hu3898a91ef435a241a853d18f43e35134_272594_1024x0_resize_q90_bgffffff_box_3.jpg&#34; alt=&#34;Now - The Binding of Issac&#34;&gt;&lt;/a&gt;
        
        
            &lt;p class=&#34;has-text-centered is-italic has-text-grey-light&#34;&gt;Now - The Binding of Issac&lt;/p&gt;
        
    &lt;/div&gt;
    
&lt;/div&gt;

&lt;p&gt;As we now have some games booting, the next step along the line would be adding HID (user input support).
&lt;a href=&#34;https://github.com/shinyquagsire23&#34;&gt;shinyquagsire&lt;/a&gt; worked on getting initial HID support and made further
fixes along the way. HID services maps some shared memory region to which the games can read to, get
user input state and gamepad input writes to this. yuzu now supports handheld inputs with analog sticks
and buttons. We still have a lot to implement in HID, like support for all 9 controllers, rumble, LEDs,
layouts etc., and its going to take a bit of additional work to get it all implemented. As much of
this has already been RE&amp;rsquo;d, this is a great place for new developers to make contributions!&lt;/p&gt;
&lt;p&gt;Currently Audio HLE is in progress, but we do not support audio playback (&lt;em&gt;yet!&lt;/em&gt;). &lt;a href=&#34;https://github.com/ogniK5377&#34;&gt;ogniK&lt;/a&gt;
did a lot of reverse engineering on the &lt;code&gt;AudRen&lt;/code&gt; service (Audio renderer) which most games use for
audio output. There is another service called &lt;code&gt;AudOut&lt;/code&gt; service, which homebrew and a few games use
for audio output. It&amp;rsquo;s a much simpler service and the homebrew community figured this out. We haven&amp;rsquo;t
implemented this as not many games use this. ogniK did most of the work on &lt;code&gt;AudRen&lt;/code&gt; service and he
pretty much figured out how it works. This is a major breakthrough as most complicated games we have
seen so far were getting stuck, either hanging or deadlocking because they were waiting for proper
&lt;code&gt;AudRen&lt;/code&gt; state to be set. ogniK&amp;rsquo;s work on this helped us go further in a few other games.&lt;/p&gt;
&lt;p&gt;Apart from the work mentioned above, we have also had minor fixes which helped us boot further in
games like Super Mario Odyssey, 1-2-Switch, and The Binding of Issac.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Check out the next part of this report &lt;a href=&#34;https://yuzu-mirror.github.io/entry/yuzu-progress-report-2018-p2&#34;&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 align=&#34;center&#34;&gt;
&lt;b&gt;&lt;a href=&#34;https://github.com/yuzu-emu/yuzu/&#34;&gt;Contributions are always welcome !&lt;/a&gt;&lt;/b&gt;
&lt;/h3&gt;</content:encoded>
    </item>
    
    <item>
      <title>First games are running!</title>
      <link>https://yuzu-mirror.github.io/entry/first-games-are-running/</link>
      <pubDate>Sun, 15 Apr 2018 01:18:00 -0500</pubDate>
      <author>jmc47</author>
      <guid>https://yuzu-mirror.github.io/entry/first-games-are-running/</guid>
      <description>&lt;p&gt;A major milestone in yuzu has been reached, as it can now boot a handful of the Nintendo Switch&amp;rsquo;s more primitive games.  Don&amp;rsquo;t believe us?  Take a look!&lt;/p&gt;</description>
      <content:encoded>&lt;p&gt;A major milestone in yuzu has been reached, as it can now boot a handful of the Nintendo Switch&amp;rsquo;s more primitive games.  Don&amp;rsquo;t believe us?  Take a look!&lt;/p&gt;
&lt;div class=&#34;my-lg&#34;&gt;
  
  &lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
    &lt;iframe src=&#34;https://www.youtube.com/embed/1VzyIHMTA2Q&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;/div&gt;
&lt;p&gt;These changes are now available in the latest &lt;a href=&#34;https://yuzu-mirror.github.io/downloads/&#34;&gt;yuzu canary builds&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Currently, only a few games are confirmed to boot, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Binding of Isaac: Afterbirth+&lt;/li&gt;
&lt;li&gt;Puyo Puyo Tetris&lt;/li&gt;
&lt;li&gt;Cave Story+&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While these &lt;em&gt;may&lt;/em&gt; not be the Switch titles that emulation hobbyists are looking forward to digging into, the fact that games are starting to work shows that yuzu is heading in the right direction.  That doesn&amp;rsquo;t mean it wasn&amp;rsquo;t a bumpy road to get here, though!&lt;/p&gt;
&lt;h4 id=&#34;the-challenge-behind-booting-switch-games&#34;&gt;The Challenge Behind Booting Switch Games&lt;/h4&gt;
&lt;p&gt;Getting to this point hasn&amp;rsquo;t been easy, and has been a massive reverse-engineering challenge.  Led by bunnei and Subv with contributions from ogniK and jroweboy the team slowly chipped away at stopping point after stopping point to finally get us to this milestone.  Special thanks to gdkchan and Ryujinx, as without collaboration, this wouldn&amp;rsquo;t have been possible.&lt;/p&gt;
&lt;p&gt;Also, huge thanks to Lioncash and MerryMage, who have been tirelessly working on the ARMv8 JIT that yuzu uses! Without it, we&amp;rsquo;d still be in the dark ages of interpreted CPU emulation.&lt;/p&gt;
&lt;p&gt;While yuzu is built on top of Citra&amp;rsquo;s kernel infrastructure, a lot of modification had to be done in order to move things over to the Switch&amp;rsquo;s services.  But the main issues all had to do with the Switch&amp;rsquo;s GPU.&lt;/p&gt;
&lt;p&gt;Because it&amp;rsquo;s a NVIDIA product, some information was able to be gleamed by sifting through the &lt;a href=&#34;https://en.wikipedia.org/wiki/Nouveau_(software)&#34;&gt;Nouveau source&lt;/a&gt;.  Some of the more particularly difficult stopping points were Kernel Synchronization Primitives and Shader Decompilation, but there were many more smaller bumps along the way.  On top of that, the rest of the emulator had to be brought up to snuff in order to get games to the point where they would boot.&lt;/p&gt;
&lt;p&gt;In the end, this is a small first step toward proper emulation of Nintendo&amp;rsquo;s exciting console/handheld hybrid.  None of the games booting are especially stable and emulation is in a very, very early state.&lt;/p&gt;
&lt;h4 id=&#34;what-does-yuzu-require&#34;&gt;What does yuzu Require?&lt;/h4&gt;
&lt;p&gt;Right now, most games won&amp;rsquo;t run, and the games that do run will run incredibly slow and only get so far before encountering issues.  We recommend you have as fast of a processor as possible &lt;em&gt;and&lt;/em&gt; a GPU that supports OpenGL 4.3 or newer.&lt;/p&gt;
&lt;div class=&#34;columns mt-md&#34;&gt;
  &lt;div class=&#34;column&#34;&gt;
    &lt;figure class=&#34;image&#34;&gt;
        &lt;img src=&#34;./img1.png&#34;&gt;
    &lt;/figure&gt;
  &lt;/div&gt;
  &lt;div class=&#34;column&#34;&gt;
    &lt;figure class=&#34;image&#34;&gt;
        &lt;img src=&#34;./img2.png&#34;&gt;
    &lt;/figure&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;columns&#34;&gt;
  &lt;div class=&#34;column&#34;&gt;
    &lt;figure class=&#34;image&#34;&gt;
        &lt;img src=&#34;./img3.png&#34;&gt;
    &lt;/figure&gt;
  &lt;/div&gt;
  &lt;div class=&#34;column&#34;&gt;
    &lt;figure class=&#34;image&#34;&gt;
        &lt;img src=&#34;./img4.png&#34;&gt;
    &lt;/figure&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h4 id=&#34;whats-next&#34;&gt;What&amp;rsquo;s next?&lt;/h4&gt;
&lt;p&gt;Currently, yuzu has two major development fronts that are ongoing: First, we are trying to get more games booting further, to the point that they are trying to render frames, and second, to try to emulate the Nvidia Maxwell GPU. Even for simple games such as these, Maxwell emulation has shown to be quite challenging - and we suspect that this will be our biggest focus in the coming months. As always, we welcome newcomers to join our team and help us toward these goals! If you&amp;rsquo;re interested in contributing, please checkout our &lt;a href=&#34;https://github.com/yuzu-emu/yuzu/blob/master/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; or &lt;a href=&#34;https://discord.gg/u77vRWY&#34;&gt;join us on Discord&lt;/a&gt;.&lt;/p&gt;</content:encoded>
    </item>
    
  </channel>
</rss>
